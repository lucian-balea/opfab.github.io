var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AcceptLogIn.html",[0,0.251,1,2.365]],["body/classes/AcceptLogIn.html",[0,0.45,1,3.47,2,0.509,3,0.028,4,0.028,5,0.07,6,1.926,7,1.36,8,1.369,9,4.382,10,2.406,11,2.714,12,3.383,13,4.03,14,3.582,15,2.781,16,3.032,17,1.956,18,4.097,19,0.007,20,3.895,21,3.561,22,3.088,23,2.976,24,3.948,25,3.032,26,3.948,27,4.097,28,3.814,29,1.713,30,3.561,31,3.814,32,4.097,33,0.258,34,1.072,35,0.175,36,0.422,37,1.02,38,1.693,39,1.302,40,0.299,41,1.062,42,3.948,43,0.247,44,5.148,45,0.297,46,0.275,47,0.297,48,3.449,49,0.48,50,0.391,51,0.087,52,0.391,53,3.04,54,1.703,55,2.376,56,1.612,57,0.082,58,0.602,59,1.656,60,3.225,61,0.984,62,2.229,63,3.225,64,1.752,65,3.561,66,3.138,67,4.431,68,3.814,69,3.225,70,1.994,71,2.406,72,3.372,73,2.667,74,3.826,75,3.225,76,1.364,77,1.736,78,1.752,79,0.958,80,1.752,81,1.752,82,1.806,83,1.531,84,2.069,85,2.069,86,3.088,87,3.088,88,2.285,89,3.088,90,2.069,91,1.275,92,1.275,93,1.158,94,2.069,95,1.994,96,2.069,97,2.069,98,1.926,99,1.493,100,1.003,101,1.994,102,2.667,103,3.088,104,3.04,105,2.781,106,1.926,107,1.003,108,1.994,109,1.926,110,1.863,111,3.814,112,1.022,113,2.069,114,1.863,115,1.994,116,2.781,117,1.201,118,2.069,119,2.069,120,4.097,121,1.994,122,2.069,123,2.874,124,2.069,125,2.976,126,0.648,127,2.069,128,1.994,129,2.069,130,1.994,131,2.069,132,2.406,133,2.976,134,1.458,135,2.069,136,1.926,137,0.002,138,0.004,139,0.002]],["title/classes/AcceptLogOut.html",[0,0.251,74,2.437]],["body/classes/AcceptLogOut.html",[0,0.454,1,3.177,2,0.522,3,0.028,4,0.028,5,0.066,6,1.976,7,1.395,8,1.374,9,4.344,10,1.654,11,2.449,12,3.381,13,3.954,14,3.616,15,1.912,16,3.07,17,2.026,18,4.149,19,0.007,20,3.753,21,3.033,22,2.122,23,2.046,24,3.737,25,2.776,26,3.615,27,3.751,28,3.492,29,1.568,30,3.033,31,3.492,32,3.147,33,0.254,34,1.079,35,0.18,36,0.43,37,0.949,38,1.474,39,1.31,40,0.363,42,2.835,43,0.21,49,0.492,50,0.401,51,0.088,52,0.401,53,3.087,54,1.747,55,2.412,56,1.654,57,0.083,58,0.618,59,1.699,60,3.274,61,1.01,62,2.272,63,3.274,64,1.798,65,3.615,66,3.203,67,4.473,68,3.862,69,3.274,70,2.046,71,2.452,72,3.647,73,2.708,74,4.194,75,3.274,76,1.39,77,1.755,78,1.798,79,0.968,80,1.798,81,1.798,82,1.853,83,1.571,84,2.122,85,2.122,86,3.147,87,3.147,88,2.329,89,3.147,90,2.122,91,1.284,92,1.284,93,1.167,94,2.122,95,2.046,96,2.122,97,2.122,98,1.976,99,1.532,100,1.029,101,2.046,102,2.708,103,3.147,104,3.087,105,2.835,106,1.976,107,1.029,108,2.046,109,1.976,110,1.912,111,4.125,112,1.049,113,2.122,114,1.912,115,2.046,116,2.835,117,1.224,118,2.122,119,2.122,120,4.641,121,2.046,122,2.122,123,2.93,124,2.122,125,3.033,126,0.665,127,3.147,128,3.033,129,3.147,130,3.033,131,3.147,132,2.922,133,3.615,134,1.496,135,2.122,136,1.976,137,0.003,138,0.004,139,0.003,140,5.247]],["title/classes/AcceptLogOutSuccess.html",[0,0.251,75,2.437]],["body/classes/AcceptLogOutSuccess.html",[0,0.454,1,3.179,2,0.522,3,0.028,4,0.028,5,0.071,6,1.978,7,1.397,8,1.374,9,4.408,10,1.655,11,2.617,12,3.393,13,4.062,14,3.617,15,1.914,16,2.777,17,1.973,18,3.753,19,0.007,20,3.755,21,3.036,22,2.125,23,2.048,24,3.739,25,3.072,26,4.001,27,4.151,28,3.864,29,1.736,30,3.036,31,3.864,32,3.15,33,0.256,34,1.08,35,0.18,36,0.43,37,0.949,38,1.475,39,1.31,40,0.206,42,2.837,43,0.142,49,0.493,50,0.402,51,0.088,52,0.402,53,3.089,54,1.749,55,2.413,56,1.655,57,0.083,58,0.618,59,1.701,60,3.276,61,1.011,62,2.274,63,3.276,64,1.8,65,3.617,66,3.158,67,4.475,68,3.864,69,3.276,70,2.048,71,2.454,72,3.416,73,2.709,74,4.053,75,3.623,76,1.391,77,1.755,78,1.8,79,0.969,80,1.8,81,1.8,82,1.855,83,1.572,84,2.125,85,2.125,86,3.15,87,3.15,88,2.331,89,3.15,90,2.125,91,1.285,92,1.285,93,1.167,94,2.125,95,2.048,96,2.125,97,2.125,98,1.978,99,1.534,100,1.03,101,2.048,102,2.709,103,3.15,104,3.089,105,2.837,106,1.978,107,1.03,108,2.048,109,1.978,110,1.914,111,3.864,112,1.05,113,2.125,114,1.914,115,2.048,116,3.381,117,1.46,118,2.125,119,2.125,120,4.433,121,2.048,122,2.125,123,3.494,124,2.125,125,3.036,126,0.665,127,2.125,128,2.048,129,2.125,130,2.048,131,2.125,132,2.924,133,3.617,134,2.22,135,3.15,136,1.978,137,0.003,138,0.004,139,0.003,141,3.542]],["title/classes/Action.html",[0,0.251,8,0.7]],["body/classes/Action.html",[0,0.471,2,0.649,3,0.035,4,0.035,5,0.042,8,0.923,11,1.558,19,0.007,33,0.217,37,0.565,39,1.507,40,0.515,43,0.177,45,0.379,46,0.49,47,0.379,50,0.696,51,0.1,57,0.086,58,1.072,79,1.235,91,1.362,92,1.362,93,1.237,102,3.061,137,0.003,138,0.004,139,0.003,142,2.639,143,3.913,144,4.588,145,5.129,146,3.894,147,4.411,148,3.135,149,4.411,150,4.411,151,3.138,152,3.395,153,4.411,154,4.411,155,4.411,156,4.411,157,4.411,158,4.401,159,0.74,160,2.172,161,1.86,162,2.172,163,1.329,164,2.746,165,2.236,166,1.86,167,2.746,168,2.639,169,2.746,170,2.746,171,2.746,172,2.746,173,2.746,174,2.746,175,2.746,176,2.746,177,3.83,178,1.188,179,3.317,180,2.746,181,3.83,182,1.24,183,1.697,184,3.317,185,2.746,186,1.66,187,1.86,188,1.437,189,1.953,190,2.746,191,2.746,192,2.746,193,2.746,194,2.544,195,2.639,196,2.639,197,3.158,198,3.682,199,1.304,200,1.355,201,2.639,202,2.639,203,2.639,204,1.953,205,2.746,206,2.746,207,2.476,208,2.746,209,2.639,210,3.682,211,2.746,212,2.746]],["title/classes/AddLightCardFailure.html",[0,0.251,213,2.298]],["body/classes/AddLightCardFailure.html",[0,0.486,2,0.628,3,0.034,4,0.034,5,0.041,8,1.378,12,1.539,19,0.007,33,0.268,34,1.169,35,0.216,36,0.491,37,0.771,38,1.875,39,1.405,40,0.438,41,1.311,43,0.279,45,0.367,46,0.34,47,0.367,49,0.592,50,0.483,51,0.085,52,0.483,57,0.087,58,0.743,76,1.128,77,1.958,79,0.558,91,1.407,92,1.407,93,1.278,126,1.591,134,1.8,137,0.003,138,0.004,139,0.003,159,1.168,213,3.722,214,3.947,215,2.229,216,2.138,217,5.998,218,4.258,219,3.349,220,2.42,221,1.8,222,1.679,223,2.163,224,3.528,225,4.869,226,2.234,227,3.428,228,2.044,229,3.334,230,3.048,231,2.3,232,1.758,233,3.528,234,1.778,235,3.428,236,1.679,237,1.262,238,3.428,239,1.844,240,2.731,241,2.102,242,2.102,243,3.428,244,2.229,245,1.909,246,1.337,247,1.311,248,1.539,249,1.539,250,3.428,251,1.192,252,1.262,253,1.363,254,2.377,255,2.377,256,2.377,257,2.102,258,2.377,259,2.377,260,2.377,261,2.377,262,2.377,263,2.377,264,2.377,265,2.377,266,1.938,267,2.229]],["title/components/AppComponent.html",[268,0.957,269,1.648]],["body/components/AppComponent.html",[0,0.202,3,0.03,4,0.044,5,0.052,8,0.971,12,2.569,17,1.591,19,0.007,33,0.242,34,0.702,35,0.19,36,0.448,37,0.481,40,0.375,43,0.335,45,0.322,46,0.567,47,0.322,49,0.988,50,0.806,51,0.126,52,0.424,57,0.036,60,1.958,61,1.843,62,3.076,64,2.777,66,1.381,79,0.49,88,3.153,100,1.088,105,2.021,107,1.088,112,1.108,117,1.841,137,0.003,138,0.004,139,0.003,148,2.577,159,0.92,163,1.13,186,2.437,197,2.915,199,1.108,200,1.152,236,1.475,237,1.108,268,1.328,269,2.516,270,1.896,271,1.381,272,1.62,273,1.411,274,1.411,275,3.741,276,2.547,277,1.324,278,3.482,279,4.462,280,2.554,281,6.459,282,2.062,283,5.466,284,6.459,285,5.273,286,6.459,287,6.459,288,1.743,289,6.459,290,4.639,291,1.371,292,2.802,293,1.381,294,6.003,295,5.466,296,5.466,297,5.466,298,4.861,299,5.086,300,5.466,301,3.741,302,4.462,303,3.926,304,5.466,305,5.466,306,4.861,307,3.926,308,5.744,309,0.921,310,1.197,311,3.741,312,3.741,313,3.741,314,3.741,315,5.466,316,3.741,317,0.677,318,1.152,319,1.381,320,2.089,321,1.108,322,1.197,323,3.053,324,3.741,325,3.326,326,3.741,327,2.435,328,2.435,329,2.021,330,2.021,331,3.741,332,2.551,333,3.278,334,3.053,335,3.741,336,3.741,337,2.162,338,3.326,339,3.278,340,1.221,341,3.741,342,3.741,343,3.741,344,3.741,345,3.741,346,3.741,347,3.741,348,3.741,349,2.089,350,3.278,351,3.741,352,3.326,353,3.741,354,3.053,355,3.741,356,3.741,357,3.741,358,3.741,359,3.741,360,5.466,361,3.741,362,3.741,363,3.741,364,2.85,365,3.741,366,3.741,367,2.334,368,2.687,369,3.741,370,3.41,371,4.861,372,5.466,373,5.466,374,5.466,375,5.466,376,1.581,377,1.544,378,1.581,379,1.581,380,1.581,381,1.581,382,1.381,383,1.297,384,1.581,385,1.581,386,1.581,387,1.509,388,1.581,389,1.544,390,1.581,391,1.581,392,1.581,393,1.581,394,3.053,395,2.85,396,3.326,397,1.174,398,2.062,399,2.062,400,1.297,401,2.681,402,1.411,403,1.411,404,1.297,405,1.411,406,1.324,407,1.411,408,2.681,409,1.324,410,1.411,411,1.297,412,2.062,413,1.324,414,1.411,415,1.352,416,1.381,417,1.221,418,2.062,419,1.297,420,1.411,421,1.324,422,1.324,423,1.411,424,1.297,425,1.411,426,1.324,427,1.411,428,1.324,429,1.411,430,1.297,431,1.411,432,1.324,433,1.411,434,1.352,435,1.324,436,1.411,437,1.324,438,1.381,439,2.437,440,1.411,441,1.324,442,1.411,443,1.297,444,1.324,445,1.352,446,2.062,447,1.324,448,1.324,449,1.589,450,1.324,451,1.411,452,1.324,453,1.324,454,1.324,455,1.088,456,1.324,457,1.297,458,1.411,459,1.297,460,1.381,461,1.411]],["title/modules/AppModule.html",[462,1.922,463,3.344]],["body/modules/AppModule.html",[0,0.27,3,0.04,4,0.054,5,0.064,19,0.007,37,0.644,51,0.136,57,0.048,73,2.17,100,2.52,107,1.457,112,2.568,137,0.004,138,0.005,139,0.004,237,1.485,269,3.31,302,4.09,317,0.908,329,2.707,330,2.707,376,2.118,377,2.069,378,2.118,379,2.118,380,2.118,381,2.118,382,1.85,383,1.738,384,2.118,385,2.118,386,2.118,387,2.021,388,2.118,389,2.069,390,2.118,391,2.118,392,2.118,393,2.118,397,1.573,428,3.068,432,3.068,462,2.069,463,6.948,464,2.405,465,2.798,466,4.536,467,4.669,468,4.024,469,2.546,470,4.456,471,4.456,472,4.456,473,4.456,474,6.224,475,6.048,476,6.048,477,3.878,478,3.005,479,5.011,480,3.512,481,6.709,482,5.11,483,3.599,484,3.512,485,6.709,486,5.011,487,6.709,488,2.897,489,4.185,490,6.709,491,6.709,492,2.897,493,5.476,494,5.476,495,2.624,496,5.011,497,5.965,498,3.817,499,4.09,500,5.011,501,3.418,502,5.011,503,5.011,504,4.456,505,5.011,506,3.817,507,5.011,508,5.011,509,5.965,510,4.09,511,4.09,512,4.456,513,4.09,514,5.761,515,4.09,516,5.011,517,5.476,518,5.476,519,5.476,520,5.011,521,5.011,522,5.011,523,5.011,524,5.011,525,5.011,526,5.011,527,3.817,528,3.817]],["title/modules/AppRoutingModule.html",[462,1.922,474,3.344]],["body/modules/AppRoutingModule.html",[0,0.316,3,0.047,4,0.06,5,0.071,19,0.007,37,0.751,51,0.125,57,0.071,100,2.369,104,2.886,107,1.7,114,3.159,137,0.004,138,0.005,139,0.004,178,2.002,197,2.159,237,1.732,268,1.525,317,1.059,376,2.471,377,2.413,378,2.471,379,2.471,380,2.471,381,2.471,382,2.159,383,2.028,384,2.471,385,2.471,386,2.471,387,2.358,388,2.471,389,2.413,390,2.471,391,2.471,392,2.471,393,2.471,464,2.807,469,2.97,474,5.328,480,3.061,484,3.884,504,5.199,529,5.846,530,4.199,531,7.418,532,5.328,533,5.347,534,3.264,535,6.738,536,4.772,537,3.264,538,3.647,539,6.674,540,4.288,541,8.57,542,5.846,543,6.529,544,4.772,545,5.846,546,4.772,547,5.846,548,2.662,549,5.846,550,5.199,551,4.772,552,4.454,553,5.846,554,5.846,555,5.846,556,5.199,557,5.846,558,3.806,559,5.846,560,5.846,561,5.846]],["title/interfaces/AppState.html",[321,1.379,562,2.066]],["body/interfaces/AppState.html",[3,0.038,4,0.038,5,0.046,12,2.996,15,3.511,19,0.007,26,5.143,33,0.256,35,0.243,36,0.532,51,0.138,52,0.542,57,0.079,117,1.722,137,0.003,138,0.005,139,0.003,159,1.394,178,2.138,252,1.926,321,1.926,417,2.705,449,2.409,537,2.669,538,2.983,540,4.79,548,3.772,562,2.122,563,2.764,564,4.781,565,4.79,566,4.09,567,5.455,568,6.467,569,6.467,570,6.467,571,6.467,572,6.467,573,7.923,574,6.467,575,6.467,576,6.467,577,4.781,578,4.433,579,3.642,580,4.251,581,6.499,582,4.781,583,6.499,584,6.499,585,6.499,586,4.781,587,5.305,588,4.781,589,5.305,590,4.781,591,4.781,592,4.781,593,6.499,594,4.251,595,6.499,596,4.781,597,6.499,598,4.781,599,4.781,600,6.499,601,4.781,602,6.499,603,4.781,604,6.499,605,4.781,606,6.499,607,4.781,608,6.499,609,4.781,610,4.781,611,4.781,612,3.757,613,4.781,614,4.781,615,4.781,616,5.305,617,4.781,618,5.305,619,4.781,620,4.781,621,5.305,622,4.781,623,4.781,624,4.251,625,5.305,626,4.781,627,4.781,628,4.781,629,5.305,630,4.781,631,4.781,632,5.305,633,4.781,634,4.251,635,4.251,636,4.781,637,6.499,638,4.251,639,4.251,640,4.781,641,3.903,642,4.781]],["title/classes/ApplyFilter.html",[0,0.251,643,2.599]],["body/classes/ApplyFilter.html",[0,0.412,2,0.902,3,0.049,4,0.049,5,0.058,8,1.309,19,0.007,33,0.27,34,1.069,35,0.31,36,0.625,37,0.981,38,1.774,39,1.335,40,0.356,41,1.884,43,0.334,45,0.527,46,0.488,47,0.527,49,0.851,50,0.694,51,0.117,52,0.694,57,0.083,58,1.068,61,1.746,62,3.305,77,1.813,91,1.192,92,1.192,93,1.083,137,0.004,138,0.005,139,0.004,148,1.998,163,1.848,216,2.562,455,2.419,540,4.413,643,4.865,644,4.661,645,7.634,646,6.119,647,6.788,648,3.984,649,3.984,650,4.413,651,3.67,652,4.661,653,3.537,654,4.995,655,5.441,656,3.67,657,5.207,658,5.441,659,5.441,660,4.995]],["title/components/ArchivesComponent.html",[268,0.957,404,1.615]],["body/components/ArchivesComponent.html",[0,0.28,3,0.042,4,0.055,5,0.065,19,0.007,33,0.195,34,0.882,35,0.263,37,0.666,40,0.447,43,0.275,46,0.614,51,0.073,57,0.049,61,1.48,100,1.508,107,1.508,112,1.537,137,0.004,138,0.005,139,0.004,159,1.155,199,1.537,200,1.597,237,1.537,268,1.582,269,1.837,270,2.381,271,1.916,272,2.246,273,1.957,274,1.957,276,3.034,277,1.837,278,3.562,280,3.208,282,2.59,291,1.722,292,3.229,309,1.277,310,1.66,317,0.939,376,2.192,377,2.141,378,2.192,379,2.192,380,2.192,381,2.192,382,1.916,383,1.799,384,2.192,385,2.192,386,2.192,387,2.092,388,2.192,389,2.141,390,2.192,391,2.192,392,2.192,393,2.192,397,1.628,398,2.59,399,2.59,400,1.799,401,3.09,402,1.957,403,1.957,404,2.84,405,1.957,406,1.837,407,1.957,408,3.09,409,1.837,410,1.957,411,1.799,412,2.59,413,1.837,414,1.957,415,1.875,416,1.916,417,1.694,418,2.59,419,1.799,420,1.957,421,1.837,422,1.837,423,1.957,424,1.799,425,1.957,426,1.837,427,1.957,428,1.837,429,1.957,430,1.799,431,1.957,432,1.837,433,1.957,434,1.875,435,1.837,436,1.957,437,1.837,438,1.916,439,2.903,440,1.957,441,1.837,442,1.957,443,1.799,444,1.837,445,1.875,446,2.59,447,1.837,448,1.837,449,1.996,450,1.837,451,1.957,452,1.837,453,1.837,454,1.837,455,1.508,456,1.837,457,1.799,458,1.957,459,1.799,460,1.916,461,1.957,544,6.684,661,5.187,662,7.694,663,6.865,664,5.187,665,5.187,666,5.229]],["title/modules/ArchivesModule.html",[462,1.922,667,3.546]],["body/modules/ArchivesModule.html",[0,0.345,3,0.051,4,0.063,5,0.075,19,0.007,37,0.822,51,0.125,57,0.061,73,2.769,107,1.86,137,0.005,138,0.006,139,0.005,237,1.895,317,1.158,376,2.703,377,2.64,378,2.703,379,2.703,380,2.703,381,2.703,382,2.362,383,2.218,384,2.703,385,2.703,386,2.703,387,2.58,388,2.703,389,2.64,390,2.703,391,2.703,392,2.703,393,2.703,397,2.008,404,3.206,462,2.64,464,3.07,465,3.571,466,5.09,467,3.697,468,3.836,469,3.249,477,4.535,478,3.836,480,4.108,484,4.108,489,4.895,492,3.697,501,4.362,544,5.22,667,7.201,668,5.687,669,5.687,670,5.687,671,6.639,672,6.395,673,5.687]],["title/modules/ArchivesRoutingModule.html",[462,1.922,671,3.344]],["body/modules/ArchivesRoutingModule.html",[0,0.357,3,0.053,4,0.064,5,0.076,19,0.007,37,0.849,51,0.126,57,0.063,107,1.922,137,0.005,138,0.006,139,0.005,178,1.784,237,1.959,268,1.359,317,1.197,376,2.794,377,2.729,378,2.794,379,2.794,380,2.794,381,2.794,382,2.441,383,2.293,384,2.794,385,2.794,386,2.794,387,2.666,388,2.794,389,2.729,390,2.794,391,2.794,392,2.794,393,2.794,404,2.776,464,3.173,469,3.358,480,3.461,484,4.191,530,4.748,532,5.75,533,5.372,534,3.691,535,6.098,536,5.396,539,4.748,543,5.035,671,5.75,673,5.878,674,6.61,675,5.035]],["title/classes/AuthObject.html",[0,0.251,676,3.8]],["body/classes/AuthObject.html",[0,0.363,2,0.369,3,0.02,4,0.02,5,0.024,7,0.987,9,2.04,12,3.08,13,1.982,17,1.74,19,0.007,24,2.717,25,1.111,28,1.398,29,1.992,33,0.22,35,0.127,36,0.329,37,1.105,38,0.856,40,0.334,42,3.817,43,0.253,45,0.216,46,0.2,47,0.433,51,0.117,52,0.284,53,3.319,54,1.236,55,1.549,57,0.064,58,0.437,64,2.04,66,1.483,71,2.35,78,3.731,79,1.18,80,4.232,81,4.551,82,3.699,83,2.554,98,3.213,99,3.28,104,2.84,107,1.462,110,3.109,117,1.568,126,0.47,137,0.002,138,0.003,139,0.002,148,1.642,163,0.756,178,2.248,182,1.847,183,2.219,186,1.897,188,1.311,197,1.857,204,3.45,207,3.135,232,1.033,237,1.705,239,1.084,252,0.742,288,2.217,299,1.562,310,0.801,317,0.453,318,0.771,319,0.924,320,1.398,321,0.742,322,0.801,337,1.447,339,4.662,340,0.817,382,2.125,449,1.832,488,1.447,537,1.398,538,1.562,676,5.142,677,2.043,678,3.571,679,5.98,680,5.117,681,5.602,682,2.503,683,2.503,684,1.398,685,2.503,686,2.503,687,2.503,688,2.503,689,1.19,690,3.746,691,2.226,692,1.798,693,1.272,694,1.272,695,1.447,696,3.925,697,1.907,698,1.562,699,2.226,700,6.602,701,2.043,702,1.398,703,1.352,704,2.226,705,2.043,706,3.571,707,2.226,708,1.352,709,2.226,710,2.226,711,4.472,712,2.226,713,2.226,714,2.226,715,2.226,716,2.226,717,2.226,718,2.226,719,2.226,720,2.226,721,2.226,722,2.226,723,2.226,724,2.226,725,2.226,726,2.226,727,5.98,728,5.602,729,3.571,730,5.602,731,2.226,732,2.226,733,2.226,734,3.571,735,2.226,736,3.571,737,3.571,738,3.571,739,2.226,740,3.571,741,2.226,742,2.043,743,3.059,744,2.226,745,3.278,746,2.043,747,1.272,748,2.226,749,3.571,750,2.226,751,3.925,752,2.226,753,3.571,754,2.226,755,4.472,756,2.226,757,5.994,758,4.472,759,4.472,760,4.472,761,4.472,762,4.472,763,4.472,764,2.226,765,2.226,766,2.226,767,2.226,768,3.571,769,2.043,770,2.808,771,3.571,772,3.571,773,3.571,774,2.226,775,2.226,776,2.226,777,4.472,778,3.016,779,3.571,780,2.614,781,2.226,782,3.571,783,2.226,784,3.278,785,3.571,786,3.571,787,2.226,788,2.226,789,3.571,790,3.571,791,2.226,792,2.226,793,2.226,794,2.226,795,2.226,796,2.226,797,2.226,798,2.226,799,2.226,800,2.226,801,2.226,802,2.226,803,2.226,804,2.226,805,1.033,806,2.226,807,2.226,808,2.226,809,2.226,810,2.226,811,2.226,812,2.226,813,2.226,814,2.043,815,2.226,816,3.278,817,5.602,818,2.226,819,3.571,820,2.555,821,4.697,822,4.105,823,2.226,824,2.043,825,2.226,826,2.226,827,2.505,828,2.226,829,3.571,830,2.226,831,3.571,832,2.226,833,2.226,834,2.226,835,2.226,836,2.226,837,2.226,838,2.226,839,2.226,840,2.739,841,2.226,842,2.226,843,2.226,844,2.226,845,2.226,846,2.226,847,2.226,848,2.226,849,2.226,850,2.226,851,2.226,852,2.226,853,2.226,854,2.226,855,2.226,856,2.226,857,2.226,858,4.472,859,3.571,860,2.226,861,2.226,862,3.571,863,3.571,864,2.226,865,1.111,866,2.226,867,2.226,868,2.226,869,2.226,870,2.226,871,2.226,872,2.226,873,2.226,874,1.907,875,2.226,876,2.226,877,2.226,878,2.226,879,2.226,880,2.226,881,2.226,882,3.571,883,2.226,884,2.226,885,2.226,886,2.226,887,2.226,888,2.226,889,2.226,890,2.226,891,2.226,892,2.226,893,2.226,894,2.043,895,3.831,896,2.226,897,2.226,898,1.907,899,2.226,900,2.226,901,3.571,902,3.571,903,1.782,904,2.226,905,2.043,906,2.226,907,2.226]],["title/interfaces/AuthState.html",[562,2.066,568,3.8]],["body/interfaces/AuthState.html",[3,0.049,4,0.049,5,0.059,19,0.007,29,1.54,33,0.266,35,0.312,36,0.627,51,0.108,53,4.43,54,3.031,55,3.648,56,2.869,57,0.073,78,4.56,79,1.274,80,4.56,81,4.56,82,4.699,83,3.699,137,0.004,138,0.006,139,0.004,178,1.657,183,3.579,382,3.314,562,2.725,563,3.549,568,6.803,908,6.14,909,7.326,910,7.326,911,6.14,912,6.14]],["title/injectables/AuthenticationEffects.html",[15,2.515,689,1.379]],["body/injectables/AuthenticationEffects.html",[0,0.118,1,2.981,3,0.018,4,0.018,5,0.021,7,1.417,8,1.316,11,1.879,12,3.201,13,3.44,14,1.679,15,1.942,17,2.228,19,0.007,20,3.389,21,3.068,23,2.078,24,2.868,29,2.221,33,0.241,35,0.111,36,0.294,38,1.539,40,0.209,43,0.298,45,0.575,46,0.556,47,0.394,49,0.928,50,0.716,51,0.118,52,0.248,55,2.867,56,1.02,57,0.021,59,1.048,62,1.556,63,2.398,64,2.697,66,2.926,68,2.007,69,2.398,72,3.293,74,4.149,75,2.398,79,0.471,81,3.872,83,1.595,88,2.801,91,0.561,92,0.561,93,0.51,95,2.078,99,3.126,102,2.298,104,3.841,105,1.942,106,3.524,108,2.078,111,2.007,115,2.078,117,1.684,121,3.068,125,2.078,126,0.41,128,3.068,130,3.068,132,2.742,133,2.078,136,4.494,137,0.003,138,0.003,139,0.002,146,1.02,162,1.078,163,2.015,165,1.11,178,1.8,182,1.797,227,1.078,239,2.298,247,0.672,288,1.8,291,0.901,293,0.806,299,3.937,303,3.812,309,1.128,310,0.699,317,0.395,318,0.672,319,0.806,320,1.219,321,0.647,322,0.699,327,1.422,334,1.783,339,3.183,340,0.713,367,2.242,368,1.569,382,1.96,395,2.738,534,1.219,567,4.855,689,1.065,693,1.11,694,2.327,695,2.647,708,3.765,742,2.934,743,2.738,746,5.151,751,2.451,769,2.934,780,2.34,805,2.605,816,2.934,821,2.934,822,5.151,865,0.969,898,1.664,913,0.994,914,2.184,915,3.594,916,4.58,917,3.594,918,5.308,919,3.765,920,5.308,921,4.343,922,2.184,923,3.594,924,3.594,925,3.594,926,3.594,927,3.196,928,4.043,929,3.594,930,2.184,931,3.594,932,2.184,933,3.594,934,3.594,935,2.184,936,3.594,937,2.184,938,4.333,939,3.594,940,3.196,941,3.594,942,3.524,943,5.118,944,2.184,945,5.689,946,6.311,947,3.594,948,5.151,949,3.594,950,3.594,951,3.594,952,3.785,953,3.594,954,3.594,955,3.594,956,3.594,957,3.594,958,3.594,959,5.308,960,5.308,961,5.308,962,3.594,963,6.311,964,5.308,965,5.932,966,3.594,967,3.594,968,4.58,969,3.594,970,4.47,971,4.58,972,3.594,973,3.594,974,2.34,975,2.242,976,2.934,977,3.594,978,3.594,979,3.594,980,3.594,981,2.184,982,3.594,983,3.594,984,2.934,985,3.594,986,5.308,987,3.594,988,2.581,989,2.156,990,3.594,991,2.184,992,3.594,993,3.594,994,3.594,995,5.308,996,3.594,997,2.184,998,2.34,999,3.594,1000,5.308,1001,3.594,1002,3.594,1003,3.594,1004,3.594,1005,2.184,1006,3.594,1007,3.594,1008,3.594,1009,4.58,1010,4.58,1011,3.594,1012,3.594,1013,2.156,1014,3.594,1015,3.594,1016,3.594,1017,2.747,1018,2.184,1019,3.594,1020,2.078,1021,1.262,1022,1.18,1023,2.184,1024,1.569,1025,1.422,1026,2.184,1027,1.569,1028,1.783,1029,1.664,1030,1.664,1031,1.664,1032,5.867,1033,2.184,1034,2.184,1035,3.311,1036,1.362,1037,2.184,1038,2.647,1039,2.184,1040,2.184,1041,2.581,1042,2.184,1043,2.184,1044,2.184,1045,2.184,1046,2.184,1047,2.184,1048,2.184,1049,3.594,1050,2.184,1051,2.184,1052,2.184,1053,2.184,1054,2.184]],["title/components/BaseSettingComponent.html",[268,0.957,406,1.648]],["body/components/BaseSettingComponent.html",[0,0.186,3,0.028,4,0.028,5,0.033,19,0.007,29,1.29,33,0.244,34,0.661,35,0.175,36,0.421,37,0.791,40,0.2,43,0.365,45,0.629,46,0.651,47,0.629,49,0.716,50,0.869,51,0.121,52,0.391,57,0.033,61,0.983,79,0.895,93,0.489,100,1.002,107,1.985,112,1.021,117,1.787,123,1.924,137,0.002,138,0.004,139,0.002,148,2.01,151,2.283,152,3.03,159,0.866,163,1.041,178,0.93,182,1.243,183,1.329,199,1.021,200,1.061,268,1.404,269,1.22,270,1.784,271,1.273,272,1.492,273,1.3,274,1.3,276,2.428,277,1.22,278,3.458,280,2.404,282,1.941,288,2.252,291,1.29,292,2.692,293,1.273,309,2.01,310,2.339,317,0.624,318,1.061,319,1.273,321,1.021,322,1.103,327,2.243,337,1.992,350,2.067,367,2.15,383,2.135,397,1.082,398,1.941,399,1.941,400,1.195,401,2.576,402,1.3,403,1.3,404,1.195,405,1.3,406,2.417,407,3.205,408,2.576,409,1.22,410,1.3,411,1.195,412,1.941,413,1.22,414,1.3,415,1.246,416,1.273,417,1.125,418,1.941,419,1.195,420,1.3,421,1.22,422,1.22,423,1.3,424,1.195,425,1.3,426,1.22,427,1.3,428,1.22,429,1.3,430,1.195,431,1.3,432,1.22,433,1.3,434,1.246,435,1.22,436,1.3,437,1.22,438,1.273,439,2.323,440,1.3,441,1.22,442,1.3,443,1.195,444,1.22,445,1.246,446,1.941,447,1.22,448,1.22,449,1.496,450,1.22,451,1.3,452,1.22,453,1.22,454,1.22,455,1.496,456,1.22,457,1.195,458,1.3,459,1.195,460,1.273,461,1.3,495,1.804,548,2.342,666,3.919,698,2.15,702,1.924,703,1.862,805,2.124,827,3.21,1055,9.157,1056,6.577,1057,2.625,1058,3.559,1059,5.416,1060,4.69,1061,3.919,1062,4.199,1063,3.692,1064,6.334,1065,4.199,1066,3.085,1067,4.199,1068,3.509,1069,3.947,1070,4.657,1071,3.509,1072,4.199,1073,4.199,1074,4.199,1075,5.145,1076,3.064,1077,3.446,1078,3.446,1079,2.35,1080,3.446,1081,2.35,1082,3.446,1083,3.446,1084,3.947,1085,3.509,1086,4.381,1087,3.446,1088,2.35,1089,3.446,1090,3.446,1091,3.446,1092,2.35,1093,3.446,1094,2.15,1095,3.446,1096,3.446,1097,3.446,1098,3.064,1099,1.862,1100,2.813,1101,3.064,1102,3.064,1103,2.625,1104,3.695,1105,2.35,1106,2.475,1107,2.813,1108,2.35,1109,3.446,1110,3.446,1111,3.446,1112,3.064,1113,3.446,1114,3.446,1115,5.145,1116,3.446,1117,5.145,1118,3.446,1119,3.446,1120,3.446,1121,2.625,1122,3.446,1123,3.919,1124,3.446,1125,2.625,1126,3.446,1127,2.625,1128,3.446,1129,3.446,1130,3.446,1131,3.446,1132,3.446,1133,3.446,1134,3.446,1135,2.625,1136,2.625,1137,3.446,1138,3.446,1139,3.446,1140,3.446,1141,3.446,1142,3.446,1143,3.446,1144,3.446,1145,3.064,1146,3.064,1147,3.446]],["title/classes/Card.html",[0,0.251,159,0.783]],["body/classes/Card.html",[0,0.38,2,0.794,3,0.043,4,0.043,5,0.051,11,2.774,19,0.007,33,0.153,39,1.494,40,0.455,43,0.216,45,0.464,46,0.43,47,0.464,51,0.11,57,0.075,58,0.94,79,1.288,91,1.098,92,1.098,93,0.998,137,0.004,138,0.005,139,0.004,146,4.269,159,1.184,160,4.101,162,2.658,163,1.626,165,2.736,179,4.233,188,2.558,207,3.812,221,2.276,222,2.123,232,3.235,272,2.331,290,5.968,684,5.101,1148,4.395,1149,5.384,1150,5.101,1151,5.969,1152,6.396,1153,5.969,1154,5.969,1155,6.144,1156,6.396,1157,6.396,1158,5.969,1159,5.969,1160,5.628,1161,5.384,1162,5.743,1163,6.396,1164,3.867,1165,4.102,1166,3.505,1167,4.788,1168,4.395]],["title/components/CardComponent.html",[268,0.957,409,1.648]],["body/components/CardComponent.html",[0,0.191,3,0.028,4,0.042,5,0.05,19,0.007,33,0.242,34,0.673,35,0.179,36,0.429,37,0.993,40,0.205,43,0.348,45,0.538,46,0.617,47,0.538,49,0.491,50,0.401,51,0.124,52,0.401,57,0.034,61,1.008,79,1.101,83,1.568,91,0.551,92,0.551,93,0.501,100,1.027,107,1.027,112,1.047,117,1.867,137,0.003,138,0.004,139,0.003,148,1.711,151,2.326,152,2.772,159,1.413,160,1.743,163,1.067,182,1.561,188,1.153,197,1.935,199,1.851,200,1.087,207,2.114,220,3.447,221,1.493,222,1.393,236,2.725,237,1.047,240,1.608,268,1.284,269,1.25,270,1.817,271,1.304,272,1.529,273,1.333,274,1.333,276,2.463,277,1.25,278,3.465,280,2.448,282,1.977,285,5.099,288,2.087,290,2.537,291,1.314,292,2.725,309,1.702,310,1.677,317,0.64,319,1.304,321,1.047,322,1.131,323,2.883,328,4.499,329,1.908,330,1.908,337,2.042,340,1.153,354,2.883,376,1.493,377,1.458,378,1.493,379,1.493,380,1.493,381,1.493,382,1.304,383,1.225,384,1.493,385,1.493,386,1.493,387,1.425,388,1.493,389,1.458,390,1.493,391,1.493,392,1.493,393,1.493,394,2.883,397,1.109,398,1.977,399,1.977,400,1.225,401,2.607,402,1.333,403,1.333,404,1.225,405,1.333,406,1.25,407,1.333,408,2.607,409,2.447,410,1.333,411,1.225,412,1.977,413,1.25,414,1.333,415,1.277,416,1.304,417,1.153,418,1.977,419,1.225,420,1.333,421,1.25,422,1.25,423,1.333,424,1.225,425,1.333,426,1.25,427,1.333,428,1.25,429,1.333,430,1.225,431,1.333,432,1.25,433,1.333,434,1.277,435,1.25,436,1.333,437,1.25,438,1.304,439,2.357,440,1.333,441,1.25,442,1.333,443,1.225,444,1.25,445,1.277,446,1.977,447,1.25,448,1.25,449,2.146,450,1.25,451,1.333,452,1.25,453,1.25,454,1.25,455,1.027,456,1.25,457,1.225,458,1.333,459,1.225,460,1.304,461,1.333,534,1.972,565,3.029,567,4.824,698,2.203,805,1.458,903,2.326,1036,2.203,1038,3.995,1041,3.763,1158,2.69,1166,2.299,1169,3.532,1170,6.247,1171,5.24,1172,5.555,1173,6.247,1174,5.24,1175,5.24,1176,6.911,1177,3.143,1178,5.555,1179,3.532,1180,4.26,1181,4.311,1182,5.24,1183,3.532,1184,3.532,1185,3.532,1186,3.532,1187,3.532,1188,3.532,1189,3.532,1190,3.532,1191,3.532,1192,3.532,1193,3.532,1194,3.141,1195,3.532,1196,3.532,1197,3.141,1198,3.141,1199,2.299,1200,3.532,1201,3.532,1202,4.659,1203,3.532,1204,3.141,1205,3.141,1206,3.532,1207,3.532,1208,3.532,1209,3.532,1210,3.532,1211,3.411,1212,3.532,1213,2.883,1214,3.532,1215,3.532,1216,3.532,1217,3.532,1218,3.532,1219,3.532,1220,3.532,1221,3.532,1222,3.532,1223,3.532,1224,3.532,1225,5.24,1226,3.532,1227,3.532,1228,3.532,1229,3.532,1230,5.24,1231,5.24,1232,5.24,1233,3.532,1234,4.659,1235,3.532,1236,3.532,1237,3.532,1238,3.532,1239,6.145,1240,3.532,1241,5.099,1242,3.532,1243,5.099,1244,3.532,1245,3.532,1246,3.532,1247,3.141,1248,3.532,1249,3.532,1250,3.532]],["title/components/CardDetailsComponent.html",[268,0.957,411,1.615]],["body/components/CardDetailsComponent.html",[0,0.256,3,0.038,4,0.038,5,0.045,11,2.289,19,0.007,33,0.234,34,0.83,35,0.241,36,0.529,40,0.276,43,0.317,45,0.408,46,0.63,47,0.408,51,0.12,52,0.538,57,0.045,61,1.353,100,1.379,112,1.405,117,1.989,137,0.003,138,0.005,139,0.003,159,1.57,160,3.63,161,2.004,178,1.28,183,1.829,199,1.405,200,1.46,268,1.512,269,1.679,270,2.242,271,1.751,273,1.789,274,1.789,276,2.9,277,1.679,278,3.542,282,2.439,288,1.28,291,1.621,292,3.114,293,1.751,309,1.168,310,1.518,317,0.859,321,1.405,322,1.518,340,1.548,397,1.489,398,2.439,399,2.439,400,1.645,401,2.98,402,1.789,403,1.789,404,1.645,405,1.789,406,1.679,407,1.789,408,2.98,409,1.679,410,1.789,411,2.739,412,2.439,413,1.679,414,1.789,415,1.715,416,1.751,417,1.548,418,2.439,419,1.645,420,1.789,421,1.679,422,1.679,423,1.789,424,1.645,425,1.789,426,1.679,427,1.789,428,1.679,429,1.789,430,1.645,431,1.789,432,1.679,433,1.789,434,1.715,435,1.679,436,1.789,437,1.679,438,1.751,439,2.775,440,1.789,441,1.679,442,1.789,443,1.645,444,1.679,445,1.715,446,2.439,447,1.679,448,1.679,449,1.879,450,1.679,451,1.789,452,1.679,453,1.679,454,1.679,455,1.379,456,1.679,457,1.645,458,1.789,459,1.645,460,1.751,461,1.789,1160,5.935,1251,8.263,1252,6.745,1253,4.742,1254,5.748,1255,4.872,1256,6.464,1257,4.742,1258,4.742,1259,4.742,1260,4.742,1261,3.613,1262,4.742,1263,4.742,1264,4.217,1265,4.742,1266,4.742,1267,6.464,1268,4.742,1269,4.742,1270,4.217,1271,4.742,1272,4.217,1273,4.742]],["title/injectables/CardEffects.html",[587,3.8,689,1.379]],["body/injectables/CardEffects.html",[0,0.309,3,0.046,4,0.046,5,0.055,8,0.86,17,1.987,19,0.007,29,1.835,33,0.207,35,0.29,36,0.599,40,0.333,43,0.294,45,0.493,46,0.457,47,0.493,49,0.796,50,0.649,51,0.132,52,0.649,57,0.055,91,0.894,92,0.894,93,0.812,99,3.493,117,2.097,137,0.004,138,0.005,139,0.004,159,1.479,161,2.419,163,1.729,182,1.717,288,1.975,293,2.114,317,1.037,318,1.762,319,2.114,321,1.696,322,1.832,340,1.869,350,4.389,587,5.974,689,2.169,693,2.908,694,2.908,805,3.021,903,2.54,913,2.606,919,4.937,921,5.536,942,3.196,943,4.664,952,4.389,974,4.764,975,5.305,1021,3.309,1022,3.092,1028,4.672,1031,4.36,1274,5.724,1275,7.174,1276,5.724,1277,7.319,1278,5.257,1279,7.319,1280,7.319,1281,7.319,1282,7.319,1283,5.724,1284,3.726,1285,3.092,1286,3.433,1287,3.433,1288,4.36,1289,4.36,1290,4.36]],["title/interfaces/CardFeedState.html",[562,2.066,571,3.8]],["body/interfaces/CardFeedState.html",[3,0.04,4,0.04,5,0.047,7,1.943,11,3.053,19,0.007,25,3.716,29,1.236,33,0.237,35,0.25,36,0.543,51,0.113,55,3.094,57,0.085,79,1.13,126,1.573,137,0.006,138,0.005,139,0.004,148,2.448,159,1.116,163,2.423,178,1.79,182,1.691,183,1.9,188,2.166,197,1.82,220,3.839,221,2.083,222,1.943,266,3.02,368,4.764,370,5.498,455,2.18,540,4.985,562,2.187,563,2.848,571,6.121,648,3.208,649,3.208,650,2.848,651,2.955,865,2.187,988,4.764,1291,4.927,1292,5.898,1293,7.445,1294,7.193,1295,5.053,1296,7.836,1297,6.548,1298,5.415,1299,5.898,1300,5.898,1301,5.898,1302,5.898,1303,4.764,1304,5.898,1305,6.713,1306,6.633,1307,6.633,1308,4.318,1309,5.898,1310,5.898,1311,4.022,1312,4.927,1313,4.381,1314,7.445,1315,4.381,1316,4.381,1317,4.927,1318,4.927,1319,4.927,1320,4.927,1321,4.927,1322,4.927,1323,4.927,1324,4.927,1325,4.927,1326,4.927,1327,4.927,1328,4.927,1329,4.927,1330,4.927,1331,4.927,1332,4.381,1333,4.927,1334,4.927,1335,4.381]],["title/components/CardListComponent.html",[268,0.957,413,1.648]],["body/components/CardListComponent.html",[0,0.285,3,0.042,4,0.042,5,0.05,17,1.911,19,0.007,33,0.234,35,0.268,37,0.892,40,0.451,43,0.311,46,0.619,51,0.109,57,0.05,61,1.507,100,1.535,112,1.565,137,0.004,138,0.005,139,0.004,151,3.083,152,3.445,159,1.48,199,1.565,200,2.39,220,3.131,221,2.232,222,2.082,241,3.831,257,3.831,268,1.596,269,1.869,270,2.409,271,1.95,273,1.992,274,1.992,277,1.869,278,3.566,282,2.621,317,0.956,318,1.626,397,1.657,398,2.621,399,2.621,400,1.831,401,3.111,402,1.992,403,1.992,404,1.831,405,1.992,406,1.869,407,1.992,408,3.111,409,1.869,410,1.992,411,1.831,412,2.621,413,2.92,414,1.992,415,1.909,416,1.95,417,1.724,418,2.621,419,1.831,420,1.992,421,1.869,422,1.869,423,1.992,424,1.831,425,1.992,426,1.869,427,1.992,428,1.869,429,1.992,430,1.831,431,1.992,432,1.869,433,1.992,434,1.909,435,1.869,436,1.992,437,1.869,438,1.95,439,2.929,440,1.992,441,1.869,442,1.992,443,1.831,444,1.869,445,1.909,446,2.621,447,1.869,448,1.869,449,2.02,450,1.869,451,1.992,452,1.869,453,1.869,454,1.869,455,1.535,456,1.869,457,1.831,458,1.992,459,1.831,460,1.95,461,1.992,1336,5.923,1337,7.333,1338,5.28,1339,6.945,1340,6.945,1341,5.28]],["title/classes/CardOperation.html",[0,0.251,1342,3.8]],["body/classes/CardOperation.html",[0,0.329,2,0.899,3,0.049,4,0.049,5,0.058,10,2.85,19,0.007,33,0.259,34,0.979,35,0.309,39,1.372,40,0.443,43,0.306,45,0.656,46,0.608,47,0.656,50,0.942,51,0.086,57,0.073,58,1.065,79,1.215,91,0.952,92,0.952,93,0.865,137,0.004,138,0.005,139,0.004,182,1.538,204,3.687,207,3.779,220,3.51,222,2.405,240,2.776,242,3.01,266,3.782,291,1.91,309,1.502,684,4.253,1035,3.804,1342,7.103,1343,7.388,1344,5.423,1345,7.618,1346,6.098,1347,8.308,1348,7.103,1349,8.308,1350,6.098,1351,6.098,1352,6.098,1353,6.098,1354,6.098,1355,6.098,1356,6.098,1357,4.978]],["title/injectables/CardOperationEffects.html",[589,3.8,689,1.379]],["body/injectables/CardOperationEffects.html",[0,0.203,3,0.03,4,0.03,5,0.036,8,1.138,12,2.574,17,2.01,19,0.007,29,2.229,33,0.224,35,0.191,36,0.449,38,1.169,40,0.218,43,0.286,45,0.324,46,0.3,47,0.324,49,1.187,50,0.734,51,0.127,52,0.426,57,0.036,59,1.803,66,2.629,88,2.434,91,0.586,92,0.586,93,0.533,99,2.804,117,1.844,126,1.572,137,0.003,138,0.005,139,0.003,159,1.408,163,1.956,179,2.962,182,1.827,188,1.79,200,1.688,213,3.196,223,1.909,229,3.108,240,2.496,243,3.196,244,3.39,245,1.033,250,1.854,257,2.706,266,2.496,267,1.967,288,1.48,293,1.387,298,4.876,317,0.68,318,1.157,319,1.387,320,2.097,321,1.113,322,1.203,340,1.226,350,4.741,368,3.938,455,1.092,589,4.476,643,4.227,650,2.172,651,2.253,652,2.862,689,1.625,693,1.909,694,3.29,805,3.579,865,2.434,913,1.71,919,4.41,921,4.635,942,3.615,943,4.718,952,4.741,975,5.544,984,5.811,1021,2.172,1022,2.029,1024,2.698,1028,3.066,1029,2.862,1030,2.862,1031,2.862,1036,3.421,1038,4.115,1106,2.698,1121,4.933,1197,3.34,1198,3.34,1285,3.498,1294,4.476,1295,5.423,1298,4.476,1348,3.066,1358,7.571,1359,3.757,1360,6.475,1361,3.757,1362,4.876,1363,5.483,1364,5.483,1365,7.119,1366,5.483,1367,5.483,1368,5.483,1369,5.483,1370,5.483,1371,5.483,1372,4.876,1373,5.483,1374,5.483,1375,5.483,1376,3.757,1377,6.33,1378,6.33,1379,4.177,1380,5.483,1381,5.483,1382,5.483,1383,7.119,1384,5.483,1385,5.483,1386,5.483,1387,5.483,1388,5.483,1389,5.483,1390,5.483,1391,7.905,1392,5.483,1393,7.119,1394,3.757,1395,5.483,1396,5.483,1397,5.483,1398,4.476,1399,5.483,1400,5.483,1401,5.483,1402,3.757,1403,2.698,1404,3.34,1405,3.34]],["title/injectables/CardService.html",[689,1.379,921,3.031]],["body/injectables/CardService.html",[0,0.251,3,0.037,4,0.051,5,0.044,17,2.177,19,0.007,29,1.964,33,0.24,35,0.236,36,0.522,37,0.935,39,1.374,40,0.27,43,0.36,45,0.675,46,0.625,47,0.675,49,0.647,50,0.527,51,0.126,55,2.459,57,0.044,71,2.173,79,1.138,80,2.362,126,1.198,137,0.003,138,0.005,139,0.003,159,0.782,161,1.965,178,1.255,182,1.785,188,1.518,207,3.159,251,1.302,288,1.255,291,1.599,309,2.021,310,1.488,317,0.842,318,1.431,340,1.518,383,2.524,488,2.687,498,3.542,537,2.596,538,2.9,689,1.89,690,5.098,696,5.92,697,3.542,708,4.579,757,3.795,874,4.857,894,3.795,913,2.116,921,4.151,1285,3.445,1342,3.795,1404,4.134,1405,4.134,1406,4.649,1407,7.278,1408,7.278,1409,7.278,1410,6.376,1411,7.831,1412,7.831,1413,6.376,1414,3.542,1415,6.376,1416,6.376,1417,8.206,1418,4.649,1419,6.376,1420,4.649,1421,6.376,1422,4.649,1423,4.649,1424,4.649,1425,7.278,1426,4.649,1427,4.649,1428,4.649,1429,4.649,1430,3.339,1431,3.795,1432,4.649,1433,4.649,1434,4.649,1435,6.376,1436,4.649,1437,4.649,1438,4.649,1439,4.649,1440,4.649,1441,4.649,1442,4.649,1443,4.649,1444,4.649,1445,4.649,1446,4.649,1447,4.649,1448,4.649,1449,3.542,1450,4.649,1451,4.134,1452,4.649,1453,4.649,1454,4.134,1455,4.649,1456,4.649,1457,4.649,1458,4.649,1459,4.649,1460,4.649,1461,4.649,1462,4.649,1463,4.649,1464,4.649,1465,4.649,1466,4.649,1467,4.649,1468,4.649,1469,4.649,1470,4.649,1471,4.649,1472,4.649,1473,4.649]],["title/interfaces/CardState.html",[562,2.066,569,3.8]],["body/interfaces/CardState.html",[3,0.055,4,0.055,5,0.066,19,0.007,33,0.248,35,0.348,36,0.671,51,0.097,57,0.078,79,1.147,126,1.74,137,0.005,138,0.006,139,0.005,148,2.858,159,1.525,161,2.902,178,1.853,183,3.159,197,2.536,370,5.778,562,3.048,563,3.969,569,7.144,1295,7.055,1474,6.866,1475,6.866]],["title/modules/CardsModule.html",[462,1.922,1476,3.344]],["body/modules/CardsModule.html",[0,0.293,3,0.044,4,0.057,5,0.067,19,0.007,37,0.697,43,0.218,51,0.13,57,0.052,73,2.349,107,1.578,137,0.004,138,0.005,139,0.004,182,1.096,204,3.138,237,1.608,291,1.361,309,1.336,317,0.983,329,2.931,330,2.931,376,2.293,377,2.24,378,2.293,379,2.293,380,2.293,381,2.293,382,2.004,383,1.882,384,2.293,385,2.293,386,2.293,387,2.188,388,2.293,389,2.24,390,2.293,391,2.293,392,2.293,393,2.293,397,1.703,409,3.349,411,3.281,419,3.281,421,3.349,462,2.24,464,2.604,465,3.029,466,4.717,467,3.136,468,4.998,469,3.996,477,4.087,478,3.254,480,2.841,484,4.118,489,4.411,492,3.136,506,5.386,1252,4.429,1255,3.948,1476,6.968,1477,4.824,1478,4.824,1479,4.824,1480,4.824,1481,6.365,1482,5.425,1483,6.42,1484,5.425,1485,6.42,1486,5.425,1487,4.824,1488,4.824,1489,5.425,1490,5.425,1491,4.429,1492,4.824]],["title/classes/CheckAuthenticationStatus.html",[0,0.251,63,2.437]],["body/classes/CheckAuthenticationStatus.html",[0,0.456,1,3.219,2,0.534,3,0.029,4,0.029,5,0.067,6,2.02,7,1.427,8,1.37,9,4.294,10,1.691,11,2.476,12,3.39,13,3.85,14,3.484,15,1.955,16,2.812,17,1.921,18,3.8,19,0.007,20,3.788,21,3.084,22,2.17,23,2.092,24,3.778,25,2.812,26,3.663,27,3.8,28,3.538,29,1.589,30,3.084,31,3.538,32,3.199,33,0.255,34,1.086,35,0.184,36,0.437,37,0.958,38,1.49,39,1.317,40,0.21,42,2.882,43,0.145,49,0.503,50,0.41,51,0.089,52,0.41,53,3.127,54,1.786,55,2.444,56,1.691,57,0.083,58,0.632,59,1.737,60,3.317,61,1.033,62,2.31,63,3.661,64,1.838,65,3.663,66,3.174,67,4.509,68,3.904,69,3.317,70,2.092,71,2.493,72,3.452,73,2.743,74,3.904,75,3.317,76,1.413,77,1.771,78,1.838,79,0.977,80,1.838,81,1.838,82,1.894,83,1.606,84,2.17,85,2.17,86,3.8,87,3.8,88,2.812,89,3.8,90,2.17,91,1.293,92,1.293,93,1.174,94,2.17,95,3.084,96,2.17,97,2.17,98,2.02,99,1.567,100,1.052,101,2.092,102,2.743,103,3.199,104,3.127,105,2.882,106,2.02,107,1.052,108,2.092,109,2.02,110,1.955,111,3.904,112,1.072,113,2.17,114,1.955,115,2.092,116,2.882,117,1.244,118,2.17,119,2.17,120,4.194,121,2.092,122,2.17,123,2.978,124,2.17,125,3.084,126,0.68,127,2.17,128,2.092,129,2.17,130,2.092,131,2.17,132,2.493,133,3.084,134,1.529,135,2.17,136,2.02,137,0.003,138,0.004,139,0.003,1493,3.618]],["title/classes/CheckTokenResponse.html",[0,0.251,898,3.546]],["body/classes/CheckTokenResponse.html",[0,0.363,2,0.37,3,0.02,4,0.02,5,0.024,7,0.99,9,1.275,12,3.05,13,1.987,17,1.742,19,0.007,24,2.722,25,1.114,28,1.402,29,1.993,33,0.215,35,0.127,36,0.33,37,1.084,38,0.858,40,0.335,42,3.821,43,0.231,45,0.216,46,0.2,47,0.609,51,0.117,52,0.285,53,2.487,54,1.239,55,1.552,57,0.064,58,0.438,64,2.045,66,1.486,71,1.881,78,2.928,79,1.18,80,4.235,81,4.596,82,3.703,83,2.558,98,3.218,99,3.283,104,2.487,107,1.465,110,3.114,117,1.57,126,0.472,137,0.002,138,0.003,139,0.002,148,1.645,163,0.758,178,2.249,182,1.848,183,2.223,186,1.901,188,1.314,197,1.861,204,3.453,207,3.138,232,1.036,237,1.869,239,1.087,252,0.744,288,2.219,299,1.566,310,0.804,317,0.455,318,0.773,319,0.927,320,1.402,321,0.744,322,0.804,337,1.451,339,4.666,340,0.82,382,2.128,449,1.834,488,1.451,537,1.402,538,1.566,676,4.705,677,2.049,678,2.232,679,5.987,680,2.232,681,2.232,684,2.813,689,1.193,690,3.752,691,2.232,692,1.803,693,1.275,694,1.275,695,1.451,696,3.931,697,1.912,698,1.566,699,2.232,700,6.712,701,2.049,702,1.402,703,1.356,704,2.232,705,2.049,706,3.579,707,2.232,708,1.356,709,2.232,710,2.232,711,4.48,712,2.232,713,2.232,714,2.232,715,2.232,716,2.232,717,2.232,718,2.232,719,2.232,720,2.232,721,2.232,722,2.232,723,2.232,724,2.232,725,2.232,726,2.232,727,5.987,728,5.61,729,3.579,730,5.61,731,2.232,732,2.232,733,2.232,734,3.579,735,2.232,736,3.579,737,5.61,738,3.579,739,2.232,740,5.987,741,2.232,742,2.049,743,3.838,744,2.232,745,3.285,746,2.049,747,1.275,748,2.232,749,3.579,750,2.232,751,3.931,752,2.232,753,3.579,754,2.232,755,4.48,756,2.232,757,6.001,758,4.48,759,4.48,760,4.48,761,4.48,762,4.48,763,4.48,764,2.232,765,2.232,766,2.232,767,2.232,768,3.579,769,2.049,770,2.813,771,3.579,772,3.579,773,3.579,774,2.232,775,2.232,776,2.232,777,4.48,778,3.022,779,3.579,780,2.62,781,2.232,782,3.579,783,2.232,784,3.285,785,3.579,786,3.579,787,2.232,788,2.232,789,3.579,790,3.579,791,2.232,792,2.232,793,2.232,794,2.232,795,2.232,796,2.232,797,2.232,798,2.232,799,2.232,800,2.232,801,2.232,802,2.232,803,2.232,804,2.232,805,1.036,806,2.232,807,2.232,808,2.232,809,2.232,810,2.232,811,2.232,812,2.232,813,2.232,814,2.049,815,2.232,816,3.285,817,5.61,818,2.232,819,3.579,820,2.56,821,4.705,822,4.112,823,2.232,824,2.049,825,2.232,826,2.232,827,2.511,828,2.232,829,3.579,830,2.232,831,3.579,832,2.232,833,2.232,834,2.232,835,2.232,836,2.232,837,2.232,838,2.232,839,2.232,840,2.745,841,2.232,842,2.232,843,2.232,844,2.232,845,2.232,846,2.232,847,2.232,848,2.232,849,2.232,850,2.232,851,2.232,852,2.232,853,2.232,854,2.232,855,2.232,856,2.232,857,2.232,858,4.48,859,3.579,860,2.232,861,2.232,862,3.579,863,3.579,864,2.232,865,1.114,866,2.232,867,2.232,868,2.232,869,2.232,870,2.232,871,2.232,872,2.232,873,2.232,874,1.912,875,2.232,876,2.232,877,2.232,878,2.232,879,2.232,880,2.232,881,2.232,882,3.579,883,2.232,884,2.232,885,2.232,886,2.232,887,2.232,888,2.232,889,2.232,890,2.232,891,2.232,892,2.232,893,2.232,894,2.049,895,4.391,896,3.579,897,3.579,898,3.066,899,2.232,900,2.232,901,3.579,902,3.579,903,1.786,904,2.232,905,2.049,906,2.232,907,2.232,1494,2.51,1495,2.51,1496,2.51,1497,2.51,1498,2.51]],["title/classes/ClearCard.html",[0,0.251,1017,2.792]],["body/classes/ClearCard.html",[0,0.468,2,0.81,3,0.044,4,0.044,5,0.052,8,1.36,19,0.007,33,0.26,34,1.142,35,0.279,36,0.584,38,1.785,39,1.386,43,0.22,49,0.764,50,0.623,51,0.1,52,0.623,57,0.086,58,0.959,76,1.455,77,1.989,79,0.72,91,1.354,92,1.354,93,1.231,126,1.63,137,0.004,138,0.005,139,0.004,159,1.595,161,2.322,188,1.793,226,2.345,234,1.628,239,2.378,245,2.175,246,1.724,247,1.691,248,1.986,249,1.986,251,1.538,252,1.628,253,1.758,1017,5.022,1284,3.576,1285,4.274,1286,4.745,1287,4.745,1499,3.576,1500,5.119,1501,5.493,1502,3.945,1503,3.945,1504,3.945,1505,3.945,1506,3.746]],["title/classes/ClearLightCardSelection.html",[0,0.251,238,2.298]],["body/classes/ClearLightCardSelection.html",[0,0.489,2,0.644,3,0.035,4,0.035,5,0.042,8,1.384,12,1.579,19,0.007,33,0.263,34,1.174,35,0.222,36,0.5,38,1.772,39,1.411,40,0.466,43,0.245,49,0.608,50,0.495,51,0.086,52,0.495,57,0.088,58,0.763,76,1.157,77,1.974,79,0.573,91,1.414,92,1.414,93,1.285,126,1.603,134,1.846,137,0.003,138,0.004,139,0.003,159,1.185,213,3.476,214,3.687,215,2.287,219,2.439,220,2.463,221,1.846,222,1.723,223,2.219,224,3.578,225,4.893,226,2.259,227,3.476,228,2.097,229,3.38,230,3.103,231,2.36,232,1.803,233,3.578,234,1.81,235,3.476,236,1.723,237,1.294,238,3.764,239,1.891,240,2.78,241,2.156,242,2.156,243,3.476,244,2.287,245,1.936,246,1.371,247,1.345,248,1.579,249,1.579,250,3.476,251,1.223,252,1.294,253,1.398,254,2.439,255,2.439,256,2.439,257,2.156,258,2.439,259,2.439,260,2.439,261,2.439,262,3.41,263,2.439,264,2.439,265,2.439,266,1.989,267,2.287,1507,6.107]],["title/injectables/ConfigEffects.html",[625,3.8,689,1.379]],["body/injectables/ConfigEffects.html",[0,0.27,3,0.04,4,0.04,5,0.048,8,0.751,17,2.072,19,0.007,29,2.023,33,0.214,35,0.253,36,0.548,40,0.29,43,0.303,45,0.43,46,0.399,47,0.43,49,0.695,50,0.567,51,0.13,52,0.567,55,2.582,57,0.048,91,0.78,92,0.78,93,0.709,99,3.642,117,2.02,137,0.004,138,0.005,139,0.004,163,1.509,182,1.629,207,3.046,226,2.391,288,2.038,293,1.845,317,0.905,318,1.538,319,1.845,321,1.481,322,1.6,333,4.529,334,4.079,337,2.888,340,1.631,350,4.016,455,1.453,565,3.871,624,4.443,625,5.466,689,1.984,693,2.539,694,2.539,805,3.33,865,2.218,903,2.218,913,2.275,919,4.778,942,3.739,943,4.863,952,4.839,974,4.359,975,5.033,1021,2.888,1022,2.7,1024,3.589,1025,3.253,1211,4.359,1278,4.809,1288,3.806,1289,3.806,1290,3.806,1449,5.101,1508,4.997,1509,7.552,1510,7.552,1511,5.795,1512,7.552,1513,4.997,1514,6.696,1515,6.696,1516,6.696,1517,6.696,1518,6.696,1519,4.997,1520,7.174,1521,5.954,1522,4.997,1523,7.7,1524,5.954,1525,4.443,1526,4.443,1527,4.443,1528,3.117,1529,3.117,1530,4.997,1531,4.443,1532,4.997,1533,4.997,1534,4.997,1535,6.696,1536,6.696,1537,6.696,1538,6.696,1539,4.997]],["title/injectables/ConfigService.html",[689,1.379,1511,3.344]],["body/injectables/ConfigService.html",[0,0.343,3,0.051,4,0.051,5,0.061,17,2.085,19,0.007,33,0.222,35,0.323,36,0.64,40,0.37,43,0.34,45,0.548,46,0.508,47,0.548,51,0.133,52,0.721,57,0.061,79,1.025,117,2.181,137,0.005,138,0.006,139,0.005,182,1.284,288,2.383,291,1.961,309,1.566,317,1.152,318,1.958,321,1.885,322,2.036,327,4.141,332,4.338,340,2.077,488,3.677,537,3.551,538,3.968,689,2.317,690,6.009,708,3.436,913,2.896,1107,5.192,1414,4.846,1511,5.616,1540,6.361,1541,8.467,1542,8.832,1543,7.819,1544,6.361,1545,4.846,1546,4.846,1547,4.846,1548,6.361,1549,6.361,1550,6.361]],["title/interfaces/ConfigState.html",[562,2.066,570,3.8]],["body/interfaces/ConfigState.html",[3,0.053,4,0.053,5,0.063,19,0.007,33,0.259,35,0.333,36,0.653,51,0.093,57,0.082,79,1.126,126,1.719,137,0.005,138,0.006,139,0.005,148,3.037,159,1.106,161,2.778,178,2.153,183,2.535,197,2.946,207,3.465,352,5.845,364,6.971,370,5.709,562,2.917,563,3.8,565,5.163,570,7.012,865,2.917,1523,8.138,1531,5.845,1551,6.573,1552,6.573,1553,6.573]],["title/injectables/CustomRouterEffects.html",[612,2.691,689,1.379]],["body/injectables/CustomRouterEffects.html",[0,0.241,3,0.036,4,0.036,5,0.043,8,1.07,17,2.188,19,0.007,29,2.194,30,4.446,31,3.457,33,0.237,35,0.435,36,0.507,38,1.32,40,0.259,43,0.308,45,0.613,46,0.494,47,0.384,49,0.99,50,0.807,51,0.128,52,0.505,57,0.043,59,2.139,72,2.2,117,2.001,137,0.003,138,0.004,139,0.003,163,1.346,166,3.251,178,2.075,182,1.817,186,2.337,235,2.2,238,3.513,288,1.202,293,1.646,317,0.807,318,1.372,319,1.646,320,2.488,321,1.32,322,1.426,340,1.455,455,1.296,546,5.055,566,3.796,578,3.039,612,3.58,689,1.835,694,2.264,695,2.576,913,2.029,919,4.8,938,6.829,942,3.974,943,4.96,945,5.055,1013,3.714,1020,3.58,1021,2.576,1022,2.407,1029,3.395,1030,3.395,1031,3.395,1278,5.524,1285,2.407,1372,5.507,1554,8.082,1555,4.456,1556,7.117,1557,7.117,1558,4.798,1559,4.456,1560,6.192,1561,8.366,1562,7.117,1563,6.192,1564,6.192,1565,4.456,1566,7.691,1567,8.082,1568,6.192,1569,7.691,1570,7.691,1571,7.691,1572,6.192,1573,4.456,1574,6.192,1575,6.192,1576,6.192,1577,3.863,1578,6.192,1579,6.192,1580,4.456,1581,7.117,1582,6.192,1583,6.192,1584,3.863,1585,4.798,1586,3.345,1587,5.507,1588,3.845,1589,3.58,1590,3.863,1591,3.457,1592,4.456,1593,3.637]],["title/classes/CustomRouterStateSerializer.html",[0,0.251,1594,3.546]],["body/classes/CustomRouterStateSerializer.html",[0,0.382,2,0.8,3,0.044,4,0.057,5,0.052,11,2.785,13,3.49,19,0.007,29,1.361,33,0.2,34,0.908,35,0.275,39,1.205,40,0.315,43,0.284,45,0.718,46,0.564,47,0.609,51,0.1,57,0.075,79,0.711,88,2.408,91,0.847,92,0.847,93,0.77,117,1.649,137,0.004,138,0.005,139,0.004,178,2.249,182,1.428,186,3.144,204,2.408,232,2.24,251,1.98,288,2.122,291,1.773,309,1.937,449,1.578,534,3.029,567,3.385,578,3.7,579,5.991,641,4.429,747,2.756,770,3.029,780,6.219,840,3.7,865,2.408,1038,3.136,1589,4.087,1594,5.386,1595,4.824,1596,6.802,1597,7.07,1598,7.07,1599,6.287,1600,7.41,1601,5.425,1602,6.287,1603,7.054,1604,5.425,1605,6.287,1606,4.824,1607,7.41,1608,4.824,1609,4.429,1610,4.824,1611,6.42,1612,4.824,1613,4.824,1614,5.771,1615,4.824,1616,4.824,1617,4.824,1618,4.824,1619,4.824,1620,4.824,1621,4.824,1622,4.824,1623,4.824,1624,4.824,1625,4.824,1626,4.824,1627,4.824,1628,4.824]],["title/classes/Detail.html",[0,0.251,160,2.298]],["body/classes/Detail.html",[0,0.401,2,0.865,3,0.047,4,0.047,5,0.056,11,2.077,19,0.007,33,0.166,39,1.504,40,0.474,43,0.235,45,0.505,46,0.468,47,0.505,51,0.115,57,0.078,58,1.024,79,1.275,91,1.161,92,1.161,93,1.054,137,0.004,138,0.005,139,0.004,146,4.227,159,0.987,160,4.028,162,2.895,163,1.772,165,2.98,179,3.169,188,1.915,207,3.461,221,2.479,222,2.313,232,2.421,272,3.534,290,6.163,1148,4.788,1150,3.819,1151,4.468,1152,4.788,1153,4.468,1154,4.468,1155,5.566,1156,4.788,1157,4.788,1158,4.468,1159,4.468,1160,4.213,1162,4.788,1163,7.384,1164,4.213,1165,4.468,1166,3.819,1167,7.257,1168,6.662,1629,5.866,1630,5.866]],["title/components/DetailComponent.html",[268,0.957,419,1.615]],["body/components/DetailComponent.html",[0,0.189,3,0.028,4,0.028,5,0.033,8,1.2,11,1.241,19,0.007,29,1.306,33,0.232,34,0.669,35,0.178,36,0.427,37,0.799,39,0.952,40,0.204,43,0.355,45,0.536,46,0.615,47,0.536,49,0.725,50,0.591,51,0.112,57,0.033,61,1,79,0.815,100,1.019,105,2.814,112,1.038,137,0.003,138,0.004,139,0.003,151,2.312,152,2.759,159,1.38,160,4.049,161,1.481,166,2.909,178,2.213,182,0.708,186,1.322,188,1.144,189,1.555,197,1.924,199,1.544,200,1.079,240,1.595,251,0.981,268,1.415,269,1.241,270,1.807,271,1.294,273,1.965,274,1.322,276,2.452,277,1.241,278,3.463,282,1.965,288,2.364,291,1.306,292,2.714,309,1.899,310,2.556,317,0.635,318,1.079,340,1.144,377,2.15,397,1.1,398,1.965,399,2.597,400,1.215,401,2.597,402,1.322,403,1.322,404,1.215,405,1.322,406,1.241,407,1.322,408,2.597,409,1.241,410,1.322,411,1.215,412,1.965,413,1.241,414,1.322,415,1.267,416,1.294,417,1.144,418,1.965,419,2.388,420,1.322,421,1.241,422,1.241,423,1.322,424,1.215,425,1.322,426,1.241,427,1.322,428,1.241,429,1.322,430,1.215,431,1.322,432,1.241,433,1.322,434,1.267,435,1.241,436,1.322,437,1.241,438,1.294,439,2.346,440,1.322,441,1.241,442,1.322,443,1.215,444,1.241,445,1.267,446,1.965,447,1.241,448,1.241,449,1.515,450,1.241,451,1.322,452,1.241,453,1.241,454,1.241,455,1.019,456,1.241,457,1.215,458,1.322,459,1.215,460,1.294,461,1.322,482,2.669,483,2.517,656,3.729,865,1.555,1121,2.669,1150,2.281,1151,3.968,1177,3.124,1255,3.843,1264,3.116,1270,3.116,1272,3.116,1430,3.741,1481,4.944,1491,2.86,1492,3.116,1586,1.893,1631,3.504,1632,5.209,1633,6.217,1634,6.217,1635,5.209,1636,5.209,1637,6.884,1638,6.884,1639,6.884,1640,6.217,1641,3.504,1642,6.884,1643,5.529,1644,5.075,1645,5.529,1646,6.121,1647,5.209,1648,3.504,1649,3.504,1650,5.209,1651,6.217,1652,7.71,1653,3.504,1654,3.504,1655,3.504,1656,3.504,1657,3.504,1658,3.504,1659,3.504,1660,6.217,1661,3.504,1662,4.252,1663,3.504,1664,3.504,1665,3.504,1666,3.504,1667,1.834,1668,2.86,1669,3.504,1670,3.504,1671,3.504,1672,3.504,1673,3.504,1674,3.504,1675,3.504,1676,3.504,1677,3.504,1678,3.504,1679,3.504,1680,4.632,1681,5.209,1682,3.504,1683,3.504,1684,3.504,1685,3.504,1686,3.504,1687,3.504,1688,3.504,1689,3.116,1690,3.504,1691,3.504,1692,3.504,1693,3.504,1694,5.209,1695,3.504,1696,3.116,1697,3.504,1698,3.504,1699,3.504,1700,3.504,1701,3.504,1702,3.504,1703,3.504,1704,3.504,1705,3.504,1706,5.209,1707,3.504,1708,3.504,1709,5.209,1710,3.504,1711,5.209,1712,3.504,1713,3.504,1714,3.504,1715,3.504,1716,3.504,1717,3.504,1718,3.504,1719,3.504,1720,3.504,1721,2.86,1722,3.504,1723,3.504,1724,3.504,1725,3.504,1726,3.504]],["title/components/DetailsComponent.html",[268,0.957,421,1.648]],["body/components/DetailsComponent.html",[0,0.234,3,0.035,4,0.035,5,0.041,19,0.007,33,0.241,34,0.78,35,0.22,36,0.498,37,0.557,40,0.408,43,0.354,45,0.523,46,0.639,47,0.523,51,0.099,57,0.041,61,1.237,66,1.601,79,0.796,100,1.261,112,1.285,137,0.003,138,0.004,139,0.003,151,2.697,152,2.697,159,1.462,160,2.999,161,1.833,182,0.876,197,1.601,199,1.285,200,1.335,268,1.442,269,1.535,270,2.107,271,1.601,273,1.636,274,1.636,277,1.535,278,3.521,282,2.292,288,2.238,291,1.524,309,1.872,310,2.655,317,0.785,367,2.705,397,1.361,398,2.292,399,2.292,400,1.504,401,2.868,402,1.636,403,1.636,404,1.504,405,1.636,406,1.535,407,1.636,408,2.868,409,1.535,410,1.636,411,1.504,412,2.292,413,1.535,414,1.636,415,1.568,416,1.601,417,1.416,418,2.292,419,2.775,420,1.636,421,2.691,422,1.535,423,1.636,424,1.504,425,1.636,426,1.535,427,1.636,428,1.535,429,1.636,430,1.504,431,1.636,432,1.535,433,1.636,434,1.568,435,1.535,436,1.636,437,1.535,438,1.601,439,2.646,440,1.636,441,1.535,442,1.636,443,1.504,444,1.535,445,1.568,446,2.292,447,1.535,448,1.535,449,1.767,450,1.535,451,1.636,452,1.535,453,1.535,454,1.535,455,1.261,456,1.535,457,1.504,458,1.636,459,1.504,460,1.601,461,1.636,656,2.601,820,2.203,865,1.924,942,2.421,1020,2.506,1160,5.747,1172,6.237,1177,3.644,1178,6.237,1194,3.856,1202,5.403,1254,5.403,1696,3.856,1727,4.336,1728,6.237,1729,7.013,1730,6.758,1731,6.076,1732,6.076,1733,7.6,1734,6.076,1735,4.336,1736,4.336,1737,6.076,1738,7.6,1739,4.336,1740,4.336,1741,6.076,1742,4.336,1743,4.336,1744,7.013,1745,6.076,1746,4.336,1747,4.336,1748,4.336,1749,4.336,1750,6.076,1751,4.336,1752,4.336,1753,4.336,1754,4.336,1755,6.076,1756,2.705,1757,6.076,1758,4.336,1759,4.336,1760,4.336,1761,4.336,1762,4.336,1763,6.076,1764,4.336,1765,4.336,1766,6.076]],["title/directives/DraggableDirective.html",[400,1.615,457,1.615]],["body/directives/DraggableDirective.html",[0,0.268,3,0.04,4,0.04,5,0.047,19,0.007,29,1.887,33,0.213,35,0.252,36,0.546,43,0.354,49,0.69,50,0.563,51,0.07,57,0.047,137,0.004,138,0.005,139,0.004,182,1.52,197,2.971,199,1.47,236,1.957,277,1.757,278,2.409,288,2.031,310,2.575,317,0.899,339,4.513,382,1.832,400,2.311,456,1.757,457,2.311,820,4.485,824,4.05,948,7.054,1357,4.05,1430,6.841,1680,4.412,1756,3.096,1767,6.836,1768,7.98,1769,4.962,1770,6.664,1771,7.525,1772,5.926,1773,7.525,1774,7.525,1775,7.525,1776,5.926,1777,6.664,1778,6.664,1779,6.664,1780,7.85,1781,4.962,1782,4.962,1783,4.962,1784,6.143,1785,4.962,1786,8.641,1787,4.962,1788,9.333,1789,5.077,1790,4.962,1791,4.962,1792,6.664,1793,4.962,1794,4.962,1795,5.077,1796,4.962,1797,4.412,1798,7.154,1799,4.962,1800,4.962,1801,8.641,1802,4.962,1803,4.962,1804,4.962,1805,4.962,1806,4.962,1807,4.962,1808,4.962,1809,4.962,1810,4.962,1811,4.962,1812,4.412,1813,6.664,1814,4.962,1815,4.962,1816,4.962,1817,4.962,1818,4.962,1819,4.962]],["title/components/EmailSettingComponent.html",[268,0.957,422,1.648]],["body/components/EmailSettingComponent.html",[0,0.197,3,0.029,4,0.029,5,0.035,19,0.007,29,0.916,33,0.25,34,0.69,35,0.185,36,0.44,40,0.212,43,0.378,45,0.697,46,0.688,47,0.697,49,0.747,50,0.888,51,0.105,52,0.414,57,0.035,61,1.042,79,0.835,100,1.062,107,1.562,112,1.082,117,1.826,137,0.003,138,0.004,139,0.003,148,2.08,151,2.384,159,0.904,182,0.737,199,1.592,200,1.124,268,1.31,269,1.293,270,1.863,271,1.349,272,1.581,273,1.378,274,1.378,276,2.512,277,1.293,278,3.475,280,2.51,282,2.027,288,2.112,291,1.347,292,2.512,293,1.349,309,2.198,310,2.505,317,0.661,321,1.082,322,1.169,383,1.267,397,1.146,398,2.027,399,2.027,400,1.267,401,2.65,402,1.378,403,1.378,404,1.267,405,1.378,406,3.252,407,1.378,408,2.65,409,1.293,410,1.378,411,1.267,412,2.027,413,1.293,414,1.378,415,1.32,416,1.349,417,1.192,418,2.027,419,1.267,420,1.378,421,1.293,422,2.487,423,3.132,424,1.267,425,1.378,426,1.293,427,1.378,428,1.293,429,1.378,430,1.267,431,1.378,432,1.293,433,1.378,434,1.32,435,1.293,436,1.378,437,1.293,438,1.349,439,2.404,440,1.378,441,1.293,442,1.378,443,1.267,444,1.293,445,1.32,446,2.027,447,3,448,1.293,449,1.562,450,1.293,451,1.378,452,1.293,453,1.293,454,1.293,455,1.062,456,1.293,457,1.267,458,1.378,459,1.267,460,1.349,461,1.378,495,1.912,827,3.351,1057,2.782,1058,3.682,1059,4.79,1060,4.853,1061,4.091,1062,3.663,1063,3.221,1064,6.298,1065,3.663,1066,3.221,1067,5.338,1068,4.79,1069,3.682,1070,4.345,1071,4.79,1072,3.663,1073,3.663,1074,3.663,1079,2.491,1081,2.491,1084,3.105,1085,3.663,1086,4.212,1088,3.663,1092,3.663,1094,2.278,1108,2.491,1308,3.496,1820,6.37,1821,5.665,1822,7.195,1823,4.776,1824,3.652,1825,6.719,1826,3.652,1827,2.623,1828,2.623,1829,2.623,1830,3.247,1831,3.652,1832,3.652,1833,3.652,1834,3.652,1835,2.623,1836,2.623,1837,2.623,1838,2.623,1839,2.623,1840,2.623,1841,2.623,1842,2.623,1843,2.623,1844,2.623,1845,2.623,1846,2.623,1847,2.623,1848,2.981,1849,2.623,1850,4.853,1851,2.623,1852,3.652,1853,3.652,1854,4.091,1855,4.384,1856,4.384]],["title/classes/EmptyLightCards.html",[0,0.251,227,2.298]],["body/classes/EmptyLightCards.html",[0,0.489,2,0.648,3,0.035,4,0.035,5,0.042,8,1.385,12,1.589,19,0.007,33,0.263,34,1.175,35,0.223,36,0.502,38,1.776,39,1.412,40,0.411,43,0.176,49,0.611,50,0.498,51,0.086,52,0.498,57,0.088,58,0.767,76,1.164,77,1.978,79,0.576,91,1.416,92,1.416,93,1.286,126,1.606,134,1.858,137,0.003,138,0.004,139,0.003,159,1.189,213,3.487,214,3.211,215,2.301,219,2.454,220,2.474,221,1.858,222,1.733,223,2.233,224,3.589,225,4.899,226,2.266,227,3.774,228,2.11,229,3.391,230,3.116,231,2.375,232,1.814,233,3.589,234,1.818,235,3.487,236,1.733,237,1.302,238,3.487,239,1.903,240,2.792,241,2.17,242,2.17,243,3.487,244,2.301,245,1.942,246,1.38,247,1.353,248,1.589,249,1.589,250,3.487,251,1.231,252,1.302,253,1.407,254,2.454,255,3.425,256,2.454,257,2.17,258,2.454,259,2.454,260,2.454,261,2.454,262,2.454,263,2.454,264,2.454,265,2.454,266,2.001,267,2.301,1857,4.395]],["title/classes/FailToUpdateTimeReference.html",[0,0.251,1858,3.031]],["body/classes/FailToUpdateTimeReference.html",[0,0.429,2,0.816,3,0.045,4,0.045,5,0.053,7,2.183,8,1.339,10,3.711,16,2.457,19,0.007,33,0.263,34,1.079,35,0.281,36,0.587,37,0.92,38,1.79,39,1.332,40,0.322,41,1.704,43,0.319,45,0.477,46,0.442,47,0.477,49,0.77,50,0.628,51,0.118,52,0.628,55,2.763,56,2.587,57,0.083,58,0.966,71,2.587,77,1.886,83,2.457,88,3.179,116,3.87,126,1.492,137,0.004,138,0.005,139,0.004,216,2.445,234,1.64,270,1.92,299,4.469,307,5.145,449,2.591,653,3.2,747,2.812,903,3.179,928,4.217,998,4.663,1066,3.32,1858,5.17,1859,3.976,1860,5.457,1861,4.886,1862,5.847,1863,6.855,1864,5.847,1865,5.847,1866,7.163,1867,5.536,1868,5.847,1869,3.604,1870,3.976,1871,3.454,1872,3.976,1873,4.519,1874,4.591,1875,4.519,1876,4.886,1877,4.519,1878,5.145,1879,5.145,1880,4.217,1881,3.776,1882,4.217,1883,4.519,1884,3.976,1885,4.519,1886,4.519,1887,4.519,1888,4.663,1889,4.519,1890,4.519,1891,4.217]],["title/components/FeedComponent.html",[268,0.957,424,1.615]],["body/components/FeedComponent.html",[0,0.248,3,0.037,4,0.051,5,0.06,17,2.012,19,0.007,33,0.239,34,0.813,35,0.233,36,0.518,37,0.59,40,0.267,43,0.339,45,0.396,46,0.622,47,0.396,51,0.124,52,0.521,57,0.044,61,1.311,100,1.336,107,1.336,112,1.362,117,1.97,137,0.003,138,0.005,139,0.003,148,2.065,159,1.064,199,1.362,200,1.415,220,1.853,221,1.942,222,1.812,236,1.812,237,1.362,241,3.57,257,3.57,266,2.88,268,1.487,269,1.627,270,2.194,271,1.697,272,1.989,273,1.734,274,1.734,276,2.852,277,1.627,278,3.535,280,2.956,282,2.387,291,1.586,292,3.073,293,1.697,309,1.558,310,2.025,317,0.832,318,1.415,319,1.697,321,1.362,322,1.471,337,2.656,340,1.5,376,1.942,377,1.897,378,1.942,379,1.942,380,1.942,381,1.942,382,1.697,383,1.594,384,1.942,385,1.942,386,1.942,387,2.551,388,1.942,389,1.897,390,1.942,391,1.942,392,1.942,393,1.942,397,1.442,398,2.387,399,2.387,400,1.594,401,2.94,402,1.734,403,1.734,404,1.594,405,1.734,406,1.627,407,1.734,408,2.94,409,1.627,410,1.734,411,1.594,412,2.387,413,1.627,414,1.734,415,1.661,416,1.697,417,1.5,418,2.387,419,1.594,420,1.734,421,1.627,422,1.627,423,1.734,424,2.703,425,1.734,426,1.627,427,1.734,428,1.627,429,1.734,430,1.594,431,1.734,432,1.627,433,1.734,434,1.661,435,1.627,436,1.734,437,1.627,438,1.697,439,2.729,440,1.734,441,1.627,442,1.734,443,1.594,444,1.627,445,1.661,446,2.387,447,1.627,448,1.627,449,1.839,450,1.627,451,1.734,452,1.627,453,1.627,454,1.627,455,1.336,456,1.627,457,1.594,458,1.734,459,1.594,460,1.697,461,1.734,693,2.334,698,2.867,1728,6.432,1730,6.929,1892,4.595,1893,7.233,1894,6.325,1895,7.233,1896,6.325,1897,4.595,1898,4.595,1899,4.595,1900,4.595,1901,4.086,1902,3.134,1903,4.086,1904,4.086,1905,4.595,1906,3.3,1907,4.595,1908,4.595,1909,4.595,1910,4.595]],["title/injectables/FeedFiltersEffects.html",[621,3.8,689,1.379]],["body/injectables/FeedFiltersEffects.html",[0,0.184,3,0.041,4,0.027,5,0.049,8,1.251,10,2.862,12,1.848,17,1.95,19,0.007,29,1.705,33,0.193,35,0.173,36,0.502,40,0.199,43,0.273,45,0.294,46,0.489,47,0.294,49,1.062,50,0.825,51,0.124,52,0.387,57,0.033,59,1.64,62,2.652,66,1.887,91,0.533,92,0.533,93,0.869,99,2.652,117,1.782,123,2.854,137,0.002,138,0.004,139,0.002,159,0.86,163,1.032,178,1.834,182,1.76,183,3.269,207,1.378,228,2.454,237,1.012,242,3.593,251,0.957,288,1.653,293,1.261,307,5.486,317,0.619,318,1.052,319,1.261,320,1.907,321,1.012,322,1.094,337,1.975,340,1.115,387,3.515,417,1.115,449,1.977,455,1.486,551,6.235,552,2.602,565,3.54,621,4.172,643,3.419,650,1.975,651,2.049,656,3.065,657,2.33,689,1.515,694,1.736,695,1.975,698,2.131,805,3.361,820,3.111,865,2.268,905,2.788,913,1.555,919,4.277,940,4.545,942,3.419,943,4.577,952,4.581,984,4.172,1021,1.975,1022,1.845,1024,2.454,1100,2.788,1104,2.454,1105,4.177,1164,3.671,1297,2.788,1377,4.545,1378,4.545,1379,3.894,1398,4.172,1403,2.454,1526,4.545,1662,5.549,1689,4.545,1756,2.131,1789,6.457,1795,5.818,1872,2.454,1874,3.93,1876,2.33,1878,2.454,1879,2.454,1880,4.665,1881,2.33,1882,2.602,1902,2.33,1911,7.278,1912,3.416,1913,6.124,1914,6.124,1915,6.124,1916,4.883,1917,3.416,1918,8.476,1919,5.111,1920,5.111,1921,5.111,1922,5.111,1923,5.111,1924,5.111,1925,5.111,1926,6.798,1927,5.111,1928,6.798,1929,5.111,1930,5.111,1931,4.172,1932,5.111,1933,5.111,1934,3.416,1935,5.111,1936,5.111,1937,3.416,1938,5.111,1939,5.111,1940,5.111,1941,5.111,1942,5.111,1943,4.172,1944,5.111,1945,5.111,1946,5.111,1947,5.111,1948,5.111,1949,5.111,1950,5.111,1951,4.172,1952,8.141,1953,5.111,1954,5.111,1955,5.111,1956,6.798,1957,5.111,1958,7.638,1959,7.638,1960,5.111,1961,3.416,1962,3.416,1963,2.788,1964,3.416,1965,1.845,1966,1.975,1967,3.038,1968,2.602,1969,3.416,1970,3.416,1971,3.416,1972,6.124,1973,3.416,1974,3.416,1975,4.545,1976,3.416,1977,4.545,1978,3.416,1979,3.416,1980,3.416,1981,3.416,1982,3.416,1983,3.416,1984,3.416,1985,3.038,1986,3.416,1987,3.416,1988,3.416,1989,3.416,1990,3.416,1991,3.416]],["title/modules/FeedModule.html",[462,1.922,1992,3.546]],["body/modules/FeedModule.html",[0,0.241,3,0.036,4,0.05,5,0.059,19,0.007,33,0.126,37,0.572,51,0.136,57,0.043,73,1.929,107,1.296,137,0.003,138,0.004,139,0.003,237,1.32,317,0.807,329,3.345,330,2.407,376,1.883,377,1.839,378,1.883,379,1.883,380,1.883,381,1.883,382,1.646,383,1.546,384,1.883,385,1.883,386,1.883,387,1.797,388,1.883,389,1.839,390,1.883,391,1.883,392,1.883,393,1.883,397,1.399,413,2.962,415,3.025,417,2.022,424,3.181,426,2.962,434,3.025,441,2.962,444,2.962,448,2.962,450,2.962,453,1.578,454,2.962,457,2.902,459,2.902,462,1.839,464,2.139,465,2.488,466,4.268,467,3.58,468,3.714,469,3.616,477,3.58,478,2.673,480,3.242,484,3.242,489,3.863,492,2.576,493,5.055,494,5.055,495,2.333,497,3.962,498,3.395,499,3.637,501,3.039,506,4.717,509,5.507,510,3.637,511,3.637,512,3.962,513,3.637,514,4.717,515,3.637,517,3.637,518,3.637,519,3.637,527,3.395,528,3.395,540,2.576,1181,4.44,1199,2.901,1337,3.962,1476,6.009,1487,7.187,1768,3.962,1874,2.576,1992,7.457,1993,3.962,1994,3.962,1995,3.962,1996,3.962,1997,6.373,1998,6.009,1999,4.456,2000,4.456,2001,3.962,2002,4.456,2003,3.962,2004,4.456,2005,7.691,2006,3.962,2007,4.456,2008,4.456,2009,4.456,2010,3.962,2011,3.962,2012,7.117,2013,3.962,2014,3.962,2015,4.456,2016,6.192,2017,6.192,2018,3.962,2019,3.962,2020,4.456,2021,4.456,2022,6.192,2023,3.962,2024,3.962,2025,4.456,2026,3.962,2027,4.456,2028,4.456,2029,4.456,2030,4.456,2031,3.962,2032,3.962,2033,5.507,2034,4.456,2035,4.456]],["title/modules/FeedRoutingModule.html",[462,1.922,1998,3.344]],["body/modules/FeedRoutingModule.html",[0,0.325,3,0.048,4,0.061,5,0.072,19,0.007,37,0.774,51,0.128,57,0.057,107,1.752,137,0.004,138,0.005,139,0.004,178,1.626,237,1.785,266,3.442,268,1.782,317,1.091,376,2.547,377,2.487,378,2.547,379,2.547,380,2.547,381,2.547,382,2.225,383,2.09,384,2.547,385,2.547,386,2.547,387,2.43,388,2.547,389,2.487,390,2.547,391,2.547,392,2.547,393,2.547,411,2.866,419,2.622,424,2.622,464,2.892,469,3.061,480,3.155,484,3.959,530,4.328,532,5.431,533,5.155,534,3.364,535,5.76,536,4.918,539,6.542,543,4.59,550,5.358,675,4.59,1252,4.918,1488,5.358,1998,5.431,2001,5.358,2036,6.025,2037,6.025,2038,6.025,2039,8.262,2040,6.025,2041,6.025,2042,6.025,2043,6.025]],["title/classes/Filter.html",[0,0.251,455,1.354]],["body/classes/Filter.html",[0,0.226,2,0.618,3,0.034,4,0.034,5,0.04,7,1.653,11,2.651,19,0.007,25,3.056,29,1.051,31,4.181,33,0.233,35,0.213,36,0.486,37,1.054,39,0.642,40,0.435,43,0.338,45,0.645,46,0.598,47,0.645,51,0.059,57,0.04,62,3.96,73,2.569,88,2.633,91,0.655,92,0.655,93,1.26,117,1.384,137,0.003,138,0.004,139,0.003,148,2.58,159,1.594,182,1.657,197,2.543,204,3.056,220,3.535,221,1.772,222,1.653,268,1.22,291,1.488,303,4.262,309,2.02,310,1.342,339,4.739,389,2.449,455,2.817,540,3.43,643,3.313,656,4.491,751,4.047,784,4.843,820,3.499,865,2.633,988,5.378,1213,4.843,1305,5.704,1524,5.276,1609,4.843,1784,4.843,1931,4.843,1977,5.276,2044,8.616,2045,4.192,2046,5.933,2047,5.933,2048,5.933,2049,5.933,2050,8.616,2051,5.933,2052,5.933,2053,5.933,2054,5.933,2055,5.933,2056,5.933,2057,5.933,2058,5.933,2059,5.933,2060,5.933,2061,7.488,2062,6.886,2063,4.192,2064,4.192,2065,4.192,2066,4.192,2067,4.192,2068,5.933,2069,4.192,2070,5.933,2071,7.488,2072,4.192,2073,7.488,2074,5.933,2075,5.933,2076,5.933,2077,4.192,2078,5.933,2079,5.933,2080,4.192,2081,4.192,2082,4.192,2083,4.192,2084,4.192,2085,4.192,2086,4.192,2087,4.192,2088,4.192,2089,4.192,2090,4.192,2091,4.192,2092,5.933,2093,4.192]],["title/injectables/FilterService.html",[689,1.379,1916,3.344]],["body/injectables/FilterService.html",[0,0.263,3,0.039,4,0.039,5,0.046,8,1.12,19,0.007,29,2.203,35,0.247,36,0.539,37,0.957,40,0.433,43,0.358,49,0.677,50,0.552,51,0.112,57,0.063,58,0.85,62,3.456,137,0.005,138,0.005,139,0.003,159,1.254,163,2.595,178,2.319,182,1.804,197,2.947,220,1.963,221,2.057,222,1.919,279,3.972,288,2.574,291,1.65,309,2.116,317,0.881,445,1.759,455,2.424,648,3.168,649,3.168,650,2.813,657,5.082,689,1.949,702,2.717,703,2.629,820,4.055,865,2.16,913,2.215,1155,3.319,1305,5.011,1916,4.725,2094,4.327,2095,7.451,2096,7.981,2097,7.981,2098,7.981,2099,7.981,2100,7.981,2101,6.578,2102,4.866,2103,4.866,2104,4.866,2105,4.866,2106,4.866,2107,4.866,2108,4.327,2109,6.578,2110,4.866,2111,5.676,2112,4.327,2113,4.327,2114,5.676,2115,4.327,2116,5.676,2117,4.327,2118,4.866,2119,7.981,2120,4.866,2121,4.866,2122,4.866,2123,4.866,2124,4.866,2125,4.866,2126,4.866,2127,4.866,2128,4.866,2129,4.866,2130,4.866,2131,4.866,2132,4.866,2133,4.866,2134,4.866,2135,4.866,2136,4.866,2137,4.327,2138,4.327,2139,4.327,2140,4.327,2141,4.327]],["title/components/FiltersComponent.html",[268,0.957,426,1.648]],["body/components/FiltersComponent.html",[0,0.295,3,0.044,4,0.044,5,0.052,19,0.007,33,0.201,34,0.913,35,0.277,40,0.459,43,0.285,46,0.63,51,0.077,57,0.052,61,1.56,100,1.59,112,1.62,137,0.004,138,0.005,139,0.004,159,1.196,199,1.62,200,1.683,268,1.623,269,1.936,270,2.464,271,2.019,273,2.063,274,2.063,276,3.113,277,1.936,278,3.573,282,2.681,291,1.782,292,3.296,309,1.346,310,1.75,317,0.99,397,1.716,398,2.681,399,2.681,400,1.896,401,3.154,402,2.063,403,2.063,404,1.896,405,2.063,406,1.936,407,2.063,408,3.154,409,1.936,410,2.063,411,1.896,412,2.681,413,1.936,414,2.063,415,1.977,416,2.019,417,1.785,418,2.681,419,1.896,420,2.063,421,1.936,422,1.936,423,2.063,424,1.896,425,2.063,426,2.959,427,2.063,428,1.936,429,2.063,430,1.896,431,2.063,432,1.936,433,2.063,434,1.977,435,1.936,436,2.063,437,1.936,438,2.019,439,2.979,440,2.063,441,1.936,442,2.063,443,1.896,444,1.936,445,1.977,446,2.681,447,1.936,448,1.936,449,2.066,450,1.936,451,2.063,452,1.936,453,1.936,454,1.936,455,1.59,456,1.936,457,1.896,458,2.063,459,1.896,460,2.019,461,2.063,1305,5.413,1336,5.67,2142,5.467,2143,7.106,2144,5.467,2145,5.467]],["title/classes/GuidService.html",[0,0.251,696,3.175]],["body/classes/GuidService.html",[0,0.355,2,0.971,3,0.053,4,0.053,5,0.063,19,0.007,33,0.187,35,0.334,36,0.654,39,1.317,40,0.5,43,0.358,51,0.113,53,4.724,54,3.251,57,0.063,79,0.863,137,0.005,138,0.006,139,0.005,182,1.613,279,5.376,288,2.32,291,2.003,309,1.967,317,1.193,696,5.447,1525,7.102,2108,5.856,2146,6.586,2147,8.938,2148,8.597,2149,7.987,2150,6.586,2151,6.586,2152,7.987,2153,6.586,2154,6.586,2155,6.586]],["title/classes/HandleUnexpectedError.html",[0,0.251,245,1.28]],["body/classes/HandleUnexpectedError.html",[0,0.463,2,0.781,3,0.043,4,0.043,5,0.051,8,1.348,19,0.007,33,0.269,34,1.131,35,0.269,36,0.57,37,0.894,38,1.912,39,1.374,40,0.308,41,1.631,43,0.312,45,0.456,46,0.423,47,0.456,49,0.737,50,0.601,51,0.098,52,0.601,57,0.086,58,0.925,76,1.403,77,1.961,79,0.694,91,1.339,92,1.339,93,1.216,126,1.611,137,0.004,138,0.005,139,0.004,159,1.586,161,2.238,188,1.729,216,2.393,226,2.303,234,1.569,239,2.293,245,2.269,246,1.662,247,1.631,248,1.915,249,1.915,251,1.483,252,1.569,253,1.695,1017,4.662,1284,3.448,1285,4.199,1286,4.662,1287,4.662,1499,3.448,1500,3.804,1502,3.804,1503,3.804,1504,3.804,1505,4.998,1506,3.612,2156,6.959,2157,5.296]],["title/classes/HandleUnexpectedError-1.html",[0,0.209,245,1.065,349,2.163]],["body/classes/HandleUnexpectedError-1.html",[0,0.454,2,0.817,3,0.045,4,0.045,5,0.053,8,1.34,19,0.007,33,0.269,34,1.118,35,0.281,36,0.587,37,0.921,38,1.9,39,1.365,40,0.322,41,1.707,43,0.319,45,0.478,46,0.443,47,0.478,49,0.771,50,0.629,51,0.078,52,0.629,57,0.085,58,0.968,76,1.469,77,1.887,91,1.312,92,1.312,93,1.192,126,1.634,137,0.004,138,0.005,139,0.004,216,2.447,226,2.355,234,1.643,245,2.31,246,1.74,247,1.707,248,2.005,249,2.005,251,1.553,252,1.643,253,1.775,333,4.766,565,5.314,1025,3.609,1211,3.609,1528,4.958,1529,4.958,2158,3.781,2159,7.17,2160,5.544,2161,5.462,2162,4.224,2163,4.224,2164,4.224,2165,3.982]],["title/classes/HandleUnexpectedError-2.html",[0,0.209,245,1.065,558,2.522]],["body/classes/HandleUnexpectedError-2.html",[0,0.486,2,0.628,3,0.034,4,0.034,5,0.041,8,1.378,12,1.539,19,0.007,33,0.268,34,1.169,35,0.216,36,0.491,37,0.771,38,1.875,39,1.405,40,0.438,41,1.311,43,0.279,45,0.367,46,0.34,47,0.367,49,0.592,50,0.483,51,0.085,52,0.483,57,0.087,58,0.743,76,1.128,77,1.958,79,0.558,91,1.407,92,1.407,93,1.278,126,1.591,134,1.8,137,0.003,138,0.004,139,0.003,159,1.168,213,3.428,214,3.947,215,2.229,216,2.138,219,2.377,220,2.42,221,1.8,222,1.679,223,2.163,224,3.528,225,4.869,226,2.234,227,3.428,228,2.044,229,3.334,230,3.048,231,2.3,232,1.758,233,3.528,234,1.778,235,3.428,236,1.679,237,1.262,238,3.428,239,1.844,240,2.731,241,2.102,242,2.102,243,3.428,244,2.229,245,2.073,246,1.337,247,1.311,248,1.539,249,1.539,250,3.428,251,1.192,252,1.262,253,1.363,254,2.377,255,2.377,256,2.377,257,2.102,258,2.377,259,2.377,260,2.377,261,2.377,262,2.377,263,2.377,264,3.349,265,2.377,266,1.938,267,2.229,2166,5.998,2167,4.258]],["title/classes/HandleUnexpectedError-3.html",[0,0.209,245,1.065,2168,2.951]],["body/classes/HandleUnexpectedError-3.html",[0,0.46,2,0.643,3,0.035,4,0.035,5,0.042,8,1.373,14,2.039,16,1.936,17,1.074,19,0.007,33,0.264,34,1.118,35,0.221,36,0.5,37,0.784,38,1.948,39,1.355,40,0.355,41,1.343,43,0.282,45,0.656,46,0.348,47,0.376,49,0.607,50,0.495,51,0.086,52,0.495,57,0.084,58,0.762,76,1.617,77,1.974,79,0.999,91,1.332,92,1.332,93,1.21,126,1.635,132,2.039,137,0.003,138,0.004,139,0.003,166,1.844,186,2.302,187,2.579,188,1.992,189,1.936,216,2.167,226,2.085,234,1.293,236,2.775,245,2.095,246,1.37,247,1.343,251,1.222,252,1.293,253,1.397,566,4.711,612,2.522,747,3.575,770,3.407,778,2.617,1013,2.617,1020,2.522,1558,2.722,1577,4.39,1584,4.39,1585,2.722,1586,4.333,1588,3.802,1589,2.522,1590,2.722,1591,3.929,1667,2.284,2169,2.617,2170,6.102,2171,4.363,2172,3.972,2173,2.617,2174,3.802,2175,3.929,2176,3.929,2177,3.929,2178,3.929,2179,2.722,2180,2.84,2181,2.84,2182,2.84,2183,2.84,2184,2.84,2185,2.617,2186,2.722,2187,4.581,2188,4.581,2189,3.972,2190,2.84,2191,2.84,2192,2.84,2193,2.84,2194,2.722]],["title/classes/HandleUnexpectedError-4.html",[0,0.209,245,1.065,2195,3.445]],["body/classes/HandleUnexpectedError-4.html",[0,0.475,2,0.721,3,0.039,4,0.039,5,0.047,8,1.362,19,0.007,33,0.268,34,1.149,35,0.248,36,0.541,37,0.848,38,1.932,39,1.389,40,0.284,41,1.507,43,0.3,45,0.421,46,0.391,47,0.421,49,0.681,50,0.555,51,0.069,52,0.555,57,0.086,58,0.854,66,1.807,76,1.749,77,2.044,91,1.344,92,1.344,93,1.221,126,1.652,137,0.004,138,0.005,139,0.004,216,2.301,226,2.214,234,1.956,245,2.199,246,1.536,247,1.507,248,1.769,249,1.769,251,1.37,252,1.45,253,1.566,548,4.329,1099,4.037,1965,4.037,1966,2.829,2196,2.935,2197,6.602,2198,4.893,2199,4.298,2200,4.172,2201,4.172,2202,4.662,2203,4.172,2204,4.172,2205,3.186,2206,3.186,2207,3.186,2208,3.186,2209,3.053,2210,3.186,2211,3.186,2212,3.053]],["title/injectables/HandlebarsService.html",[689,1.379,1481,3.344]],["body/injectables/HandlebarsService.html",[0,0.169,3,0.025,4,0.025,5,0.03,17,1.429,19,0.007,25,3.74,29,1.455,33,0.184,35,0.402,36,0.391,37,0.745,40,0.182,43,0.362,45,0.5,46,0.589,47,0.5,49,0.665,50,0.871,51,0.119,53,2.359,54,1.543,57,0.03,79,1.104,137,0.006,138,0.003,139,0.002,159,1.242,161,1.321,163,2.115,165,1.588,168,1.875,178,1.889,182,1.892,189,2.122,207,1.928,271,1.155,288,2.616,291,1.199,309,2.191,310,2.799,317,0.566,318,0.963,319,1.155,328,4.231,329,1.689,330,1.689,340,1.021,349,2.669,449,0.909,689,1.416,695,1.807,820,1.588,865,3.277,903,2.122,913,1.423,1035,1.951,1036,1.951,1038,5.001,1041,5.029,1150,2.035,1168,2.552,1180,3.958,1181,3.62,1199,2.035,1255,3.628,1481,3.433,1491,2.552,1643,5.16,1644,2.552,2168,2.382,2213,3.126,2214,4.78,2215,4.78,2216,4.78,2217,6.498,2218,6.498,2219,6.498,2220,6.498,2221,6.498,2222,5.803,2223,6.498,2224,6.498,2225,6.498,2226,6.498,2227,6.498,2228,6.498,2229,6.498,2230,5.803,2231,3.126,2232,4.78,2233,4.78,2234,3.126,2235,3.126,2236,3.126,2237,3.126,2238,3.126,2239,3.126,2240,3.126,2241,3.126,2242,3.126,2243,3.126,2244,3.126,2245,3.126,2246,3.126,2247,3.126,2248,3.126,2249,3.126,2250,3.126,2251,3.126,2252,3.126,2253,3.126,2254,3.126,2255,3.126,2256,3.126,2257,3.126,2258,3.126,2259,3.126,2260,3.126,2261,3.126,2262,3.126,2263,3.126,2264,3.126,2265,3.126,2266,3.126,2267,3.126,2268,3.126,2269,3.126,2270,3.126,2271,3.126,2272,3.126,2273,2.246,2274,2.78,2275,3.126,2276,3.126,2277,3.126,2278,3.126,2279,3.126,2280,3.126,2281,3.126,2282,3.126,2283,8.12,2284,5.803,2285,8.12,2286,8.286,2287,3.126,2288,3.126,2289,3.126,2290,3.126,2291,3.126,2292,3.126,2293,3.126,2294,7.383,2295,3.126,2296,7.002,2297,3.126,2298,3.126,2299,3.126,2300,6.498,2301,3.126,2302,4.78,2303,3.126,2304,3.126,2305,3.126,2306,3.126,2307,3.126,2308,3.126,2309,2.552,2310,3.126,2311,3.126,2312,3.126,2313,3.126,2314,3.126,2315,3.126,2316,3.126,2317,3.126,2318,3.126,2319,3.126,2320,3.126,2321,3.126,2322,3.126,2323,3.126,2324,3.126,2325,3.126,2326,3.126,2327,4.78,2328,5.803,2329,3.641,2330,5.803,2331,3.126]],["title/classes/I18n.html",[0,0.251,146,2.175]],["body/classes/I18n.html",[0,0.379,2,1.034,3,0.056,4,0.056,5,0.067,19,0.007,33,0.199,39,1.271,40,0.482,43,0.281,45,0.786,46,0.56,47,0.604,51,0.099,57,0.067,79,1.158,91,1.095,92,1.095,93,0.995,137,0.005,138,0.006,139,0.005,146,3.877,163,2.757,165,3.565,684,3.917,1035,5.175,2332,7.016,2333,7.016,2334,7.016]],["title/injectables/I18nService.html",[294,3.344,689,1.379]],["body/injectables/I18nService.html",[0,0.305,3,0.045,4,0.045,5,0.054,19,0.007,33,0.24,35,0.287,36,0.594,37,1.124,40,0.328,43,0.359,45,0.625,46,0.579,47,0.625,51,0.13,52,0.641,57,0.054,79,1.194,117,2.125,137,0.004,138,0.005,139,0.004,182,1.466,288,2.417,291,1.82,294,5.214,309,1.391,310,1.809,317,1.023,318,1.74,319,2.087,321,1.674,322,1.809,328,5.221,329,3.053,330,3.053,340,1.845,689,2.151,903,3.222,913,2.572,1024,4.059,1177,4.353,1180,4.951,1668,4.612,1871,5.863,2273,6.287,2274,5.025,2335,5.65,2336,7.259,2337,7.259,2338,7.259,2339,5.65,2340,7.259,2341,5.65,2342,5.65,2343,5.65,2344,5.65,2345,5.65,2346,5.65,2347,5.65,2348,4.612,2349,4.612,2350,6.455,2351,5.65,2352,5.65,2353,5.65,2354,5.025,2355,5.025,2356,5.65,2357,5.65,2358,5.65,2359,5.65,2360,8.019,2361,5.65,2362,5.65,2363,5.65,2364,7.259,2365,5.65,2366,5.65]],["title/components/IconComponent.html",[268,0.957,428,1.648]],["body/components/IconComponent.html",[0,0.225,3,0.034,4,0.048,5,0.056,19,0.007,33,0.257,34,0.76,35,0.212,36,0.484,37,0.536,40,0.242,43,0.36,45,0.359,46,0.596,47,0.359,49,0.58,51,0.097,57,0.04,61,1.191,79,0.979,100,1.213,107,1.213,112,1.236,137,0.003,138,0.004,139,0.003,148,2.575,151,2.625,152,3.739,159,0.995,199,1.236,200,1.285,237,1.236,240,3.402,268,1.412,269,1.477,270,2.051,271,1.541,272,1.807,273,1.574,274,1.574,276,2.708,277,1.477,278,3.511,280,2.763,282,1.574,291,1.483,292,2.946,309,1.028,310,1.336,317,0.756,376,1.764,377,1.722,378,1.764,379,1.764,380,1.764,381,1.764,382,1.541,383,1.447,384,1.764,385,1.764,386,1.764,387,1.683,388,1.764,389,1.722,390,1.764,391,1.764,392,1.764,393,1.764,397,1.31,398,2.231,399,2.231,400,1.447,401,2.819,402,1.574,403,1.574,404,1.447,405,1.574,406,1.477,407,1.574,408,2.819,409,1.477,410,1.574,411,1.447,412,2.231,413,1.477,414,1.574,415,1.509,416,1.541,417,1.362,418,2.231,419,1.447,420,1.574,421,1.477,422,1.477,423,1.574,424,1.447,425,1.574,426,1.477,427,1.574,428,2.646,429,1.574,430,1.447,431,1.574,432,1.477,433,1.574,434,1.509,435,1.477,436,1.574,437,1.477,438,1.541,439,2.592,440,1.574,441,1.477,442,1.574,443,1.447,444,1.477,445,1.509,446,2.231,447,1.477,448,1.477,449,1.719,450,1.477,451,1.574,452,1.477,453,1.477,454,1.477,455,1.213,456,1.477,457,1.447,458,1.574,459,1.447,460,1.541,461,1.574,492,2.412,1036,2.603,1038,3.418,1041,4.247,1241,4.827,1243,6.099,1721,6.099,2367,4.173,2368,7.472,2369,6.868,2370,4.173,2371,5.913,2372,5.913,2373,6.868,2374,6.868,2375,4.173,2376,7.472,2377,5.913,2378,4.173,2379,4.173,2380,4.173,2381,4.173,2382,4.173,2383,4.173,2384,4.173,2385,4.173,2386,4.173,2387,4.173,2388,4.173,2389,4.173,2390,4.173,2391,4.173,2392,4.173,2393,4.173,2394,4.173,2395,4.173,2396,4.173,2397,4.173,2398,4.173,2399,4.173,2400,4.173,2401,4.173,2402,6.868,2403,7.014,2404,6.868,2405,5.913,2406,6.868,2407,5.913,2408,4.173,2409,6.868,2410,4.173,2411,4.173,2412,4.173,2413,4.173,2414,4.173,2415,4.173,2416,4.173,2417,3.71,2418,5.913]],["title/components/IframeDisplayComponent.html",[268,0.957,430,1.615]],["body/components/IframeDisplayComponent.html",[0,0.255,3,0.038,4,0.052,5,0.061,19,0.007,33,0.223,34,0.827,35,0.239,36,0.527,37,0.606,40,0.274,43,0.316,45,0.406,46,0.629,47,0.406,51,0.116,52,0.535,57,0.045,61,1.346,100,1.372,107,1.372,112,1.398,117,1.986,137,0.003,138,0.005,139,0.003,159,1.084,182,0.953,199,1.398,200,1.452,237,1.398,268,1.508,269,1.67,270,2.234,271,1.742,272,2.042,273,1.78,274,1.78,276,2.892,277,1.67,278,3.541,280,3.009,282,2.43,288,2.126,291,1.615,292,3.107,293,1.742,309,1.162,310,1.51,317,0.854,321,1.398,322,1.51,340,1.54,376,1.994,377,1.947,378,1.994,379,1.994,380,1.994,381,1.994,382,1.742,383,1.636,384,1.994,385,1.994,386,1.994,387,1.903,388,1.994,389,1.947,390,1.994,391,1.994,392,1.994,393,1.994,397,1.481,398,2.43,399,2.43,400,1.636,401,2.973,402,1.78,403,1.78,404,1.636,405,1.78,406,1.67,407,1.78,408,2.973,409,1.67,410,1.78,411,1.636,412,2.43,413,1.67,414,1.78,415,1.705,416,1.742,417,1.54,418,2.43,419,1.636,420,1.78,421,1.67,422,1.67,423,1.78,424,1.636,425,1.78,426,1.67,427,1.78,428,1.67,429,1.78,430,2.733,431,1.78,432,1.67,433,1.78,434,1.705,435,1.67,436,1.78,437,1.67,438,1.742,439,2.767,440,1.78,441,1.67,442,1.78,443,1.636,444,1.67,445,1.705,446,2.43,447,1.67,448,1.67,449,1.873,450,1.67,451,1.78,452,1.67,453,1.67,454,1.67,455,1.372,456,1.67,457,1.636,458,1.78,459,1.636,460,1.742,461,1.78,482,3.594,483,3.388,1177,3.863,1645,6.521,1646,7.006,2419,4.717,2420,6.44,2421,7.333,2422,6.44,2423,7.333,2424,7.333,2425,6.44,2426,4.717,2427,7.879,2428,4.717,2429,4.717,2430,4.717,2431,4.195,2432,4.717,2433,4.717,2434,6.44,2435,4.717]],["title/components/InfoComponent.html",[268,0.957,432,1.648]],["body/components/InfoComponent.html",[0,0.237,3,0.061,4,0.035,5,0.042,7,2.782,17,2.104,19,0.007,33,0.236,34,0.787,35,0.222,36,0.501,40,0.255,43,0.35,45,0.378,46,0.641,47,0.378,51,0.128,52,0.497,57,0.042,61,1.251,66,1.619,100,1.275,109,3.939,112,1.299,114,2.369,117,1.941,137,0.003,138,0.004,139,0.003,159,1.03,163,1.324,182,1.425,199,1.299,200,1.35,268,1.451,269,1.552,270,2.124,271,1.619,272,1.898,273,1.654,274,1.654,276,2.782,277,1.552,278,3.524,280,2.861,282,2.31,288,2.42,291,1.535,292,3.012,293,1.619,309,1.08,310,1.404,317,0.794,318,1.35,319,1.619,321,1.299,322,1.404,327,2.854,340,1.431,397,1.376,398,2.31,399,2.31,400,1.521,401,2.882,402,1.654,403,1.654,404,1.521,405,1.654,406,1.552,407,1.654,408,2.882,409,1.552,410,1.654,411,1.521,412,2.31,413,1.552,414,1.654,415,1.585,416,1.619,417,1.431,418,2.31,419,1.521,420,1.654,421,1.552,422,1.552,423,1.654,424,1.521,425,1.654,426,1.552,427,1.654,428,1.552,429,1.654,430,1.521,431,1.654,432,2.704,433,1.654,434,1.585,435,1.552,436,1.654,437,1.552,438,1.619,439,2.662,440,1.654,441,1.552,442,1.654,443,1.521,444,1.552,445,1.585,446,2.31,447,1.552,448,1.552,449,2.42,450,1.552,451,1.654,452,1.552,453,1.552,454,1.552,455,1.275,456,1.552,457,1.521,458,1.654,459,1.521,460,1.619,461,1.654,805,1.81,903,2.718,989,2.63,1101,3.899,1102,3.899,1177,3.672,1181,5.329,1199,2.854,1239,3.899,1241,3.579,1243,3.579,1812,5.445,2348,3.579,2349,3.579,2350,5.445,2354,3.899,2355,3.899,2436,4.384,2437,7.055,2438,6.123,2439,7.055,2440,7.055,2441,7.055,2442,6.123,2443,4.384,2444,4.384,2445,4.384,2446,4.384,2447,4.384,2448,4.384,2449,4.384,2450,4.384,2451,4.384,2452,4.384,2453,4.384,2454,3.899,2455,6.123,2456,4.384,2457,6.123,2458,4.384,2459,6.123,2460,4.384,2461,4.384,2462,4.384,2463,6.123,2464,4.384]],["title/classes/InitAuthStatus.html",[0,0.251,60,2.437]],["body/classes/InitAuthStatus.html",[0,0.453,1,3.174,2,0.521,3,0.028,4,0.028,5,0.066,6,1.972,7,1.393,8,1.365,9,4.267,10,1.65,11,2.447,12,3.38,13,3.817,14,3.449,15,1.908,16,2.772,17,1.904,18,3.746,19,0.007,20,3.75,21,3.029,22,2.118,23,2.042,24,3.733,25,2.772,26,3.611,27,3.746,28,3.488,29,1.567,30,3.029,31,3.488,32,3.143,33,0.262,34,1.079,35,0.179,36,0.429,37,1.028,38,1.706,39,1.309,40,0.304,41,1.087,42,2.831,43,0.251,45,0.304,46,0.282,47,0.304,49,0.491,50,0.401,51,0.088,52,0.401,53,3.083,54,1.743,55,2.409,56,1.65,57,0.083,58,0.617,59,1.695,60,3.618,61,1.008,62,2.269,63,3.27,64,1.794,65,3.611,66,3.156,67,4.47,68,3.858,69,3.27,70,2.042,71,2.448,72,3.411,73,2.705,74,3.865,75,3.27,76,1.388,77,1.753,78,1.794,79,0.967,80,1.794,81,1.794,82,1.849,83,1.568,84,2.118,85,2.118,86,3.746,87,3.746,88,2.772,89,3.746,90,3.143,91,1.284,92,1.284,93,1.166,94,2.118,95,2.042,96,2.118,97,2.118,98,1.972,99,1.529,100,1.027,101,2.042,102,2.705,103,3.143,104,3.083,105,2.831,106,1.972,107,1.027,108,2.042,109,1.972,110,1.908,111,3.858,112,1.047,113,2.118,114,1.908,115,2.042,116,2.831,117,1.222,118,2.118,119,2.118,120,4.145,121,2.042,122,2.118,123,2.925,124,2.118,125,3.029,126,0.663,127,2.118,128,2.042,129,2.118,130,2.042,131,2.118,132,2.448,133,3.029,134,1.493,135,2.118,136,1.972,137,0.003,138,0.004,139,0.003,216,1.923,2465,5.24,2466,3.532]],["title/classes/InitFilters.html",[0,0.251,657,3.175]],["body/classes/InitFilters.html",[0,0.412,2,0.902,3,0.049,4,0.049,5,0.058,8,1.309,19,0.007,33,0.27,34,1.069,35,0.31,36,0.625,37,0.981,38,1.774,39,1.335,40,0.356,41,1.884,43,0.334,45,0.527,46,0.488,47,0.527,49,0.851,50,0.694,51,0.117,52,0.694,57,0.083,58,1.068,61,1.746,62,3.305,77,1.813,91,1.192,92,1.192,93,1.083,137,0.004,138,0.005,139,0.004,148,1.998,163,1.848,216,2.562,455,2.419,540,4.413,643,4.646,644,4.661,647,5.441,648,3.984,649,3.984,650,4.413,651,3.67,652,4.661,653,3.537,654,4.995,655,5.441,656,3.67,657,5.675,658,6.788,659,5.441,660,4.995,2467,7.634,2468,6.119]],["title/classes/InitTimeline.html",[0,0.251,2469,3.175]],["body/classes/InitTimeline.html",[0,0.422,2,0.938,3,0.051,4,0.051,5,0.061,8,1.327,19,0.007,33,0.271,34,1.088,35,0.323,36,0.64,37,1.004,38,1.805,39,1.353,40,0.37,41,1.958,43,0.34,45,0.548,46,0.508,47,0.548,49,0.885,50,0.721,51,0.09,52,0.721,57,0.084,58,1.111,61,1.815,77,1.857,137,0.005,138,0.006,139,0.005,159,1.07,216,2.607,232,2.626,417,2.764,1756,3.968,2469,6.024,2470,4.846,2471,7.819,2472,6.361,2473,6.953,2474,5.192,2475,5.775,2476,5.656,2477,5.656,2478,5.656,2479,5.192]],["title/classes/Input.html",[0,0.251,152,2.066]],["body/classes/Input.html",[0,0.472,2,0.655,3,0.036,4,0.036,5,0.042,8,0.668,11,1.574,19,0.007,33,0.218,37,0.571,39,1.508,40,0.516,43,0.178,45,0.383,46,0.613,47,0.383,50,0.871,51,0.1,57,0.086,58,1.079,79,1.253,91,1.365,92,1.365,93,1.24,102,1.925,137,0.003,138,0.004,139,0.003,142,2.666,143,3.953,144,3.708,145,5.143,146,3.906,147,2.773,148,2.967,149,2.773,150,2.773,151,1.973,152,3.154,153,2.773,154,2.773,155,2.773,156,2.773,157,2.773,159,0.748,160,2.194,161,1.879,162,2.194,163,1.343,164,2.773,165,2.258,166,1.879,167,2.773,168,2.666,169,2.773,170,2.773,171,2.773,172,2.773,173,2.773,174,2.773,175,2.773,176,2.773,177,3.857,178,1.199,179,3.34,180,2.773,181,3.857,182,1.248,183,1.714,184,3.34,185,2.773,186,1.677,187,1.879,188,1.451,189,1.973,190,2.773,191,2.773,192,2.773,193,2.773,194,2.569,195,2.666,196,2.666,197,3.167,198,4.608,199,1.317,200,1.369,201,2.666,202,2.666,203,2.666,204,1.973,205,4.434,206,4.434,207,3.372,208,4.434,209,4.263,210,4.608,211,4.434,212,4.434,2480,4.445]],["title/injectables/LightCardEffects.html",[618,3.8,689,1.379]],["body/injectables/LightCardEffects.html",[0,0.305,3,0.046,4,0.046,5,0.054,8,0.851,17,1.976,19,0.007,29,1.822,33,0.206,35,0.287,36,0.595,40,0.329,43,0.291,45,0.487,46,0.452,47,0.487,49,0.787,50,0.642,51,0.131,52,0.642,57,0.054,91,0.884,92,0.884,93,0.803,117,2.09,137,0.004,138,0.005,139,0.004,159,1.223,163,2.424,182,1.71,223,2.875,229,2.717,230,4.077,288,1.961,293,2.09,317,1.025,318,1.743,319,2.09,321,1.677,322,1.812,340,1.848,370,4.533,618,5.931,689,2.153,693,2.875,694,2.875,695,3.272,805,3.496,903,2.512,913,2.576,919,4.924,942,3.16,943,4.639,952,4.358,976,5.931,1021,3.272,1022,3.058,1029,4.311,1030,4.311,1255,4.728,1261,4.311,1275,7.136,1288,4.311,1289,4.311,1290,4.311,1362,6.461,2481,8.025,2482,5.659,2483,8.025,2484,5.659,2485,7.266,2486,7.266,2487,7.266,2488,7.266,2489,6.461,2490,7.266,2491,7.266,2492,7.266,2493,6.461,2494,5.659,2495,5.659]],["title/components/ListSettingComponent.html",[268,0.957,435,1.648]],["body/components/ListSettingComponent.html",[0,0.168,3,0.025,4,0.025,5,0.03,17,1.172,19,0.007,29,1.451,33,0.25,34,0.612,35,0.158,36,0.39,40,0.181,43,0.373,45,0.66,46,0.66,47,0.66,49,0.662,50,0.92,51,0.111,52,0.353,57,0.03,61,0.887,79,1.063,100,0.904,102,1.347,107,1.384,112,0.922,117,1.719,137,0.002,138,0.003,139,0.002,145,4.19,146,2.225,148,2.281,151,2.113,152,2.113,159,0.801,162,1.535,182,1.309,197,1.148,199,0.922,200,2.435,209,3.469,216,1.466,268,1.189,269,1.101,270,1.651,271,1.148,272,1.347,273,1.173,274,1.173,276,2.281,277,1.101,278,3.426,280,2.225,282,1.796,288,2.233,291,1.194,292,3.119,293,1.148,309,2.151,310,2.455,317,0.563,318,0.958,321,0.922,322,0.996,328,4.992,329,1.68,330,1.68,383,1.079,387,2.333,397,0.976,398,1.796,399,1.796,400,1.079,401,2.445,402,1.173,403,1.173,404,1.079,405,1.173,406,3.227,407,1.796,408,2.445,409,1.101,410,1.173,411,1.079,412,1.796,413,1.101,414,1.173,415,1.124,416,1.148,417,1.015,418,1.796,419,1.079,420,1.173,421,1.101,422,1.101,423,1.173,424,1.079,425,1.173,426,1.101,427,1.173,428,1.101,429,1.173,430,1.079,431,1.173,432,1.101,433,1.173,434,1.124,435,2.295,436,1.173,437,1.101,438,1.148,439,2.182,440,1.173,441,1.101,442,1.173,443,1.079,444,1.101,445,1.124,446,1.796,447,1.101,448,1.101,449,1.384,450,1.101,451,1.173,452,1.101,453,1.101,454,1.101,455,0.904,456,1.101,457,1.079,458,1.173,459,1.079,460,1.148,461,1.173,495,1.628,653,1.798,743,2.369,827,2.97,1056,2.234,1057,2.369,1058,3.344,1059,4.764,1060,4.406,1061,3.627,1062,3.247,1063,2.855,1064,6.217,1065,3.247,1066,2.855,1067,5.23,1068,4.42,1069,3.344,1070,3.945,1071,4.42,1072,3.247,1073,3.247,1074,3.247,1079,2.121,1081,2.121,1084,3.746,1085,3.945,1086,4.19,1088,3.247,1092,3.945,1094,1.94,1098,2.766,1108,2.121,1308,3.099,1825,6.385,1827,2.234,1828,2.234,1829,2.234,1830,4.233,1835,2.234,1836,2.234,1837,2.234,1838,2.234,1839,2.234,1840,2.234,1841,2.234,1842,2.234,1843,2.234,1844,2.234,1845,2.234,1846,2.234,1847,2.234,1849,2.234,1850,5.321,1851,2.234,1854,3.627,1855,3.886,1856,3.886,2329,3.627,2496,8.274,2497,7.358,2498,5.784,2499,6.481,2500,6.481,2501,3.11,2502,3.11,2503,3.11,2504,3.11,2505,3.11,2506,3.11,2507,4.761,2508,3.11,2509,4.761,2510,3.247,2511,3.11,2512,4.761,2513,4.761,2514,3.11,2515,3.11,2516,4.761,2517,3.11,2518,3.11,2519,3.11,2520,3.11,2521,3.11,2522,3.11,2523,3.11,2524,2.234,2525,2.539,2526,2.539,2527,3.11,2528,3.11,2529,2.766,2530,2.766,2531,2.766,2532,3.11,2533,3.11,2534,4.761]],["title/classes/LoadCard.html",[0,0.251,1285,2.515]],["body/classes/LoadCard.html",[0,0.463,2,0.781,3,0.043,4,0.043,5,0.051,8,1.348,19,0.007,33,0.269,34,1.131,35,0.269,36,0.57,37,0.894,38,1.912,39,1.374,40,0.308,41,1.631,43,0.312,45,0.456,46,0.423,47,0.456,49,0.737,50,0.601,51,0.098,52,0.601,57,0.086,58,0.925,76,1.403,77,1.961,79,0.694,91,1.339,92,1.339,93,1.216,126,1.611,137,0.004,138,0.005,139,0.004,159,1.586,161,2.238,188,1.729,216,2.393,226,2.303,234,1.569,239,2.293,245,2.137,246,1.662,247,1.631,248,1.915,249,1.915,251,1.483,252,1.569,253,1.695,1017,4.662,1284,3.448,1285,4.46,1286,4.662,1287,4.662,1499,3.448,1500,3.804,1502,4.998,1503,3.804,1504,3.804,1505,3.804,1506,3.612,2535,6.959,2536,5.296]],["title/classes/LoadCardFailure.html",[0,0.251,1286,2.792]],["body/classes/LoadCardFailure.html",[0,0.463,2,0.781,3,0.043,4,0.043,5,0.051,8,1.348,19,0.007,33,0.269,34,1.131,35,0.269,36,0.57,37,0.894,38,1.912,39,1.374,40,0.308,41,1.631,43,0.312,45,0.456,46,0.423,47,0.456,49,0.737,50,0.601,51,0.098,52,0.601,57,0.086,58,0.925,76,1.403,77,1.961,79,0.694,91,1.339,92,1.339,93,1.216,126,1.611,137,0.004,138,0.005,139,0.004,159,1.586,161,2.238,188,1.729,216,2.393,226,2.303,234,1.569,239,2.293,245,2.137,246,1.662,247,1.631,248,1.915,249,1.915,251,1.483,252,1.569,253,1.695,1017,4.662,1284,3.448,1285,4.199,1286,4.951,1287,4.662,1499,3.448,1500,3.804,1502,3.804,1503,4.998,1504,3.804,1505,3.804,1506,3.612,2537,6.959,2538,5.296]],["title/classes/LoadCardSuccess.html",[0,0.251,1287,2.792]],["body/classes/LoadCardSuccess.html",[0,0.463,2,0.781,3,0.043,4,0.043,5,0.051,8,1.348,19,0.007,33,0.269,34,1.131,35,0.269,36,0.57,37,0.894,38,1.912,39,1.374,40,0.308,41,1.631,43,0.312,45,0.456,46,0.423,47,0.456,49,0.737,50,0.601,51,0.098,52,0.601,57,0.086,58,0.925,76,1.403,77,1.961,79,0.694,91,1.339,92,1.339,93,1.216,126,1.611,137,0.004,138,0.005,139,0.004,159,1.586,161,2.238,188,1.729,216,2.393,226,2.303,234,1.569,239,2.293,245,2.137,246,1.662,247,1.631,248,1.915,249,1.915,251,1.483,252,1.569,253,1.695,1017,4.662,1284,3.448,1285,4.199,1286,4.662,1287,4.951,1499,3.448,1500,3.804,1502,3.804,1503,3.804,1504,4.998,1505,3.804,1506,3.612,2539,6.959,2540,5.296]],["title/classes/LoadConfig.html",[0,0.251,333,2.792]],["body/classes/LoadConfig.html",[0,0.46,2,0.849,3,0.046,4,0.046,5,0.055,8,1.353,19,0.007,33,0.259,34,1.131,35,0.292,36,0.602,38,1.725,39,1.379,43,0.231,49,0.801,50,0.653,51,0.081,52,0.653,57,0.086,58,1.006,76,1.526,77,1.922,91,1.331,92,1.331,93,1.209,126,1.654,137,0.004,138,0.005,139,0.004,226,2.398,234,1.707,245,2.225,246,1.808,247,1.774,248,2.083,249,2.083,251,1.613,252,1.707,253,1.844,333,5.112,565,5.355,1025,3.75,1211,3.75,1528,5.049,1529,5.049,2158,3.929,2161,4.388,2162,5.598,2163,4.388,2164,4.388,2165,4.138,2541,5.761]],["title/classes/LoadConfigFailure.html",[0,0.251,1528,2.904]],["body/classes/LoadConfigFailure.html",[0,0.454,2,0.817,3,0.045,4,0.045,5,0.053,8,1.34,19,0.007,33,0.269,34,1.118,35,0.281,36,0.587,37,0.921,38,1.9,39,1.365,40,0.322,41,1.707,43,0.319,45,0.478,46,0.443,47,0.478,49,0.771,50,0.629,51,0.078,52,0.629,57,0.085,58,0.968,76,1.469,77,1.887,91,1.312,92,1.312,93,1.192,126,1.634,137,0.004,138,0.005,139,0.004,216,2.447,226,2.355,234,1.643,245,2.185,246,1.74,247,1.707,248,2.005,249,2.005,251,1.553,252,1.643,253,1.775,333,4.766,565,5.314,1025,3.609,1211,3.609,1528,5.242,1529,4.958,2158,3.781,2161,4.224,2162,4.224,2163,5.462,2164,4.224,2165,3.982,2542,7.17,2543,5.544]],["title/classes/LoadConfigSuccess.html",[0,0.251,1529,2.904]],["body/classes/LoadConfigSuccess.html",[0,0.454,2,0.817,3,0.045,4,0.045,5,0.053,8,1.34,19,0.007,33,0.269,34,1.118,35,0.281,36,0.587,37,0.921,38,1.9,39,1.365,40,0.322,41,1.707,43,0.319,45,0.478,46,0.443,47,0.478,49,0.771,50,0.629,51,0.078,52,0.629,57,0.085,58,0.968,76,1.469,77,1.887,91,1.312,92,1.312,93,1.192,126,1.634,137,0.004,138,0.005,139,0.004,216,2.447,226,2.355,234,1.643,245,2.185,246,1.74,247,1.707,248,2.005,249,2.005,251,1.553,252,1.643,253,1.775,333,4.766,565,5.314,1025,3.609,1211,3.609,1528,4.958,1529,5.242,2158,3.781,2161,4.224,2162,4.224,2163,4.224,2164,5.462,2165,3.982,2544,7.17,2545,5.544]],["title/classes/LoadLightCards.html",[0,0.251,224,2.365]],["body/classes/LoadLightCards.html",[0,0.489,2,0.648,3,0.035,4,0.035,5,0.042,8,1.385,12,1.589,19,0.007,33,0.263,34,1.175,35,0.223,36,0.502,38,1.776,39,1.412,40,0.411,43,0.176,49,0.611,50,0.498,51,0.086,52,0.498,57,0.088,58,0.767,76,1.164,77,1.978,79,0.576,91,1.416,92,1.416,93,1.286,126,1.606,134,1.858,137,0.003,138,0.004,139,0.003,159,1.189,213,3.487,214,3.211,215,2.301,219,2.454,220,2.474,221,1.858,222,1.733,223,2.233,224,3.884,225,4.899,226,2.266,227,3.487,228,2.11,229,3.391,230,3.116,231,2.375,232,1.814,233,3.589,234,1.818,235,3.487,236,1.733,237,1.302,238,3.487,239,1.903,240,2.792,241,2.17,242,2.17,243,3.487,244,2.301,245,1.942,246,1.38,247,1.353,248,1.589,249,1.589,250,3.487,251,1.231,252,1.302,253,1.407,254,3.425,255,2.454,256,2.454,257,2.17,258,2.454,259,2.454,260,2.454,261,2.454,262,2.454,263,2.454,264,2.454,265,2.454,266,2.001,267,2.301,2546,4.395]],["title/classes/LoadLightCardsExtendedData.html",[0,0.251,230,2.365]],["body/classes/LoadLightCardsExtendedData.html",[0,0.489,2,0.644,3,0.035,4,0.035,5,0.042,8,1.384,12,1.579,19,0.007,33,0.263,34,1.174,35,0.222,36,0.5,38,1.772,39,1.411,40,0.466,43,0.245,49,0.608,50,0.495,51,0.086,52,0.495,57,0.088,58,0.763,76,1.157,77,1.974,79,0.573,91,1.414,92,1.414,93,1.285,126,1.603,134,1.846,137,0.003,138,0.004,139,0.003,159,1.185,213,3.476,214,3.687,215,2.287,219,2.439,220,2.463,221,1.846,222,1.723,223,2.219,224,3.578,225,4.893,226,2.259,227,3.476,228,2.097,229,3.38,230,3.578,231,2.36,232,1.803,233,3.578,234,1.81,235,3.476,236,1.723,237,1.294,238,3.476,239,1.891,240,2.78,241,2.156,242,2.156,243,3.476,244,2.287,245,1.936,246,1.371,247,1.345,248,1.579,249,1.579,250,3.476,251,1.223,252,1.294,253,1.398,254,2.439,255,2.439,256,2.439,257,2.156,258,3.41,259,2.439,260,2.439,261,2.439,262,2.439,263,2.439,264,2.439,265,2.439,266,1.989,267,2.287,2547,6.107]],["title/classes/LoadLightCardsFailure.html",[0,0.251,233,2.365]],["body/classes/LoadLightCardsFailure.html",[0,0.486,2,0.628,3,0.034,4,0.034,5,0.041,8,1.378,12,1.539,19,0.007,33,0.268,34,1.169,35,0.216,36,0.491,37,0.771,38,1.875,39,1.405,40,0.438,41,1.311,43,0.279,45,0.367,46,0.34,47,0.367,49,0.592,50,0.483,51,0.085,52,0.483,57,0.087,58,0.743,76,1.128,77,1.958,79,0.558,91,1.407,92,1.407,93,1.278,126,1.591,134,1.8,137,0.003,138,0.004,139,0.003,159,1.168,213,3.428,214,3.947,215,2.229,216,2.138,219,2.377,220,2.42,221,1.8,222,1.679,223,2.163,224,3.528,225,4.869,226,2.234,227,3.428,228,2.044,229,3.334,230,3.048,231,2.3,232,1.758,233,3.831,234,1.778,235,3.428,236,1.679,237,1.262,238,3.428,239,1.844,240,2.731,241,2.102,242,2.102,243,3.428,244,2.229,245,1.909,246,1.337,247,1.311,248,1.539,249,1.539,250,3.428,251,1.192,252,1.262,253,1.363,254,2.377,255,2.377,256,2.377,257,2.102,258,2.377,259,3.349,260,2.377,261,2.377,262,2.377,263,2.377,264,2.377,265,2.377,266,1.938,267,2.229,2548,5.998,2549,4.258]],["title/classes/LoadLightCardsSuccess.html",[0,0.251,229,2.235]],["body/classes/LoadLightCardsSuccess.html",[0,0.486,2,0.628,3,0.034,4,0.034,5,0.041,8,1.378,12,1.539,19,0.007,33,0.268,34,1.169,35,0.216,36,0.491,37,0.771,38,1.875,39,1.405,40,0.438,41,1.311,43,0.279,45,0.367,46,0.34,47,0.367,49,0.592,50,0.483,51,0.085,52,0.483,57,0.087,58,0.743,76,1.128,77,1.958,79,0.558,91,1.407,92,1.407,93,1.278,126,1.591,134,1.8,137,0.003,138,0.004,139,0.003,159,1.168,213,3.428,214,3.947,215,2.229,216,2.138,219,2.377,220,2.42,221,1.8,222,1.679,223,2.163,224,3.528,225,4.869,226,2.234,227,3.428,228,2.044,229,3.619,230,3.048,231,2.3,232,1.758,233,3.528,234,1.778,235,3.428,236,1.679,237,1.262,238,3.428,239,1.844,240,2.731,241,2.102,242,2.102,243,3.428,244,2.229,245,1.909,246,1.337,247,1.311,248,1.539,249,1.539,250,3.428,251,1.192,252,1.262,253,1.363,254,2.377,255,2.377,256,3.349,257,2.102,258,2.377,259,2.377,260,2.377,261,2.377,262,2.377,263,2.377,264,2.377,265,2.377,266,1.938,267,2.229,2550,5.998,2551,4.258]],["title/classes/LoadMenu.html",[0,0.251,2174,2.515]],["body/classes/LoadMenu.html",[0,0.464,2,0.66,3,0.036,4,0.036,5,0.043,8,1.379,14,2.09,16,1.985,17,1.102,19,0.007,33,0.255,34,1.125,35,0.227,36,0.508,38,1.896,39,1.362,40,0.414,43,0.249,45,0.614,49,0.622,50,0.507,51,0.087,52,0.507,57,0.085,58,0.781,76,1.645,77,1.989,79,1.01,91,1.341,92,1.341,93,1.218,126,1.645,132,2.09,137,0.003,138,0.004,139,0.003,166,1.891,186,2.343,187,2.624,188,2.027,189,1.985,226,2.113,234,1.325,236,2.812,245,1.96,246,1.404,247,1.377,251,1.253,252,1.325,253,1.432,566,4.723,612,2.586,747,3.623,770,3.467,778,2.683,1013,2.683,1020,2.586,1558,2.791,1577,4.449,1584,4.449,1585,2.791,1586,4.372,1588,3.853,1589,2.586,1590,2.791,1591,3.982,1667,2.342,2169,2.683,2172,2.912,2173,2.683,2174,4.162,2175,3.982,2176,3.982,2177,3.982,2178,3.982,2179,2.791,2180,4.042,2181,2.912,2182,2.912,2183,2.912,2184,2.912,2185,2.683,2186,2.791,2187,4.643,2188,4.643,2189,4.042,2190,2.912,2191,2.912,2192,2.912,2193,2.912,2194,2.791,2552,6.209]],["title/classes/LoadMenuFailure.html",[0,0.251,2176,2.599]],["body/classes/LoadMenuFailure.html",[0,0.46,2,0.643,3,0.035,4,0.035,5,0.042,8,1.373,14,2.039,16,1.936,17,1.074,19,0.007,33,0.264,34,1.118,35,0.221,36,0.5,37,0.784,38,1.948,39,1.355,40,0.355,41,1.343,43,0.282,45,0.656,46,0.348,47,0.376,49,0.607,50,0.495,51,0.086,52,0.495,57,0.084,58,0.762,76,1.617,77,1.974,79,0.999,91,1.332,92,1.332,93,1.21,126,1.635,132,2.039,137,0.003,138,0.004,139,0.003,166,1.844,186,2.302,187,2.579,188,1.992,189,1.936,216,2.167,226,2.085,234,1.293,236,2.775,245,1.934,246,1.37,247,1.343,251,1.222,252,1.293,253,1.397,566,4.711,612,2.522,747,3.575,770,3.407,778,2.617,1013,2.617,1020,2.522,1558,2.722,1577,4.39,1584,4.39,1585,2.722,1586,4.333,1588,3.802,1589,2.522,1590,2.722,1591,3.929,1667,2.284,2169,2.617,2172,2.84,2173,2.617,2174,3.802,2175,3.929,2176,4.255,2177,3.929,2178,3.929,2179,2.722,2180,2.84,2181,3.972,2182,2.84,2183,2.84,2184,2.84,2185,2.617,2186,2.722,2187,4.581,2188,4.581,2189,3.972,2190,2.84,2191,2.84,2192,2.84,2193,2.84,2194,2.722,2553,6.102,2554,4.363]],["title/classes/LoadMenuSuccess.html",[0,0.251,2175,2.599]],["body/classes/LoadMenuSuccess.html",[0,0.46,2,0.643,3,0.035,4,0.035,5,0.042,8,1.373,14,2.039,16,1.936,17,1.074,19,0.007,33,0.264,34,1.118,35,0.221,36,0.5,37,0.784,38,1.948,39,1.355,40,0.355,41,1.343,43,0.282,45,0.656,46,0.348,47,0.376,49,0.607,50,0.495,51,0.086,52,0.495,57,0.084,58,0.762,76,1.617,77,1.974,79,0.999,91,1.332,92,1.332,93,1.21,126,1.635,132,2.039,137,0.003,138,0.004,139,0.003,166,1.844,186,2.302,187,2.579,188,1.992,189,1.936,216,2.167,226,2.085,234,1.293,236,2.775,245,1.934,246,1.37,247,1.343,251,1.222,252,1.293,253,1.397,566,4.711,612,2.522,747,3.575,770,3.407,778,2.617,1013,2.617,1020,2.522,1558,2.722,1577,4.39,1584,4.39,1585,2.722,1586,4.333,1588,3.802,1589,2.522,1590,2.722,1591,3.929,1667,2.284,2169,2.617,2172,2.84,2173,2.617,2174,3.802,2175,4.255,2176,3.929,2177,3.929,2178,3.929,2179,2.722,2180,2.84,2181,2.84,2182,3.972,2183,2.84,2184,2.84,2185,2.617,2186,2.722,2187,4.581,2188,4.581,2189,3.972,2190,2.84,2191,2.84,2192,2.84,2193,2.84,2194,2.722,2555,6.102,2556,4.363]],["title/classes/LoadSettings.html",[0,0.251,2200,2.599]],["body/classes/LoadSettings.html",[0,0.479,2,0.746,3,0.041,4,0.041,5,0.048,8,1.372,19,0.007,33,0.261,34,1.158,35,0.257,36,0.553,38,1.852,39,1.398,43,0.203,49,0.704,50,0.574,51,0.071,52,0.574,57,0.087,58,0.884,66,1.869,76,1.789,77,2.064,91,1.357,92,1.357,93,1.233,126,1.667,137,0.004,138,0.005,139,0.004,226,2.252,234,2.001,245,2.089,246,1.589,247,1.558,248,1.83,249,1.83,251,1.417,252,1.5,253,1.62,548,4.346,1099,4.106,1965,4.106,1966,2.926,2196,3.035,2199,3.295,2200,4.528,2201,4.244,2202,4.742,2203,4.244,2204,4.244,2205,4.397,2206,3.295,2207,3.295,2208,3.295,2209,3.157,2210,3.295,2211,3.295,2212,3.157,2557,5.061]],["title/classes/LoadSettingsFailure.html",[0,0.251,2201,2.599]],["body/classes/LoadSettingsFailure.html",[0,0.475,2,0.721,3,0.039,4,0.039,5,0.047,8,1.362,19,0.007,33,0.268,34,1.149,35,0.248,36,0.541,37,0.848,38,1.932,39,1.389,40,0.284,41,1.507,43,0.3,45,0.421,46,0.391,47,0.421,49,0.681,50,0.555,51,0.069,52,0.555,57,0.086,58,0.854,66,1.807,76,1.749,77,2.044,91,1.344,92,1.344,93,1.221,126,1.652,137,0.004,138,0.005,139,0.004,216,2.301,226,2.214,234,1.956,245,2.054,246,1.536,247,1.507,248,1.769,249,1.769,251,1.37,252,1.45,253,1.566,548,4.329,1099,4.037,1965,4.037,1966,2.829,2196,2.935,2199,3.186,2200,4.172,2201,4.466,2202,4.662,2203,4.172,2204,4.172,2205,3.186,2206,4.298,2207,3.186,2208,3.186,2209,3.053,2210,3.186,2211,3.186,2212,3.053,2558,6.602,2559,4.893]],["title/classes/LoadSettingsSuccess.html",[0,0.251,1965,2.515]],["body/classes/LoadSettingsSuccess.html",[0,0.475,2,0.721,3,0.039,4,0.039,5,0.047,8,1.362,19,0.007,33,0.268,34,1.149,35,0.248,36,0.541,37,0.848,38,1.932,39,1.389,40,0.284,41,1.507,43,0.3,45,0.421,46,0.391,47,0.421,49,0.681,50,0.555,51,0.069,52,0.555,57,0.086,58,0.854,66,1.807,76,1.749,77,2.044,91,1.344,92,1.344,93,1.221,126,1.652,137,0.004,138,0.005,139,0.004,216,2.301,226,2.214,234,1.956,245,2.054,246,1.536,247,1.507,248,1.769,249,1.769,251,1.37,252,1.45,253,1.566,548,4.329,1099,4.037,1965,4.322,1966,2.829,2196,2.935,2199,3.186,2200,4.172,2201,4.172,2202,4.662,2203,4.172,2204,4.172,2205,3.186,2206,3.186,2207,4.298,2208,3.186,2209,3.053,2210,3.186,2211,3.186,2212,3.053,2560,6.602,2561,4.893]],["title/components/LoginComponent.html",[100,1.354,268,0.957]],["body/components/LoginComponent.html",[0,0.223,3,0.033,4,0.033,5,0.039,17,1.831,19,0.007,20,2.098,29,1.712,33,0.243,34,0.754,35,0.209,36,0.481,40,0.341,43,0.355,45,0.356,46,0.594,47,0.356,51,0.126,52,0.468,55,2.634,56,1.929,57,0.039,61,1.178,78,2.098,91,0.645,92,0.645,93,0.586,99,2.957,100,2.162,101,4.299,104,2.897,109,3.277,110,4.018,112,1.223,117,1.904,137,0.003,138,0.004,139,0.003,148,1.916,159,0.988,163,1.247,178,1.584,199,1.223,200,1.271,268,1.404,269,1.462,270,2.036,271,1.525,272,2.957,273,1.558,274,1.558,276,2.693,277,1.462,278,3.508,282,2.215,288,1.584,291,1.472,292,2.932,293,1.525,309,1.831,310,2.688,317,0.748,318,1.271,319,1.525,320,2.305,321,1.223,322,1.322,327,2.688,332,2.816,337,2.387,350,2.476,382,1.525,394,5.574,395,5.202,396,6.072,397,1.296,398,2.215,399,2.215,400,1.432,401,2.806,402,1.558,403,1.558,404,1.432,405,1.558,406,1.462,407,1.558,408,2.806,409,1.462,410,1.558,411,1.432,412,2.215,413,1.462,414,1.558,415,1.493,416,1.525,417,1.348,418,2.215,419,1.432,420,1.558,421,1.462,422,1.462,423,1.558,424,1.432,425,1.558,426,1.462,427,1.558,428,1.462,429,1.558,430,1.432,431,1.558,432,1.462,433,1.558,434,1.493,435,1.462,436,1.558,437,1.462,438,1.525,439,2.577,440,1.558,441,1.462,442,1.558,443,1.432,444,1.462,445,1.493,446,2.215,447,1.462,448,1.462,449,1.707,450,1.462,451,1.558,452,1.462,453,1.462,454,1.462,455,1.707,456,1.462,457,1.432,458,1.558,459,1.432,460,1.525,461,1.558,495,2.162,698,2.576,708,4.018,820,2.098,1027,2.966,1084,4.299,2510,4.657,2562,4.129,2563,6.829,2564,6.829,2565,5.869,2566,7.437,2567,6.829,2568,6.829,2569,6.829,2570,6.829,2571,7.437,2572,7.437,2573,5.869,2574,4.129,2575,4.129,2576,4.129,2577,4.129,2578,4.129,2579,4.129,2580,4.129,2581,4.129,2582,4.129,2583,4.129,2584,4.129,2585,4.129,2586,4.129,2587,4.129,2588,4.129,2589,4.129,2590,4.129,2591,4.129,2592,4.129,2593,4.129,2594,4.129,2595,4.129,2596,4.129,2597,4.129,2598,4.129,2599,5.869,2600,5.869,2601,5.869,2602,5.869,2603,5.869,2604,5.869]],["title/classes/Map.html",[0,0.251,163,1.406]],["body/classes/Map.html",[0,0.398,2,1.088,3,0.059,4,0.059,5,0.07,19,0.007,43,0.296,57,0.07,79,1.12,137,0.005,138,0.006,139,0.005,163,2.581,1035,5.332,2605,7.382,2606,7.382,2607,8.546,2608,7.382]],["title/injectables/MenuEffects.html",[616,3.8,689,1.379]],["body/injectables/MenuEffects.html",[0,0.248,3,0.037,4,0.037,5,0.044,8,1.229,17,2.132,19,0.007,29,1.955,33,0.232,35,0.415,36,0.518,38,1.662,40,0.267,43,0.29,45,0.396,46,0.505,47,0.396,49,0.881,50,0.718,51,0.126,52,0.522,57,0.044,91,0.718,92,0.718,93,0.653,99,3.134,106,4.353,117,1.971,126,1.464,137,0.005,138,0.005,139,0.003,163,1.39,182,1.706,186,2.389,226,2.145,288,1.953,293,1.699,317,0.833,318,1.417,319,1.699,321,1.363,322,1.473,340,1.502,350,3.797,534,2.569,566,3.125,567,5.4,616,5.168,689,1.876,693,2.338,694,2.338,745,5.168,805,3.488,895,4.823,913,2.094,919,4.676,927,5.63,942,3.535,943,4.726,945,5.168,952,4.676,970,4.823,974,4.121,975,4.864,976,6.897,1021,2.66,1022,2.486,1255,4.717,1261,3.505,1278,5.6,1586,3.42,1587,6.933,1588,2.486,1593,3.756,1668,3.756,1906,4.547,2173,2.759,2174,2.486,2175,2.569,2176,2.569,2177,4.041,2178,4.041,2186,3.95,2489,5.63,2493,5.63,2609,4.601,2610,7.797,2611,4.601,2612,6.331,2613,6.331,2614,6.331,2615,6.331,2616,6.331,2617,6.331,2618,6.331,2619,4.601,2620,6.331,2621,6.331,2622,6.331,2623,6.331,2624,6.331,2625,6.331,2626,6.331,2627,6.331,2628,4.601,2629,6.331,2630,6.331,2631,6.331]],["title/interfaces/MenuState.html",[562,2.066,572,3.8]],["body/interfaces/MenuState.html",[3,0.054,4,0.054,5,0.065,19,0.007,33,0.256,35,0.343,36,0.665,51,0.095,57,0.077,79,1.209,126,1.633,137,0.005,138,0.006,139,0.005,148,2.839,178,1.825,183,2.608,187,3.811,197,2.497,370,5.754,562,3.001,563,3.909,566,4.552,572,7.098,1667,3.54,2632,6.762,2633,9.223,2634,6.762,2635,6.762,2636,6.762]],["title/classes/Message.html",[0,0.251,55,1.795]],["body/classes/Message.html",[0,0.369,2,1.009,3,0.066,4,0.055,5,0.065,19,0.007,33,0.194,39,1.339,40,0.475,43,0.274,45,0.589,46,0.546,47,0.589,51,0.096,55,3.491,57,0.078,58,1.194,79,1.145,91,1.068,92,1.068,93,0.97,126,1.285,137,0.005,138,0.006,139,0.005,146,4.435,162,3.376,684,3.819,1027,4.913,2637,6.082,2638,6.84,2639,7.133,2640,6.84,2641,6.84,2642,6.082]],["title/directives/MouseWheelDirective.html",[400,1.615,459,1.615]],["body/directives/MouseWheelDirective.html",[0,0.294,3,0.044,4,0.044,5,0.052,7,2.149,19,0.007,29,1.778,33,0.223,35,0.277,43,0.356,45,0.469,46,0.435,47,0.469,51,0.077,57,0.068,137,0.004,138,0.005,139,0.004,277,1.93,278,2.564,291,1.778,309,1.342,310,2.771,317,0.987,339,3.269,349,3.043,400,2.895,456,1.93,459,2.46,460,2.619,865,3.147,948,5.789,1164,5.094,1165,5.402,1430,6.758,1767,6.882,1772,6.306,1776,6.306,1780,7.696,1784,6.434,1797,4.847,1798,7.009,2026,8.033,2185,3.269,2643,5.45,2644,8.348,2645,7.091,2646,7.091,2647,7.091,2648,7.882,2649,7.882,2650,7.091,2651,7.091,2652,5.45,2653,5.45,2654,5.45,2655,5.45,2656,5.45,2657,5.45,2658,5.45,2659,5.45,2660,7.091,2661,5.45,2662,7.091,2663,7.091,2664,5.45,2665,5.45,2666,7.882,2667,5.45,2668,5.45,2669,5.45,2670,5.45,2671,7.091,2672,8.348,2673,5.45,2674,5.45,2675,5.45,2676,5.45,2677,5.45]],["title/components/MultiSettingsComponent.html",[268,0.957,437,1.648]],["body/components/MultiSettingsComponent.html",[0,0.2,3,0.03,4,0.03,5,0.035,19,0.007,29,1.613,33,0.248,34,0.698,35,0.188,36,0.445,40,0.216,43,0.375,45,0.678,46,0.679,47,0.678,49,0.756,50,0.893,51,0.106,52,0.421,57,0.035,61,1.06,79,0.713,100,1.08,107,1.581,112,1.1,117,1.836,137,0.003,138,0.004,139,0.003,148,1.775,151,2.413,159,0.915,182,1.098,199,1.1,200,1.143,268,1.322,269,1.315,270,1.886,271,1.371,272,1.608,273,1.401,274,1.401,276,2.536,277,1.315,278,3.48,280,2.541,282,2.051,288,2.125,291,1.363,292,2.536,293,1.371,309,2.159,310,2.52,317,0.672,321,1.1,322,1.189,383,1.288,397,1.166,398,2.051,399,2.051,400,1.288,401,2.671,402,1.401,403,1.401,404,1.288,405,1.401,406,3.306,407,2.051,408,2.671,409,1.315,410,1.401,411,1.288,412,2.051,413,1.315,414,1.401,415,1.342,416,1.371,417,1.212,418,2.051,419,1.288,420,1.401,421,1.315,422,1.315,423,1.401,424,1.288,425,1.401,426,1.315,427,1.401,428,1.315,429,1.401,430,1.288,431,1.401,432,1.315,433,1.401,434,1.342,435,1.315,436,1.401,437,2.507,438,3.194,439,2.427,440,1.401,441,1.315,442,1.401,443,1.288,444,1.315,445,1.342,446,2.051,447,1.315,448,1.315,449,1.581,450,1.315,451,1.401,452,1.315,453,1.315,454,1.315,455,1.08,456,1.315,457,1.288,458,1.401,459,1.288,460,1.371,461,1.401,495,1.944,548,3.223,653,2.146,666,4.142,827,3.392,1056,2.667,1058,3.718,1059,4.387,1062,3.708,1063,3.261,1064,6.28,1065,3.708,1066,3.261,1067,5.547,1068,3.708,1069,3.718,1070,4.387,1071,4.829,1072,3.708,1073,3.708,1074,3.708,1079,2.533,1081,2.533,1084,4.093,1085,2.533,1086,3.261,1088,2.533,1092,4.387,1094,2.317,1108,2.533,1308,3.539,1825,6.576,1827,2.667,1828,2.667,1829,2.667,1835,2.667,1836,2.667,1837,2.667,1838,2.667,1839,2.667,1840,2.667,1841,2.667,1842,2.667,1843,2.667,1844,2.667,1845,2.667,1846,2.667,1847,2.667,1849,2.667,1850,5.393,1851,2.667,2510,2.533,2524,2.667,2525,3.031,2526,3.031,2678,7.535,2679,6.151,2680,3.302,2681,5.719,2682,4.438,2683,6.296,2684,3.713,2685,3.713,2686,3.713,2687,3.713,2688,3.713,2689,3.713,2690,3.302]],["title/components/NavbarComponent.html",[112,1.379,268,0.957]],["body/components/NavbarComponent.html",[0,0.205,3,0.031,4,0.045,5,0.053,17,1.606,19,0.007,33,0.232,34,0.711,35,0.281,36,0.453,37,0.489,40,0.221,43,0.357,45,0.477,46,0.607,47,0.477,49,0.996,50,0.812,51,0.126,52,0.432,57,0.036,61,1.086,72,2.732,79,0.725,100,1.106,107,1.106,111,3.999,112,2.122,114,2.99,117,1.852,137,0.003,138,0.004,139,0.003,148,1.242,159,0.931,166,1.608,182,0.768,187,1.608,194,3.199,197,1.405,199,1.933,200,1.172,207,2.232,237,1.128,268,1.341,269,1.347,270,1.92,271,1.405,272,1.648,273,1.436,274,1.436,276,2.572,277,1.347,278,3.487,280,2.586,282,2.088,285,5.324,288,1.76,291,1.388,292,2.824,293,1.405,302,3.106,309,1.764,310,2.293,317,0.689,318,1.172,319,1.405,320,2.124,321,1.128,322,1.218,323,3.106,325,3.384,340,1.242,349,4.433,350,3.319,354,3.106,376,1.608,377,1.571,378,1.608,379,1.608,380,1.608,381,1.608,382,1.405,383,1.32,384,1.608,385,1.608,386,1.608,387,1.535,388,1.608,389,1.571,390,1.608,391,1.608,392,1.608,393,1.608,397,1.194,398,2.088,399,2.088,400,1.32,401,2.702,402,1.436,403,1.436,404,1.32,405,1.436,406,1.347,407,1.436,408,2.702,409,1.347,410,1.436,411,1.32,412,2.088,413,1.347,414,1.436,415,1.376,416,1.405,417,1.242,418,2.088,419,1.32,420,1.436,421,1.347,422,1.347,423,1.436,424,1.32,425,1.436,426,1.347,427,1.436,428,1.347,429,1.436,430,1.32,431,1.436,432,1.347,433,1.436,434,1.376,435,1.347,436,1.436,437,1.347,438,1.405,439,2.461,440,1.436,441,1.347,442,1.436,443,1.32,444,1.347,445,1.376,446,2.088,447,1.347,448,1.347,449,1.609,450,1.347,451,1.436,452,1.347,453,1.347,454,1.347,455,1.106,456,1.347,457,1.32,458,1.436,459,1.32,460,1.405,461,1.436,501,2.595,556,7.061,566,1.878,695,2.2,702,2.124,703,2.056,820,2.812,1166,3.603,1177,3.319,1180,3.775,1204,3.384,1205,3.384,1586,3.524,1591,2.124,1593,3.106,1667,1.992,2174,2.99,2431,3.384,2691,3.805,2692,6.523,2693,5.534,2694,6.523,2695,5.534,2696,5.534,2697,6.523,2698,5.534,2699,7.162,2700,6.523,2701,5.534,2702,3.805,2703,3.805,2704,3.805,2705,3.805,2706,3.805,2707,3.805,2708,3.805,2709,3.805,2710,3.805,2711,3.805,2712,3.805,2713,3.805,2714,3.805,2715,3.805,2716,3.805,2717,3.805,2718,3.805,2719,3.805,2720,3.805,2721,3.805,2722,3.805,2723,3.805,2724,3.805,2725,3.805,2726,3.805,2727,3.805,2728,3.805,2729,3.805,2730,3.805,2731,3.805,2732,5.534,2733,5.534,2734,5.534,2735,5.534,2736,5.534,2737,5.534,2738,5.534,2739,3.805,2740,5.846,2741,7.162,2742,3.805,2743,5.534,2744,5.534,2745,5.534,2746,3.805,2747,3.805,2748,4.921,2749,5.534,2750,5.534,2751,3.805,2752,3.805]],["title/components/NoSelectionComponent.html",[268,0.957,441,1.648]],["body/components/NoSelectionComponent.html",[0,0.292,3,0.044,4,0.044,5,0.052,19,0.007,33,0.2,34,0.907,35,0.275,40,0.457,43,0.283,46,0.627,51,0.076,57,0.052,61,1.546,100,1.575,112,1.605,137,0.004,138,0.005,139,0.004,159,1.188,199,1.605,200,1.668,241,4.111,268,1.616,269,1.918,270,2.45,271,2,273,2.044,274,2.044,276,3.099,277,1.918,278,3.571,282,2.665,291,1.771,292,3.284,309,1.334,310,1.734,317,0.981,397,1.701,398,2.665,399,2.665,400,1.879,401,3.142,402,2.044,403,2.044,404,1.879,405,2.044,406,1.918,407,2.044,408,3.142,409,1.918,410,2.044,411,1.879,412,2.665,413,1.918,414,2.044,415,1.959,416,2,417,1.769,418,2.665,419,1.879,420,2.044,421,1.918,422,1.918,423,2.044,424,1.879,425,2.044,426,1.918,427,2.044,428,1.918,429,2.044,430,1.879,431,2.044,432,1.918,433,2.044,434,1.959,435,1.918,436,2.044,437,1.918,438,2,439,2.965,440,2.044,441,2.949,442,2.044,443,1.879,444,1.918,445,1.959,446,2.665,447,1.918,448,1.918,449,2.054,450,1.918,451,2.044,452,1.918,453,1.918,454,1.918,455,1.575,456,1.918,457,1.879,458,2.044,459,1.879,460,2,461,2.044,666,5.381,2003,6.989,2753,7.859,2754,5.417,2755,7.063,2756,5.417,2757,5.417]],["title/classes/ParameterListItem.html",[0,0.251,210,2.792]],["body/classes/ParameterListItem.html",[0,0.477,2,0.683,3,0.037,4,0.037,5,0.044,8,0.696,11,1.64,19,0.007,33,0.206,37,0.595,39,1.511,40,0.521,43,0.186,45,0.399,46,0.508,47,0.399,50,0.887,51,0.102,57,0.086,58,1.11,79,1.232,91,1.379,92,1.379,93,1.253,102,2.005,137,0.003,138,0.005,139,0.003,142,2.777,144,3.814,145,5.077,146,3.956,147,2.889,148,2.925,149,2.889,150,2.889,151,2.055,152,2.822,153,2.889,154,2.889,155,2.889,156,2.889,157,2.889,159,0.779,160,2.286,161,1.957,162,2.286,163,1.399,164,2.889,165,2.353,166,1.957,167,2.889,168,2.777,169,2.889,170,2.889,171,2.889,172,2.889,173,2.889,174,2.889,175,2.889,176,2.889,177,3.967,178,1.25,179,3.436,180,2.889,181,3.967,182,1.284,183,1.786,184,3.436,185,2.889,186,1.747,187,1.957,188,1.512,189,2.055,190,2.889,191,2.889,192,2.889,193,2.889,194,2.677,195,2.777,196,2.777,197,3.202,198,3.814,199,1.372,200,1.426,201,2.777,202,2.777,203,2.777,204,2.055,205,2.889,206,2.889,207,2.565,208,2.889,209,2.777,210,4.356,211,2.889,212,2.889,2758,4.631,2759,4.631]],["title/classes/PatchSettings.html",[0,0.251,1099,2.515]],["body/classes/PatchSettings.html",[0,0.475,2,0.721,3,0.039,4,0.039,5,0.047,8,1.362,19,0.007,33,0.268,34,1.149,35,0.248,36,0.541,37,0.848,38,1.932,39,1.389,40,0.284,41,1.507,43,0.3,45,0.421,46,0.391,47,0.421,49,0.681,50,0.555,51,0.069,52,0.555,57,0.086,58,0.854,66,1.807,76,1.749,77,2.044,91,1.344,92,1.344,93,1.221,126,1.652,137,0.004,138,0.005,139,0.004,216,2.301,226,2.214,234,1.956,245,2.054,246,1.536,247,1.507,248,1.769,249,1.769,251,1.37,252,1.45,253,1.566,548,4.329,1099,4.322,1965,4.037,1966,2.829,2196,2.935,2199,3.186,2200,4.172,2201,4.172,2202,4.662,2203,4.172,2204,4.172,2205,3.186,2206,3.186,2207,3.186,2208,4.298,2209,3.053,2210,3.186,2211,3.186,2212,3.053,2760,6.602,2761,4.893]],["title/classes/PatchSettingsFailure.html",[0,0.251,2204,2.599]],["body/classes/PatchSettingsFailure.html",[0,0.475,2,0.721,3,0.039,4,0.039,5,0.047,8,1.362,19,0.007,33,0.268,34,1.149,35,0.248,36,0.541,37,0.848,38,1.932,39,1.389,40,0.284,41,1.507,43,0.3,45,0.421,46,0.391,47,0.421,49,0.681,50,0.555,51,0.069,52,0.555,57,0.086,58,0.854,66,1.807,76,1.749,77,2.044,91,1.344,92,1.344,93,1.221,126,1.652,137,0.004,138,0.005,139,0.004,216,2.301,226,2.214,234,1.956,245,2.054,246,1.536,247,1.507,248,1.769,249,1.769,251,1.37,252,1.45,253,1.566,548,4.329,1099,4.037,1965,4.037,1966,2.829,2196,2.935,2199,3.186,2200,4.172,2201,4.172,2202,4.662,2203,4.172,2204,4.466,2205,3.186,2206,3.186,2207,3.186,2208,3.186,2209,3.053,2210,4.298,2211,3.186,2212,3.053,2762,6.602,2763,4.893]],["title/classes/PatchSettingsSuccess.html",[0,0.251,2203,2.599]],["body/classes/PatchSettingsSuccess.html",[0,0.475,2,0.721,3,0.039,4,0.039,5,0.047,8,1.362,19,0.007,33,0.268,34,1.149,35,0.248,36,0.541,37,0.848,38,1.932,39,1.389,40,0.284,41,1.507,43,0.3,45,0.421,46,0.391,47,0.421,49,0.681,50,0.555,51,0.069,52,0.555,57,0.086,58,0.854,66,1.807,76,1.749,77,2.044,91,1.344,92,1.344,93,1.221,126,1.652,137,0.004,138,0.005,139,0.004,216,2.301,226,2.214,234,1.956,245,2.054,246,1.536,247,1.507,248,1.769,249,1.769,251,1.37,252,1.45,253,1.566,548,4.329,1099,4.037,1965,4.037,1966,2.829,2196,2.935,2199,3.186,2200,4.172,2201,4.172,2202,4.662,2203,4.466,2204,4.172,2205,3.186,2206,3.186,2207,3.186,2208,3.186,2209,3.053,2210,3.186,2211,4.298,2212,3.053,2764,6.602,2765,4.893]],["title/classes/PayloadForSuccessfulAuthentication.html",[0,0.251,42,2.515]],["body/classes/PayloadForSuccessfulAuthentication.html",[0,0.447,1,3.076,2,0.494,3,0.027,4,0.027,5,0.064,6,1.871,7,1.322,8,1.343,9,4.207,10,1.566,11,2.384,12,3.359,13,3.743,14,3.373,15,1.811,16,2.687,17,1.868,18,3.631,19,0.007,20,3.668,21,2.912,22,2.01,23,1.937,24,3.638,25,2.687,26,3.5,27,3.631,28,3.38,29,1.518,30,2.912,31,3.38,32,3.022,33,0.26,34,1.04,35,0.17,36,0.413,37,1.164,38,1.539,39,1.24,40,0.293,42,3.271,43,0.316,45,0.289,46,0.267,47,0.622,51,0.085,52,0.38,53,3.743,54,1.654,55,2.335,56,1.566,57,0.082,58,0.585,59,1.609,60,3.17,61,0.956,62,2.182,63,3.17,64,1.703,65,3.5,66,3.115,67,4.384,68,3.759,69,3.17,70,1.937,71,2.354,72,3.324,73,2.621,74,3.78,75,3.17,76,1.604,77,1.714,78,3.421,79,1.188,80,3.668,81,3.668,82,3.78,83,2.988,84,2.01,85,2.01,86,3.022,87,3.022,88,2.236,89,3.022,90,2.01,91,1.264,92,1.264,93,1.148,94,2.01,95,1.937,96,2.01,97,2.01,98,1.871,99,1.451,100,0.974,101,1.937,102,2.621,103,3.022,104,2.988,105,2.722,106,1.871,107,0.974,108,1.937,109,1.871,110,1.811,111,3.759,112,0.993,113,2.01,114,1.811,115,1.937,116,2.722,117,1.175,118,2.01,119,2.01,120,4.038,121,1.937,122,2.01,123,2.813,124,2.01,125,2.912,126,0.629,127,2.01,128,1.937,129,2.01,130,1.937,131,2.01,132,2.354,133,2.912,134,1.416,135,2.01,136,1.871,137,0.002,138,0.004,139,0.002,684,2.813,909,5.496,910,5.496,2766,3.351,2767,3.351,2768,3.351,2769,3.351,2770,3.351,2771,3.351,2772,3.351,2773,3.351]],["title/classes/Process.html",[0,0.251,179,2.515]],["body/classes/Process.html",[0,0.477,2,0.685,3,0.037,4,0.037,5,0.044,8,0.699,11,1.646,19,0.007,33,0.206,37,0.597,39,1.512,40,0.521,43,0.186,45,0.4,46,0.509,47,0.4,50,0.723,51,0.103,57,0.087,58,1.113,79,1.219,91,1.38,92,1.38,93,1.254,102,2.013,137,0.003,138,0.005,139,0.003,142,2.788,144,3.824,145,4.921,146,3.659,147,2.9,148,2.928,149,2.9,150,2.9,151,2.063,152,2.83,153,2.9,154,2.9,155,2.9,156,2.9,157,2.9,159,0.782,160,2.295,161,1.965,162,2.295,163,1.404,164,4.54,165,2.362,166,1.965,167,2.9,168,2.788,169,2.9,170,2.9,171,2.9,172,2.9,173,2.9,174,2.9,175,2.9,176,2.9,177,3.978,178,1.255,179,3.932,180,2.9,181,3.978,182,1.288,183,1.793,184,3.445,185,2.9,186,1.754,187,1.965,188,1.518,189,2.063,190,2.9,191,2.9,192,2.9,193,2.9,194,2.687,195,2.788,196,2.788,197,3.205,198,3.824,199,1.378,200,1.431,201,2.788,202,2.788,203,2.788,204,2.063,205,2.9,206,2.9,207,2.572,208,2.9,209,2.788,210,3.824,211,2.9,212,2.9,684,2.596,2774,4.649,2775,4.649,2776,4.649]],["title/classes/RejectLogIn.html",[0,0.251,69,2.437]],["body/classes/RejectLogIn.html",[0,0.449,1,3.113,2,0.504,3,0.028,4,0.028,5,0.069,6,1.909,7,1.348,8,1.367,9,4.373,10,1.598,11,2.578,12,3.379,13,3.909,14,3.402,15,1.847,16,3.019,17,2.005,18,4.079,19,0.007,20,3.882,21,3.542,22,2.051,23,1.977,24,3.934,25,3.019,26,3.931,27,4.079,28,3.797,29,1.706,30,3.542,31,3.797,32,3.068,33,0.262,34,1.07,35,0.173,36,0.419,37,1.017,38,1.688,39,1.299,40,0.297,41,1.053,42,2.763,43,0.246,45,0.295,46,0.273,47,0.295,49,0.476,50,0.388,51,0.086,52,0.388,53,3.025,54,1.688,55,2.623,56,1.598,57,0.082,58,0.597,59,1.641,60,3.208,61,0.976,62,2.215,63,3.208,64,1.737,65,3.542,66,3.131,67,4.417,68,3.797,69,3.561,70,1.977,71,2.39,72,3.357,73,2.653,74,3.812,75,3.208,76,1.355,77,1.729,78,1.737,79,0.954,80,1.737,81,1.737,82,1.79,83,1.518,84,2.051,85,2.051,86,3.068,87,3.068,88,2.27,89,3.068,90,2.051,91,1.271,92,1.271,93,1.155,94,2.051,95,1.977,96,2.051,97,2.051,98,1.909,99,1.48,100,0.994,101,1.977,102,2.945,103,3.068,104,3.357,105,2.763,106,1.909,107,0.994,108,1.977,109,1.909,110,1.847,111,3.797,112,1.013,113,2.051,114,1.847,115,1.977,116,3.31,117,1.429,118,3.068,119,3.068,120,4.367,121,2.957,122,3.068,123,3.421,124,3.068,125,3.931,126,0.642,127,2.051,128,1.977,129,2.051,130,1.977,131,2.051,132,2.39,133,2.957,134,1.445,135,2.051,136,1.909,137,0.002,138,0.004,139,0.002,216,1.887,2777,5.115,2778,3.419]],["title/classes/RemoveLightCard.html",[0,0.251,250,2.298]],["body/classes/RemoveLightCard.html",[0,0.486,2,0.628,3,0.034,4,0.034,5,0.041,8,1.378,12,1.539,19,0.007,33,0.268,34,1.169,35,0.216,36,0.491,37,0.771,38,1.875,39,1.405,40,0.438,41,1.311,43,0.279,45,0.367,46,0.34,47,0.367,49,0.592,50,0.483,51,0.085,52,0.483,57,0.087,58,0.743,76,1.128,77,1.958,79,0.558,91,1.407,92,1.407,93,1.278,126,1.591,134,1.8,137,0.003,138,0.004,139,0.003,159,1.168,213,3.428,214,3.947,215,2.229,216,2.138,219,2.377,220,2.42,221,1.8,222,1.679,223,2.163,224,3.528,225,4.869,226,2.234,227,3.428,228,2.044,229,3.334,230,3.048,231,2.3,232,1.758,233,3.528,234,1.778,235,3.428,236,1.679,237,1.262,238,3.428,239,1.844,240,2.731,241,2.102,242,2.102,243,3.428,244,2.229,245,1.909,246,1.337,247,1.311,248,1.539,249,1.539,250,3.722,251,1.192,252,1.262,253,1.363,254,2.377,255,2.377,256,2.377,257,2.102,258,2.377,259,2.377,260,2.377,261,2.377,262,2.377,263,2.377,264,2.377,265,3.349,266,1.938,267,2.229,2779,5.998,2780,4.258]],["title/classes/RouterStateUrl.html",[0,0.251,579,3.546]],["body/classes/RouterStateUrl.html",[0,0.373,2,0.774,3,0.042,4,0.062,5,0.05,7,2.07,11,2.74,13,4.061,19,0.007,29,1.316,33,0.149,34,0.674,39,1.186,40,0.402,43,0.211,45,0.736,46,0.419,47,0.452,51,0.097,57,0.074,79,1.014,88,3.071,91,0.819,92,0.819,93,0.744,117,1.805,137,0.004,138,0.005,139,0.004,178,2.22,182,1.397,186,3.313,204,3.071,232,2.856,251,2.304,288,1.416,309,1.704,449,2.012,534,2.93,567,4.316,578,3.58,579,5.895,641,4.284,747,3.515,770,3.863,780,6.296,840,4.719,865,2.329,1038,3.999,1589,4.756,1594,3.998,1595,4.667,1596,6.715,1599,4.667,1600,6.152,1602,4.667,1603,6.715,1605,4.667,1606,4.667,1607,7.808,1608,4.667,1609,5.647,1610,6.152,1611,7.167,1612,6.152,1613,6.152,1614,6.715,1615,6.152,1616,6.152,1617,6.152,1618,6.152,1619,6.152,1620,6.152,1621,6.152,1622,4.667,1623,4.667,1624,4.667,1625,4.667,1626,4.667,1627,4.667,1628,4.667,2781,5.249,2782,5.249]],["title/classes/SelectLightCard.html",[0,0.251,235,2.298]],["body/classes/SelectLightCard.html",[0,0.486,2,0.628,3,0.034,4,0.034,5,0.041,8,1.378,12,1.539,19,0.007,33,0.268,34,1.169,35,0.216,36,0.491,37,0.771,38,1.875,39,1.405,40,0.438,41,1.311,43,0.279,45,0.367,46,0.34,47,0.367,49,0.592,50,0.483,51,0.085,52,0.483,57,0.087,58,0.743,76,1.128,77,1.958,79,0.558,91,1.407,92,1.407,93,1.278,126,1.591,134,1.8,137,0.003,138,0.004,139,0.003,159,1.168,213,3.428,214,3.947,215,2.229,216,2.138,219,2.377,220,2.42,221,1.8,222,1.679,223,2.163,224,3.528,225,4.869,226,2.234,227,3.428,228,2.044,229,3.334,230,3.048,231,2.3,232,1.758,233,3.528,234,1.778,235,3.722,236,1.679,237,1.262,238,3.428,239,1.844,240,2.731,241,2.102,242,2.102,243,3.428,244,2.229,245,1.909,246,1.337,247,1.311,248,1.539,249,1.539,250,3.428,251,1.192,252,1.262,253,1.363,254,2.377,255,2.377,256,2.377,257,2.102,258,2.377,259,2.377,260,3.349,261,2.377,262,2.377,263,2.377,264,2.377,265,2.377,266,1.938,267,2.229,2783,5.998,2784,4.258]],["title/classes/SelectMenuLink.html",[0,0.251,1588,2.515]],["body/classes/SelectMenuLink.html",[0,0.455,2,0.619,3,0.034,4,0.034,5,0.04,7,1.655,8,1.375,14,2.775,16,2.636,17,1.462,19,0.007,33,0.263,34,1.107,35,0.213,36,0.486,37,0.763,38,1.95,39,1.343,40,0.345,41,1.292,43,0.276,45,0.681,46,0.335,47,0.362,49,0.584,50,0.476,51,0.084,52,0.476,57,0.084,58,0.733,76,1.573,77,1.949,79,0.982,91,1.317,92,1.317,93,1.197,126,1.619,132,2.775,137,0.003,138,0.004,139,0.003,166,2.51,186,2.241,187,2.51,188,2.446,189,2.636,216,2.122,226,2.042,234,1.244,236,2.717,245,1.894,246,1.318,247,1.292,251,1.175,252,1.244,253,1.344,566,4.749,612,3.433,747,3.806,770,3.315,778,2.517,1013,3.561,1020,3.433,1558,3.705,1577,4.299,1584,4.674,1585,3.705,1586,4.434,1588,4.047,1589,3.433,1590,3.705,1591,4.414,1667,2.198,2169,2.517,2172,2.733,2173,2.517,2174,3.723,2175,3.847,2176,3.847,2177,3.847,2178,3.847,2179,2.619,2180,2.733,2181,2.733,2182,2.733,2183,3.866,2184,3.866,2185,3.561,2186,3.705,2187,4.486,2188,4.486,2189,3.866,2190,2.733,2191,2.733,2192,2.733,2193,2.733,2194,2.619,2785,5.938,2786,4.197]],["title/classes/SelectMenuLinkFailure.html",[0,0.251,2178,2.599]],["body/classes/SelectMenuLinkFailure.html",[0,0.458,2,0.632,3,0.035,4,0.035,5,0.041,7,1.691,8,1.38,14,2.004,16,1.903,17,1.056,19,0.007,33,0.264,34,1.113,35,0.218,36,0.494,37,0.774,38,1.957,39,1.349,40,0.35,41,1.321,43,0.28,45,0.686,46,0.342,47,0.369,49,0.597,50,0.486,51,0.085,52,0.486,57,0.084,58,0.749,76,1.597,77,1.963,79,0.991,91,1.325,92,1.325,93,1.204,126,1.655,132,2.004,137,0.003,138,0.004,139,0.003,166,1.813,186,2.275,187,2.548,188,1.968,189,1.903,216,2.147,226,2.066,234,1.271,236,2.749,245,1.917,246,1.346,247,1.321,251,1.201,252,1.271,253,1.373,566,4.715,612,2.479,747,3.843,770,3.893,778,2.572,1013,2.572,1020,2.479,1558,2.676,1577,4.719,1584,4.719,1585,2.676,1586,4.305,1588,3.767,1589,2.479,1590,2.676,1591,4.223,1667,2.245,2169,2.572,2172,2.792,2173,2.572,2174,3.767,2175,3.893,2176,3.893,2177,3.893,2178,4.223,2179,2.676,2180,2.792,2181,2.792,2182,2.792,2183,2.792,2184,2.792,2185,2.572,2186,2.676,2187,4.924,2188,4.924,2189,3.925,2190,2.792,2191,2.792,2192,3.925,2193,3.925,2194,2.676,2787,6.029,2788,4.289]],["title/classes/SelectMenuLinkSuccess.html",[0,0.251,2177,2.599]],["body/classes/SelectMenuLinkSuccess.html",[0,0.458,2,0.63,3,0.034,4,0.034,5,0.041,7,1.685,8,1.379,14,1.997,16,1.897,17,1.052,19,0.007,33,0.263,34,1.112,35,0.217,36,0.493,37,0.773,38,1.956,39,1.348,40,0.349,41,1.316,43,0.279,45,0.685,46,0.341,47,0.368,49,0.594,50,0.485,51,0.085,52,0.485,57,0.084,58,0.746,76,1.593,77,1.961,79,0.99,91,1.324,92,1.324,93,1.203,126,1.626,132,1.997,137,0.003,138,0.004,139,0.003,166,1.806,186,2.849,187,2.542,188,1.963,189,1.897,216,2.142,226,2.062,234,1.266,236,2.744,245,1.913,246,1.341,247,1.316,251,1.197,252,1.266,253,1.368,566,4.714,612,2.47,747,3.837,770,3.885,778,3.607,1013,2.563,1020,2.47,1558,2.666,1577,4.711,1584,4.711,1585,2.666,1586,4.46,1588,3.759,1589,2.47,1590,2.666,1591,3.885,1667,2.237,2169,2.563,2172,2.782,2173,2.563,2174,3.759,2175,3.885,2176,3.885,2177,4.216,2178,3.885,2179,2.666,2180,2.782,2181,2.782,2182,2.782,2183,2.782,2184,2.782,2185,2.563,2186,2.666,2187,4.916,2188,4.916,2189,4.916,2190,3.915,2191,2.782,2192,2.782,2193,2.782,2194,2.666,2789,6.014,2790,4.273]],["title/modules/ServicesModule.html",[462,1.922,475,3.344]],["body/modules/ServicesModule.html",[0,0.278,3,0.041,4,0.055,5,0.065,19,0.007,29,1.293,37,0.662,40,0.3,43,0.207,47,0.589,51,0.134,57,0.049,73,2.233,107,1.499,126,0.969,137,0.004,138,0.005,139,0.004,182,1.041,204,3.035,237,1.528,291,1.293,294,6.276,309,1.27,317,0.934,338,4.586,364,3.928,376,2.18,377,2.129,378,2.18,379,2.18,380,2.18,381,2.18,382,1.904,383,1.789,384,2.18,385,2.18,386,2.18,387,2.08,388,2.18,389,2.129,390,2.18,391,2.18,392,2.18,393,2.18,397,1.619,438,1.904,462,2.129,463,3.704,464,2.476,465,2.879,466,3.093,467,2.981,468,4.601,469,2.62,475,7.016,477,3.953,478,3.093,480,2.7,484,4.017,488,2.981,489,4.266,492,2.981,527,3.928,528,3.928,651,3.093,696,4.664,697,3.928,708,4.72,820,2.62,921,5.688,1112,4.586,1181,5.451,1199,3.357,1255,4.878,1261,3.928,1431,4.209,1483,6.262,1485,6.262,1511,6.276,1527,4.586,1916,6.276,2791,4.586,2792,4.586,2793,6.276,2794,6.656,2795,5.157,2796,5.157,2797,6.838,2798,6.838,2799,5.157,2800,5.157,2801,4.586,2802,6.838,2803,5.157]],["title/classes/SetCardDataTimeline.html",[0,0.251,2475,3.175]],["body/classes/SetCardDataTimeline.html",[0,0.422,2,0.938,3,0.051,4,0.051,5,0.061,8,1.327,19,0.007,33,0.271,34,1.088,35,0.323,36,0.64,37,1.004,38,1.805,39,1.353,40,0.37,41,1.958,43,0.34,45,0.548,46,0.508,47,0.548,49,0.885,50,0.721,51,0.09,52,0.721,57,0.084,58,1.111,61,1.815,77,1.857,137,0.005,138,0.006,139,0.005,159,1.07,216,2.607,232,2.626,417,2.764,1756,3.968,2469,5.775,2470,4.846,2473,5.656,2474,5.192,2475,6.024,2476,5.656,2477,6.953,2478,5.656,2479,5.192,2804,7.819,2805,6.361]],["title/components/SettingsComponent.html",[268,0.957,443,1.615]],["body/components/SettingsComponent.html",[0,0.273,3,0.041,4,0.041,5,0.048,17,1.997,19,0.007,33,0.239,34,0.868,35,0.257,36,0.553,40,0.294,43,0.325,45,0.436,46,0.647,47,0.436,51,0.119,52,0.574,57,0.048,61,1.444,100,1.472,112,1.5,117,1.891,137,0.004,138,0.005,139,0.004,159,1.136,199,1.5,200,1.558,268,1.563,269,1.792,270,2.342,271,1.869,272,2.191,273,1.91,274,1.91,276,2.997,277,1.792,278,3.557,280,3.156,282,2.548,291,1.694,292,3.198,293,1.869,309,1.246,310,1.62,317,0.917,318,1.558,321,1.5,322,1.62,337,2.926,340,1.652,397,1.589,398,2.548,399,2.548,400,1.755,401,3.06,402,1.91,403,1.91,404,1.755,405,1.91,406,1.792,407,1.91,408,3.06,409,1.792,410,1.91,411,1.755,412,2.548,413,1.792,414,1.91,415,1.83,416,1.869,417,1.652,418,2.548,419,1.755,420,1.91,421,1.792,422,1.792,423,1.91,424,1.755,425,1.91,426,1.792,427,1.91,428,1.792,429,1.91,430,1.755,431,1.91,432,1.792,433,1.91,434,1.83,435,1.792,436,1.91,437,1.792,438,1.869,439,2.868,440,1.91,441,1.792,442,1.91,443,2.813,444,1.792,445,1.83,446,2.548,447,1.792,448,1.792,449,1.964,450,1.792,451,1.91,452,1.792,453,1.792,454,1.792,455,1.472,456,1.792,457,1.755,458,1.91,459,1.755,460,1.869,461,1.91,548,3.074,698,3.157,2681,6.759,2682,5.513,2806,5.061,2807,5.145,2808,7.6,2809,6.753,2810,5.061,2811,5.061,2812,5.061,2813,5.061,2814,5.061,2815,5.061,2816,5.061,2817,5.061,2818,5.061]],["title/injectables/SettingsEffects.html",[629,3.8,689,1.379]],["body/injectables/SettingsEffects.html",[0,0.272,1,2.56,3,0.041,4,0.041,5,0.048,8,0.757,17,2.183,19,0.007,29,2.03,33,0.229,35,0.256,36,0.552,40,0.293,43,0.325,45,0.434,46,0.402,47,0.434,49,1.055,50,0.86,51,0.128,52,0.572,57,0.048,59,2.419,91,0.787,92,0.787,93,0.715,99,3.653,117,2.025,137,0.004,138,0.005,139,0.004,163,1.522,182,1.36,226,1.996,288,1.817,293,1.861,317,0.913,318,1.552,319,1.861,320,2.814,321,1.493,322,1.613,340,1.645,548,3.685,629,5.497,689,1.996,693,2.56,694,2.56,805,2.78,903,2.237,913,2.294,919,4.788,938,6.608,942,4.235,943,5.123,952,4.039,970,6.167,974,5.27,975,5.05,1021,2.913,1022,2.723,1099,4.373,1100,4.114,1278,4.837,1288,3.839,1289,3.839,1290,3.839,1379,5.13,1449,5.13,1520,5.988,1521,5.988,1965,2.723,1966,2.913,2200,4.846,2201,2.814,2203,2.814,2204,2.814,2793,5.815,2801,4.481,2819,5.039,2820,7.584,2821,5.039,2822,6.734,2823,6.734,2824,6.734,2825,6.734,2826,6.734,2827,5.039,2828,6.734,2829,5.039,2830,6.734,2831,6.734,2832,6.734,2833,6.734,2834,6.734,2835,5.039]],["title/modules/SettingsModule.html",[462,1.922,2836,3.546]],["body/modules/SettingsModule.html",[0,0.288,3,0.043,4,0.056,5,0.067,19,0.007,33,0.151,37,0.686,51,0.134,57,0.051,73,2.314,107,1.554,137,0.004,138,0.005,139,0.004,237,1.583,317,0.968,329,3.782,330,2.887,376,2.258,377,2.206,378,2.258,379,2.258,380,2.258,381,2.258,382,1.973,383,1.853,384,2.258,385,2.258,386,2.258,387,2.155,388,2.258,389,2.206,390,2.258,391,2.258,392,2.258,393,2.258,397,1.677,406,3.124,422,3.124,435,3.124,437,3.124,443,3.061,447,3.124,452,3.124,453,2.764,462,2.206,464,2.565,465,2.983,466,4.682,467,3.089,468,3.205,469,2.715,477,4.047,478,3.205,480,3.665,484,3.665,489,4.367,492,3.089,493,5.714,494,5.714,495,2.798,501,3.645,506,5.333,548,2.433,1056,3.838,1821,4.752,1848,4.362,1849,5.951,2033,6.225,2497,4.752,2679,4.362,2836,7.397,2837,4.752,2838,4.752,2839,4.752,2840,6.338,2841,5.344,2842,4.752,2843,5.344,2844,5.344,2845,5.344,2846,5.344,2847,5.344,2848,6.225,2849,5.344,2850,4.752]],["title/modules/SettingsRoutingModule.html",[462,1.922,2840,3.344]],["body/modules/SettingsRoutingModule.html",[0,0.359,3,0.054,4,0.065,5,0.077,19,0.007,37,0.856,51,0.122,57,0.064,107,1.936,137,0.005,138,0.006,139,0.005,178,1.797,237,1.974,268,1.369,317,1.206,376,2.815,377,2.749,378,2.815,379,2.815,380,2.815,381,2.815,382,2.459,383,2.31,384,2.815,385,2.815,386,2.815,387,2.686,388,2.815,389,2.749,390,2.815,391,2.815,392,2.815,393,2.815,443,2.789,464,3.197,469,3.384,480,3.487,484,4.21,530,4.784,532,5.776,533,5.389,534,3.718,535,5.073,539,4.784,543,5.073,675,5.073,2840,5.776,2842,5.922,2851,6.66]],["title/injectables/SettingsService.html",[689,1.379,2793,3.344]],["body/injectables/SettingsService.html",[0,0.324,3,0.048,4,0.048,5,0.057,17,2.195,19,0.007,33,0.245,35,0.304,36,0.617,40,0.348,43,0.357,45,0.649,46,0.602,47,0.649,51,0.132,52,0.68,57,0.057,79,1.134,117,2.154,137,0.004,138,0.005,139,0.004,182,1.522,288,2.491,291,1.89,309,1.856,317,1.086,318,1.846,321,1.776,322,1.919,327,3.903,332,4.089,340,1.957,488,3.465,537,3.347,538,3.74,548,3.431,689,2.233,690,5.922,708,3.239,913,2.729,1107,4.893,1414,4.567,1545,4.567,1546,4.567,1547,4.567,2793,5.413,2852,5.995,2853,8.243,2854,8.243,2855,8.649,2856,7.537,2857,7.537,2858,5.995,2859,5.995,2860,5.995,2861,5.995,2862,5.995,2863,5.995,2864,5.995,2865,5.995,2866,5.995,2867,5.995]],["title/interfaces/SettingsState.html",[562,2.066,574,3.8]],["body/interfaces/SettingsState.html",[3,0.055,4,0.055,5,0.065,19,0.007,33,0.256,35,0.346,36,0.668,57,0.078,79,1.143,126,1.736,137,0.005,138,0.006,139,0.005,148,3.063,178,1.839,183,2.628,197,3.011,364,7.04,370,5.766,548,4.116,562,3.024,563,3.939,574,7.121,2209,4.251,2868,6.814,2869,6.814]],["title/classes/State.html",[0,0.251,11,1.648]],["body/classes/State.html",[0,0.476,2,0.681,3,0.037,4,0.037,5,0.044,8,0.694,11,2.248,19,0.007,33,0.206,37,0.593,39,1.511,40,0.52,43,0.185,45,0.398,46,0.507,47,0.398,50,0.72,51,0.102,57,0.086,58,1.108,79,1.218,91,1.378,92,1.378,93,1.252,102,2,137,0.003,138,0.005,139,0.003,142,2.77,144,3.807,145,4.91,146,3.649,147,2.882,148,2.924,149,2.882,150,2.882,151,2.05,152,2.817,153,2.882,154,2.882,155,2.882,156,2.882,157,2.882,159,0.777,160,3.58,161,1.952,162,2.28,163,1.395,164,4.525,165,2.347,166,1.952,167,2.882,168,2.77,169,2.882,170,2.882,171,2.882,172,2.882,173,2.882,174,2.882,175,2.882,176,2.882,177,3.96,178,1.246,179,3.429,180,2.882,181,3.96,182,1.282,183,1.781,184,3.429,185,2.882,186,1.743,187,1.952,188,1.508,189,2.05,190,2.882,191,2.882,192,2.882,193,2.882,194,2.67,195,2.77,196,2.77,197,3.2,198,3.807,199,1.369,200,1.422,201,2.77,202,2.77,203,2.77,204,2.05,205,2.882,206,2.882,207,2.561,208,2.882,209,2.77,210,3.807,211,2.882,212,2.882,684,3.544,919,3.429,1160,3.318,2870,4.619,2871,4.619]],["title/modules/StateModule.html",[462,1.922,476,3.344]],["body/modules/StateModule.html",[0,0.304,3,0.045,4,0.058,5,0.069,9,2.857,19,0.007,35,0.285,37,0.722,43,0.226,51,0.131,52,0.821,57,0.054,73,2.435,107,1.635,117,1.688,137,0.004,138,0.005,139,0.004,182,1.136,204,3.212,237,1.666,291,1.41,309,1.385,317,1.018,376,2.377,377,2.321,378,2.377,379,2.377,380,2.377,381,2.377,382,2.077,383,1.95,384,2.377,385,2.377,386,2.377,387,2.268,388,2.377,389,2.321,390,2.377,391,2.377,392,2.377,393,2.377,397,1.765,416,2.077,462,2.321,464,2.7,465,3.14,466,4.34,467,3.251,468,4.34,469,2.857,476,6.537,477,4.183,478,3.373,480,3.789,484,4.189,489,4.515,492,3.251,527,4.284,528,4.284,537,4.88,538,3.508,567,3.508,578,4.935,580,5.001,634,5.001,635,5.001,638,5.001,639,6.435,1022,3.038,1483,6.531,1485,6.531,1594,6.095,1596,6.531,1603,5.907,1611,4.59,1614,4.59,2872,5.001,2873,5.001,2874,5.624,2875,5.624,2876,5.624,2877,5.624,2878,5.624,2879,5.001,2880,7.236,2881,5.624,2882,5.624,2883,5.624,2884,5.624,2885,5.624,2886,5.624,2887,5.624,2888,5.624,2889,7.236,2890,5.624,2891,5.624,2892,5.624,2893,5.624,2894,5.624,2895,5.624]],["title/components/TagsFilterComponent.html",[268,0.957,444,1.648]],["body/components/TagsFilterComponent.html",[0,0.22,3,0.033,4,0.033,5,0.039,17,1.668,19,0.007,29,1.698,33,0.221,34,0.746,35,0.206,36,0.476,40,0.236,43,0.335,45,0.35,46,0.623,47,0.35,49,0.566,50,0.461,51,0.127,52,0.461,57,0.039,61,1.161,62,1.761,93,0.577,100,1.183,107,1.183,112,1.205,117,1.95,137,0.003,138,0.004,139,0.003,159,0.977,182,1.173,199,1.205,200,1.252,268,1.392,269,1.44,270,2.014,271,1.502,272,1.761,273,1.535,274,1.535,276,2.67,277,1.44,278,3.505,280,2.713,282,2.191,288,2.348,291,1.456,292,2.913,309,1.668,310,1.859,317,0.737,318,1.252,319,1.502,321,1.205,322,1.302,340,1.328,367,2.537,383,2.349,397,1.277,398,2.191,399,2.191,400,1.411,401,2.787,402,1.535,403,1.535,404,1.411,405,1.535,406,1.44,407,1.535,408,2.787,409,1.44,410,1.535,411,1.411,412,2.191,413,1.44,414,1.535,415,1.47,416,1.502,417,1.328,418,2.191,419,1.411,420,1.535,421,1.44,422,1.44,423,1.535,424,1.411,425,1.535,426,1.44,427,1.535,428,1.44,429,1.535,430,1.411,431,1.535,432,1.44,433,1.535,434,1.47,435,1.44,436,1.535,437,1.44,438,1.502,439,2.555,440,1.535,441,1.44,442,1.535,443,1.411,444,2.615,445,3.191,446,2.191,447,1.44,448,1.44,449,1.688,450,1.44,451,1.535,452,1.44,453,1.44,454,1.44,455,2.271,456,1.44,457,1.411,458,1.535,459,1.411,460,1.502,461,1.535,495,2.129,643,3.242,648,2.648,649,2.648,650,2.351,651,2.439,656,2.439,702,2.271,703,2.197,805,1.679,989,2.439,1058,3.915,1063,4.062,1069,4.27,1084,3.915,1086,2.439,1103,3.098,1104,4.171,1105,2.774,1106,2.921,1123,3.098,1125,3.098,1127,3.098,1135,3.098,1136,3.098,1166,2.648,1336,6.14,1403,2.921,1902,2.774,1968,3.098,2031,7.602,2032,7.602,2348,3.32,2349,3.32,2740,3.32,2896,3.32,2897,6.022,2898,4.74,2899,5.528,2900,6.772,2901,6.029,2902,4.067,2903,7.811,2904,5.163,2905,4.067,2906,4.067,2907,4.067,2908,3.617,2909,3.617,2910,4.067,2911,5.807,2912,3.32,2913,3.32,2914,4.067,2915,3.32,2916,4.067,2917,4.067,2918,3.617,2919,3.32,2920,4.067,2921,4.067,2922,3.32,2923,3.32,2924,4.067,2925,4.067,2926,4.067,2927,3.617,2928,3.32,2929,3.617]],["title/components/TextSettingComponent.html",[268,0.957,447,1.648]],["body/components/TextSettingComponent.html",[0,0.191,3,0.028,4,0.028,5,0.034,19,0.007,29,1.567,33,0.249,34,0.673,35,0.179,36,0.429,40,0.205,43,0.375,45,0.689,46,0.682,47,0.689,49,0.729,50,0.877,51,0.104,52,0.401,57,0.034,61,1.008,79,0.819,100,1.027,102,1.529,107,1.524,112,1.047,117,1.804,137,0.003,138,0.004,139,0.003,148,2.039,151,2.326,152,2.326,159,0.882,182,1.261,199,2.436,200,1.087,268,1.284,269,1.25,270,1.817,271,1.304,272,1.529,273,1.333,274,1.333,276,2.463,277,1.25,278,3.465,280,2.448,282,1.977,288,2.087,291,1.314,292,2.725,293,1.304,309,2.161,310,2.475,317,0.64,321,1.047,322,1.131,383,1.225,397,1.109,398,1.977,399,1.977,400,1.225,401,2.607,402,1.333,403,1.333,404,1.225,405,1.333,406,3.285,407,1.977,408,2.607,409,1.25,410,1.333,411,1.225,412,1.977,413,1.25,414,1.333,415,1.277,416,1.304,417,1.153,418,1.977,419,1.225,420,1.333,421,1.25,422,1.25,423,1.333,424,1.225,425,1.333,426,1.25,427,1.333,428,1.25,429,1.333,430,1.225,431,1.333,432,1.25,433,1.333,434,1.277,435,1.25,436,1.333,437,1.25,438,1.304,439,2.357,440,1.333,441,1.25,442,1.333,443,1.225,444,1.25,445,1.277,446,1.977,447,2.447,448,1.25,449,1.524,450,1.25,451,1.333,452,1.25,453,1.25,454,1.25,455,1.027,456,1.25,457,1.225,458,1.333,459,1.225,460,1.304,461,1.333,495,1.849,827,3.269,1056,2.537,1057,2.69,1058,3.611,1059,5.034,1060,4.759,1061,3.991,1062,3.574,1063,3.143,1064,6.328,1065,3.574,1066,3.143,1067,5.459,1068,4.713,1069,3.611,1070,4.26,1071,4.713,1072,3.574,1073,3.574,1074,3.574,1076,3.141,1079,2.409,1081,2.409,1084,3.995,1085,4.26,1086,4.145,1088,3.574,1092,4.26,1094,2.203,1108,2.409,1145,3.141,1308,3.411,1822,6.145,1823,4.659,1825,6.524,1827,2.537,1828,2.537,1829,2.537,1835,2.537,1836,2.537,1837,2.537,1838,2.537,1839,2.537,1840,2.537,1841,2.537,1842,2.537,1843,2.537,1844,2.537,1845,2.537,1846,2.537,1847,2.537,1848,6.534,1849,2.537,1850,5.264,1851,2.537,1854,3.991,1855,4.277,1856,4.277,2510,2.409,2524,2.537,2525,2.883,2526,2.883,2529,3.141,2530,3.141,2531,3.141,2690,3.141,2930,8.004,2931,5.24,2932,3.532,2933,3.532,2934,3.532,2935,3.532,2936,3.532,2937,3.532,2938,3.532,2939,3.532,2940,3.532]],["title/classes/Third.html",[0,0.251,166,1.968]],["body/classes/Third.html",[0,0.469,2,0.641,3,0.035,4,0.035,5,0.041,8,0.653,11,2.155,19,0.007,33,0.216,35,0.221,37,0.902,39,1.506,40,0.513,43,0.244,45,0.524,46,0.607,47,0.524,50,0.69,51,0.099,57,0.085,58,1.063,79,1.262,91,1.358,92,1.358,93,1.233,102,1.882,137,0.003,138,0.004,139,0.003,142,2.607,144,3.65,145,4.803,146,3.555,147,2.712,148,2.885,149,2.712,150,2.712,151,1.929,152,2.701,153,2.712,154,2.712,155,2.712,156,2.712,157,2.712,159,1.28,160,2.146,161,1.837,162,2.146,163,1.313,164,4.381,165,2.208,166,2.572,167,2.712,168,2.607,169,4.381,170,2.712,171,2.712,172,2.712,173,2.712,174,2.712,175,2.712,176,2.712,177,3.797,178,1.173,179,3.288,180,2.712,181,3.797,182,1.229,183,1.676,184,4.11,185,2.712,186,1.64,187,1.837,188,1.419,189,3.117,190,2.712,191,2.712,192,2.712,193,2.712,194,2.513,195,2.607,196,2.607,197,3.147,198,3.65,199,1.288,200,1.338,201,2.607,202,2.607,203,2.607,204,1.929,205,2.712,206,2.712,207,2.455,208,2.712,209,2.607,210,3.65,211,2.712,212,2.712,291,1.526,309,1.07,684,4.472,2807,4.636,2941,6.086,2942,4.347,2943,6.086,2944,6.086,2945,6.086,2946,6.086,2947,4.347,2948,4.347,2949,4.347]],["title/classes/ThirdMenu.html",[0,0.251,187,1.968]],["body/classes/ThirdMenu.html",[0,0.476,2,0.676,3,0.037,4,0.037,5,0.044,8,0.689,11,1.623,19,0.007,33,0.205,37,0.589,39,1.511,40,0.52,43,0.184,45,0.395,46,0.504,47,0.395,50,0.716,51,0.102,57,0.086,58,1.102,79,1.25,91,1.375,92,1.375,93,1.25,102,1.984,137,0.003,138,0.005,139,0.003,142,2.749,144,3.787,145,5.186,146,3.637,147,2.859,148,2.919,149,2.859,150,2.859,151,2.034,152,2.802,153,2.859,154,2.859,155,2.859,156,2.859,157,2.859,159,0.771,160,2.262,161,1.937,162,2.262,163,1.384,164,2.859,165,2.328,166,1.937,167,2.859,168,2.749,169,2.859,170,2.859,171,2.859,172,2.859,173,2.859,174,2.859,175,2.859,176,2.859,177,3.939,178,1.237,179,3.411,180,2.859,181,3.939,182,1.275,183,1.767,184,4.205,185,2.859,186,1.729,187,2.669,188,2.061,189,3.206,190,4.506,191,2.859,192,2.859,193,2.859,194,2.649,195,2.749,196,2.749,197,3.193,198,3.787,199,1.358,200,1.411,201,2.749,202,2.749,203,2.749,204,2.034,205,2.859,206,2.859,207,2.547,208,2.859,209,2.749,210,3.787,211,2.859,212,2.859,2950,4.075,2951,4.583]],["title/classes/ThirdMenuEntry.html",[0,0.251,184,2.515]],["body/classes/ThirdMenuEntry.html",[0,0.476,2,0.679,3,0.037,4,0.037,5,0.044,8,0.692,11,1.631,19,0.007,33,0.205,37,0.592,39,1.511,40,0.52,43,0.185,45,0.397,46,0.506,47,0.397,50,0.719,51,0.102,57,0.086,58,1.106,79,1.251,91,1.377,92,1.377,93,1.251,102,1.995,137,0.003,138,0.005,139,0.003,142,2.763,144,3.8,145,5.193,146,3.645,147,2.874,148,2.922,149,2.874,150,2.874,151,2.045,152,2.812,153,2.874,154,2.874,155,2.874,156,2.874,157,2.874,159,0.775,160,2.274,161,1.947,162,2.274,163,1.391,164,2.874,165,2.341,166,1.947,167,2.874,168,2.763,169,2.874,170,2.874,171,2.874,172,2.874,173,2.874,174,2.874,175,2.874,176,2.874,177,3.953,178,1.243,179,3.423,180,2.874,181,3.953,182,1.28,183,1.777,184,3.913,185,2.874,186,2.733,187,1.947,188,2.069,189,2.045,190,2.874,191,2.874,192,2.874,193,2.874,194,2.663,195,2.763,196,2.763,197,3.198,198,3.8,199,1.365,200,1.418,201,2.763,202,2.763,203,2.763,204,2.045,205,2.874,206,2.874,207,2.556,208,2.874,209,2.763,210,3.8,211,2.874,212,2.874,2950,4.097,2952,4.607]],["title/modules/ThirdpartyModule.html",[462,1.922,2953,3.546]],["body/modules/ThirdpartyModule.html",[0,0.342,3,0.051,4,0.063,5,0.074,19,0.007,37,0.813,51,0.124,57,0.06,73,2.739,107,1.84,137,0.005,138,0.006,139,0.005,237,1.875,317,1.146,376,2.674,377,2.612,378,2.674,379,2.674,380,2.674,381,2.674,382,2.336,383,2.194,384,2.674,385,2.674,386,2.674,387,2.552,388,2.674,389,2.612,390,2.674,391,2.674,392,2.674,393,2.674,397,1.986,430,3.197,462,2.612,464,3.037,465,3.532,466,5.066,467,3.657,468,3.795,469,3.214,477,4.505,478,3.795,480,4.08,484,4.08,489,4.862,492,3.657,501,4.315,546,5.164,2953,7.187,2954,5.626,2955,5.626,2956,5.626,2957,6.621,2958,6.327,2959,5.626]],["title/modules/ThirdpartyRoutingModule.html",[462,1.922,2957,3.344]],["body/modules/ThirdpartyRoutingModule.html",[0,0.362,3,0.054,4,0.065,5,0.077,19,0.007,37,0.86,51,0.122,57,0.064,107,1.947,137,0.005,138,0.006,139,0.005,178,1.807,237,1.985,268,1.377,317,1.213,376,2.831,377,2.765,378,2.831,379,2.831,380,2.831,381,2.831,382,2.473,383,2.323,384,2.831,385,2.831,386,2.831,387,2.702,388,2.831,389,2.765,390,2.831,391,2.831,392,2.831,393,2.831,430,2.799,464,3.215,469,3.403,480,3.507,484,4.225,530,4.811,532,5.796,533,5.403,534,3.74,539,4.811,675,5.102,2957,5.796,2959,5.956,2960,6.698,2961,6.698]],["title/classes/ThirdsI18nLoader.html",[0,0.251,2962,3.8]],["body/classes/ThirdsI18nLoader.html",[0,0.278,2,0.509,3,0.028,4,0.028,5,0.033,17,2.151,19,0.007,25,1.531,29,2.048,33,0.146,34,0.661,35,0.175,39,0.528,40,0.2,43,0.206,45,0.443,46,0.492,47,0.443,51,0.123,52,0.391,57,0.059,79,1.23,117,1.437,137,0.004,138,0.004,139,0.002,152,1.531,163,2.063,166,2.176,178,2.404,182,1.907,183,1.33,184,1.863,186,1.301,187,1.458,188,2.23,189,3.704,199,1.022,220,1.391,222,1.36,228,2.471,237,1.022,251,0.966,288,2.293,291,1.291,303,2.477,309,0.849,317,0.625,318,1.062,319,1.274,321,1.022,328,3.352,329,1.863,330,1.863,332,2.353,340,1.126,455,1.003,488,1.994,537,1.926,552,2.628,566,1.703,689,1.526,690,4.01,692,2.477,693,1.752,694,1.752,695,1.994,702,1.926,703,1.863,708,3.328,751,2.353,780,4.99,805,2.543,820,2.616,840,2.353,974,2.246,975,3.212,988,2.477,998,2.246,1035,2.152,1094,3.212,1150,2.246,1180,2.353,1255,4.28,1303,2.477,1545,4.692,1546,5.203,1547,4.692,1591,3.439,1667,1.806,1861,2.353,1881,4.985,1906,2.477,1951,4.202,1963,2.816,2273,4.906,2807,3.922,2962,4.202,2963,3.067,2964,6.074,2965,5.148,2966,4.578,2967,3.449,2968,4.578,2969,3.449,2970,4.578,2971,3.067,2972,3.067,2973,3.067,2974,3.067,2975,3.067,2976,3.067,2977,3.067,2978,3.067,2979,3.067,2980,3.067,2981,3.067,2982,3.067,2983,3.067,2984,3.067,2985,3.067,2986,3.067,2987,3.067,2988,3.067,2989,3.067,2990,3.067,2991,3.067,2992,3.067,2993,3.067,2994,5.477,2995,3.067,2996,3.067,2997,3.067,2998,4.578,2999,3.067,3000,3.067,3001,3.067,3002,3.067,3003,3.067,3004,3.067,3005,3.067,3006,3.067,3007,3.067,3008,3.067,3009,4.578,3010,3.067,3011,3.067,3012,3.067,3013,4.578,3014,3.067,3015,3.067,3016,3.067,3017,3.067,3018,3.067,3019,3.067,3020,3.067,3021,3.067,3022,3.067,3023,3.067,3024,3.067,3025,3.067,3026,5.477,3027,3.067,3028,3.067,3029,3.067,3030,3.067,3031,3.067,3032,3.067,3033,3.067,3034,3.067,3035,4.202,3036,4.578,3037,2.816,3038,3.067,3039,3.067,3040,3.067,3041,3.067,3042,3.067,3043,3.067,3044,3.067,3045,3.067,3046,3.067,3047,3.067,3048,3.067,3049,3.067,3050,3.067,3051,3.067,3052,3.067,3053,3.067,3054,4.578,3055,3.067,3056,3.067,3057,3.067,3058,3.067,3059,3.067,3060,3.067,3061,3.067,3062,3.067,3063,3.067,3064,3.067,3065,4.578,3066,3.067,3067,3.067,3068,3.067,3069,3.067,3070,3.067,3071,3.067,3072,3.067,3073,3.067,3074,3.067,3075,3.067,3076,3.067,3077,4.578,3078,3.067,3079,4.578,3080,3.067,3081,4.578,3082,3.067,3083,4.578,3084,3.067,3085,3.067,3086,5.477,3087,3.067,3088,3.067,3089,3.067,3090,3.067,3091,3.067,3092,3.067,3093,3.067,3094,3.067,3095,3.067,3096,3.067,3097,3.067,3098,3.067]],["title/injectables/ThirdsService.html",[689,1.379,1255,2.599]],["body/injectables/ThirdsService.html",[0,0.234,3,0.022,4,0.022,5,0.026,17,2.176,19,0.007,25,1.226,29,1.962,33,0.239,34,0.355,35,0.14,36,0.356,39,0.822,40,0.161,43,0.352,45,0.69,46,0.672,47,0.69,49,0.746,50,0.609,51,0.117,52,0.313,57,0.051,79,1.273,117,1.713,137,0.004,138,0.003,139,0.002,152,1.226,163,1.997,166,1.836,178,2.299,182,1.858,183,1.066,184,1.493,186,1.043,187,2.268,188,1.986,189,3.948,199,0.819,220,2.165,222,1.09,228,2.085,237,0.819,251,0.774,266,1.258,288,2.464,291,1.089,303,1.985,309,2.01,317,0.5,318,0.851,319,1.02,321,0.819,328,3.494,329,1.493,330,1.493,332,1.885,340,0.902,455,0.803,488,1.597,537,1.543,552,2.105,566,1.364,689,1.287,690,4.57,692,1.985,693,1.404,694,1.404,695,1.597,702,1.543,703,1.493,708,3.967,751,1.885,780,4.57,805,2.215,820,2.207,840,1.885,913,1.258,974,1.799,975,2.71,988,1.985,998,1.799,1035,1.724,1094,2.71,1150,4.305,1180,4.149,1255,3.396,1303,1.985,1414,2.105,1545,5.594,1546,4.634,1547,4.634,1591,2.996,1667,1.447,1861,1.885,1881,4.51,1906,1.985,1951,3.545,1963,2.255,2273,5.042,2807,4.634,2962,2.255,2963,2.457,2964,4.772,2966,2.457,2968,2.457,2970,2.457,2971,2.457,2972,2.457,2973,2.457,2974,2.457,2975,2.457,2976,4.772,2977,4.772,2978,4.772,2979,4.772,2980,4.772,2981,2.457,2982,2.457,2983,2.457,2984,2.457,2985,2.457,2986,2.457,2987,2.457,2988,2.457,2989,2.457,2990,2.457,2991,2.457,2992,2.457,2993,3.862,2994,4.772,2995,2.457,2996,3.862,2997,4.772,2998,5.409,2999,2.457,3000,2.457,3001,2.457,3002,2.457,3003,2.457,3004,2.457,3005,2.457,3006,2.457,3007,2.457,3008,2.457,3009,3.862,3010,2.457,3011,2.457,3012,3.862,3013,3.862,3014,2.457,3015,2.457,3016,3.862,3017,4.772,3018,2.457,3019,2.457,3020,2.457,3021,2.457,3022,2.457,3023,2.457,3024,2.457,3025,3.862,3026,4.772,3027,2.457,3028,2.457,3029,2.457,3030,2.457,3031,2.457,3032,2.457,3033,2.457,3034,2.457,3035,3.545,3036,3.862,3037,4.965,3038,2.457,3039,2.457,3040,2.457,3041,2.457,3042,2.457,3043,2.457,3044,2.457,3045,2.457,3046,2.457,3047,2.457,3048,3.862,3049,2.457,3050,2.457,3051,2.457,3052,2.457,3053,2.457,3054,3.862,3055,2.457,3056,2.457,3057,2.457,3058,2.457,3059,2.457,3060,3.862,3061,2.457,3062,2.457,3063,2.457,3064,2.457,3065,3.862,3066,2.457,3067,2.457,3068,2.457,3069,2.457,3070,2.457,3071,2.457,3072,2.457,3073,2.457,3074,2.457,3075,2.457,3076,2.457,3077,3.862,3078,2.457,3079,3.862,3080,2.457,3081,3.862,3082,2.457,3083,3.862,3084,2.457,3085,2.457,3086,4.772,3087,2.457,3088,2.457,3089,2.457,3090,2.457,3091,2.457,3092,2.457,3093,2.457,3094,2.457,3095,2.457,3096,2.457,3097,2.457,3098,2.457,3099,4.343,3100,4.343,3101,4.343,3102,4.343,3103,4.343,3104,3.862,3105,4.343,3106,4.343,3107,4.343,3108,4.343,3109,2.763,3110,2.763,3111,2.763,3112,2.763,3113,2.763,3114,2.763,3115,2.763,3116,2.763,3117,2.763,3118,2.763,3119,2.763,3120,2.763,3121,2.763,3122,2.763,3123,2.763,3124,2.763,3125,2.763,3126,2.763,3127,2.763,3128,2.763]],["title/classes/ThirdsServiceMock.html",[0,0.251,3129,4.14]],["body/classes/ThirdsServiceMock.html",[0,0.364,2,0.993,3,0.054,4,0.054,5,0.064,17,2.138,19,0.007,29,2.259,35,0.342,43,0.325,51,0.114,57,0.064,137,0.005,138,0.006,139,0.005,182,1.36,184,3.639,187,2.847,291,2.03,309,1.994,318,2.074,349,4.521,1667,3.527,3037,7.351,3104,7.719,3129,7.2,3130,6.736,3131,6.736,3132,6.736,3133,6.736,3134,6.736,3135,6.736,3136,6.736,3137,6.736,3138,6.736,3139,6.736,3140,6.736,3141,6.736,3142,6.736,3143,6.736,3144,6.736,3145,6.736,3146,6.736,3147,6.736,3148,6.736]],["title/classes/Tick.html",[0,0.251,1874,2.691]],["body/classes/Tick.html",[0,0.426,2,0.806,3,0.044,4,0.044,5,0.052,7,2.156,8,1.335,10,3.689,16,3.154,19,0.007,33,0.263,34,1.074,35,0.277,36,0.582,37,0.913,38,1.782,39,1.327,40,0.318,41,1.683,43,0.317,45,0.471,46,0.436,47,0.471,49,0.761,50,0.62,51,0.118,52,0.62,55,2.74,56,2.555,57,0.083,58,0.955,71,2.555,77,1.875,83,3.154,88,3.504,116,2.954,126,1.335,137,0.004,138,0.005,139,0.004,216,2.431,234,1.62,270,2.464,299,4.925,307,3.927,449,2.582,653,4.107,747,3.61,903,3.154,928,5.413,998,3.559,1066,3.279,1858,4.626,1859,3.927,1860,4.165,1861,3.729,1862,4.463,1863,6.822,1864,4.463,1865,4.463,1868,4.463,1869,3.559,1870,3.927,1871,3.411,1872,3.927,1873,4.463,1874,4.831,1875,4.463,1876,4.846,1877,4.463,1878,6.003,1879,6.003,1880,5.413,1881,4.846,1882,5.413,1883,5.8,1884,5.104,1885,4.463,1886,4.463,1887,4.463,1888,4.626,1889,4.463,1890,4.463,1891,4.165,3149,7.106,3150,5.467,3151,5.467]],["title/injectables/TimeEffects.html",[632,3.8,689,1.379]],["body/injectables/TimeEffects.html",[0,0.245,3,0.037,4,0.037,5,0.043,8,0.683,10,3.625,17,2.198,19,0.007,29,2.266,33,0.22,35,0.231,36,0.514,40,0.264,43,0.311,45,0.392,46,0.363,47,0.392,49,0.874,50,0.712,51,0.132,52,0.516,55,2.774,56,2.125,57,0.043,59,2.183,99,3.525,117,1.964,126,1.457,137,0.003,138,0.005,139,0.003,146,2.125,162,2.245,163,2.343,165,2.311,178,1.695,182,1.567,288,2.197,293,1.679,299,4.84,308,5.585,317,0.824,318,1.4,319,1.679,320,2.539,321,1.348,322,1.456,340,1.485,449,2.448,632,5.126,689,1.861,692,3.266,693,2.311,694,4.136,805,3.203,814,5.126,895,4.784,903,2.787,913,2.07,919,4.662,942,3.507,943,4.706,952,4.653,965,5.585,970,4.784,998,4.089,1021,2.629,1022,2.457,1027,3.266,1181,4.84,1199,2.961,1303,4.511,1379,5.91,1858,4.683,1860,4.784,1861,4.283,1869,4.683,1870,3.266,1871,2.837,1874,4.159,1876,4.283,1878,4.511,1879,4.511,1888,2.961,1967,4.044,2454,4.044,3152,4.548,3153,7.194,3154,7.194,3155,7.194,3156,6.28,3157,6.28,3158,6.28,3159,6.28,3160,4.548,3161,6.28,3162,6.28,3163,6.28,3164,7.758,3165,6.28,3166,7.758,3167,6.28,3168,6.28,3169,4.548,3170,6.28,3171,6.28,3172,4.548,3173,4.548,3174,4.548]],["title/components/TimeFilterComponent.html",[268,0.957,448,1.648]],["body/components/TimeFilterComponent.html",[0,0.206,3,0.031,4,0.031,5,0.036,17,1.767,19,0.007,29,1.994,33,0.216,34,0.713,35,0.194,36,0.455,40,0.222,43,0.337,45,0.329,46,0.608,47,0.329,49,0.532,50,0.433,51,0.126,52,0.433,57,0.036,61,1.09,62,1.655,88,1.696,93,0.542,100,1.111,112,1.132,117,1.855,137,0.003,138,0.004,139,0.003,159,0.934,182,1.32,183,2.141,199,1.132,200,1.177,268,1.344,269,1.353,270,1.926,271,1.411,273,1.442,274,1.442,276,2.578,277,1.353,278,3.488,282,2.095,288,2.349,291,1.392,292,2.83,293,1.411,309,1.61,310,1.777,317,0.692,318,1.177,319,1.411,321,1.132,322,1.223,340,1.248,367,2.384,383,2.268,397,1.2,398,2.095,399,2.095,400,1.325,401,2.708,402,1.442,403,1.442,404,1.325,405,1.442,406,1.353,407,1.442,408,2.708,409,1.353,410,1.442,411,1.325,412,2.095,413,1.353,414,1.442,415,1.382,416,1.411,417,1.248,418,2.095,419,1.325,420,1.442,421,1.353,422,1.353,423,1.442,424,1.325,425,1.442,426,1.353,427,1.442,428,1.353,429,1.442,430,1.325,431,1.442,432,1.353,433,1.442,434,1.382,435,1.353,436,1.442,437,1.353,438,1.411,439,2.467,440,1.442,441,1.353,442,1.442,443,1.325,444,1.353,445,1.382,446,2.095,447,1.353,448,2.541,449,2.312,450,1.353,451,1.442,452,1.353,453,1.353,454,1.353,455,2.531,456,1.353,457,1.325,458,1.442,459,1.325,460,1.411,461,1.442,495,2.001,551,3.119,643,3.651,648,2.488,649,2.488,650,2.209,651,2.292,653,3.209,656,2.292,702,2.134,703,2.065,805,1.577,919,2.065,1058,3.78,1063,3.922,1069,4.149,1084,4.149,1086,3.33,1103,2.911,1104,3.988,1105,2.606,1106,2.745,1123,2.911,1125,2.911,1127,2.911,1135,2.911,1136,2.911,1146,3.398,1177,3.33,1181,5.119,1199,2.488,1336,6.156,1398,3.119,1403,2.745,1789,4.229,1795,4.229,1902,2.606,1968,2.911,2013,7.621,2014,7.621,2510,4.46,2524,2.745,2896,3.119,2898,4.532,2899,5.337,2901,5.858,2908,3.398,2912,3.119,2913,4.532,2915,3.119,2919,3.119,2922,3.119,2923,3.119,3175,6.539,3176,5.552,3177,3.821,3178,3.821,3179,3.821,3180,3.398,3181,3.821,3182,3.398,3183,5.552,3184,3.821,3185,3.821,3186,3.821,3187,3.821,3188,3.821,3189,5.552,3190,3.821,3191,3.821,3192,3.821,3193,3.821,3194,5.552,3195,3.821,3196,3.821,3197,3.821,3198,3.821,3199,3.398,3200,3.821,3201,3.821,3202,5.552,3203,5.552,3204,3.821,3205,3.821,3206,5.552,3207,5.552,3208,5.552]],["title/components/TimeLineComponent.html",[268,0.957,450,1.648]],["body/components/TimeLineComponent.html",[0,0.151,3,0.023,4,0.023,5,0.027,9,1.424,11,2.17,17,1.334,19,0.007,29,0.703,33,0.209,34,0.564,35,0.142,36,0.36,37,0.907,40,0.163,43,0.307,45,0.378,46,0.531,47,0.378,51,0.113,52,0.318,57,0.027,61,1.253,71,2.531,83,2.721,93,0.623,100,0.815,112,0.83,117,1.647,137,0.002,138,0.003,139,0.002,159,1.031,178,2.406,182,0.566,197,2.608,199,0.83,200,0.863,220,1.13,221,1.184,222,1.105,232,2.236,236,1.732,242,1.383,257,2.673,268,1.114,269,0.992,270,1.523,271,1.035,273,1.057,274,1.057,276,2.136,277,0.992,278,3.391,282,1.657,291,1.101,292,2.417,293,1.035,306,6.28,309,1.334,310,1.406,317,0.508,318,0.863,319,1.035,321,0.83,322,0.897,339,1.681,340,0.915,349,3.423,350,3.677,367,2.74,397,0.88,398,1.657,399,1.657,400,0.972,401,2.313,402,1.057,403,1.057,404,0.972,405,1.057,406,0.992,407,1.057,408,2.313,409,0.992,410,1.057,411,0.972,412,1.657,413,0.992,414,1.057,415,1.013,416,1.035,417,2.173,418,1.657,419,0.972,420,1.057,421,0.992,422,0.992,423,1.057,424,0.972,425,1.057,426,0.992,427,1.057,428,0.992,429,1.057,430,0.972,431,1.057,432,0.992,433,1.057,434,1.013,435,0.992,436,1.057,437,0.992,438,1.035,439,2.043,440,1.057,441,0.992,442,1.057,443,0.972,444,0.992,445,1.013,446,1.657,447,0.992,448,0.992,449,2.053,450,2.17,451,1.057,452,0.992,453,0.992,454,0.992,455,0.815,456,0.992,457,0.972,458,1.057,459,0.972,460,1.035,461,1.057,540,3.544,558,1.824,693,1.424,702,1.565,703,1.514,820,3.588,865,1.244,903,3.568,1036,1.748,1038,2.539,1058,3.131,1069,3.544,1105,2.995,1121,3.346,1153,3.346,1154,3.346,1155,2.995,1159,2.135,1756,1.748,1767,5.986,1789,5.071,1795,4.125,1901,2.492,1902,1.911,1903,5.451,1904,5.451,1906,4.403,1931,2.288,1943,4.421,1975,3.905,2006,6.988,2168,2.135,2185,4.235,2195,4.816,2273,2.013,2309,3.585,2469,3.694,2475,2.995,2639,3.585,3035,3.585,3209,2.802,3210,3.585,3211,4.392,3212,7.382,3213,5.416,3214,4.392,3215,4.392,3216,4.392,3217,5.92,3218,2.802,3219,4.392,3220,4.392,3221,3.905,3222,3.905,3223,7.062,3224,3.905,3225,4.392,3226,4.392,3227,2.802,3228,2.802,3229,2.802,3230,2.802,3231,2.802,3232,2.802,3233,2.802,3234,6.565,3235,4.392,3236,2.802,3237,2.802,3238,4.392,3239,4.392,3240,2.802,3241,2.802,3242,5.416,3243,2.802,3244,2.802,3245,4.392,3246,2.802,3247,7.062,3248,2.802,3249,6.13,3250,5.451,3251,6.657,3252,2.802,3253,2.802,3254,2.802,3255,2.802,3256,2.802,3257,6.657,3258,4.392,3259,4.392,3260,2.802,3261,2.802,3262,2.802,3263,2.802,3264,2.802,3265,6.13,3266,4.392,3267,2.802,3268,2.802,3269,2.802,3270,2.802,3271,2.802,3272,6.13,3273,2.802,3274,2.802,3275,4.392,3276,2.802,3277,2.802,3278,3.905,3279,2.802,3280,2.802,3281,2.802,3282,4.392,3283,2.802,3284,2.802,3285,2.802,3286,2.802,3287,2.802,3288,2.802,3289,2.802,3290,2.802,3291,2.802,3292,2.802,3293,2.802,3294,2.802,3295,2.802,3296,2.802,3297,2.802,3298,2.802,3299,2.802,3300,2.802,3301,6.13,3302,6.13,3303,2.802,3304,2.802,3305,3.905,3306,2.802,3307,2.802,3308,2.802,3309,2.802,3310,2.802,3311,4.392,3312,2.802,3313,4.392,3314,2.802,3315,2.802,3316,4.392,3317,5.416,3318,2.802,3319,6.13,3320,6.13,3321,6.13,3322,5.416,3323,2.802,3324,2.802,3325,4.392,3326,2.802,3327,2.802,3328,2.802,3329,2.802,3330,2.802,3331,2.802,3332,2.802,3333,2.802,3334,2.802,3335,2.802,3336,2.802,3337,2.802,3338,2.802,3339,2.802,3340,2.802,3341,2.802,3342,2.802]],["title/classes/TimeReference.html",[0,0.251,1869,3.031]],["body/classes/TimeReference.html",[0,0.254,2,0.693,3,0.038,4,0.038,5,0.045,19,0.007,33,0.241,35,0.238,39,1.121,40,0.273,43,0.349,45,0.732,46,0.679,47,0.732,50,0.892,51,0.09,57,0.07,58,0.82,79,1.114,137,0.005,138,0.005,139,0.003,148,1.534,178,2.295,182,1.758,183,2.822,204,3.248,207,3.757,288,2.295,291,1.611,309,2.094,349,2.623,449,1.366,558,3.059,903,3.248,1035,4.007,1869,4.181,1871,2.931,1985,7.324,2329,4.893,2403,5.711,3199,4.178,3343,4.178,3344,8.503,3345,6.423,3346,6.423,3347,7.866,3348,4.698,3349,7.866,3350,7.318,3351,6.421,3352,4.698,3353,7.318,3354,4.698,3355,4.698,3356,4.698,3357,8.085,3358,4.698,3359,4.698,3360,4.698,3361,4.698,3362,4.698,3363,4.698,3364,6.423,3365,4.698,3366,7.866,3367,6.423,3368,4.698,3369,4.698,3370,4.698,3371,4.698,3372,4.698,3373,4.698,3374,4.698,3375,4.698,3376,4.698,3377,4.698,3378,4.698,3379,4.698,3380,4.698,3381,4.698,3382,4.698,3383,4.698,3384,6.423,3385,4.698,3386,4.698,3387,4.698,3388,4.698,3389,4.698,3390,4.698,3391,4.698,3392,4.698,3393,4.698,3394,4.698,3395,4.698,3396,4.698,3397,4.698,3398,4.698,3399,4.698,3400,4.698,3401,6.423,3402,4.178,3403,4.178,3404,4.178,3405,3.835,3406,4.178,3407,4.178,3408,4.178,3409,4.178,3410,4.178,3411,4.178,3412,4.698,3413,4.698]],["title/classes/TimeSpan.html",[0,0.251,1884,3.344]],["body/classes/TimeSpan.html",[0,0.369,2,0.76,3,0.041,4,0.041,5,0.049,8,1.028,19,0.007,25,2.289,33,0.146,34,0.662,39,1.51,40,0.446,43,0.207,45,0.444,46,0.412,47,0.444,51,0.073,57,0.085,58,1.339,79,1.244,91,0.805,92,0.805,93,0.731,137,0.006,138,0.005,139,0.004,146,3.972,162,2.545,182,1.041,188,2.233,207,3.828,220,3.095,290,4.912,349,2.879,445,2.472,558,3.357,562,2.289,684,2.879,865,2.289,989,4.9,1036,3.217,1038,4.723,1041,5.868,1150,4.452,1151,5.209,1152,5.582,1153,6.224,1154,6.476,1155,6.08,1156,5.582,1157,5.582,1158,5.209,1159,5.209,1162,5.582,1884,5.868,2111,5.209,2112,4.586,2113,4.586,2114,5.844,2115,4.586,2116,5.844,2117,4.586,2168,3.928,3210,4.209,3414,6.081,3415,4.586,3416,5.157,3417,5.157,3418,6.838,3419,5.157,3420,4.586,3421,4.586,3422,5.157]],["title/interfaces/TimeState.html",[562,2.066,575,3.8]],["body/interfaces/TimeState.html",[3,0.054,4,0.054,5,0.064,19,0.007,33,0.246,35,0.342,36,0.663,51,0.122,55,3.473,56,3.148,57,0.077,126,1.731,137,0.005,138,0.006,139,0.005,178,1.818,183,2.598,562,2.99,563,3.894,575,7.086,903,3.853,1869,6.212,1870,4.838,1871,4.202,3351,5.498,3357,7.719,3423,6.736,3424,9.213,3425,6.736,3426,6.736,3427,6.736]],["title/interfaces/TimelineState.html",[562,2.066,576,3.8]],["body/interfaces/TimelineState.html",[3,0.042,4,0.042,5,0.05,7,2.064,11,3.106,13,3.408,19,0.007,25,2.323,33,0.242,35,0.265,36,0.565,51,0.109,55,2.663,57,0.078,79,1.15,126,1.726,137,0.004,138,0.005,139,0.004,148,2.523,159,1.476,178,1.863,182,1.057,183,2.018,188,2.254,197,1.932,207,2.785,220,3.741,221,2.212,222,2.064,232,3.793,266,3.143,368,4.959,370,5.581,417,2.254,540,3.991,562,2.323,563,3.025,576,6.308,594,4.653,989,4.141,1213,5.636,1292,6.14,1293,7.596,1294,7.303,1295,5.26,1296,7.955,1297,6.708,1298,5.636,1299,6.14,1300,6.14,1301,6.14,1302,6.14,1303,4.959,1304,6.14,1308,4.495,1309,6.14,1310,6.14,1311,4.272,1313,4.653,1314,4.653,1315,4.653,1316,4.653,1332,6.14,1335,4.653,1662,5.636,3222,6.14,3428,5.233,3429,6.905,3430,6.905,3431,6.905,3432,5.233,3433,5.233]],["title/interceptors/TokenInjector.html",[1451,4.14,2794,3.546]],["body/interceptors/TokenInjector.html",[0,0.322,3,0.048,4,0.048,5,0.057,10,2.787,17,2.025,19,0.007,33,0.233,34,0.766,35,0.303,40,0.347,43,0.33,45,0.708,46,0.656,47,0.708,51,0.122,57,0.057,91,1.173,92,1.173,93,1.262,137,0.004,138,0.005,139,0.004,178,2.219,182,1.517,186,2.251,291,1.884,309,1.85,317,1.08,318,1.836,340,1.947,488,3.448,689,2.226,708,4.908,1431,4.869,1449,6.576,1454,5.304,2794,5.723,3434,5.964,3435,5.964,3436,7.513,3437,7.513,3438,5.964,3439,5.964,3440,7.513,3441,9.413,3442,5.964,3443,7.513,3444,8.633,3445,5.964,3446,5.964,3447,7.513,3448,5.964,3449,5.964,3450,7.513,3451,5.964,3452,5.964,3453,5.964,3454,5.964,3455,5.964]],["title/classes/TryToLogIn.html",[0,0.251,20,2.365]],["body/classes/TryToLogIn.html",[0,0.452,1,3.148,2,0.514,3,0.028,4,0.028,5,0.065,6,1.945,7,1.374,8,1.371,9,4.327,10,1.628,11,2.43,12,3.375,13,3.797,14,3.595,15,1.882,16,2.75,17,1.895,18,3.716,19,0.007,20,3.909,21,2.998,22,2.089,23,2.013,24,3.965,25,2.75,26,3.581,27,3.716,28,3.459,29,1.554,30,2.998,31,3.459,32,3.11,33,0.261,34,1.075,35,0.177,36,0.425,37,1.024,38,1.699,39,1.305,40,0.301,41,1.072,42,2.802,43,0.248,45,0.3,46,0.278,47,0.3,49,0.485,50,0.395,51,0.087,52,0.395,53,3.058,54,1.719,55,2.389,56,1.628,57,0.082,58,0.608,59,1.672,60,3.244,61,0.994,62,2.245,63,3.244,64,1.77,65,3.581,66,3.192,67,4.447,68,3.832,69,3.244,70,2.013,71,2.423,72,3.388,73,2.683,74,3.842,75,3.244,76,1.374,77,1.743,78,1.77,79,0.962,80,1.77,81,1.77,82,1.824,83,1.546,84,2.089,85,2.089,86,3.11,87,3.11,88,2.302,89,3.11,90,2.089,91,1.278,92,1.278,93,1.161,94,2.089,95,2.013,96,3.11,97,3.11,98,2.895,99,2.245,100,1.508,101,2.998,102,2.972,103,3.716,104,3.622,105,3.347,106,2.895,107,1.508,108,2.998,109,1.945,110,1.882,111,3.832,112,1.032,113,2.089,114,1.882,115,2.013,116,2.802,117,1.21,118,2.089,119,2.089,120,4.117,121,2.013,122,2.089,123,2.895,124,2.089,125,2.998,126,0.654,127,2.089,128,2.013,129,2.089,130,2.013,131,2.089,132,2.423,133,2.998,134,1.472,135,2.089,136,1.945,137,0.003,138,0.004,139,0.003,216,1.908,3456,5.186,3457,3.483]],["title/classes/TryToLogOut.html",[0,0.251,72,2.298]],["body/classes/TryToLogOut.html",[0,0.455,1,3.2,2,0.528,3,0.029,4,0.029,5,0.066,6,2,7,1.412,8,1.377,9,4.356,10,1.674,11,2.464,12,3.374,13,3.836,14,3.632,15,1.935,16,2.795,17,1.914,18,3.778,19,0.007,20,3.772,21,3.061,22,2.148,23,2.07,24,4.011,25,2.795,26,3.641,27,3.778,28,3.517,29,1.58,30,3.061,31,3.517,32,3.175,33,0.254,34,1.083,35,0.182,36,0.434,37,0.954,38,1.483,39,1.314,40,0.208,42,2.86,43,0.144,49,0.498,50,0.406,51,0.089,52,0.406,53,3.109,54,1.768,55,2.429,56,1.674,57,0.083,58,0.625,59,1.719,60,3.298,61,1.022,62,2.292,63,3.298,64,1.82,65,3.641,66,3.25,67,4.493,68,3.885,69,3.298,70,2.07,71,2.474,72,3.665,73,2.727,74,3.887,75,3.298,76,1.403,77,1.763,78,1.82,79,0.973,80,1.82,81,1.82,82,1.875,83,1.59,84,2.148,85,2.148,86,3.175,87,3.175,88,2.35,89,3.175,90,2.148,91,1.289,92,1.289,93,1.171,94,2.148,95,2.07,96,2.148,97,2.148,98,2,99,1.551,100,1.041,101,2.07,102,3.013,103,3.778,104,3.109,105,3.403,106,2,107,1.041,108,2.07,109,2,110,1.935,111,4.489,112,1.569,113,3.175,114,2.86,115,3.061,116,2.86,117,1.235,118,2.148,119,2.148,120,4.173,121,2.07,122,2.148,123,2.956,124,2.148,125,3.061,126,0.673,127,2.148,128,2.07,129,2.148,130,2.07,131,2.148,132,2.474,133,3.061,134,1.514,135,2.148,136,2,137,0.003,138,0.004,139,0.003,3458,3.582]],["title/components/TypeAheadSettingsComponent.html",[268,0.957,452,1.648]],["body/components/TypeAheadSettingsComponent.html",[0,0.168,3,0.025,4,0.025,5,0.03,19,0.007,29,1.196,33,0.265,34,0.613,35,0.158,36,0.391,40,0.181,43,0.383,45,0.713,46,0.69,47,0.713,49,0.903,50,0.955,51,0.091,52,0.354,57,0.03,61,0.89,79,0.851,100,0.907,107,1.887,112,0.924,117,1.72,137,0.002,138,0.003,139,0.002,148,2.119,151,2.117,159,0.803,199,0.924,200,0.96,268,1.191,269,1.104,270,1.655,271,1.152,272,1.35,273,1.177,274,1.177,276,2.285,277,1.104,278,3.427,280,2.229,282,1.8,288,2.305,291,1.196,292,2.908,293,1.152,309,2.234,310,2.696,317,0.565,321,0.924,322,0.998,383,1.655,397,0.979,398,1.8,399,1.8,400,1.082,401,2.449,402,1.177,403,1.177,404,1.082,405,1.177,406,3.172,407,1.177,408,2.449,409,1.104,410,1.177,411,1.082,412,1.8,413,1.104,414,1.177,415,1.127,416,1.152,417,1.018,418,1.8,419,1.082,420,1.177,421,1.104,422,1.104,423,1.177,424,1.082,425,1.177,426,1.104,427,1.177,428,1.104,429,1.177,430,1.082,431,1.177,432,1.104,433,1.177,434,1.127,435,1.104,436,1.177,437,3.272,438,1.762,439,2.186,440,1.177,441,1.104,442,1.177,443,1.082,444,1.104,445,1.725,446,1.8,447,1.104,448,1.104,449,1.387,450,1.104,451,1.177,452,2.298,453,3.024,454,1.104,455,0.907,456,1.104,457,1.082,458,1.177,459,1.082,460,1.152,461,1.177,548,2.172,827,4.049,989,1.87,1058,3.349,1059,4.426,1062,4.426,1063,3.892,1064,6.437,1065,4.426,1066,3.892,1067,5.534,1068,4.426,1069,4.263,1070,5.03,1071,5.03,1072,4.426,1073,4.426,1074,4.426,1079,3.254,1081,3.254,1084,3.751,1085,3.254,1086,3.892,1088,3.254,1092,3.951,1094,2.976,1108,2.127,1166,2.03,1308,3.106,1825,6.847,1827,2.24,1828,2.24,1829,2.24,1835,2.24,1836,2.24,1837,2.24,1838,2.24,1839,2.24,1840,2.24,1841,2.24,1842,2.24,1843,2.24,1844,2.24,1845,2.24,1846,2.24,1847,2.24,1851,2.24,1854,3.634,2679,2.545,2680,2.773,2682,3.894,2683,5.152,2740,2.545,2848,2.773,2850,4.242,2927,2.773,2928,2.545,2929,2.773,3459,4.77,3460,5.794,3461,3.118,3462,3.118,3463,3.118,3464,3.118,3465,4.77,3466,3.118,3467,3.118,3468,3.118,3469,3.118,3470,3.118,3471,3.118,3472,3.118,3473,3.118,3474,3.118,3475,3.118,3476,3.118,3477,3.118,3478,3.118,3479,3.118]],["title/components/TypeFilterComponent.html",[268,0.957,454,1.648]],["body/components/TypeFilterComponent.html",[0,0.19,3,0.028,4,0.042,5,0.05,8,0.528,17,1.814,19,0.007,29,2.059,33,0.255,34,0.671,35,0.178,36,0.428,37,0.451,40,0.204,43,0.329,45,0.303,46,0.588,47,0.303,49,0.489,50,0.399,51,0.124,52,0.399,57,0.034,61,1.003,62,1.522,93,0.498,100,1.022,107,1.518,112,1.041,117,1.8,137,0.003,138,0.004,139,0.003,159,0.878,182,1.258,199,1.041,200,1.082,237,1.041,240,2.377,268,1.281,269,1.244,270,1.811,271,1.298,272,1.522,273,1.326,274,1.326,276,2.456,277,1.244,278,3.464,280,2.439,282,1.97,288,2.263,291,1.309,292,2.718,293,1.298,309,1.534,310,1.671,317,0.636,318,1.082,319,1.298,321,1.041,322,1.125,340,1.147,367,2.192,376,1.485,377,1.451,378,1.485,379,1.485,380,1.485,381,1.485,382,1.298,383,2.391,384,1.485,385,1.485,386,1.485,387,1.418,388,1.485,389,1.451,390,1.485,391,1.485,392,1.485,393,1.485,395,2.677,397,1.103,398,1.97,399,1.97,400,1.219,401,2.601,402,1.326,403,1.326,404,1.219,405,1.326,406,1.244,407,1.326,408,2.601,409,1.244,410,1.326,411,1.219,412,1.97,413,1.244,414,1.326,415,1.271,416,1.298,417,1.147,418,1.97,419,1.219,420,1.326,421,1.244,422,1.244,423,1.326,424,1.219,425,1.326,426,1.244,427,1.326,428,1.244,429,1.326,430,1.219,431,1.326,432,1.244,433,1.326,434,1.271,435,1.244,436,1.326,437,1.244,438,1.298,439,2.35,440,1.326,441,1.244,442,1.326,443,1.219,444,1.244,445,1.271,446,1.97,447,1.244,448,1.244,449,1.518,450,1.244,451,1.326,452,1.244,453,1.244,454,2.441,455,2.439,456,1.244,457,1.219,458,1.326,459,1.219,460,1.298,461,1.326,495,1.84,643,2.915,648,2.288,649,2.288,650,2.031,651,2.108,653,2.031,656,2.108,702,1.962,703,1.899,805,1.451,874,2.677,989,3.735,1058,3.6,1063,3.735,1069,3.985,1084,3.985,1086,2.108,1103,2.677,1104,3.75,1105,2.397,1106,2.524,1123,2.677,1125,2.677,1127,2.677,1135,2.677,1136,2.677,1177,3.131,1234,6.13,1247,3.125,1336,6.024,1403,2.524,1721,5.084,1756,2.192,1902,2.397,1968,2.677,2010,7.458,2011,7.458,2111,2.677,2114,2.677,2116,2.677,2417,3.125,2510,5.024,2524,2.524,2748,6.55,2896,2.869,2897,5.538,2898,4.261,2899,5.084,2901,5.627,2904,3.125,2909,3.125,2912,2.869,2913,5.084,2915,2.869,2918,3.125,2919,2.869,2922,2.869,2923,2.869,2928,2.869,3180,3.125,3182,3.125,3405,2.869,3480,6.228,3481,3.514,3482,3.514,3483,3.514,3484,3.514,3485,3.514,3486,3.514,3487,5.22,3488,3.514,3489,3.514,3490,3.514,3491,3.514,3492,3.514,3493,3.514,3494,3.514,3495,3.514,3496,3.514,3497,3.514,3498,3.514,3499,3.514,3500,3.514,3501,3.514,3502,3.514,3503,3.514,3504,3.514,3505,3.514,3506,3.514,3507,5.22,3508,5.22,3509,5.22,3510,5.22,3511,5.22,3512,7.366,3513,3.514,3514,6.228,3515,5.22,3516,3.514,3517,5.22,3518,6.228,3519,5.22,3520,3.514,3521,3.514]],["title/classes/UpdateTimeReference.html",[0,0.251,1888,3.031]],["body/classes/UpdateTimeReference.html",[0,0.43,2,0.821,3,0.045,4,0.045,5,0.053,7,2.197,8,1.365,10,3.933,16,2.472,19,0.007,33,0.263,34,1.081,35,0.283,36,0.589,37,0.924,38,1.794,39,1.335,40,0.324,41,1.715,43,0.319,45,0.48,46,0.445,47,0.48,49,0.775,50,0.632,51,0.119,52,0.632,55,2.774,56,2.603,57,0.083,58,0.973,71,2.603,77,1.892,83,2.472,88,3.535,116,3.009,126,1.351,137,0.004,138,0.005,139,0.004,216,2.452,234,1.651,270,1.932,299,4.969,307,4.001,449,2.595,653,3.22,747,2.83,903,3.192,928,4.243,998,3.626,1066,4.314,1858,4.682,1859,4.001,1860,4.243,1861,3.799,1862,4.547,1863,6.871,1864,4.547,1865,4.547,1868,4.547,1869,3.626,1870,4.001,1871,3.475,1872,4.001,1873,4.547,1874,4.604,1875,4.547,1876,4.905,1877,4.547,1878,5.166,1879,5.166,1880,4.243,1881,3.799,1882,4.243,1883,4.547,1884,4.001,1885,4.547,1886,4.547,1887,4.547,1888,5.185,1889,4.547,1890,4.547,1891,4.243,3522,7.192,3523,5.57,3524,5.57]],["title/classes/UpdatedSubscription.html",[0,0.251,243,2.298]],["body/classes/UpdatedSubscription.html",[0,0.489,2,0.644,3,0.035,4,0.035,5,0.042,8,1.384,12,1.579,19,0.007,33,0.263,34,1.174,35,0.222,36,0.5,38,1.772,39,1.411,40,0.466,43,0.245,49,0.608,50,0.495,51,0.086,52,0.495,57,0.088,58,0.763,76,1.157,77,1.974,79,0.573,91,1.414,92,1.414,93,1.285,126,1.603,134,1.846,137,0.003,138,0.004,139,0.003,159,1.185,213,3.476,214,3.687,215,2.287,219,2.439,220,2.463,221,1.846,222,1.723,223,2.219,224,3.578,225,4.893,226,2.259,227,3.476,228,2.097,229,3.38,230,3.103,231,2.36,232,1.803,233,3.578,234,1.81,235,3.476,236,1.723,237,1.294,238,3.476,239,1.891,240,2.78,241,2.156,242,2.156,243,3.764,244,2.287,245,1.936,246,1.371,247,1.345,248,1.579,249,1.579,250,3.476,251,1.223,252,1.294,253,1.398,254,2.439,255,2.439,256,2.439,257,2.156,258,2.439,259,2.439,260,2.439,261,2.439,262,2.439,263,3.41,264,2.439,265,2.439,266,1.989,267,2.287,3525,6.107]],["title/classes/User.html",[0,0.251,66,1.719]],["body/classes/User.html",[0,0.382,2,1.043,3,0.057,4,0.057,5,0.067,19,0.007,33,0.2,37,1.071,39,1.358,40,0.484,43,0.284,45,0.609,46,0.564,47,0.609,57,0.067,66,3.078,79,1.24,104,3.491,137,0.005,138,0.006,139,0.005,909,6.803,910,6.803,3526,7.072,3527,7.072,3528,7.072,3529,7.072,3530,7.072,3531,7.072]],["title/pipes/XAxisTickFormatPipe.html",[805,1.922,1997,3.546]],["body/pipes/XAxisTickFormatPipe.html",[0,0.227,3,0.034,4,0.034,5,0.04,9,3.019,19,0.007,25,2.638,33,0.195,34,0.54,43,0.277,45,0.594,46,0.631,47,0.594,49,0.827,50,1.071,51,0.084,57,0.04,79,1.259,83,3.327,137,0.003,138,0.004,139,0.003,178,2.134,182,1.935,228,2.853,277,1.488,291,1.054,309,1.698,317,0.761,339,4.924,805,2.453,865,1.865,903,3.06,989,3.564,1036,3.708,1038,4.984,1767,5.71,1874,4.333,1943,4.851,1997,4.527,2023,6.665,2024,6.665,2309,4.851,2329,4.527,2639,6.702,3217,8.245,3221,6.665,3224,7.301,3234,5.285,3250,6.665,3278,5.285,3305,5.285,3532,4.202,3533,4.202,3534,5.943,3535,4.202,3536,5.943,3537,4.202,3538,8.211,3539,7.496,3540,4.202,3541,5.943,3542,4.202,3543,5.943,3544,5.943,3545,5.943,3546,5.943,3547,4.202,3548,5.943,3549,4.202,3550,5.943,3551,6.895,3552,7.909,3553,7.909,3554,8.622,3555,4.202,3556,5.943,3557,5.943,3558,5.943,3559,4.202,3560,4.202,3561,4.202,3562,4.202,3563,4.202,3564,4.202,3565,6.895,3566,6.895,3567,4.202,3568,4.202,3569,5.943,3570,5.943,3571,4.202]],["title/dependencies.html",[465,3.13,3572,3.874]],["body/dependencies.html",[4,0.047,19,0.007,33,0.166,52,0.843,53,2.895,54,2.895,117,1.368,137,0.004,138,0.005,139,0.004,252,1.738,317,1.062,318,1.806,329,4.409,330,3.169,453,2.077,465,3.275,467,4.297,477,3.391,482,5.663,483,5.339,492,3.391,495,3.071,498,5.663,499,4.788,510,4.788,511,4.788,513,4.788,514,6.217,515,6.068,517,4.788,518,4.788,519,4.788,534,3.275,567,3.659,578,4.001,700,4.788,701,6.068,703,3.169,903,3.299,1022,3.169,1311,4.788,1430,4.213,1644,4.788,1871,3.659,2018,5.216,2019,5.216,2879,5.216,3573,5.866,3574,9.385,3575,5.866,3576,5.866,3577,5.866,3578,5.866,3579,5.866,3580,5.866,3581,5.866,3582,5.866,3583,7.434,3584,8.854,3585,5.866,3586,5.866,3587,5.866,3588,5.866,3589,5.866,3590,5.866,3591,5.866,3592,5.866,3593,5.866,3594,5.866,3595,5.866,3596,5.866,3597,5.866,3598,5.866,3599,5.866,3600,5.866,3601,7.434,3602,5.866,3603,5.866,3604,5.866,3605,5.866,3606,5.866,3607,5.866,3608,5.866]],["title/miscellaneous/enumerations.html",[3609,2.951,3610,4.986]],["body/miscellaneous/enumerations.html",[1,1.835,3,0.029,6,2.016,8,0.801,10,2.957,12,3.15,19,0.007,20,1.835,35,0.183,50,1.119,59,2.557,60,1.891,61,1.806,62,2.74,63,1.891,64,1.835,65,3.658,66,2.977,67,4.506,68,3.9,69,1.891,70,2.087,71,2.957,72,1.782,73,2.74,74,1.891,75,1.891,76,2.192,78,2.706,80,2.706,81,2.706,82,2.789,126,1.464,134,1.526,137,0.003,138,0.004,139,0.003,142,2.166,144,3.195,148,1.179,159,1.498,194,2.087,195,2.166,196,2.166,198,3.195,199,1.07,200,1.112,201,2.166,202,2.166,203,2.166,204,1.603,213,1.782,214,1.891,215,2.789,223,2.706,224,1.835,225,4.707,226,2.701,227,1.782,228,1.733,229,1.733,230,1.835,231,1.951,232,2.199,233,1.835,234,2.452,235,1.782,236,2.755,237,1.07,238,1.782,239,2.306,240,2.425,241,1.782,242,2.629,243,1.782,244,1.891,245,2.048,246,2.339,247,2.294,248,2.526,249,2.526,250,1.782,333,2.166,349,2.016,417,2.066,449,2.166,455,1.549,540,3.079,548,4.09,558,2.351,565,4.66,566,4.396,643,2.016,644,2.751,650,3.079,652,4.058,653,2.087,654,2.948,677,2.948,705,4.348,989,3.195,1017,2.166,1025,3.468,1027,3.826,1099,1.951,1148,2.948,1155,3.633,1163,4.348,1164,2.594,1165,2.751,1166,2.351,1211,2.351,1284,3.468,1285,1.951,1286,2.166,1287,2.166,1343,3.211,1344,4.736,1348,4.348,1357,2.948,1499,2.351,1528,2.253,1529,2.253,1586,3.419,1588,1.951,1756,2.253,1858,2.351,1859,2.594,1872,3.826,1874,3.079,1876,3.633,1888,2.351,1965,1.951,1966,3.079,2094,3.211,2111,4.058,2114,4.821,2116,4.821,2137,3.211,2138,3.211,2139,3.211,2140,3.211,2141,3.211,2158,2.463,2169,2.166,2173,3.195,2174,1.951,2175,2.016,2176,2.016,2177,2.016,2178,2.016,2179,2.253,2196,2.166,2200,2.016,2201,2.016,2202,3.948,2203,2.016,2204,2.016,2469,2.463,2470,2.751,2474,4.348,2475,2.463,2637,3.211,2642,3.211,3210,2.948,3343,3.211,3351,4.348,3402,3.211,3403,3.211,3404,3.211,3405,2.948,3406,3.211,3407,3.211,3408,3.211,3409,3.211,3410,3.211,3411,3.211,3414,3.211,3415,6.212,3420,4.736,3421,3.211,3609,2.751,3610,3.211,3611,5.326,3612,3.211,3613,3.211,3614,3.611,3615,3.211,3616,6.212,3617,3.211,3618,3.611,3619,3.611,3620,3.211,3621,3.611,3622,3.211,3623,3.211,3624,3.211,3625,3.611,3626,3.611]],["title/index.html",[35,0.236,3627,4.14]],["body/index.html",[2,0.608,19,0.007,73,1.786,100,1.984,112,2.022,137,0.003,138,0.004,139,0.003,269,2.972,270,1.43,294,4.902,349,2.303,397,1.295,404,2.367,406,2.416,409,2.972,411,2.912,413,2.416,415,2.467,419,2.912,421,2.972,422,2.416,424,2.912,426,2.416,428,2.416,430,2.367,432,2.416,434,2.467,435,2.416,437,2.416,441,2.416,443,2.367,444,2.416,447,2.416,448,2.416,450,2.416,452,2.416,454,2.416,456,1.46,457,2.367,459,2.367,462,1.702,463,6.767,464,1.98,465,2.303,466,2.473,467,2.384,468,2.473,469,2.095,470,3.667,471,3.667,472,3.667,473,3.667,474,4.902,475,6.814,476,5.64,477,3.39,478,2.473,533,2.573,537,3.81,558,2.685,563,2.384,667,6.216,668,3.667,669,3.667,670,3.667,671,4.902,708,3.687,805,1.702,913,1.877,921,4.443,1181,4.258,1255,3.81,1476,6.711,1477,3.667,1478,3.667,1479,3.667,1480,3.667,1481,4.902,1511,4.902,1916,4.902,1992,7.402,1993,3.667,1994,3.667,1995,3.667,1996,3.667,1997,5.199,1998,4.902,2791,3.667,2792,3.667,2793,4.902,2794,5.199,2836,7.149,2837,3.667,2838,3.667,2839,3.667,2840,4.902,2872,3.667,2873,3.667,2953,6.216,2954,3.667,2955,3.667,2956,3.667,2957,4.902,3627,3.667,3628,4.124,3629,4.124,3630,4.124,3631,4.124,3632,4.124,3633,4.124]],["title/modules.html",[464,3.064]],["body/modules.html",[19,0.006,137,0.005,138,0.006,139,0.005,371,8.214,463,4.885,464,3.265,474,4.885,475,4.885,476,4.885,483,6.865,514,7.281,667,5.181,671,4.885,1476,4.885,1992,5.181,1998,4.885,2836,5.181,2840,4.885,2953,5.181,2957,4.885,3634,9.558,3635,9.776,3636,9.237]],["title/routes.html",[533,3.982]],["body/routes.html",[19,0.006,137,0.006,138,0.006,139,0.006,533,4.795]],["title/miscellaneous/typealiases.html",[3609,2.951,3637,5.607]],["body/miscellaneous/typealiases.html",[1,3.056,6,3.358,19,0.007,20,3.056,33,0.17,35,0.305,60,3.149,63,3.149,69,3.149,72,2.969,74,3.149,75,3.149,136,4.217,137,0.004,138,0.005,139,0.004,213,2.969,214,3.149,215,3.954,224,3.056,227,2.969,229,2.888,233,3.056,235,2.969,238,2.969,243,2.969,245,2.452,250,2.969,267,3.954,333,3.608,643,3.358,644,4.582,657,4.103,660,6.165,1017,3.608,1099,3.25,1285,3.25,1286,3.608,1287,3.608,1499,3.916,1506,5.151,1528,3.753,1529,3.753,1588,3.25,1858,3.916,1859,4.32,1874,3.477,1888,3.916,1891,5.753,1965,3.25,2158,4.103,2165,5.425,2169,3.608,2174,3.25,2175,3.358,2176,3.358,2177,3.358,2178,3.358,2194,4.712,2196,3.608,2200,3.358,2201,3.358,2203,3.358,2204,3.358,2212,4.712,2469,4.103,2470,4.582,2475,4.103,2479,6.165,3609,4.582,3612,5.349,3613,5.349,3615,5.349,3616,5.349,3617,5.349,3620,5.349,3622,5.349,3623,5.349,3624,5.349,3638,6.015]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":865,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"directives/MouseWheelDirective.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["0.3.0",{"_index":3580,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3411,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["0.5.25",{"_index":3599,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":2745,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.8.29",{"_index":3608,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":349,"title":{"classes/HandleUnexpectedError-1.html":{}},"body":{"components/AppComponent.html":{},"injectables/HandlebarsService.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1)?location.pathname",{"_index":890,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["1.0.14",{"_index":3600,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":3594,"title":{},"body":{"dependencies.html":{}}}],["1.2.17",{"_index":3581,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":3606,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3405,"title":{},"body":{"classes/TimeReference.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["10.1.0",{"_index":3588,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":707,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["11.0.1",{"_index":3585,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":3241,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["13",{"_index":3628,"title":{},"body":{"index.html":{}}}],["16",{"_index":3335,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["16px",{"_index":2412,"title":{},"body":{"components/IconComponent.html":{}}}],["16th",{"_index":3339,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["19",{"_index":3630,"title":{},"body":{"index.html":{}}}],["2",{"_index":558,"title":{"classes/HandleUnexpectedError-2.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["2*60*60*1000",{"_index":1443,"title":{},"body":{"injectables/CardService.html":{}}}],["2.0",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["2.0.1",{"_index":3601,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":3596,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":3590,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":3598,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":3593,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["22",{"_index":3633,"title":{},"body":{"index.html":{}}}],["28",{"_index":3629,"title":{},"body":{"index.html":{}}}],["2px",{"_index":3515,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["3",{"_index":2168,"title":{"classes/HandleUnexpectedError-3.html":{}},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["3.6.0",{"_index":3604,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":1248,"title":{},"body":{"components/CardComponent.html":{}}}],["32px",{"_index":2411,"title":{},"body":{"components/IconComponent.html":{}}}],["3600",{"_index":3409,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["4",{"_index":2195,"title":{"classes/HandleUnexpectedError-4.html":{}},"body":{"components/TimeLineComponent.html":{}}}],["4.0.0",{"_index":3583,"title":{},"body":{"dependencies.html":{}}}],["4.0.14",{"_index":3595,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":3597,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":3591,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":1235,"title":{},"body":{"components/CardComponent.html":{}}}],["401",{"_index":1039,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{}}}],["5.8.1",{"_index":3582,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1042,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5000",{"_index":1533,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["5px",{"_index":1237,"title":{},"body":{"components/CardComponent.html":{}}}],["6",{"_index":3238,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["6.3.3",{"_index":3602,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3407,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["600000",{"_index":1456,"title":{},"body":{"injectables/CardService.html":{}}}],["64px",{"_index":2410,"title":{},"body":{"components/IconComponent.html":{}}}],["7",{"_index":3245,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["7.1.0",{"_index":3584,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":3574,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":3576,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":3631,"title":{},"body":{"index.html":{}}}],["7d",{"_index":3305,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["8",{"_index":763,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["8px",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["9",{"_index":3632,"title":{},"body":{"index.html":{}}}],["_",{"_index":702,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_.clonedeep(startdomain",{"_index":3252,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(startdomain2",{"_index":3269,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(startdomain3",{"_index":3280,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(startdomain4",{"_index":3262,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(value",{"_index":3318,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.difference(forma.tags,formb.tags).length===0",{"_index":2920,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(formb.tags,forma.tags).length===0",{"_index":2921,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(work",{"_index":3067,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.fill(this.expandedmenu,false",{"_index":2722,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_.get(oauth2conf",{"_index":728,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["_.intersection(card.tags,status.tags).length",{"_index":2123,"title":{},"body":{"injectables/FilterService.html":{}}}],["_.isequal(forma",{"_index":1146,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TimeFilterComponent.html":{}}}],["_.isequal(forma,formb",{"_index":3501,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["_.merge(acc,val",{"_index":3036,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.remove(this.loadingi18n",{"_index":3081,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.uniq(ids",{"_index":3066,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_defaultfilters",{"_index":2095,"title":{},"body":{"injectables/FilterService.html":{}}}],["_description",{"_index":2439,"title":{},"body":{"components/InfoComponent.html":{}}}],["_filter",{"_index":2899,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_htmlcontent",{"_index":1633,"title":{},"body":{"components/DetailComponent.html":{}}}],["_i18nprefix",{"_index":1172,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["_locale",{"_index":2336,"title":{},"body":{"injectables/I18nService.html":{}}}],["_locale:string",{"_index":2351,"title":{},"body":{"injectables/I18nService.html":{}}}],["_selectediframeurl",{"_index":2423,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_thirdmenus",{"_index":2694,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_time",{"_index":2440,"title":{},"body":{"components/InfoComponent.html":{}}}],["_timezone",{"_index":2337,"title":{},"body":{"injectables/I18nService.html":{}}}],["_timezone:string",{"_index":2352,"title":{},"body":{"injectables/I18nService.html":{}}}],["_username",{"_index":2441,"title":{},"body":{"components/InfoComponent.html":{}}}],["a.payload.lightcards",{"_index":1364,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["a[key",{"_index":2328,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["abstractcontrol",{"_index":2509,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["acc",{"_index":1953,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["accept",{"_index":65,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["acceptlogin",{"_index":1,"title":{"classes/AcceptLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogin(authenticationinfo",{"_index":960,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authinfo",{"_index":971,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogout",{"_index":74,"title":{"classes/AcceptLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsuccess",{"_index":75,"title":{"classes/AcceptLogOutSuccess.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsucess",{"_index":949,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["access_token",{"_index":680,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["accessors",{"_index":1177,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["according",{"_index":3539,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["accordingly",{"_index":928,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["action",{"_index":8,"title":{"classes/Action.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["action.buttonstyle",{"_index":1712,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.buttonstyle.split",{"_index":1713,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle",{"_index":1715,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle.split",{"_index":1716,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.payload",{"_index":1001,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed",{"_index":1564,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed/cards/\")>=0",{"_index":1568,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/thirdparty/\")>=0",{"_index":1574,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.menu_entry_id",{"_index":2623,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.menu_version",{"_index":2622,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.routerstate",{"_index":1570,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.routerstate.url.indexof(\"/feed/cards/\")>=0",{"_index":1563,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.settings.defaulttags",{"_index":1925,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.settings.defaulttags.length>0",{"_index":1924,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["actionid",{"_index":1652,"title":{},"body":{"components/DetailComponent.html":{}}}],["actionreducermap",{"_index":583,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":919,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{}}}],["actions?:ofmap",{"_index":193,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actiontype",{"_index":144,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["activate",{"_index":1757,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1600,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["active",{"_index":656,"title":{},"body":{"classes/ApplyFilter.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["active:boolean",{"_index":2082,"title":{},"body":{"classes/Filter.html":{}}}],["activedetail",{"_index":1752,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activedetail.length",{"_index":1758,"title":{},"body":{"components/DetailsComponent.html":{}}}],["actual",{"_index":3223,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["actual_component",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["actualmoment",{"_index":3246,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["add",{"_index":242,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/CardOperation.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addauthheadersifnecessary",{"_index":3436,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addauthheadersifnecessary(request",{"_index":3440,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addcarddatatimeline",{"_index":3323,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["added",{"_index":1298,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["addlightcardfailure",{"_index":213,"title":{"classes/AddLightCardFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addlightcardfailure({error",{"_index":1392,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["af.payload.name",{"_index":1397,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["af.payload.status.end",{"_index":1401,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["afterviewinit",{"_index":1728,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{}}}],["ahead",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["aims",{"_index":86,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["alarm",{"_index":2111,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert('submitted",{"_index":1147,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["alert(`${actionid",{"_index":1723,"title":{},"body":{"components/DetailComponent.html":{}}}],["aliases",{"_index":3638,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1249,"title":{},"body":{"components/CardComponent.html":{}}}],["already",{"_index":2803,"title":{},"body":{"modules/ServicesModule.html":{}}}],["always",{"_index":1615,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["angular",{"_index":720,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["angular/animations",{"_index":3573,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3575,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"components/IconComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["angular/compiler",{"_index":3577,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"modules/FeedModule.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":3578,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/FeedRoutingModule.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"dependencies.html":{}}}],["animations",{"_index":3293,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["app",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["app.component",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":269,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["appdraggable",{"_index":1770,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appdraggable]'},{'name",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appear",{"_index":1816,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appeffects",{"_index":634,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["application",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["application/x",{"_index":759,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["applies",{"_index":2079,"title":{},"body":{"classes/Filter.html":{}}}],["apply",{"_index":988,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["applyfilter",{"_index":643,"title":{"classes/ApplyFilter.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["applyfilter(card",{"_index":2068,"title":{},"body":{"classes/Filter.html":{}}}],["applyfilter({name:filtertype.tag_filter,active:true,status:{tags:v",{"_index":1933,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["appmetareducers",{"_index":637,"title":{},"body":{"interfaces/AppState.html":{}}}],["appmodule",{"_index":463,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["appmousewheel",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appreducer",{"_index":635,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["appropriate",{"_index":871,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["approutingmodule",{"_index":474,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":321,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives",{"_index":544,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{}}}],["archives'},{'name",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives.component",{"_index":673,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{}}}],["archives.component.html",{"_index":663,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archives.component.scss",{"_index":662,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archivescomponent",{"_index":404,"title":{"components/ArchivesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivesmodule",{"_index":667,"title":{"modules/ArchivesModule.html":{}},"body":{"modules/ArchivesModule.html":{},"index.html":{},"modules.html":{}}}],["archivesroutingmodule",{"_index":671,"title":{"modules/ArchivesRoutingModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["args",{"_index":2300,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[2",{"_index":2301,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["arguments",{"_index":1784,"title":{},"body":{"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{}}}],["array",{"_index":1662,"title":{},"body":{"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"interfaces/TimelineState.html":{}}}],["array(menus.length",{"_index":2721,"title":{},"body":{"components/NavbarComponent.html":{}}}],["array[0",{"_index":2617,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["arrow::after",{"_index":3521,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["ask",{"_index":711,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfromcode(code",{"_index":776,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfrompassword(login",{"_index":791,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenurl",{"_index":712,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["assets/styles/_variables.scss",{"_index":2417,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["assignconfigurationproperties(oauth2conf",{"_index":726,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["attachaction",{"_index":1635,"title":{},"body":{"components/DetailComponent.html":{}}}],["attachaction(button",{"_index":1650,"title":{},"body":{"components/DetailComponent.html":{}}}],["attempt",{"_index":68,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":811,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["auth.firstname",{"_index":807,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["auth.lastname",{"_index":809,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticate",{"_index":1010,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticated",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/InitAuthStatus.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["authentication.reducer.ts",{"_index":27,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authentication.service",{"_index":1431,"title":{},"body":{"injectables/CardService.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationactions",{"_index":136,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationactiontypes",{"_index":59,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.acceptlogin",{"_index":32,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogout",{"_index":133,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogoutsuccess",{"_index":135,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.checkauthenticationstatus",{"_index":95,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.initauthstatus",{"_index":90,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.rejectlogin",{"_index":125,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologin",{"_index":108,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologout",{"_index":115,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffect",{"_index":120,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffects",{"_index":15,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationguard",{"_index":535,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["authenticationreducer",{"_index":581,"title":{},"body":{"interfaces/AppState.html":{}}}],["authenticationservice",{"_index":708,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"components/LoginComponent.html":{},"modules/ServicesModule.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["authenticationservice,private",{"_index":1433,"title":{},"body":{"injectables/CardService.html":{}}}],["authenticationservice.clearauthenticationinformation",{"_index":995,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.computeredirecturi",{"_index":788,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.decodetoken(payload.access_token",{"_index":861,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.extractidentificationinformation",{"_index":969,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.extracttoken",{"_index":878,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.getsecurityheader",{"_index":1454,"title":{},"body":{"injectables/CardService.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationservice.isexpirationdateover",{"_index":967,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.verifyexpirationdate",{"_index":835,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authinfo",{"_index":968,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authinitialstate",{"_index":911,"title":{},"body":{"interfaces/AuthState.html":{}}}],["authobject",{"_index":676,"title":{"classes/AuthObject.html":{}},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authorization",{"_index":876,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authorization_code",{"_index":783,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authservice",{"_index":920,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authstate",{"_index":568,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["autoscale",{"_index":3292,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["available",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["avec",{"_index":3285,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["axis",{"_index":2024,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["b[key",{"_index":2330,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["back",{"_index":745,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/MenuEffects.html":{}}}],["background",{"_index":3519,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["badge",{"_index":1246,"title":{},"body":{"components/CardComponent.html":{}}}],["base",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["basehref",{"_index":2398,"title":{},"body":{"components/IconComponent.html":{}}}],["basehref?basehref:'/')+'assets/images/icons",{"_index":2401,"title":{},"body":{"components/IconComponent.html":{}}}],["basemoment.add(computedoffsetduration",{"_index":3400,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=moment(this.virtualtime",{"_index":3397,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=ref",{"_index":3399,"title":{},"body":{"classes/TimeReference.html":{}}}],["basesettingcomponent",{"_index":406,"title":{"components/BaseSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["basesettingcomponent:27",{"_index":1829,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:28",{"_index":1827,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:29",{"_index":1828,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:30",{"_index":1845,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:31",{"_index":1847,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:32",{"_index":1846,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:33",{"_index":1844,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:34",{"_index":1843,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:40",{"_index":1840,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:70",{"_index":1839,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:75",{"_index":1842,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:79",{"_index":1837,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:83",{"_index":1835,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:88",{"_index":1836,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:94",{"_index":1838,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:98",{"_index":1841,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettings",{"_index":1062,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["bearer",{"_index":877,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["beat",{"_index":1879,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["before",{"_index":3222,"title":{},"body":{"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["begin",{"_index":3220,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["behaviour",{"_index":2048,"title":{},"body":{"classes/Filter.html":{}}}],["beware",{"_index":784,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{}}}],["big",{"_index":2373,"title":{},"body":{"components/IconComponent.html":{}}}],["big:boolean",{"_index":2391,"title":{},"body":{"components/IconComponent.html":{}}}],["bindactions",{"_index":1636,"title":{},"body":{"components/DetailComponent.html":{}}}],["bindactions(third",{"_index":1654,"title":{},"body":{"components/DetailComponent.html":{}}}],["block",{"_index":1812,"title":{},"body":{"directives/DraggableDirective.html":{},"components/InfoComponent.html":{}}}],["body",{"_index":3520,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["boolean",{"_index":148,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":499,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["border",{"_index":1247,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["both",{"_index":2047,"title":{},"body":{"classes/Filter.html":{}}}],["bottom",{"_index":1236,"title":{},"body":{"components/CardComponent.html":{}}}],["break",{"_index":1041,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/TimeSpan.html":{}}}],["browse",{"_index":3635,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":2563,"title":{},"body":{"components/LoginComponent.html":{}}}],["bubble",{"_index":3421,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["buffer",{"_index":1944,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["build",{"_index":721,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["buildconfigselector",{"_index":698,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["buildfilterselector",{"_index":1968,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["buildsettingsorconfigselector",{"_index":2348,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{},"components/TagsFilterComponent.html":{}}}],["buildsettingsselector",{"_index":1101,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["business",{"_index":925,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["business_start",{"_index":1224,"title":{},"body":{"components/CardComponent.html":{}}}],["button",{"_index":105,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["button.addeventlistener('click",{"_index":1722,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.attributes['action",{"_index":1706,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add('fa",{"_index":1718,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add(c",{"_index":1717,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add('btn",{"_index":1711,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add(c",{"_index":1714,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttons",{"_index":1705,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttonstyle",{"_index":149,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["c",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["call",{"_index":741,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["call.pipe",{"_index":796,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["called",{"_index":102,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["calling",{"_index":986,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["canactivate",{"_index":543,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["caps",{"_index":1242,"title":{},"body":{"components/CardComponent.html":{}}}],["card",{"_index":159,"title":{"classes/Card.html":{}},"body":{"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"interfaces/ConfigState.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["card'},{'name",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["card):observable",{"_index":2268,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["card.actions",{"_index":1030,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["card.actions.ts",{"_index":215,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["card.actions.ts:104",{"_index":2779,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:106",{"_index":2780,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:28",{"_index":2546,"title":{},"body":{"classes/LoadLightCards.html":{}}}],["card.actions.ts:33",{"_index":1857,"title":{},"body":{"classes/EmptyLightCards.html":{}}}],["card.actions.ts:37",{"_index":2550,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:40",{"_index":2551,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:45",{"_index":2547,"title":{},"body":{"classes/LoadLightCardsExtendedData.html":{}}}],["card.actions.ts:53",{"_index":2548,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:56",{"_index":2549,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:62",{"_index":2783,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:64",{"_index":2784,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:70",{"_index":1507,"title":{},"body":{"classes/ClearLightCardSelection.html":{}}}],["card.actions.ts:76",{"_index":217,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:79",{"_index":218,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:84",{"_index":3525,"title":{},"body":{"classes/UpdatedSubscription.html":{}}}],["card.actions.ts:93",{"_index":2166,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["card.actions.ts:95",{"_index":2167,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["card.component.html",{"_index":1171,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":1170,"title":{},"body":{"components/CardComponent.html":{}}}],["card.details",{"_index":1268,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["card.effects",{"_index":620,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.effects.ts",{"_index":2482,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:20",{"_index":2484,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:30",{"_index":2494,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.enddate",{"_index":2127,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.id.indexof(selectedcardid",{"_index":1369,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["card.model",{"_index":222,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"classes/ClearLightCardSelection.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["card.model.ts",{"_index":3415,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["card.model.ts:82",{"_index":3417,"title":{},"body":{"classes/TimeSpan.html":{}}}],["card.publisher",{"_index":3052,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisherversion",{"_index":3053,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.reducer",{"_index":599,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.service",{"_index":2800,"title":{},"body":{"modules/ServicesModule.html":{}}}],["card.severity",{"_index":2119,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.startdate",{"_index":2128,"title":{},"body":{"injectables/FilterService.html":{}}}],["card1.lttd",{"_index":1321,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.publishdate",{"_index":1324,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.startdate",{"_index":1315,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card2",{"_index":1314,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card2.lttd",{"_index":1322,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.publishdate",{"_index":1325,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.startdate",{"_index":1316,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card:lightcard",{"_index":2124,"title":{},"body":{"injectables/FilterService.html":{}}}],["cardactions",{"_index":1506,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["cardactiontypes",{"_index":1284,"title":{},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["cardactiontypes.clearcard",{"_index":1500,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.handleunexpectederror",{"_index":1505,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcard",{"_index":1502,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardfailure",{"_index":1503,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardsuccess",{"_index":1504,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardcomponent",{"_index":409,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["carddetailscomponent",{"_index":411,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardeffects",{"_index":587,"title":{"injectables/CardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardEffects.html":{}}}],["cardfeedstate",{"_index":571,"title":{"interfaces/CardFeedState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardFeedState.html":{}}}],["cardids",{"_index":1349,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardinitialstate",{"_index":1475,"title":{},"body":{"interfaces/CardState.html":{}}}],["cardlistcomponent",{"_index":413,"title":{"components/CardListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardoperation",{"_index":1342,"title":{"classes/CardOperation.html":{}},"body":{"classes/CardOperation.html":{},"injectables/CardService.html":{}}}],["cardoperationeffects",{"_index":589,"title":{"injectables/CardOperationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardOperationEffects.html":{}}}],["cardoperationsurl",{"_index":1407,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationtype",{"_index":1348,"title":{},"body":{"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"miscellaneous/enumerations.html":{}}}],["cardoperationtype.add",{"_index":1384,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype.delete",{"_index":1387,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype[value",{"_index":1356,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardreducer",{"_index":600,"title":{},"body":{"interfaces/AppState.html":{}}}],["cards",{"_index":266,"title":{},"body":{"classes/AddLightCardFailure.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"injectables/ThirdsService.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["cards'},{'name",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["cards/cards.module",{"_index":2008,"title":{},"body":{"modules/FeedModule.html":{}}}],["cards/components/card",{"_index":2038,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cards/components/detail/detail.component",{"_index":2037,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cardselectors",{"_index":1259,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cardservice",{"_index":921,"title":{"injectables/CardService.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["cardsmodule",{"_index":1476,"title":{"modules/CardsModule.html":{}},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["cardstate",{"_index":569,"title":{"interfaces/CardState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardState.html":{}}}],["cardstimeline",{"_index":3328,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["cardsurl",{"_index":1408,"title":{},"body":{"injectables/CardService.html":{}}}],["cardtimeline",{"_index":3324,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["care",{"_index":2054,"title":{},"body":{"classes/Filter.html":{}}}],["case",{"_index":1038,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["catch",{"_index":894,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror",{"_index":693,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{}}}],["catcherror((err",{"_index":974,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror((err,caught",{"_index":2489,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["catcherror((error",{"_index":1391,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["catcherror((error,caught",{"_index":3093,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror(authenticationservice.handleerror",{"_index":768,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror(e=>of(auth",{"_index":812,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror(err",{"_index":1906,"title":{},"body":{"components/FeedComponent.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["catcherror(error",{"_index":3165,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["catcherror(errorresponse",{"_index":961,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["category",{"_index":931,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["caught",{"_index":975,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["cell",{"_index":3512,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["center",{"_index":1250,"title":{},"body":{"components/CardComponent.html":{}}}],["centeredonticks",{"_index":3296,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["certain",{"_index":1974,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["chain",{"_index":2073,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter",{"_index":2061,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter(card",{"_index":2071,"title":{},"body":{"classes/Filter.html":{}}}],["change",{"_index":653,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/Tick.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["changelocale",{"_index":2338,"title":{},"body":{"injectables/I18nService.html":{}}}],["changelocale(locale",{"_index":2341,"title":{},"body":{"injectables/I18nService.html":{}}}],["changelocale(locale:string",{"_index":2358,"title":{},"body":{"injectables/I18nService.html":{}}}],["changes",{"_index":1740,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changes['card'].currentvalue.publisher+'.'+changes['card'].currentvalue.publisherversion",{"_index":1765,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changing",{"_index":1862,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["character",{"_index":3018,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["charset=utf",{"_index":762,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["chart",{"_index":3430,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["chart'},{'name",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["chart.component",{"_index":2022,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/custom",{"_index":2021,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/init",{"_index":2030,"title":{},"body":{"modules/FeedModule.html":{}}}],["chartcommonmodule",{"_index":2016,"title":{},"body":{"modules/FeedModule.html":{}}}],["charts",{"_index":2019,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["checauthentication",{"_index":122,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["check",{"_index":64,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["checkauthentication",{"_index":21,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["checkauthentication(token",{"_index":752,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checkauthenticationstatus",{"_index":63,"title":{"classes/CheckAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checkauthenticationwhenready",{"_index":916,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checking",{"_index":897,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checks",{"_index":742,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["checktokenresponse",{"_index":898,"title":{"classes/CheckTokenResponse.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["checktokenurl",{"_index":709,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["child",{"_index":1626,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["children",{"_index":2039,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cid",{"_index":2042,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["claim",{"_index":736,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["class.thirds",{"_index":2732,"title":{},"body":{"components/NavbarComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"index.html":{}}}],["clear",{"_index":239,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["clearauthenticationinformation",{"_index":836,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clearcard",{"_index":1017,"title":{"classes/ClearCard.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearlightcardselection",{"_index":238,"title":{"classes/ClearLightCardSelection.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":103,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["clicked",{"_index":1020,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clicking",{"_index":1013,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clientid",{"_index":80,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["clientsecret",{"_index":716,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clock",{"_index":1882,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["clone",{"_index":2062,"title":{},"body":{"classes/Filter.html":{}}}],["clone():filter",{"_index":2083,"title":{},"body":{"classes/Filter.html":{}}}],["cluster",{"_index":3224,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["cluster_appmodule",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_archivesmodule",{"_index":668,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_declarations",{"_index":669,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_imports",{"_index":670,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_cardsmodule",{"_index":1477,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_declarations",{"_index":1478,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_exports",{"_index":1479,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_providers",{"_index":1480,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_feedmodule",{"_index":1993,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_declarations",{"_index":1994,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_exports",{"_index":1996,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_imports",{"_index":1995,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":2791,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_servicesmodule_providers",{"_index":2792,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_settingsmodule",{"_index":2837,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2838,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_imports",{"_index":2839,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_statemodule",{"_index":2872,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_statemodule_imports",{"_index":2873,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule",{"_index":2954,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_declarations",{"_index":2955,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_imports",{"_index":2956,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["clusterlevel",{"_index":3217,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["clustertickstoticks",{"_index":3297,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["code",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["codeflow",{"_index":2571,"title":{},"body":{"components/LoginComponent.html":{}}}],["codeprovider",{"_index":2566,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":1306,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["color",{"_index":2748,"title":{},"body":{"components/NavbarComponent.html":{},"components/TypeFilterComponent.html":{}}}],["color:inherit",{"_index":2742,"title":{},"body":{"components/NavbarComponent.html":{}}}],["combinelatest",{"_index":2350,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["commonmodule",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{}}}],["comparebylttd(card1",{"_index":1320,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebylttd(card1,card2",{"_index":1329,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1",{"_index":1323,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1,card2",{"_index":1331,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1",{"_index":1317,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1,card2",{"_index":1327,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseveritylttdpublishdate(card1",{"_index":1326,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebystartdate(card1",{"_index":1313,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["complex",{"_index":1614,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["component",{"_index":268,"title":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component_template",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["components",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"index.html":{}}}],["components/card",{"_index":1487,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["components/card/card.component",{"_index":1486,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/custom",{"_index":2020,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/detail/detail.component",{"_index":1490,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/details/details.component",{"_index":1489,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/icon/icon.component",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["components/init",{"_index":2029,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/login/login.component",{"_index":504,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/info/info.component",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/navbar.component",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["components/no",{"_index":2002,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/settings/base",{"_index":2843,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/email",{"_index":2845,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/list",{"_index":2846,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/multi",{"_index":2847,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/settings.component",{"_index":2842,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["components/settings/text",{"_index":2844,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/type",{"_index":2849,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/time",{"_index":2005,"title":{},"body":{"modules/FeedModule.html":{}}}],["computation",{"_index":3380,"title":{},"body":{"classes/TimeReference.html":{}}}],["compute",{"_index":1214,"title":{},"body":{"components/CardComponent.html":{}}}],["computed",{"_index":2189,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["computedisplayeddates",{"_index":1174,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config",{"_index":1185,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config:string,lightcard:lightcard):string",{"_index":1220,"title":{},"body":{"components/CardComponent.html":{}}}],["computednow",{"_index":3350,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetduration",{"_index":3395,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetinmilliseconds",{"_index":3392,"title":{},"body":{"classes/TimeReference.html":{}}}],["computelistvalidators",{"_index":2499,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["computemultivalidators",{"_index":2683,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["computenow",{"_index":3344,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow",{"_index":3358,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow:moment.moment):moment.moment",{"_index":3374,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow",{"_index":3361,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow:number|moment.moment):moment.moment",{"_index":3375,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow",{"_index":3354,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow:number):moment.moment",{"_index":3373,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment",{"_index":3345,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment(realnowmoment",{"_index":3364,"title":{},"body":{"classes/TimeReference.html":{}}}],["computeredirecturi",{"_index":885,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["computetextvalidators",{"_index":1822,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["computethirdcssurl",{"_index":3099,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["computethirdcssurl(publisher",{"_index":3016,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["computethirdsmenu",{"_index":3037,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["concatmap",{"_index":1962,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["concatmap(tickwindow",{"_index":1947,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["conf",{"_index":3212,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["config",{"_index":565,"title":{},"body":{"interfaces/AppState.html":{},"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["config:any",{"_index":1552,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["config_load_max_retries",{"_index":1531,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["configactions",{"_index":2165,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["configactiontypes",{"_index":1025,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configactiontypes.handleunexpectederror",{"_index":2161,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfig",{"_index":2162,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigfailure",{"_index":2163,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigsuccess",{"_index":2164,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configeffects",{"_index":625,"title":{"injectables/ConfigEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["configinitialstate",{"_index":1553,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["configloaded",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["configreducer",{"_index":602,"title":{},"body":{"interfaces/AppState.html":{}}}],["configservice",{"_index":1511,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["configstate",{"_index":570,"title":{"interfaces/ConfigState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ConfigState.html":{}}}],["configtags",{"_index":1926,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configtags.length",{"_index":1927,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configurable",{"_index":1976,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configuration",{"_index":1211,"title":{},"body":{"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configurl",{"_index":1541,"title":{},"body":{"injectables/ConfigService.html":{}}}],["confirm",{"_index":899,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["confzoom",{"_index":3213,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["connection",{"_index":771,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["consequence",{"_index":950,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consist",{"_index":1292,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["console.error('something",{"_index":3094,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.error(`error",{"_index":1463,"title":{},"body":{"injectables/CardService.html":{}}}],["console.error(`i18",{"_index":2490,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["console.error(err",{"_index":976,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["console.error(error",{"_index":814,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/TimeEffects.html":{}}}],["console.error(message",{"_index":1048,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log('textsettingcomponent.isequal",{"_index":2529,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["console.log('timeline",{"_index":3316,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["console.log(`location",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`this",{"_index":1685,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(err",{"_index":3008,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["const",{"_index":178,"title":{},"body":{"classes/Action.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{}}}],["constructor(access_token",{"_index":682,"title":{},"body":{"classes/AuthObject.html":{}}}],["constructor(authenticationservice",{"_index":3438,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["constructor(details",{"_index":2870,"title":{},"body":{"classes/State.html":{}}}],["constructor(element",{"_index":1641,"title":{},"body":{"components/DetailComponent.html":{}}}],["constructor(formbuilder",{"_index":2902,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["constructor(funktion",{"_index":2063,"title":{},"body":{"classes/Filter.html":{}}}],["constructor(httpclient",{"_index":1414,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"injectables/ThirdsService.html":{}}}],["constructor(id",{"_index":2950,"title":{},"body":{"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["constructor(identifier",{"_index":2766,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["constructor(key",{"_index":2333,"title":{},"body":{"classes/I18n.html":{}}}],["constructor(label",{"_index":2758,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["constructor(login",{"_index":3527,"title":{},"body":{"classes/User.html":{}}}],["constructor(message",{"_index":2638,"title":{},"body":{"classes/Message.html":{}}}],["constructor(name",{"_index":2942,"title":{},"body":{"classes/Third.html":{}}}],["constructor(number",{"_index":1346,"title":{},"body":{"classes/CardOperation.html":{}}}],["constructor(payload",{"_index":41,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/UpdateTimeReference.html":{}}}],["constructor(platformlocation",{"_index":2375,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(platformlocation:platformlocation",{"_index":2397,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(private",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{}}}],["constructor(protected",{"_index":1108,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["constructor(public",{"_index":77,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["constructor(readonly",{"_index":3371,"title":{},"body":{"classes/TimeReference.html":{}}}],["constructor(referencetime",{"_index":3348,"title":{},"body":{"classes/TimeReference.html":{}}}],["constructor(router",{"_index":1179,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(startdate",{"_index":3416,"title":{},"body":{"classes/TimeSpan.html":{}}}],["constructor(states",{"_index":2774,"title":{},"body":{"classes/Process.html":{}}}],["constructor(store",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["constructor(sub",{"_index":1494,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["constructor(thirdsservice",{"_index":2966,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["constructor(time",{"_index":2231,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["constructor(titleposition",{"_index":1629,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(translate",{"_index":2339,"title":{},"body":{"injectables/I18nService.html":{}}}],["constructor(type",{"_index":143,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{}}}],["constructor(uid",{"_index":1149,"title":{},"body":{"classes/Card.html":{}}}],["constructor(url",{"_index":2781,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["consume",{"_index":131,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["contain",{"_index":3243,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["containing",{"_index":30,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["contains",{"_index":747,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["content",{"_index":749,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["contentchildren",{"_index":1748,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentchildren(detailcomponent",{"_index":1745,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentstyle",{"_index":150,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["control",{"_index":2507,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["convert",{"_index":827,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(payload",{"_index":860,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["convert(value",{"_index":1079,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(value:any):any",{"_index":1139,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["convertspeedintoenum",{"_index":3346,"title":{},"body":{"classes/TimeReference.html":{}}}],["convertspeedintoenum(key",{"_index":3367,"title":{},"body":{"classes/TimeReference.html":{}}}],["converttypeintoenum",{"_index":1345,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key",{"_index":1351,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key:string",{"_index":1353,"title":{},"body":{"classes/CardOperation.html":{}}}],["copy",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["copyright",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["core",{"_index":515,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["correctly",{"_index":778,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["corresponding",{"_index":895,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/MenuEffects.html":{},"injectables/TimeEffects.html":{}}}],["create",{"_index":28,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["createentityadapter",{"_index":1309,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["createformgroup",{"_index":2901,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["css",{"_index":1680,"title":{},"body":{"components/DetailComponent.html":{},"directives/DraggableDirective.html":{}}}],["csses",{"_index":2944,"title":{},"body":{"classes/Third.html":{}}}],["csses?:string",{"_index":171,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["cssurl",{"_index":1675,"title":{},"body":{"components/DetailComponent.html":{}}}],["current",{"_index":88,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/Tick.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["currentdate",{"_index":3424,"title":{},"body":{"interfaces/TimeState.html":{}}}],["currentlang",{"_index":3084,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["currently",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["currentpath",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["currenttimefilter",{"_index":1956,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.active",{"_index":1957,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.end",{"_index":1959,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.start",{"_index":1958,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimereference",{"_index":3153,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["custom",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["customroutereffects",{"_index":612,"title":{"injectables/CustomRouterEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["customrouterstateserializer",{"_index":1594,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["customtimelinechartcomponent",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dark",{"_index":1721,"title":{},"body":{"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["dark:boolean",{"_index":2392,"title":{},"body":{"components/IconComponent.html":{}}}],["data",{"_index":232,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/InitTimeline.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":83,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["date().valueof",{"_index":1442,"title":{},"body":{"injectables/CardService.html":{}}}],["date(+localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":857,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(0",{"_index":912,"title":{},"body":{"interfaces/AuthState.html":{}}}],["date(expirationdate",{"_index":869,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(minus2hour.valueof()+48*60*60*1000",{"_index":1445,"title":{},"body":{"injectables/CardService.html":{}}}],["date(new",{"_index":1441,"title":{},"body":{"injectables/CardService.html":{}}}],["date(value",{"_index":2311,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["date.date(16",{"_index":3340,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.format('d",{"_index":3570,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format('dd",{"_index":3568,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format('ddd",{"_index":3552,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format('hh",{"_index":3558,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hours",{"_index":3567,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.minutes(0).seconds(0).millisecond(0",{"_index":3334,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.now",{"_index":863,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date.startof('month",{"_index":3336,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.subtract(1",{"_index":3337,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.subtract(2",{"_index":3341,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.valueof",{"_index":3565,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datepipe",{"_index":3561,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datetodisplay",{"_index":1173,"title":{},"body":{"components/CardComponent.html":{}}}],["datewithspacebeforemoment",{"_index":3214,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["datewithspacebeforemoment(date",{"_index":3216,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["day",{"_index":3239,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["days",{"_index":3257,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dd",{"_index":3553,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["deactivate",{"_index":1760,"title":{},"body":{"components/DetailsComponent.html":{}}}],["debounce",{"_index":1104,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["debouncetime",{"_index":3232,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["debug",{"_index":2642,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["decode",{"_index":701,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["decodetoken(token",{"_index":892,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["decoration",{"_index":2750,"title":{},"body":{"components/NavbarComponent.html":{}}}],["decorators",{"_index":942,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["deep",{"_index":2928,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["default",{"_index":49,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["default:return",{"_index":1226,"title":{},"body":{"components/CardComponent.html":{}}}],["defaultfilters",{"_index":2096,"title":{},"body":{"injectables/FilterService.html":{}}}],["define",{"_index":1987,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["defined",{"_index":43,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["defines",{"_index":785,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delay",{"_index":1526,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["delay(this.retrydelay",{"_index":1539,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delegateurl",{"_index":719,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delete",{"_index":1357,"title":{},"body":{"classes/CardOperation.html":{},"directives/DraggableDirective.html":{},"miscellaneous/enumerations.html":{}}}],["delta",{"_index":2672,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dentifier",{"_index":851,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["dependencies",{"_index":465,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"directives/MouseWheelDirective.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["deserializable",{"_index":748,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["desired",{"_index":2894,"title":{},"body":{"modules/StateModule.html":{}}}],["detail",{"_index":160,"title":{"classes/Detail.html":{}},"body":{"classes/Action.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detail'},{'name",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["detail.active",{"_index":1763,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.component.html",{"_index":1632,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.component",{"_index":1749,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailcomponent",{"_index":419,"title":{"components/DetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["details",{"_index":1160,"title":{},"body":{"classes/Card.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"classes/State.html":{}}}],["details'},{'name",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["details.component",{"_index":1488,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details.component.html",{"_index":1254,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details.component.ts",{"_index":1253,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":1258,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1256,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1257,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/:did",{"_index":2043,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["details/card",{"_index":1252,"title":{},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details?:detail",{"_index":192,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detailscomponent",{"_index":421,"title":{"components/DetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["devtools",{"_index":2879,"title":{},"body":{"modules/StateModule.html":{},"dependencies.html":{}}}],["different",{"_index":3225,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["directive",{"_index":400,"title":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["directives",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dispatch",{"_index":1066,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdateTimeReference.html":{}}}],["dispatch(value",{"_index":1081,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dispatch(value:any",{"_index":1140,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["display",{"_index":989,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/InfoComponent.html":{},"components/TagsFilterComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["display.bubble",{"_index":3422,"title":{},"body":{"classes/TimeSpan.html":{}}}],["distinctuntilchanged",{"_index":1105,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged((forma",{"_index":1125,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distributed",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["doc",{"_index":1986,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["document.getelementbyid('${svguid}').addeventlistener('load",{"_index":2305,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["doesn't",{"_index":3199,"title":{},"body":{"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{}}}],["dom",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["domain",{"_index":3219,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dommousescroll",{"_index":2650,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dommousescroll(event",{"_index":2654,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["domsanitizer",{"_index":1646,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["done",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["dow",{"_index":3237,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["down",{"_index":1165,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["doy",{"_index":3240,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["drag",{"_index":1788,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragend",{"_index":1773,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragevent",{"_index":1819,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable",{"_index":2028,"title":{},"body":{"modules/FeedModule.html":{}}}],["draggable.ts",{"_index":1769,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:11",{"_index":1796,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:18",{"_index":1787,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:28",{"_index":1791,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:40",{"_index":1794,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:7",{"_index":1783,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:8",{"_index":1782,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:9",{"_index":1781,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggabledirective",{"_index":457,"title":{"directives/DraggableDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dragging",{"_index":1771,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragmove",{"_index":1774,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragstart",{"_index":1775,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dropdown",{"_index":2740,"title":{},"body":{"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dropdown]=\"tmenu.entries.length>1",{"_index":2733,"title":{},"body":{"components/NavbarComponent.html":{}}}],["duration",{"_index":3390,"title":{},"body":{"classes/TimeReference.html":{}}}],["duration.asmilliseconds",{"_index":3393,"title":{},"body":{"classes/TimeReference.html":{}}}],["during",{"_index":1303,"title":{},"body":{"interfaces/CardFeedState.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interfaces/TimelineState.html":{}}}],["dynamic",{"_index":3579,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":1943,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["effect",{"_index":943,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["effects",{"_index":1289,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodule",{"_index":2877,"title":{},"body":{"modules/StateModule.html":{}}}],["effectsmodule.forroot(appeffects",{"_index":2886,"title":{},"body":{"modules/StateModule.html":{}}}],["elapsed",{"_index":1880,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsincelast",{"_index":1952,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["elapsedsincelast:number",{"_index":1887,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedtime",{"_index":1980,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["elapsedtimebuffer",{"_index":1969,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["element",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["elementref",{"_index":1642,"title":{},"body":{"components/DetailComponent.html":{}}}],["email",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emailsettingcomponent",{"_index":422,"title":{"components/EmailSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["emission",{"_index":1946,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["emit",{"_index":948,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["emitevent",{"_index":2528,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["emits",{"_index":1008,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emitted",{"_index":14,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["emittedby",{"_index":985,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emmited",{"_index":119,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["empty",{"_index":228,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["emptylightcards",{"_index":227,"title":{"classes/EmptyLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["emptylightcards(),new",{"_index":1016,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["enabledrag",{"_index":3290,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enabletracing",{"_index":560,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enablezoom",{"_index":3291,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["encoding",{"_index":3019,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["end",{"_index":1795,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["enddate",{"_index":1154,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddomain",{"_index":3251,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.add(1",{"_index":3253,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.add(5",{"_index":3258,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.add(7",{"_index":3256,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":3255,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.startof('week",{"_index":3254,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.valueof",{"_index":3300,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2",{"_index":3268,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.add(1",{"_index":3273,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.add(2",{"_index":3271,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.date(15",{"_index":3274,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.startof('month",{"_index":3270,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.valueof",{"_index":3307,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3",{"_index":3279,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.add(1",{"_index":3287,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.add(2",{"_index":3281,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.month(10",{"_index":3288,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.startof('year",{"_index":3283,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.valueof",{"_index":3309,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4",{"_index":3261,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4.add(8",{"_index":3264,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":3263,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4.valueof",{"_index":3304,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["entire",{"_index":1613,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["entities",{"_index":253,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{}}}],["entityadapter",{"_index":1310,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entitystate",{"_index":1293,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entries",{"_index":190,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["entry",{"_index":1591,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.id",{"_index":3004,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["enum",{"_index":58,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["enumerations",{"_index":3610,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{}}}],["environment",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"index.html":{}}}],["environment.production",{"_index":638,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["environment.urls.auth}/check_token",{"_index":710,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/code/redirect_uri=${authenticationservice.computeredirecturi",{"_index":883,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/token",{"_index":713,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.cards}/cards",{"_index":1438,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cardsubscription?clientid=${clientid",{"_index":1436,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.config",{"_index":1549,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.urls.thirds",{"_index":2983,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["environment.urls.users",{"_index":2863,"title":{},"body":{"injectables/SettingsService.html":{}}}],["environment.urls.users}/users",{"_index":715,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environments/environment",{"_index":2971,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["err",{"_index":978,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["error",{"_index":126,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"interfaces/ConfigState.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["error('no",{"_index":3007,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["error(`unhandled",{"_index":1390,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["error.tostring",{"_index":1466,"title":{},"body":{"injectables/CardService.html":{}}}],["error:null",{"_index":2636,"title":{},"body":{"interfaces/MenuState.html":{}}}],["error:string",{"_index":2634,"title":{},"body":{"interfaces/MenuState.html":{}}}],["errormsg",{"_index":936,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse",{"_index":933,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.message",{"_index":1047,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.status",{"_index":1037,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["es",{"_index":1465,"title":{},"body":{"injectables/CardService.html":{}}}],["evaluate",{"_index":2052,"title":{},"body":{"classes/Filter.html":{}}}],["event",{"_index":1430,"title":{},"body":{"injectables/CardService.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"dependencies.html":{}}}],["event.detail",{"_index":2676,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["event.wheeldelta",{"_index":2675,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["eventemitter",{"_index":1780,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["events",{"_index":1973,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["eventsource",{"_index":1419,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.close",{"_index":1470,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.closed",{"_index":1469,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onerror",{"_index":1462,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onmessage",{"_index":1459,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.readystate",{"_index":1468,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsourcepolyfill",{"_index":1417,"title":{},"body":{"injectables/CardService.html":{}}}],["example",{"_index":2185,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"directives/MouseWheelDirective.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/TimeLineComponent.html":{}}}],["examples/blob/master/app/mousewheeldirective/mousewheel.directive.ts",{"_index":2646,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["executetemplate",{"_index":2215,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["executetemplate(templatename",{"_index":2233,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["exist",{"_index":3383,"title":{},"body":{"classes/TimeReference.html":{}}}],["existing",{"_index":1971,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["exists",{"_index":89,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["exp",{"_index":740,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expandedmenu",{"_index":2695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedmenu:boolean",{"_index":2715,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu",{"_index":2696,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu=false",{"_index":2716,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expiration",{"_index":821,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["expirationdate",{"_index":82,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["expireclaim",{"_index":718,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expired",{"_index":972,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["expires_in",{"_index":681,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["export",{"_index":57,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["exports",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{}}}],["extended",{"_index":231,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["extends",{"_index":1308,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["external",{"_index":194,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":816,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["extractidentificationinformation",{"_index":852,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["extractparams",{"_index":1597,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["extractparams(state",{"_index":1599,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["extractstate",{"_index":2941,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card",{"_index":2948,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card:card):state",{"_index":175,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extracttoken",{"_index":818,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["f5",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":1719,"title":{},"body":{"components/DetailComponent.html":{}}}],["faclock",{"_index":2015,"title":{},"body":{"modules/FeedModule.html":{}}}],["faexternallinkalt",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":234,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":2491,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["failtoupdatetimereference",{"_index":1858,"title":{"classes/FailToUpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["failtoupdatetimereference='[time",{"_index":1877,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["failure",{"_index":2179,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":197,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["fasignoutalt",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["fctargs[fctargs.length",{"_index":2304,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["feed",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"miscellaneous/enumerations.html":{}}}],["feed.component",{"_index":2001,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":1894,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":1893,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.filters.time.end.label",{"_index":3207,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.start.label",{"_index":3206,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.title",{"_index":3208,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.type.action.label",{"_index":3508,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.alarm.label",{"_index":3507,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.notification.label",{"_index":3510,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.question.label",{"_index":3509,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.title",{"_index":3511,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feedactions",{"_index":660,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["feedactiontypes",{"_index":652,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["feedactiontypes.applyfilter",{"_index":647,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.initfilter",{"_index":658,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedcomponent",{"_index":424,"title":{"components/FeedComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["feedfilterseffects",{"_index":621,"title":{"injectables/FeedFiltersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/FeedFiltersEffects.html":{}}}],["feedinitialstate",{"_index":1334,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["feedmodule",{"_index":1992,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["feedroutingmodule",{"_index":1998,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["feedselectors",{"_index":1901,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["fetch",{"_index":1210,"title":{},"body":{"components/CardComponent.html":{}}}],["fetchcardoperation",{"_index":1410,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation(eventsource",{"_index":1416,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchconfiguration",{"_index":1542,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetchhbstemplate",{"_index":3100,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchhbstemplate(publisher",{"_index":3012,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchi18njson",{"_index":3101,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchi18njson(publisher",{"_index":3025,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchthird",{"_index":3102,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchthird(publisher",{"_index":2993,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchusersettings",{"_index":2855,"title":{},"body":{"injectables/SettingsService.html":{}}}],["field",{"_index":2927,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["fill",{"_index":2418,"title":{},"body":{"components/IconComponent.html":{}}}],["filter",{"_index":455,"title":{"classes/Filter.html":{}},"body":{"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filter$(filter",{"_index":3486,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter'},{'name",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter(()=>this.form.valid",{"_index":1124,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["filter(([action",{"_index":1538,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["filter(([elapsedsincelast",{"_index":1955,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter((action",{"_index":1561,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["filter((af",{"_index":1396,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["filter((t:third)=>!(!t.menuentries",{"_index":3040,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter((third",{"_index":3000,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter(v=>!!v",{"_index":1930,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter.component",{"_index":2012,"title":{},"body":{"modules/FeedModule.html":{}}}],["filter.component.html",{"_index":2898,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.scss",{"_index":2897,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts",{"_index":2896,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:26",{"_index":3181,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:27",{"_index":3180,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":2909,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":2908,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":2904,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":3485,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":3176,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":3481,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:36",{"_index":2907,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":3178,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:44",{"_index":3482,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:45",{"_index":3179,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:53",{"_index":3483,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":3484,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:64",{"_index":2906,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:69",{"_index":2905,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:90",{"_index":3177,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.model",{"_index":649,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.model.ts",{"_index":2045,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:22",{"_index":2065,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:27",{"_index":2066,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:28",{"_index":2067,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:32",{"_index":2080,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:43",{"_index":2069,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:56",{"_index":2072,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:67",{"_index":2077,"title":{},"body":{"classes/Filter.html":{}}}],["filter/tags",{"_index":2032,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["filter/time",{"_index":2014,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["filter/type",{"_index":2011,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["filtered",{"_index":1931,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["filtering",{"_index":31,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["filters",{"_index":1305,"title":{},"body":{"interfaces/CardFeedState.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{}}}],["filters'},{'name",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filters.component.html",{"_index":2143,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.effects",{"_index":623,"title":{},"body":{"interfaces/AppState.html":{}}}],["filters.effects.ts",{"_index":1912,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:33",{"_index":1917,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:44",{"_index":1937,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:54",{"_index":1934,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:75",{"_index":1961,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.set(filtertype.recipient_filter",{"_index":2131,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.tag_filter",{"_index":2135,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.time_filter",{"_index":2133,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.type_filter",{"_index":2129,"title":{},"body":{"injectables/FilterService.html":{}}}],["filterscomponent",{"_index":426,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["filterservice",{"_index":1916,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["filtertype",{"_index":650,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtertype.tag_filter",{"_index":2924,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filtertype.time_filter",{"_index":1398,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{}}}],["filtertype.type_filter",{"_index":3502,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["fire",{"_index":3200,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["fires",{"_index":1587,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["firing",{"_index":1375,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["first",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/DetailsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["firstname",{"_index":909,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{}}}],["firstname:string",{"_index":3530,"title":{},"body":{"classes/User.html":{}}}],["firstname?:string",{"_index":84,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["fix",{"_index":1970,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["flow",{"_index":775,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["follow",{"_index":1988,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["followcloacktick",{"_index":3302,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["followclocktick",{"_index":1982,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["following",{"_index":16,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["font",{"_index":1239,"title":{},"body":{"components/CardComponent.html":{},"components/InfoComponent.html":{}}}],["fontawesome",{"_index":511,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":509,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["form",{"_index":107,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["form.action",{"_index":3504,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.alarm",{"_index":3503,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.end",{"_index":3203,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.notification",{"_index":3506,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.question",{"_index":3505,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.start",{"_index":3202,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.tags.length>0",{"_index":2925,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["forma",{"_index":1088,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["forma.setting",{"_index":2530,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["format",{"_index":3544,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe",{"_index":2025,"title":{},"body":{"modules/FeedModule.html":{}}}],["format.pipe.ts",{"_index":3533,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:13",{"_index":3549,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:38",{"_index":3542,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:53",{"_index":3537,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatted",{"_index":3538,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatter",{"_index":2315,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatter.format(value",{"_index":2318,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatting",{"_index":3545,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formb",{"_index":1086,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formb):boolean",{"_index":1145,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formb.setting",{"_index":2531,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formbuilder",{"_index":2903,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formbuilder,private",{"_index":2910,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formcontrol",{"_index":2510,"title":{},"body":{"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formcontrol([],validators",{"_index":2689,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["formcontrol(null,validators",{"_index":2937,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["formdata",{"_index":754,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["formgroup",{"_index":1084,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["forms",{"_index":1621,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["formsmodule",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["forroot",{"_index":1483,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["fortawesome/angular",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":513,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":517,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["forwardlevel",{"_index":3301,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["found",{"_index":2192,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["france.com",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["freeze",{"_index":586,"title":{},"body":{"interfaces/AppState.html":{}}}],["from(_.difference(work",{"_index":3069,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["from(cards).pipe",{"_index":3050,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["from(menus).pipe",{"_index":3056,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fromrouter",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromrouter.routerreducer",{"_index":636,"title":{},"body":{"interfaces/AppState.html":{}}}],["full",{"_index":2041,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["function",{"_index":25,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["function(a,b",{"_index":2326,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["function(lvalue",{"_index":2293,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["funktion",{"_index":2050,"title":{},"body":{"classes/Filter.html":{}}}],["futur",{"_index":900,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["future",{"_index":906,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["g",{"_index":2323,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["gather",{"_index":2046,"title":{},"body":{"classes/Filter.html":{}}}],["generating",{"_index":772,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["gently",{"_index":555,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getcardoperation",{"_index":1411,"title":{},"body":{"injectables/CardService.html":{}}}],["getcurrentguid",{"_index":2147,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring",{"_index":2148,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring():string",{"_index":2154,"title":{},"body":{"classes/GuidService.html":{}}}],["getdescription",{"_index":2448,"title":{},"body":{"components/InfoComponent.html":{}}}],["getfilter",{"_index":3182,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["gethtmlcontent",{"_index":1664,"title":{},"body":{"components/DetailComponent.html":{}}}],["geti18nprefix",{"_index":1194,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["getitem",{"_index":855,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getlocale",{"_index":2344,"title":{},"body":{"injectables/I18nService.html":{}}}],["getroutepe",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["getsecurityheader",{"_index":875,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getselectediframeurl",{"_index":2428,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getthirdmenus",{"_index":2712,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gettime",{"_index":2450,"title":{},"body":{"components/InfoComponent.html":{}}}],["gettimezone",{"_index":2346,"title":{},"body":{"injectables/I18nService.html":{}}}],["gettranslation",{"_index":2965,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["gettranslation(lang",{"_index":2968,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["getusername",{"_index":2446,"title":{},"body":{"components/InfoComponent.html":{}}}],["given",{"_index":770,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["gives",{"_index":744,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["graph",{"_index":3636,"title":{},"body":{"modules.html":{}}}],["guid",{"_index":53,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["guid.create",{"_index":2153,"title":{},"body":{"classes/GuidService.html":{}}}],["guid.parse(localstorage.getitem(localstorageauthcontent.clientid",{"_index":854,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["guidservice",{"_index":696,"title":{"classes/GuidService.html":{}},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"modules/ServicesModule.html":{}}}],["guillaume",{"_index":3286,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["h",{"_index":3556,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["half",{"_index":3410,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["handle",{"_index":246,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":1644,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"dependencies.html":{}}}],["handlebars.registerhelper(\"math",{"_index":2292,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper(\"preservespace",{"_index":2321,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('action",{"_index":2307,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindex",{"_index":2297,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindexlength",{"_index":2287,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('bool",{"_index":2282,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('dateformat",{"_index":2308,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('now",{"_index":2319,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('numberformat",{"_index":2314,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('slice",{"_index":2299,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('sort",{"_index":2303,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('split",{"_index":2289,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars/dist/handlebars.js",{"_index":2251,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebarsservice",{"_index":1481,"title":{"injectables/HandlebarsService.html":{}},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"index.html":{}}}],["handledate",{"_index":1175,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp",{"_index":1187,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp:number):string",{"_index":1228,"title":{},"body":{"components/CardComponent.html":{}}}],["handleerror(error",{"_index":813,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handleerrorontokengeneration",{"_index":917,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse",{"_index":930,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse,category:string",{"_index":1034,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleloginattempt",{"_index":23,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handleloginattempt(payload",{"_index":1052,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handlenewtoken(call",{"_index":795,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handlerejectedlogin",{"_index":121,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handlerejectedlogin(errormsg",{"_index":934,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleunexpectederror",{"_index":245,"title":{"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["handleunexpectederror({error",{"_index":1393,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["handling",{"_index":1725,"title":{},"body":{"components/DetailComponent.html":{}}}],["happens",{"_index":1991,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["hashlocationstrategy",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["header",{"_index":874,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/TypeFilterComponent.html":{}}}],["headers",{"_index":757,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["headers}).pipe",{"_index":766,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["heart",{"_index":1878,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["heartbeat",{"_index":3154,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["heartbeattimeout",{"_index":1455,"title":{},"body":{"injectables/CardService.html":{}}}],["height",{"_index":3516,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["helper",{"_index":858,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["here",{"_index":1447,"title":{},"body":{"injectables/CardService.html":{}}}],["hh",{"_index":3555,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hidden",{"_index":147,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hide",{"_index":2567,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidetimeline",{"_index":1895,"title":{},"body":{"components/FeedComponent.html":{}}}],["hostlistener",{"_index":1797,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["hostlistener('document:dragstart",{"_index":1817,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('dommousescroll",{"_index":2667,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('mousewheel",{"_index":2664,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('onmousewheel",{"_index":2669,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('pointerdown",{"_index":1799,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointermove",{"_index":1803,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointerup",{"_index":1806,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlisteners",{"_index":1776,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["hours",{"_index":3546,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["href",{"_index":1679,"title":{},"body":{"components/DetailComponent.html":{}}}],["hrefsofcsslink",{"_index":1634,"title":{},"body":{"components/DetailComponent.html":{}}}],["html",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["htmlbuttonelement",{"_index":1651,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlcontent",{"_index":1640,"title":{},"body":{"components/DetailComponent.html":{}}}],["http",{"_index":873,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["http://www.rte",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["http_interceptors",{"_index":2798,"title":{},"body":{"modules/ServicesModule.html":{}}}],["httpcall",{"_index":3026,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpclient",{"_index":690,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpclient:httpclient",{"_index":1432,"title":{},"body":{"injectables/CardService.html":{}}}],["httpclientmodule",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":3446,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httphandler",{"_index":3444,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpheaders",{"_index":691,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpheaders({'content",{"_index":758,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpinterceptor",{"_index":3447,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpparams",{"_index":1546,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('version',version",{"_index":3023,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httprequest",{"_index":3441,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["https://github.com/briebug/ngrx",{"_index":1620,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["https://github.com/sodhanalibrary/angular2",{"_index":2645,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["httpurlencodingcodec",{"_index":1547,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["i18n",{"_index":146,"title":{"classes/I18n.html":{}},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/I18n.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["i18n('login.error.token.expiration",{"_index":973,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.token.invalid",{"_index":966,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.unexpected",{"_index":980,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('time.error",{"_index":3168,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18n(key",{"_index":1051,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18nlabelkey",{"_index":169,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nparameters",{"_index":3166,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nparameters['message",{"_index":3167,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nprefix",{"_index":1178,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["i18nprefix+detailc.detail.title.key",{"_index":1766,"title":{},"body":{"components/DetailsComponent.html":{}}}],["i18nprefix+lightcard.summary.key",{"_index":1232,"title":{},"body":{"components/CardComponent.html":{}}}],["i18nprefix+lightcard.title.key",{"_index":1230,"title":{},"body":{"components/CardComponent.html":{}}}],["i18nservice",{"_index":294,"title":{"injectables/I18nService.html":{}},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["i18nservice:i18nservice",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":2368,"title":{},"body":{"components/IconComponent.html":{}}}],["icon'},{'name",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["icon.component.html",{"_index":2370,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":2369,"title":{},"body":{"components/IconComponent.html":{}}}],["icon:string",{"_index":2388,"title":{},"body":{"components/IconComponent.html":{}}}],["iconcomponent",{"_index":428,"title":{"components/IconComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iconpath",{"_index":2371,"title":{},"body":{"components/IconComponent.html":{}}}],["iconpath:string",{"_index":2396,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":519,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["id",{"_index":188,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{}}}],["id'].nodevalue",{"_index":1707,"title":{},"body":{"components/DetailComponent.html":{}}}],["id.split",{"_index":3073,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["id:string",{"_index":185,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["identifier",{"_index":78,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["identifying",{"_index":1590,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["ids",{"_index":3063,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ids.push(id",{"_index":3062,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(!!control.value",{"_index":2532,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["if(!!next.status.end",{"_index":3192,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!next.status.start",{"_index":3187,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!state",{"_index":1708,"title":{},"body":{"components/DetailComponent.html":{}}}],["if(!this.delegateurl",{"_index":881,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["if(!this.form",{"_index":1111,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["if(a[key]b[key",{"_index":2331,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(action.payload.settings.defaulttags",{"_index":1923,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(card",{"_index":1265,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["if(card.details",{"_index":1266,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["if(card.process",{"_index":176,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(card.state",{"_index":180,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(changes['card'].currentvalue",{"_index":1764,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(entry.length==1",{"_index":3005,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(followclocktick",{"_index":1940,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(i",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["if(ismoment(realnow",{"_index":3376,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(key",{"_index":1355,"title":{},"body":{"classes/CardOperation.html":{}}}],["if(locale",{"_index":2359,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(result",{"_index":1330,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(result==0",{"_index":1328,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(template",{"_index":2277,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(third",{"_index":2988,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(this.active",{"_index":2088,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.applyfilter(card",{"_index":2090,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.dark||this.light",{"_index":2413,"title":{},"body":{"components/IconComponent.html":{}}}],["if(this.expandedmenu[index",{"_index":2726,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.expandedusermenu",{"_index":2729,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.isvirtualtimeundefine",{"_index":3398,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(this.speed",{"_index":3385,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(timezone",{"_index":2363,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(typeof",{"_index":2327,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(url",{"_index":1205,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["iframe_url",{"_index":2191,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["iframedisplay",{"_index":2420,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay'},{'name",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["iframedisplay.component",{"_index":2959,"title":{},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["iframedisplay.component.html",{"_index":2422,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay.component.scss",{"_index":2421,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplaycomponent",{"_index":430,"title":{"components/IframeDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iframeurl",{"_index":2433,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["ignore",{"_index":92,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}}}],["implementation",{"_index":2056,"title":{},"body":{"classes/Filter.html":{}}}],["implemented",{"_index":1726,"title":{},"body":{"components/DetailComponent.html":{}}}],["implementing",{"_index":924,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["implements",{"_index":34,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["imports",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["include",{"_index":2893,"title":{},"body":{"modules/StateModule.html":{}}}],["including",{"_index":1984,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["incorrect",{"_index":1855,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":2606,"title":{},"body":{"classes/Map.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["info.component.html",{"_index":2438,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":2437,"title":{},"body":{"components/InfoComponent.html":{}}}],["infocomponent",{"_index":432,"title":{"components/InfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["information",{"_index":13,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["informatios",{"_index":839,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["inherit",{"_index":2749,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inheritance",{"_index":2058,"title":{},"body":{"classes/Filter.html":{}}}],["inherited",{"_index":1825,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["iniitialized",{"_index":880,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["init",{"_index":61,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initauthstatus",{"_index":60,"title":{"classes/InitAuthStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initauthstatus({code:window.location.href.substring(i",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["initchartcomponent",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["initfilter",{"_index":654,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["initfilters",{"_index":657,"title":{"classes/InitFilters.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["initfilters({filters:this.service.defaultfilters",{"_index":1936,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["initformgroup",{"_index":1067,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["initformgroup():formgroup",{"_index":1138,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["initialized",{"_index":779,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["initializehandlebarstemplates",{"_index":1637,"title":{},"body":{"components/DetailComponent.html":{}}}],["initializehrefsofcsslink",{"_index":1638,"title":{},"body":{"components/DetailComponent.html":{}}}],["initialstate",{"_index":641,"title":{},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["initrecipientfilter",{"_index":2097,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilter",{"_index":2098,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilteronloadedsettings",{"_index":1913,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["inittimefilter",{"_index":2099,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimeline",{"_index":2469,"title":{"classes/InitTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["inittypefilter",{"_index":2100,"title":{},"body":{"injectables/FilterService.html":{}}}],["inject",{"_index":1525,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/GuidService.html":{}}}],["inject('configretrydelay",{"_index":1532,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["injectable",{"_index":689,"title":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interceptors/TokenInjector.html":{}}}],["injectables",{"_index":913,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"index.html":{}}}],["injected",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["injector",{"_index":1545,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["inline",{"_index":2464,"title":{},"body":{"components/InfoComponent.html":{}}}],["input",{"_index":152,"title":{"classes/Input.html":{}},"body":{"classes/Action.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["input[0",{"_index":3074,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["input[1",{"_index":3075,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["inputs",{"_index":151,"title":{},"body":{"classes/Action.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["inputtype",{"_index":198,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["inside",{"_index":1811,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["instance",{"_index":859,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["instanceof",{"_index":3560,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["instanciate",{"_index":1114,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["instanciation",{"_index":2057,"title":{},"body":{"classes/Filter.html":{}}}],["instantiate",{"_index":1678,"title":{},"body":{"components/DetailComponent.html":{}}}],["intercept",{"_index":3437,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercept(request",{"_index":3443,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercepted",{"_index":1450,"title":{},"body":{"injectables/CardService.html":{}}}],["interceptor",{"_index":1451,"title":{"interceptors/TokenInjector.html":{}},"body":{"injectables/CardService.html":{}}}],["interceptors",{"_index":3434,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["interceptors.service",{"_index":2799,"title":{},"body":{"modules/ServicesModule.html":{}}}],["interface",{"_index":562,"title":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{}}}],["interfaces",{"_index":563,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"index.html":{}}}],["internal",{"_index":2747,"title":{},"body":{"components/NavbarComponent.html":{}}}],["intl.datetimeformat().resolvedoptions().timezone",{"_index":2365,"title":{},"body":{"injectables/I18nService.html":{}}}],["intl.numberformat(this.translate.getbrowserlang",{"_index":2316,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["invalid",{"_index":746,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["isauth",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["isequal",{"_index":1068,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isequal(forma",{"_index":1085,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isexpirationdateover",{"_index":834,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["isinthefuture(expirationdate",{"_index":832,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture(time",{"_index":907,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ismoment",{"_index":3370,"title":{},"body":{"classes/TimeReference.html":{}}}],["isnan(expirationdate",{"_index":830,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isnotanumber",{"_index":829,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["issue",{"_index":249,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["istanbul",{"_index":91,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}}}],["isused",{"_index":856,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isvirtualtimeundefine",{"_index":3347,"title":{},"body":{"classes/TimeReference.html":{}}}],["it's",{"_index":983,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["item",{"_index":2741,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":1618,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["january",{"_index":3244,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["jnlp",{"_index":195,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["js",{"_index":3592,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":700,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["jwt.expire",{"_index":739,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt.login",{"_index":735,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt[this.expireclaim",{"_index":864,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode",{"_index":699,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode(token",{"_index":893,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["keep",{"_index":1370,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["key",{"_index":1035,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/CardOperation.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Map.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeReference.html":{}}}],["label",{"_index":145,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label1",{"_index":3137,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label2",{"_index":3140,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label3",{"_index":3145,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["lang",{"_index":2970,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["langs",{"_index":3083,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["languagetag",{"_index":3559,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["large",{"_index":2890,"title":{},"body":{"modules/StateModule.html":{}}}],["larger",{"_index":1244,"title":{},"body":{"components/CardComponent.html":{}}}],["last",{"_index":1297,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/FeedFiltersEffects.html":{},"interfaces/TimelineState.html":{}}}],["lastcards",{"_index":1296,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastname",{"_index":910,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{}}}],["lastname:string",{"_index":3531,"title":{},"body":{"classes/User.html":{}}}],["lastname?:string",{"_index":85,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["later",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["latest",{"_index":1921,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["lcard",{"_index":225,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["left",{"_index":2744,"title":{},"body":{"components/NavbarComponent.html":{}}}],["legend",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["less",{"_index":3429,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["level",{"_index":2639,"title":{},"body":{"classes/Message.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["library",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["library.add(faclock",{"_index":2034,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(faexternallinkalt",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add(fasignoutalt",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["light",{"_index":240,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"components/IconComponent.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["light:boolean",{"_index":2393,"title":{},"body":{"components/IconComponent.html":{}}}],["lightcard",{"_index":220,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcard):boolean",{"_index":2087,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard,any",{"_index":2081,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard.id",{"_index":1373,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcardactions",{"_index":267,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardactiontypes",{"_index":223,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcardactiontypes.addlightcardfailure",{"_index":219,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.clearlightcardselection",{"_index":262,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.emptylightcards",{"_index":255,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.handleunexpectederror",{"_index":264,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcards",{"_index":254,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsextendeddata",{"_index":258,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsfailure",{"_index":259,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardssuccess",{"_index":256,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.removelightcard",{"_index":265,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.selectlightcard",{"_index":260,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatedsubscription",{"_index":263,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardadapter",{"_index":1332,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardadapter.getinitialstate",{"_index":1335,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardeffects",{"_index":618,"title":{"injectables/LightCardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/LightCardEffects.html":{}}}],["lightcardreducer",{"_index":597,"title":{},"body":{"interfaces/AppState.html":{}}}],["lightcards",{"_index":257,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcards.filter(card",{"_index":1368,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcards:${test",{"_index":2488,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["line",{"_index":3210,"title":{},"body":{"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["line'},{'name",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["line.component",{"_index":2007,"title":{},"body":{"modules/FeedModule.html":{}}}],["line.component.html",{"_index":3211,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts",{"_index":3209,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:190",{"_index":3218,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:226",{"_index":3227,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:24",{"_index":3230,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:25",{"_index":3231,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:27",{"_index":3229,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:28",{"_index":3215,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:32",{"_index":3228,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line/app",{"_index":1768,"title":{},"body":{"directives/DraggableDirective.html":{},"modules/FeedModule.html":{}}}],["line/mouse",{"_index":2026,"title":{},"body":{"modules/FeedModule.html":{},"directives/MouseWheelDirective.html":{}}}],["line/time",{"_index":2006,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeLineComponent.html":{}}}],["line/x",{"_index":2023,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["link",{"_index":1586,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["link/button",{"_index":1019,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["link1",{"_index":3138,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link2",{"_index":3141,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link3",{"_index":3146,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["list",{"_index":200,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["list.component",{"_index":2000,"title":{},"body":{"modules/FeedModule.html":{}}}],["list.component.html",{"_index":1339,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts",{"_index":1338,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:18",{"_index":1341,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:19",{"_index":1340,"title":{},"body":{"components/CardListComponent.html":{}}}],["list/card",{"_index":1337,"title":{},"body":{"components/CardListComponent.html":{},"modules/FeedModule.html":{}}}],["list/filters/filters.component",{"_index":2009,"title":{},"body":{"modules/FeedModule.html":{}}}],["list/filters/filters.component.ts",{"_index":2142,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:14",{"_index":2144,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:18",{"_index":2145,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/tags",{"_index":2031,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["list/filters/time",{"_index":2013,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["list/filters/type",{"_index":2010,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["list_radio",{"_index":201,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":1006,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["listens",{"_index":945,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["listsettingcomponent",{"_index":435,"title":{"components/ListSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["literal",{"_index":216,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/UpdateTimeReference.html":{}}}],["little",{"_index":1815,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["load",{"_index":226,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadbyid",{"_index":1275,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["loadcard",{"_index":1285,"title":{"classes/LoadCard.html":{}},"body":{"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcard(id",{"_index":1421,"title":{},"body":{"injectables/CardService.html":{}}}],["loadcard({id",{"_index":1372,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["loadcardfailure",{"_index":1286,"title":{"classes/LoadCardFailure.html":{}},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardfailure(err",{"_index":1282,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcardsuccess",{"_index":1287,"title":{"classes/LoadCardSuccess.html":{}},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardsuccess({card",{"_index":1281,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadchildren",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconfig",{"_index":333,"title":{"classes/LoadConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure",{"_index":1528,"title":{"classes/LoadConfigFailure.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure(err",{"_index":1518,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess",{"_index":1529,"title":{"classes/LoadConfigSuccess.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigsuccess({config",{"_index":1517,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfiguration",{"_index":1509,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loaded",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{}}}],["loadedi18n",{"_index":2977,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loader",{"_index":3587,"title":{},"body":{"dependencies.html":{}}}],["loadfeedfilteronauthenticationsuccess",{"_index":1914,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["loadi18nforlightcards",{"_index":3103,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nforlightcards(cards",{"_index":3114,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nforlightcards(cards:lightcard",{"_index":3049,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loadi18nformenuentries",{"_index":3104,"title":{},"body":{"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(){return",{"_index":3147,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(menus",{"_index":3116,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nformenuentries(menus:thirdmenu",{"_index":3055,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loading",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"injectables/LightCardEffects.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimelineState.html":{}}}],["loadingi18n",{"_index":2978,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loadlightcards",{"_index":224,"title":{"classes/LoadLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsextendeddata",{"_index":230,"title":{"classes/LoadLightCardsExtendedData.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadlightcardsfailure",{"_index":233,"title":{"classes/LoadLightCardsFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess",{"_index":229,"title":{"classes/LoadLightCardsSuccess.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess({lightcards",{"_index":1385,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["loadmenu",{"_index":2174,"title":{"classes/LoadMenu.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure",{"_index":2176,"title":{"classes/LoadMenuFailure.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure(err",{"_index":2618,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loadmenusuccess",{"_index":2175,"title":{"classes/LoadMenuSuccess.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenusuccess({menu",{"_index":2616,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loads",{"_index":1377,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["loadsettings",{"_index":2200,"title":{"classes/LoadSettings.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure",{"_index":2201,"title":{"classes/LoadSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure(err",{"_index":2826,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingsonlogin",{"_index":2820,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingssuccess",{"_index":1965,"title":{"classes/LoadSettingsSuccess.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingssuccess({settings",{"_index":2825,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loaduserdata(auth:payloadforsuccessfulauthentication):observable",{"_index":803,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["local",{"_index":1689,"title":{},"body":{"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{}}}],["locale",{"_index":2273,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["locales",{"_index":2807,"title":{},"body":{"components/SettingsComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["locales$:observable",{"_index":2812,"title":{},"body":{"components/SettingsComponent.html":{}}}],["locales?:string",{"_index":172,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["localestorage",{"_index":823,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage",{"_index":817,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.clear",{"_index":837,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":828,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.identifier",{"_index":853,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.token",{"_index":819,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.clientid",{"_index":848,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.expirationdate",{"_index":846,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.identifier",{"_index":842,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.token",{"_index":844,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorageauthcontent",{"_index":705,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/enumerations.html":{}}}],["location.href",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["location.origin",{"_index":887,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["location.pathname.length",{"_index":889,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["locationstrategy",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["lockaction",{"_index":153,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lockcard",{"_index":154,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lodash",{"_index":703,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["log",{"_index":67,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":104,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/User.html":{}}}],["login'},{'name",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["login.component.html",{"_index":2565,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.error.${category",{"_index":1040,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unavailable",{"_index":1044,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unexpected",{"_index":1045,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.login",{"_index":2599,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":2600,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.reset",{"_index":2602,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.code",{"_index":2603,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.password",{"_index":2601,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/password",{"_index":97,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["login:id",{"_index":1133,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["login:string",{"_index":3529,"title":{},"body":{"classes/User.html":{}}}],["loginclaim",{"_index":717,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["logincomponent",{"_index":100,"title":{"components/LoginComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["loginmessage",{"_index":2568,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage.i18n.key|translate:loginmessage.i18n.parameters",{"_index":2604,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":111,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["longtext",{"_index":203,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["lttd",{"_index":1158,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["lvalue",{"_index":2296,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m",{"_index":2309,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["m.format(options.hash.format",{"_index":2313,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.level==messagelevel.error",{"_index":2587,"title":{},"body":{"components/LoginComponent.html":{}}}],["m.locale(this.translate.getbrowserlang",{"_index":2312,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["mainrecipient",{"_index":1156,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["make",{"_index":1975,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TimeLineComponent.html":{}}}],["manage",{"_index":552,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["managed",{"_index":3171,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["management",{"_index":915,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manager",{"_index":923,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manages",{"_index":1520,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["mandatory",{"_index":205,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["manual",{"_index":1983,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map",{"_index":163,"title":{"classes/Map.html":{}},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{}}}],["map(([action,configtags",{"_index":1922,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([elapsedsincelast",{"_index":1960,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map((a",{"_index":1363,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map((action",{"_index":940,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["map((auth",{"_index":799,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map((card",{"_index":1280,"title":{},"body":{"injectables/CardEffects.html":{}}}],["map((config",{"_index":1516,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["map((settings",{"_index":2824,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(a=>new",{"_index":2828,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(action",{"_index":996,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(array",{"_index":2615,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(authenticationinfo",{"_index":959,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(card",{"_index":3051,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(check",{"_index":767,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(data",{"_index":797,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(id=>this.lightcard.id",{"_index":1208,"title":{},"body":{"components/CardComponent.html":{}}}],["map(id=>{return",{"_index":1132,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["map(isinthefuture",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["map(lightcard",{"_index":1371,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(menu",{"_index":3057,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(operation",{"_index":1382,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(r",{"_index":3028,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(s=>handlebars.compile(s",{"_index":2280,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(settings",{"_index":2832,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(t",{"_index":3041,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(t=>t(card",{"_index":2270,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(tick",{"_index":1949,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(timeref",{"_index":3162,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["map(u",{"_index":806,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(url",{"_index":2624,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(v=>new",{"_index":1932,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(values",{"_index":2461,"title":{},"body":{"components/InfoComponent.html":{}}}],["mapped",{"_index":1928,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["margin",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/LoginComponent.html":{}}}],["matching",{"_index":138,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["math.max",{"_index":2673,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["math.min(1",{"_index":2674,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["max",{"_index":1233,"title":{},"body":{"components/CardComponent.html":{}}}],["maxedretries",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["maxlength",{"_index":206,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["medium",{"_index":2374,"title":{},"body":{"components/IconComponent.html":{}}}],["medium:boolean",{"_index":2390,"title":{},"body":{"components/IconComponent.html":{}}}],["member",{"_index":132,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["members",{"_index":18,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["menu",{"_index":566,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/enumerations.html":{}}}],["menu.'+link.path",{"_index":2731,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.\\'+link.path",{"_index":2751,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.id",{"_index":3058,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menu.logout",{"_index":2752,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.logout&nbsp",{"_index":2739,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.settings",{"_index":2738,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.version",{"_index":3059,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menu_entry_id",{"_index":2188,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id",{"_index":2187,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id/:menu_version/:menu_entry_id",{"_index":2961,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["menu_version",{"_index":1577,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactions",{"_index":2194,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["menuactiontypes",{"_index":2173,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["menuactiontypes.handleunexpectederror",{"_index":2172,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenu",{"_index":2180,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenufailure",{"_index":2181,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenusuccess",{"_index":2182,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulink",{"_index":2186,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinkfailure",{"_index":2193,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinksuccess",{"_index":2190,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menueffects",{"_index":616,"title":{"injectables/MenuEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MenuEffects.html":{}}}],["menuentries",{"_index":2945,"title":{},"body":{"classes/Third.html":{}}}],["menuentries?:thirdmenuentry",{"_index":173,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["menuentry",{"_index":3010,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuentry.url",{"_index":3011,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuinitialstate",{"_index":2635,"title":{},"body":{"interfaces/MenuState.html":{}}}],["menureducer",{"_index":606,"title":{},"body":{"interfaces/AppState.html":{}}}],["menus",{"_index":3048,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menus.push(menu",{"_index":3047,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menustate",{"_index":572,"title":{"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MenuState.html":{}}}],["merge",{"_index":2972,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["merge(previous",{"_index":3033,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["mergemap",{"_index":2973,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["mergemap((id",{"_index":3071,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["message",{"_index":55,"title":{"classes/Message.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["message('the",{"_index":964,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(err",{"_index":979,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(message",{"_index":1050,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["messagelevel",{"_index":1027,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"injectables/TimeEffects.html":{},"miscellaneous/enumerations.html":{}}}],["messagelevel.debug",{"_index":2641,"title":{},"body":{"classes/Message.html":{}}}],["messagelevel.error",{"_index":965,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/TimeEffects.html":{}}}],["messageplaceolder",{"_index":1072,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["metadata",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["metareducer",{"_index":584,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":640,"title":{},"body":{"interfaces/AppState.html":{}}}],["method",{"_index":24,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["methods",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["middle",{"_index":3338,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["minus2hour",{"_index":1440,"title":{},"body":{"injectables/CardService.html":{}}}],["miscellaneous",{"_index":3609,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mmm",{"_index":3554,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["model/light",{"_index":2975,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["modification",{"_index":1302,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["module",{"_index":462,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["modules",{"_index":464,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["modules/archives/archives.module#archivesmodule",{"_index":545,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/feed/feed.module#feedmodule",{"_index":542,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/settings/settings.module#settingsmodule",{"_index":549,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/thirdparty/thirdparty.module#thirdpartymodule",{"_index":547,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modulewithproviders",{"_index":1485,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["moment",{"_index":903,"title":{},"body":{"classes/AuthObject.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["moment(date).startof('year",{"_index":3564,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment(new",{"_index":2310,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["moment(this.referencetime",{"_index":3389,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment(value",{"_index":3551,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.duration(computedoffsetinmilliseconds",{"_index":3396,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.duration(realnowmoment.diff(ref",{"_index":3391,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.locale(languagetag",{"_index":3562,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.locale(this._locale",{"_index":2361,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.moment",{"_index":3357,"title":{},"body":{"classes/TimeReference.html":{},"interfaces/TimeState.html":{}}}],["moment.tz.setdefault(timezone",{"_index":2366,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.updatelocale('en",{"_index":3236,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["momentnow",{"_index":3360,"title":{},"body":{"classes/TimeReference.html":{}}}],["mono.svg",{"_index":2415,"title":{},"body":{"components/IconComponent.html":{}}}],["month",{"_index":3265,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["months",{"_index":3272,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["more",{"_index":554,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mouse",{"_index":2662,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel",{"_index":2644,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel(event",{"_index":2656,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheeldirective",{"_index":459,"title":{"directives/MouseWheelDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["mousewheeldown",{"_index":2648,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc",{"_index":2647,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc(event",{"_index":2660,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelup",{"_index":2649,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["move",{"_index":1792,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["movement",{"_index":1813,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["movetocodeflowloginpage",{"_index":879,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["mozilla",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["mpl",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["multi",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["multisettingscomponent",{"_index":437,"title":{"components/MultiSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent:25",{"_index":3466,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:27",{"_index":3464,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:28",{"_index":3462,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:29",{"_index":3463,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:30",{"_index":3478,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:31",{"_index":3479,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:32",{"_index":3465,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:33",{"_index":3477,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:34",{"_index":3476,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:39",{"_index":3467,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:40",{"_index":3473,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:70",{"_index":3472,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:75",{"_index":3475,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:79",{"_index":3470,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:83",{"_index":3468,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:88",{"_index":3469,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:94",{"_index":3471,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:98",{"_index":3474,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["mycardstimeline",{"_index":3325,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimeline",{"_index":3327,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimeline",{"_index":3322,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["name",{"_index":46,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["name:string",{"_index":167,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["navbar",{"_index":114,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/CheckAuthenticationStatus.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["navbar'},{'name",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["navbar.component.html",{"_index":2693,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":2692,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcollapsed",{"_index":2697,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":112,"title":{"components/NavbarComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["navigate",{"_index":947,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["navigateawayfromfeed",{"_index":1556,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigates",{"_index":2631,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["navigatetocard",{"_index":1557,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetomenuurl",{"_index":1558,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigating",{"_index":1582,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigation",{"_index":2183,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigationactiontiming",{"_index":2880,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationactiontiming.postactivation",{"_index":2884,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationid",{"_index":1608,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["navigationroutes",{"_index":556,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["nb",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":1616,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["needed",{"_index":251,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdatedSubscription.html":{}}}],["needsconfirm",{"_index":157,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["neutraltimereference",{"_index":3425,"title":{},"body":{"interfaces/TimeState.html":{}}}],["neutraltimereference:timereference=new",{"_index":3412,"title":{},"body":{"classes/TimeReference.html":{}}}],["new",{"_index":29,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["next",{"_index":93,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["next.handle(this.addauthheadersifnecessary(request",{"_index":3448,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["next.length",{"_index":2091,"title":{},"body":{"classes/Filter.html":{}}}],["next.status.action",{"_index":3492,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.alarm",{"_index":3490,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.end",{"_index":3191,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next.status.notification",{"_index":3496,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.question",{"_index":3494,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.start",{"_index":3186,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next[0].chainfilter(card,next.slice(1",{"_index":2092,"title":{},"body":{"classes/Filter.html":{}}}],["next||next.length",{"_index":2093,"title":{},"body":{"classes/Filter.html":{}}}],["ng",{"_index":498,"title":{},"body":{"modules/AppModule.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":1730,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{}}}],["ngbcollapse]=\"!expandedmenu[index",{"_index":2735,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngbmodule",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["ngbmodule.forroot",{"_index":2035,"title":{},"body":{"modules/FeedModule.html":{}}}],["ngmodule",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["ngonchanges",{"_index":1731,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngonchanges(changes",{"_index":1737,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngondestroy",{"_index":1069,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngoninit",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngrx",{"_index":252,"title":{},"body":{"classes/AddLightCardFailure.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":1022,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"modules/StateModule.html":{},"injectables/TimeEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":1311,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":52,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":1063,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngx",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":2017,"title":{},"body":{"modules/FeedModule.html":{}}}],["none",{"_index":1166,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":3382,"title":{},"body":{"classes/TimeReference.html":{}}}],["noselectioncomponent",{"_index":441,"title":{"components/NoSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["notchecktokenrequest",{"_index":3450,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["nothing",{"_index":1864,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["notification",{"_index":2116,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notify",{"_index":116,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["null",{"_index":183,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{}}}],["number",{"_index":207,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{}}}],["oauth2.client",{"_index":729,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["oauth2.flow.delagate",{"_index":733,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["object",{"_index":1094,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["object[locale",{"_index":3029,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[locale][publisher",{"_index":3030,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[locale][publisher][version",{"_index":3031,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["observable",{"_index":17,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{}}}],["observable.create(observer",{"_index":1458,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(error",{"_index":1467,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(message",{"_index":1460,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.next(json.parse(message.data,cardoperation.converttypeintoenum",{"_index":1461,"title":{},"body":{"injectables/CardService.html":{}}}],["obtain",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["occurred",{"_index":1464,"title":{},"body":{"injectables/CardService.html":{}}}],["of([new",{"_index":3133,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(false",{"_index":2493,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["of(new",{"_index":970,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["of(null",{"_index":769,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["of(template",{"_index":2278,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["of(third",{"_index":2989,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["of(this.handlerejectedlogin(new",{"_index":963,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(true",{"_index":3148,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(v",{"_index":2514,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["of(v.label",{"_index":2517,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["ofactions/authentication.actions",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["ofactions/card.actions",{"_index":1031,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofactions/config.actions",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["ofactions/feed.actions",{"_index":1403,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofactions/light",{"_index":1029,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["ofactions/menu.actions",{"_index":1593,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{}}}],["ofactions/settings.actions",{"_index":1100,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{}}}],["ofactions/time.actions",{"_index":1967,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/TimeEffects.html":{}}}],["ofactions/timeline.actions",{"_index":3233,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofeffects/authentication.effects",{"_index":592,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card",{"_index":590,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card.effects",{"_index":588,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/config.effects",{"_index":626,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/custom",{"_index":613,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/feed",{"_index":622,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/light",{"_index":619,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/menu.effects",{"_index":617,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/settings.effects",{"_index":630,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/time.effects",{"_index":633,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofmap",{"_index":164,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/card",{"_index":1404,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["ofmodel/card.model",{"_index":161,"title":{},"body":{"classes/Action.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"interfaces/ConfigState.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/feed",{"_index":648,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofmodel/i18n.model",{"_index":162,"title":{},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["ofmodel/light",{"_index":221,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/map",{"_index":165,"title":{},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{}}}],["ofmodel/message.model",{"_index":56,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/thirds.model",{"_index":1667,"title":{},"body":{"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["ofmodel/time.model",{"_index":1870,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/user.model",{"_index":704,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ofselectors/authentication.selectors",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"injectables/ConfigService.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"injectables/SettingsService.html":{}}}],["ofselectors/card.selectors",{"_index":1198,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{}}}],["ofselectors/config.selectors",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["ofselectors/feed.selectors",{"_index":1902,"title":{},"body":{"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofselectors/menu.selectors",{"_index":2431,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/router.selectors",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/settings.selectors",{"_index":1102,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["ofselectors/settings.x.config.selectors",{"_index":2349,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{},"components/TagsFilterComponent.html":{}}}],["ofselectors/time.selectors",{"_index":2454,"title":{},"body":{"components/InfoComponent.html":{},"injectables/TimeEffects.html":{}}}],["ofservices/authentication.service",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/LoginComponent.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ofservices/card.service",{"_index":1028,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["ofservices/config.service",{"_index":1527,"title":{},"body":{"injectables/ConfigEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/filter.service",{"_index":651,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"modules/ServicesModule.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofservices/guard.service",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["ofservices/guid.service",{"_index":697,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"modules/ServicesModule.html":{}}}],["ofservices/i18n.service",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/services.module",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["ofservices/settings.service",{"_index":2801,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{}}}],["ofservices/thirds.service",{"_index":1261,"title":{},"body":{"components/CardDetailsComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/time.service",{"_index":1199,"title":{},"body":{"components/CardComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{}}}],["ofstates/authentication.state",{"_index":610,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/card.state",{"_index":611,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/config.state",{"_index":624,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["ofstates/feed.state",{"_index":594,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["ofstates/menu.state",{"_index":615,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/settings.state",{"_index":628,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/time.state",{"_index":631,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/timeline.state",{"_index":627,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/index",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofstore/reducers/authentication.reducer",{"_index":582,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/card.reducer",{"_index":601,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/config.reducer",{"_index":603,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/light",{"_index":598,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/menu.reducer",{"_index":607,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/settings.reducer",{"_index":605,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/time.reducer",{"_index":609,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/timeline.reducer",{"_index":596,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/selectors/card.selectors",{"_index":1260,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["ofstore/selectors/router.selectors",{"_index":1196,"title":{},"body":{"components/CardComponent.html":{}}}],["ofstore/state.module",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["ofstore/states/router.state",{"_index":580,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["oftype",{"_index":1021,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogin",{"_index":1379,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogout",{"_index":939,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.checkauthenticationstatus",{"_index":953,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologin",{"_index":999,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologout",{"_index":1014,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(cardactiontypes.loadcard",{"_index":1277,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(configactiontypes.loadconfig",{"_index":1514,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigfailure",{"_index":1536,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigsuccess",{"_index":990,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(feedactiontypes.applyfilter",{"_index":1395,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["oftype(lightcardactiontypes.loadlightcardssuccess",{"_index":1362,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/LightCardEffects.html":{}}}],["oftype(menuactiontypes.loadmenu",{"_index":2612,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(menuactiontypes.selectmenulink",{"_index":2620,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(router_navigation",{"_index":1566,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(router_request",{"_index":1560,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(settingsactiontypes.loadsettings",{"_index":2822,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(settingsactiontypes.loadsettingssuccess",{"_index":1919,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(settingsactiontypes.patchsettings",{"_index":2830,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(timeactiontypes.tick",{"_index":1941,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oidc",{"_index":774,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ok",{"_index":984,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["once",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["onchanges",{"_index":1729,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ondestroy",{"_index":1058,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ondragend(event",{"_index":1818,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["one",{"_index":237,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-2.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NavbarComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["one_second",{"_index":706,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ongoing",{"_index":1301,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["oninit",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["onmousewheel",{"_index":2651,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheel(event",{"_index":2658,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome(event",{"_index":2665,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox(event",{"_index":2668,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie(event",{"_index":2670,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onpointerdown(event",{"_index":1800,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointermove(event",{"_index":1804,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointerup(event",{"_index":1807,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onsubmit",{"_index":101,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["open",{"_index":1176,"title":{},"body":{"components/CardComponent.html":{}}}],["operation.cardids",{"_index":1389,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.cards",{"_index":1386,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects",{"_index":591,"title":{},"body":{"interfaces/AppState.html":{}}}],["operation.effects.ts",{"_index":1359,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:32",{"_index":1361,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:41",{"_index":1394,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:73",{"_index":1402,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:92",{"_index":1376,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.model",{"_index":1405,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["operation.model.ts",{"_index":1344,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["operation.model.ts:10",{"_index":1350,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.model.ts:21",{"_index":1352,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.type",{"_index":1383,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operations",{"_index":1378,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["operator",{"_index":2284,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["operatorfabric",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["options",{"_index":2286,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["options.hash",{"_index":2317,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["otherwise",{"_index":751,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["out",{"_index":73,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":1798,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["outputs",{"_index":1772,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["over",{"_index":833,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["overview",{"_index":3627,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":3572,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":2743,"title":{},"body":{"components/NavbarComponent.html":{}}}],["page",{"_index":106,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["pair",{"_index":98,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["paload",{"_index":1011,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pan",{"_index":3603,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameterlistitem",{"_index":210,"title":{"classes/ParameterListItem.html":{}},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameters['message",{"_index":977,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parametrization",{"_index":2049,"title":{},"body":{"classes/Filter.html":{}}}],["params",{"_index":780,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["params.append('client_secret",{"_index":794,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('clientid",{"_index":786,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('code",{"_index":781,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('grant_type",{"_index":782,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('password",{"_index":793,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('redirect_uri",{"_index":787,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('username",{"_index":792,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.tostring",{"_index":790,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params['error",{"_index":1046,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parentmodule",{"_index":2802,"title":{},"body":{"modules/ServicesModule.html":{}}}],["parse",{"_index":2892,"title":{},"body":{"modules/StateModule.html":{}}}],["party",{"_index":1585,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["pass",{"_index":2060,"title":{},"body":{"classes/Filter.html":{}}}],["passes",{"_index":2070,"title":{},"body":{"classes/Filter.html":{}}}],["password",{"_index":110,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["patch",{"_index":2202,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patchsettings",{"_index":1099,"title":{"classes/PatchSettings.html":{}},"body":{"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettings({settings",{"_index":1144,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["patchsettingsfailure",{"_index":2204,"title":{"classes/PatchSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingsfailure(err",{"_index":2834,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchsettingssuccess",{"_index":2203,"title":{"classes/PatchSettingsSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingssuccess({settings:settings",{"_index":2833,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchusersettings",{"_index":2856,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings",{"_index":2859,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings:any",{"_index":2866,"title":{},"body":{"injectables/SettingsService.html":{}}}],["path",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["pathend",{"_index":888,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pathmatch",{"_index":2040,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["pattern",{"_index":1823,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["pattern:string",{"_index":2935,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["payload",{"_index":38,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["payload.access_token",{"_index":868,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid",{"_index":867,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid.tostring",{"_index":849,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expirationdate.gettime().tostring",{"_index":847,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expires_in",{"_index":862,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.identifier",{"_index":843,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.password).pipe",{"_index":1003,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["payload.token",{"_index":845,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload:{cardstimeline",{"_index":2478,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{code",{"_index":94,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["payload:{currenttime:moment.moment",{"_index":1886,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["payload:{data",{"_index":2476,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{filters",{"_index":659,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{name",{"_index":655,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{timereference:timereference",{"_index":1890,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["payloadforsuccessfulauthentication",{"_index":42,"title":{"classes/PayloadForSuccessfulAuthentication.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["payloadforsuccessfulauthentication(jwt[this.loginclaim",{"_index":866,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pertinent",{"_index":1610,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pieces",{"_index":2895,"title":{},"body":{"modules/StateModule.html":{}}}],["pipe",{"_index":805,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["pipe(catcherror",{"_index":955,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(first",{"_index":1120,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["pipe(map(config",{"_index":1215,"title":{},"body":{"components/CardComponent.html":{}}}],["pipe(map(flowmode=>flowmode",{"_index":2585,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(pulse",{"_index":3158,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["pipe(map(trans",{"_index":3078,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["pipe(takeuntil(this.ngunsubscribe",{"_index":1117,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["pipe(tap(menus",{"_index":2719,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipes",{"_index":3532,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["pipetransform",{"_index":3550,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["placeholder",{"_index":1065,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["platformlocation",{"_index":2376,"title":{},"body":{"components/IconComponent.html":{}}}],["platformlocation.getbasehreffromdom",{"_index":2399,"title":{},"body":{"components/IconComponent.html":{}}}],["please",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["plus48hours",{"_index":1444,"title":{},"body":{"injectables/CardService.html":{}}}],["point",{"_index":1612,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pointerdown",{"_index":1777,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerdown(event",{"_index":1785,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerevent",{"_index":1786,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove",{"_index":1778,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove(event",{"_index":1790,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup",{"_index":1779,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup(event",{"_index":1793,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["popover",{"_index":3518,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["possible",{"_index":118,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["postdata",{"_index":753,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.append('token",{"_index":756,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.tostring",{"_index":765,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["preloadallmodules",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":561,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preparedlist",{"_index":2498,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["present",{"_index":902,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["previous",{"_index":1881,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["previous.pipe",{"_index":3034,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["primary",{"_index":2564,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/RouterStateUrl.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["process",{"_index":179,"title":{"classes/Process.html":{}},"body":{"classes/Action.html":{},"classes/Card.html":{},"injectables/CardOperationEffects.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["process.states[card.state",{"_index":181,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processes",{"_index":2946,"title":{},"body":{"classes/Third.html":{}}}],["processes?:ofmap",{"_index":174,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processid",{"_index":1157,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["processing",{"_index":1304,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["properties",{"_index":36,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["property",{"_index":1977,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{}}}],["protected",{"_index":1064,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["provide",{"_index":527,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["provided",{"_index":2889,"title":{},"body":{"modules/StateModule.html":{}}}],["providedin",{"_index":2108,"title":{},"body":{"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["providers",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["providers:[{provide:'configretrydelay',usevalue:5000",{"_index":2888,"title":{},"body":{"modules/StateModule.html":{}}}],["public",{"_index":37,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/Tick.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{}}}],["publication",{"_index":1222,"title":{},"body":{"components/CardComponent.html":{}}}],["publicationdate",{"_index":1347,"title":{},"body":{"classes/CardOperation.html":{}}}],["publishdate",{"_index":1152,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["publisher",{"_index":1150,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{}}}],["publishers",{"_index":2492,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["publisherversion",{"_index":1151,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/TimeSpan.html":{}}}],["publisher}.${version}.${name}.${locale",{"_index":2275,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["push",{"_index":96,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["put",{"_index":870,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["query",{"_index":1617,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querylist",{"_index":1744,"title":{},"body":{"components/DetailsComponent.html":{}}}],["querymenuentryurl",{"_index":3105,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querymenuentryurl(thirdmenuid",{"_index":2996,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["queryparams",{"_index":1607,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querytemplate",{"_index":2216,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher",{"_index":2235,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher:string",{"_index":2271,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querythird",{"_index":3106,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname",{"_index":3120,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname:string",{"_index":2984,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["question",{"_index":2114,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["r",{"_index":3032,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["rangeend",{"_index":1425,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart",{"_index":1427,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart:rangestart,rangeend",{"_index":1473,"title":{},"body":{"injectables/CardService.html":{}}}],["reactiveformsmodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["readonly",{"_index":39,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{}}}],["ready",{"_index":993,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["real",{"_index":3381,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnow",{"_index":3363,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment",{"_index":3366,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=moment(realnow",{"_index":3378,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=realnow",{"_index":3377,"title":{},"body":{"classes/TimeReference.html":{}}}],["realtimebar",{"_index":3295,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["reason",{"_index":2059,"title":{},"body":{"classes/Filter.html":{}}}],["received",{"_index":3312,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["recipient_filter",{"_index":2138,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["recursion",{"_index":2075,"title":{},"body":{"classes/Filter.html":{}}}],["recursively",{"_index":2074,"title":{},"body":{"classes/Filter.html":{}}}],["redirect",{"_index":927,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["redirectto",{"_index":550,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["reduce",{"_index":1963,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((acc",{"_index":1951,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((ids",{"_index":3061,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((menus:thirdmenu[],menu:thirdmenu",{"_index":3046,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reducer",{"_index":26,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["ref",{"_index":3388,"title":{},"body":{"classes/TimeReference.html":{}}}],["reference",{"_index":1876,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["referencetime",{"_index":3353,"title":{},"body":{"classes/TimeReference.html":{}}}],["refresh",{"_index":1374,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["refreshifselectedcard",{"_index":1360,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["regarding",{"_index":901,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registerarrayatindex",{"_index":2217,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerarrayatindexlength",{"_index":2218,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerbool",{"_index":2219,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registercardaction",{"_index":2220,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerdateformat",{"_index":2221,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registered",{"_index":773,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registeri18n",{"_index":2222,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registermath",{"_index":2223,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernow",{"_index":2224,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernumberformat",{"_index":2225,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerpreservespace",{"_index":2226,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerslice",{"_index":2227,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersort",{"_index":2228,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersplit",{"_index":2229,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersvg",{"_index":2230,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reinsertscripts",{"_index":1639,"title":{},"body":{"components/DetailComponent.html":{}}}],["reject",{"_index":70,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["rejectedlogin",{"_index":987,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejection",{"_index":124,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rejectlogin",{"_index":69,"title":{"classes/RejectLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rejectlogin({error",{"_index":1049,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectloginattempt",{"_index":130,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["related",{"_index":248,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":850,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["reload",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":134,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/InitAuthStatus.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["removelightcard",{"_index":250,"title":{"classes/RemoveLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["removelightcard({cards",{"_index":1388,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["removes",{"_index":127,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rendered",{"_index":1307,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["rendering",{"_index":1681,"title":{},"body":{"components/DetailComponent.html":{}}}],["replication",{"_index":2053,"title":{},"body":{"classes/Filter.html":{}}}],["reported",{"_index":1865,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["request",{"_index":1449,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{},"interceptors/TokenInjector.html":{}}}],["request.clone(update",{"_index":3455,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["request.url",{"_index":3449,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["requiredfield",{"_index":1073,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["reset",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["resetform",{"_index":2572,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetstate",{"_index":918,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["resolvethirdpartylink",{"_index":2610,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["resource",{"_index":1687,"title":{},"body":{"components/DetailComponent.html":{}}}],["resourceurl",{"_index":3020,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["resourceurl}?${versionparam.tostring",{"_index":3024,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["response",{"_index":896,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["responsetype",{"_index":3015,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result",{"_index":137,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["result.id",{"_index":3091,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result.translation[lang",{"_index":3087,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result:any",{"_index":3082,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["results",{"_index":139,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":1365,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["retry",{"_index":1523,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["retryconfigurationloading",{"_index":1510,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["retrydelay",{"_index":1512,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["return",{"_index":182,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["returned",{"_index":1619,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["returns",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["right",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["root",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["root'},{'name",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["route",{"_index":1589,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["router",{"_index":567,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["router.effects",{"_index":614,"title":{},"body":{"interfaces/AppState.html":{}}}],["router.effects.ts",{"_index":1555,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:21",{"_index":1559,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:28",{"_index":1573,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:50",{"_index":1580,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:64",{"_index":1565,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigation",{"_index":1581,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_request",{"_index":1592,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routereffects",{"_index":593,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerinitialstate",{"_index":642,"title":{},"body":{"interfaces/AppState.html":{}}}],["routermodule",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":675,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":559,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigationaction",{"_index":1567,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerreducerstate",{"_index":573,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerrequestaction",{"_index":1562,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate",{"_index":1605,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate.params['cid",{"_index":1571,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_entry_id",{"_index":1579,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_id",{"_index":1576,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_version'],menu_entry_id",{"_index":1578,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.root.queryparams",{"_index":1623,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate:any",{"_index":1569,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstateserializer",{"_index":1596,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstatesnapshot",{"_index":1603,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstateurl",{"_index":579,"title":{"classes/RouterStateUrl.html":{}},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstateurl(url",{"_index":1624,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routes",{"_index":533,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routes.slice(0",{"_index":557,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"components/NavbarComponent.html":{},"modules/SettingsModule.html":{},"modules/ThirdpartyModule.html":{}}}],["routing.module.ts",{"_index":530,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["row",{"_index":3517,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["rows",{"_index":208,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["rte",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["rules",{"_index":926,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["running",{"_index":825,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["rvalue",{"_index":2294,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["rxjs",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/operators/tap",{"_index":2495,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["rxjs/operators",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["safe",{"_index":1686,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl",{"_index":1682,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tolocalestring",{"_index":1690,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tostring",{"_index":1688,"title":{},"body":{"components/DetailComponent.html":{}}}],["safehtml",{"_index":1660,"title":{},"body":{"components/DetailComponent.html":{}}}],["saferesourceurl",{"_index":1666,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeurl",{"_index":2427,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["same",{"_index":3310,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["sanitizer",{"_index":1645,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["saturday",{"_index":3235,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["save",{"_index":838,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["saveauthenticationinformation(payload",{"_index":841,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["scope",{"_index":2055,"title":{},"body":{"classes/Filter.html":{}}}],["scripts",{"_index":1700,"title":{},"body":{"components/DetailComponent.html":{}}}],["scripts.length",{"_index":1703,"title":{},"body":{"components/DetailComponent.html":{}}}],["scriptsinitiallength",{"_index":1702,"title":{},"body":{"components/DetailComponent.html":{}}}],["secret",{"_index":731,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["security",{"_index":1446,"title":{},"body":{"injectables/CardService.html":{}}}],["see",{"_index":1990,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["select",{"_index":236,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"classes/ClearLightCardSelection.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/TimeLineComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["select(feedselectors.selectfeed",{"_index":3311,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["select(feedselectors.selectfilteredfeed",{"_index":1905,"title":{},"body":{"components/FeedComponent.html":{}}}],["select(feedselectors.selectunfilteredfeed",{"_index":3333,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["select(selectconfigloaded",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectmaxedretries",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["select(timelineselectors.selectfeed",{"_index":3331,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["selectcardstateselectedid",{"_index":1197,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{}}}],["selectcode",{"_index":1026,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["selectconfigloaded",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["selectconfigretry",{"_index":1530,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["selectcurrentdate",{"_index":2453,"title":{},"body":{"components/InfoComponent.html":{}}}],["selectcurrenturl",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["selectdetail",{"_index":1732,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selectdetail(detail",{"_index":1741,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selected",{"_index":1295,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/CardState.html":{},"interfaces/TimelineState.html":{}}}],["selected_iframe_url",{"_index":2633,"title":{},"body":{"interfaces/MenuState.html":{}}}],["selectedcardid",{"_index":1294,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["selectedcardid:string",{"_index":261,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["selectediframeurl",{"_index":2424,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedvalues",{"_index":211,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["selectexpirationtime",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["selectidentifier",{"_index":1107,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{}}}],["selection",{"_index":241,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NoSelectionComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selection'},{'name",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selection.component",{"_index":2004,"title":{},"body":{"modules/FeedModule.html":{}}}],["selection.component.html",{"_index":2755,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts",{"_index":2754,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:14",{"_index":2756,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":2757,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection/no",{"_index":2003,"title":{},"body":{"modules/FeedModule.html":{},"components/NoSelectionComponent.html":{}}}],["selections",{"_index":3513,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["selectlightcard",{"_index":235,"title":{"classes/SelectLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectlightcard({selectedcardid",{"_index":1572,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmaxedretries",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenulink",{"_index":1588,"title":{"classes/SelectMenuLink.html":{}},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulink({menu_id",{"_index":1575,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmenulinkfailure",{"_index":2178,"title":{"classes/SelectMenuLinkFailure.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinkfailure(err",{"_index":2627,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenulinksuccess",{"_index":2177,"title":{"classes/SelectMenuLinkSuccess.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinksuccess({iframe_url",{"_index":2625,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenustatemenu",{"_index":2714,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectmenustateselectediframeurl",{"_index":2430,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectmessage",{"_index":2582,"title":{},"body":{"components/LoginComponent.html":{}}}],["selector",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selectrouterstate",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["selecttimereference",{"_index":3172,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["selectunfilteredfeed",{"_index":3332,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["selectusernameoridentifier",{"_index":2452,"title":{},"body":{"components/InfoComponent.html":{}}}],["send",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"injectables/TimeEffects.html":{}}}],["sequentially",{"_index":2078,"title":{},"body":{"classes/Filter.html":{}}}],["serialize",{"_index":1598,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerstate",{"_index":1602,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["serializer",{"_index":2885,"title":{},"body":{"modules/StateModule.html":{}}}],["service",{"_index":99,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["services/authentication.service",{"_index":1023,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["services/handlebars.service",{"_index":1492,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{}}}],["services/thirds.service",{"_index":1491,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["servicesmodule",{"_index":475,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["servicesmodule.forroot",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":1756,"title":{},"body":{"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["set(\"locale",{"_index":3013,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set(\"version",{"_index":2994,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["setcarddatatimeline",{"_index":2475,"title":{"classes/SetCardDataTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setheaders",{"_index":3454,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["settimeout",{"_index":1696,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["settimeout(()=>this.expandedmenu[index]=false,5000",{"_index":2727,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settimeout(()=>this.expandedusermenu=false,5000",{"_index":2730,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setting",{"_index":1059,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["setting'},{'name",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["setting.component",{"_index":1849,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.css",{"_index":1060,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.html",{"_index":1061,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts",{"_index":1057,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:19",{"_index":1824,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["setting.component.ts:22",{"_index":2931,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:24",{"_index":2501,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:25",{"_index":1830,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:27",{"_index":1078,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:28",{"_index":1076,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:29",{"_index":1077,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:30",{"_index":1096,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:31",{"_index":1098,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:32",{"_index":1097,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:33",{"_index":1095,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:34",{"_index":1075,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:35",{"_index":2932,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:40",{"_index":1090,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:47",{"_index":2934,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:50",{"_index":2503,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:51",{"_index":2933,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:58",{"_index":2502,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:68",{"_index":2505,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:70",{"_index":1089,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:72",{"_index":2504,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:75",{"_index":1093,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:77",{"_index":2506,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:79",{"_index":1083,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:83",{"_index":1080,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:88",{"_index":1082,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:94",{"_index":1087,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:98",{"_index":1091,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting/base",{"_index":1056,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting/email",{"_index":1821,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/list",{"_index":2497,"title":{},"body":{"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/text",{"_index":1848,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["settingpath",{"_index":1074,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings",{"_index":548,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiSettingsComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["settings'},{'name",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["settings.component",{"_index":2848,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.css",{"_index":2681,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":2682,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.scss",{"_index":3460,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts",{"_index":2680,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":3461,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":2684,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":2686,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:32",{"_index":2685,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":2687,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.{{settingpath",{"_index":1854,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/multi",{"_index":2679,"title":{},"body":{"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/type",{"_index":2850,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings:any",{"_index":2209,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"interfaces/SettingsState.html":{}}}],["settings[this.settingpath",{"_index":1142,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["settingsactions",{"_index":2212,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["settingsactiontypes",{"_index":1966,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["settingsactiontypes.handleunexpectederror",{"_index":2199,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettings",{"_index":2205,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingsfailure",{"_index":2206,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingssuccess",{"_index":2207,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettings",{"_index":2208,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingsfailure",{"_index":2210,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingssuccess",{"_index":2211,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingscomponent",{"_index":443,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["settingseffects",{"_index":629,"title":{"injectables/SettingsEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SettingsEffects.html":{}}}],["settingsinitialstate",{"_index":2869,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["settingsmodule",{"_index":2836,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"index.html":{},"modules.html":{}}}],["settingsreducer",{"_index":604,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingsroutingmodule",{"_index":2840,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["settingsservice",{"_index":2793,"title":{"injectables/SettingsService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["settingsstate",{"_index":574,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SettingsState.html":{}}}],["severity",{"_index":1155,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/FilterService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["severity.action",{"_index":2113,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severity.alarm",{"_index":2112,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severity.notification",{"_index":2117,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severity.question",{"_index":2115,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severityordinal",{"_index":1312,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card1.severity",{"_index":1318,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card2.severity",{"_index":1319,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(severity",{"_index":3419,"title":{},"body":{"classes/TimeSpan.html":{}}}],["shift",{"_index":1883,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["short",{"_index":1981,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["showgridlines",{"_index":3294,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["simplechanges",{"_index":1738,"title":{},"body":{"components/DetailsComponent.html":{}}}],["single",{"_index":2746,"title":{},"body":{"components/NavbarComponent.html":{}}}],["size",{"_index":1243,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["size:string",{"_index":2394,"title":{},"body":{"components/IconComponent.html":{}}}],["skipself",{"_index":2797,"title":{},"body":{"modules/ServicesModule.html":{}}}],["small",{"_index":1241,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["small:boolean",{"_index":2389,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":1611,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["solid",{"_index":518,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["something",{"_index":1860,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["somewhere",{"_index":1989,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["sortcomparer:comparebyseveritylttdpublishdate",{"_index":1333,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sortcomparer:comparebystartdate",{"_index":3432,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["sortonkey(key",{"_index":2325,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sound",{"_index":3420,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["special",{"_index":3543,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["speed",{"_index":1985,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/TimeReference.html":{}}}],["splitvalue",{"_index":2290,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sprites",{"_index":2372,"title":{},"body":{"components/IconComponent.html":{}}}],["sprites:string",{"_index":2395,"title":{},"body":{"components/IconComponent.html":{}}}],["src/.../authentication.actions.ts",{"_index":3612,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":3619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card",{"_index":3614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.actions.ts",{"_index":3613,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":3626,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.actions.ts",{"_index":3615,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../feed.actions.ts",{"_index":3617,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../filter.service.ts",{"_index":3618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../light",{"_index":3616,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.actions.ts",{"_index":3620,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../message.model.ts",{"_index":3621,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../settings.actions.ts",{"_index":3622,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../thirds.model.ts",{"_index":3611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../time.actions.ts",{"_index":3623,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.model.ts",{"_index":3625,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../timeline.actions.ts",{"_index":3624,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":529,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/icon/icon.component.ts",{"_index":2367,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:18",{"_index":2380,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:19",{"_index":2383,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:20",{"_index":2382,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:21",{"_index":2378,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:22",{"_index":2379,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:23",{"_index":2381,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:24",{"_index":2385,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:25",{"_index":2386,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:26",{"_index":2377,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:32",{"_index":2384,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":2562,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:27",{"_index":2578,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":2581,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":2580,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":2579,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":2573,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":2575,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:51",{"_index":2576,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":2577,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:63",{"_index":2574,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts",{"_index":2436,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:26",{"_index":2445,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:27",{"_index":2444,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:28",{"_index":2442,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:33",{"_index":2443,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:44",{"_index":2447,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:48",{"_index":2449,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:52",{"_index":2451,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":2691,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":2710,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":2711,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":2708,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":2707,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":2709,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:33",{"_index":2701,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":2703,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:52",{"_index":2702,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:56",{"_index":2713,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:60",{"_index":2705,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:66",{"_index":2706,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/model/card",{"_index":1343,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts",{"_index":1148,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts:12",{"_index":1161,"title":{},"body":{"classes/Card.html":{}}}],["src/app/model/card.model.ts:41",{"_index":1630,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/model/feed",{"_index":2044,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/model/i18n.model.ts",{"_index":2332,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/i18n.model.ts:10",{"_index":2334,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/light",{"_index":3414,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/map.ts",{"_index":2605,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/map.ts:8",{"_index":2608,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/message.model.ts",{"_index":2637,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/message.model.ts:10",{"_index":2640,"title":{},"body":{"classes/Message.html":{}}}],["src/app/model/thirds.model.ts",{"_index":142,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/thirds.model.ts:105",{"_index":2480,"title":{},"body":{"classes/Input.html":{}}}],["src/app/model/thirds.model.ts:12",{"_index":2947,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:122",{"_index":2759,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["src/app/model/thirds.model.ts:25",{"_index":2949,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:36",{"_index":2952,"title":{},"body":{"classes/ThirdMenuEntry.html":{}}}],["src/app/model/thirds.model.ts:45",{"_index":2951,"title":{},"body":{"classes/ThirdMenu.html":{}}}],["src/app/model/thirds.model.ts:54",{"_index":2775,"title":{},"body":{"classes/Process.html":{}}}],["src/app/model/thirds.model.ts:61",{"_index":2871,"title":{},"body":{"classes/State.html":{}}}],["src/app/model/thirds.model.ts:76",{"_index":158,"title":{},"body":{"classes/Action.html":{}}}],["src/app/model/time.model.ts",{"_index":3343,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/time.model.ts:11",{"_index":3368,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:19",{"_index":3355,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:20",{"_index":3359,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:21",{"_index":3362,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:33",{"_index":3365,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:4",{"_index":3352,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:56",{"_index":3369,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/user.model.ts",{"_index":3526,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.model.ts:8",{"_index":3528,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/archives/archives",{"_index":674,"title":{},"body":{"modules/ArchivesRoutingModule.html":{}}}],["src/app/modules/archives/archives.component.ts",{"_index":661,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:15",{"_index":664,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:19",{"_index":665,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.module.ts",{"_index":672,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["src/app/modules/cards/cards.module.ts",{"_index":1482,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/cards.module.ts:28",{"_index":1484,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/components/card",{"_index":1251,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts",{"_index":1169,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:28",{"_index":1184,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:29",{"_index":1183,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:30",{"_index":1193,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:31",{"_index":1192,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:32",{"_index":1182,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:42",{"_index":1191,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:47",{"_index":1190,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:65",{"_index":1186,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:75",{"_index":1188,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:80",{"_index":1195,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts",{"_index":1631,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:104",{"_index":1653,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:21",{"_index":1661,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:22",{"_index":1649,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:23",{"_index":1648,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:24",{"_index":1663,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:25",{"_index":1647,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:33",{"_index":1658,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:38",{"_index":1657,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:53",{"_index":1656,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:69",{"_index":1665,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:73",{"_index":1659,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:88",{"_index":1655,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts",{"_index":1727,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:18",{"_index":1746,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:19",{"_index":1735,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:20",{"_index":1734,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:25",{"_index":1736,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:34",{"_index":1743,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:44",{"_index":1742,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:53",{"_index":1747,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:57",{"_index":1739,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts",{"_index":2213,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:103",{"_index":2243,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:117",{"_index":2237,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:123",{"_index":2247,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:140",{"_index":2248,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:182",{"_index":2242,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:208",{"_index":2250,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:226",{"_index":2240,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:23",{"_index":2232,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:240",{"_index":2241,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:248",{"_index":2245,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:255",{"_index":2244,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:262",{"_index":2246,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:44",{"_index":2234,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:49",{"_index":2236,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:62",{"_index":2239,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:91",{"_index":2238,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:97",{"_index":2249,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/feed/components/card",{"_index":1336,"title":{},"body":{"components/CardListComponent.html":{},"components/FiltersComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["src/app/modules/feed/components/no",{"_index":2753,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["src/app/modules/feed/components/time",{"_index":1767,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["src/app/modules/feed/feed",{"_index":2036,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/modules/feed/feed.component.ts",{"_index":1892,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:24",{"_index":1899,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:25",{"_index":1900,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:26",{"_index":1896,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:31",{"_index":1898,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:42",{"_index":1897,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.module.ts",{"_index":1999,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/modules/settings/components/settings/base",{"_index":1055,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/email",{"_index":1820,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/list",{"_index":2496,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/multi",{"_index":2678,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts",{"_index":2806,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:20",{"_index":2811,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:21",{"_index":2809,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:26",{"_index":2810,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/text",{"_index":2930,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/type",{"_index":3459,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["src/app/modules/settings/settings",{"_index":2851,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":2841,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts",{"_index":2419,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:23",{"_index":2425,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:29",{"_index":2426,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:37",{"_index":2429,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/thirdparty",{"_index":2960,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["src/app/modules/thirdparty/thirdparty.module.ts",{"_index":2958,"title":{},"body":{"modules/ThirdpartyModule.html":{}}}],["src/app/services/authentication.service.ts",{"_index":677,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/authentication.service.ts:288",{"_index":683,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:291",{"_index":685,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:292",{"_index":687,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:293",{"_index":686,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:294",{"_index":688,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:303",{"_index":1495,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:305",{"_index":1498,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:306",{"_index":1497,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:307",{"_index":1496,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/card.service.ts",{"_index":1406,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:20",{"_index":1429,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:21",{"_index":1428,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:22",{"_index":1415,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:30",{"_index":1422,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:34",{"_index":1420,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:44",{"_index":1423,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:48",{"_index":1418,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:72",{"_index":1426,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/config.service.ts",{"_index":1540,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:19",{"_index":1543,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:26",{"_index":1544,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/filter.service.ts",{"_index":2094,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/filter.service.ts:18",{"_index":2101,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:24",{"_index":2102,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:29",{"_index":2107,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:53",{"_index":2105,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:61",{"_index":2104,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:69",{"_index":2106,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:91",{"_index":2103,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/guid.service.ts",{"_index":2146,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:16",{"_index":2149,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:22",{"_index":2150,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:26",{"_index":2151,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/i18n.service.ts",{"_index":2335,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:20",{"_index":2343,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:21",{"_index":2340,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:31",{"_index":2342,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:47",{"_index":2345,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:51",{"_index":2347,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/interceptors.service.ts",{"_index":3435,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:14",{"_index":3439,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:20",{"_index":3445,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:25",{"_index":3442,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/services.module.ts",{"_index":2795,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/services.module.ts:45",{"_index":2796,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/settings.service.ts",{"_index":2852,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":2861,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:20",{"_index":2857,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:28",{"_index":2858,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:32",{"_index":2860,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/thirds.service.ts",{"_index":2963,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:128",{"_index":3110,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:142",{"_index":3115,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:148",{"_index":3117,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:155",{"_index":3123,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:209",{"_index":3124,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:214",{"_index":2967,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:218",{"_index":2969,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:23",{"_index":3127,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:24",{"_index":3125,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:25",{"_index":3126,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:26",{"_index":3128,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:27",{"_index":3108,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:38",{"_index":3121,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:51",{"_index":3113,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:59",{"_index":3118,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:78",{"_index":3111,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:88",{"_index":3109,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:95",{"_index":3112,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/store/actions/authentication.actions.ts",{"_index":6,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/authentication.actions.ts:111",{"_index":2777,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:114",{"_index":2778,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:128",{"_index":140,"title":{},"body":{"classes/AcceptLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:144",{"_index":141,"title":{},"body":{"classes/AcceptLogOutSuccess.html":{}}}],["src/app/store/actions/authentication.actions.ts:26",{"_index":2767,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:27",{"_index":2771,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:28",{"_index":2768,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:29",{"_index":2773,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:30",{"_index":2769,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:31",{"_index":2770,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:32",{"_index":2772,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:41",{"_index":2465,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:43",{"_index":2466,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:52",{"_index":1493,"title":{},"body":{"classes/CheckAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:67",{"_index":44,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:70",{"_index":48,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:80",{"_index":3456,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:83",{"_index":3457,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:94",{"_index":3458,"title":{},"body":{"classes/TryToLogOut.html":{}}}],["src/app/store/actions/card.actions.ts",{"_index":1499,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/card.actions.ts:20",{"_index":1501,"title":{},"body":{"classes/ClearCard.html":{}}}],["src/app/store/actions/card.actions.ts:23",{"_index":2535,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:26",{"_index":2536,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:29",{"_index":2537,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:32",{"_index":2538,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:36",{"_index":2539,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:39",{"_index":2540,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:44",{"_index":2156,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/card.actions.ts:47",{"_index":2157,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/config.actions.ts",{"_index":2158,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/config.actions.ts:18",{"_index":2541,"title":{},"body":{"classes/LoadConfig.html":{}}}],["src/app/store/actions/config.actions.ts:21",{"_index":2542,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:24",{"_index":2543,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:29",{"_index":2544,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:32",{"_index":2545,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:38",{"_index":2159,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/config.actions.ts:40",{"_index":2160,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/feed.actions.ts",{"_index":644,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/feed.actions.ts:18",{"_index":645,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:20",{"_index":646,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:24",{"_index":2467,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:27",{"_index":2468,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/light",{"_index":214,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts",{"_index":2169,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts:22",{"_index":2552,"title":{},"body":{"classes/LoadMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:29",{"_index":2553,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:32",{"_index":2554,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:37",{"_index":2555,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:40",{"_index":2556,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:45",{"_index":2170,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["src/app/store/actions/menu.actions.ts:48",{"_index":2171,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["src/app/store/actions/menu.actions.ts:59",{"_index":2785,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:62",{"_index":2786,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:70",{"_index":2789,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:73",{"_index":2790,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:81",{"_index":2787,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:84",{"_index":2788,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/settings.actions.ts",{"_index":2196,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/settings.actions.ts:24",{"_index":2557,"title":{},"body":{"classes/LoadSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:27",{"_index":2558,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:30",{"_index":2559,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:35",{"_index":2560,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:38",{"_index":2561,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:43",{"_index":2760,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:44",{"_index":2761,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:47",{"_index":2762,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:50",{"_index":2763,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:55",{"_index":2764,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:58",{"_index":2765,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:64",{"_index":2197,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/settings.actions.ts:66",{"_index":2198,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/time.actions.ts",{"_index":1859,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/time.actions.ts:18",{"_index":3149,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:19",{"_index":3150,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:27",{"_index":3522,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:28",{"_index":3523,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:37",{"_index":1866,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:38",{"_index":1867,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/timeline.actions.ts",{"_index":2470,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/timeline.actions.ts:16",{"_index":2471,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:17",{"_index":2472,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:21",{"_index":2804,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:22",{"_index":2805,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/effects/authentication.effects.ts",{"_index":914,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:110",{"_index":1018,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:119",{"_index":937,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:136",{"_index":944,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:155",{"_index":997,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:179",{"_index":981,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:224",{"_index":932,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:246",{"_index":935,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:40",{"_index":922,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:61",{"_index":991,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:83",{"_index":1005,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/card",{"_index":1358,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["src/app/store/effects/card.effects.ts",{"_index":1274,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:20",{"_index":1276,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:30",{"_index":1283,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/config.effects.ts",{"_index":1508,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:21",{"_index":1513,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:54",{"_index":1519,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:71",{"_index":1522,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/custom",{"_index":1554,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["src/app/store/effects/feed",{"_index":1911,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["src/app/store/effects/light",{"_index":2481,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["src/app/store/effects/menu.effects.ts",{"_index":2609,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:26",{"_index":2611,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:37",{"_index":2619,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:67",{"_index":2628,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/settings.effects.ts",{"_index":2819,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:26",{"_index":2821,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:39",{"_index":2827,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:51",{"_index":2829,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:57",{"_index":2835,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/time.effects.ts",{"_index":3152,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:20",{"_index":3156,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:36",{"_index":3160,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:50",{"_index":3169,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/index.ts",{"_index":564,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/store/state.module.ts",{"_index":2874,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/state.module.ts:33",{"_index":2875,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/states/authentication.state.ts",{"_index":908,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/store/states/card.state.ts",{"_index":1474,"title":{},"body":{"interfaces/CardState.html":{}}}],["src/app/store/states/config.state.ts",{"_index":1551,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["src/app/store/states/feed.state.ts",{"_index":1291,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["src/app/store/states/menu.state.ts",{"_index":2632,"title":{},"body":{"interfaces/MenuState.html":{}}}],["src/app/store/states/router.state.ts",{"_index":1595,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:37",{"_index":2782,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:48",{"_index":1604,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/router.state.ts:55",{"_index":1601,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/settings.state.ts",{"_index":2868,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/store/states/time.state.ts",{"_index":3423,"title":{},"body":{"interfaces/TimeState.html":{}}}],["src/app/store/states/timeline.state.ts",{"_index":3428,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["src/tests/mocks/thirds.service.mock.ts",{"_index":3130,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:14",{"_index":3132,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:5",{"_index":3131,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["sse",{"_index":1448,"title":{},"body":{"injectables/CardService.html":{}}}],["start",{"_index":1789,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["startdate",{"_index":1153,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdomain",{"_index":3247,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":3248,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain.valueof",{"_index":3299,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2",{"_index":3266,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":3267,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.valueof",{"_index":3306,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3",{"_index":3275,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.hours(0",{"_index":3277,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.startof('month",{"_index":3276,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.valueof",{"_index":3308,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4",{"_index":3259,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":3260,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4.valueof",{"_index":3303,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startup",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["startyear",{"_index":3563,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["startyear.valueof",{"_index":3566,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["state",{"_index":11,"title":{"classes/State.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["state.actions[actionid",{"_index":1709,"title":{},"body":{"components/DetailComponent.html":{}}}],["state.children",{"_index":1627,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.params",{"_index":1625,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["statemodule",{"_index":476,"title":{"modules/StateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StateModule.html":{},"index.html":{},"modules.html":{}}}],["statemodule.forroot",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["states",{"_index":2776,"title":{},"body":{"classes/Process.html":{}}}],["states?:ofmap",{"_index":191,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["static",{"_index":204,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/CardOperation.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["status",{"_index":62,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["status.action",{"_index":2120,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.alarm",{"_index":2118,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.end",{"_index":2126,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.notification",{"_index":2122,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.question",{"_index":2121,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.start",{"_index":2125,"title":{},"body":{"injectables/FilterService.html":{}}}],["sticktovirtualtime",{"_index":3155,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["still",{"_index":824,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{}}}],["stillvalid",{"_index":831,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["stops",{"_index":2076,"title":{},"body":{"classes/Filter.html":{}}}],["store",{"_index":117,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["store,private",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["store.select(buildconfigselector('security",{"_index":723,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["store/index",{"_index":2974,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["store:store",{"_index":2813,"title":{},"body":{"components/SettingsComponent.html":{}}}],["storeconfig",{"_index":639,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["stored",{"_index":822,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["storedevtoolsmodule",{"_index":2878,"title":{},"body":{"modules/StateModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":2887,"title":{},"body":{"modules/StateModule.html":{}}}],["storefreeze",{"_index":585,"title":{},"body":{"interfaces/AppState.html":{}}}],["storemodule",{"_index":2876,"title":{},"body":{"modules/StateModule.html":{}}}],["storemodule.forroot(appreducer",{"_index":2882,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule",{"_index":2881,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":2883,"title":{},"body":{"modules/StateModule.html":{}}}],["string",{"_index":79,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["string):observable",{"_index":2272,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["structure",{"_index":2891,"title":{},"body":{"modules/StateModule.html":{}}}],["style",{"_index":1677,"title":{},"body":{"components/DetailComponent.html":{}}}],["stylename",{"_index":3017,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["styles",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["styleurls",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sub",{"_index":737,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subject",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["submission",{"_index":1856,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["submit",{"_index":2938,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["submitted",{"_index":1012,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["submitvalue",{"_index":1070,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["subscribe",{"_index":1121,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"components/DetailComponent.html":{},"components/TimeLineComponent.html":{}}}],["subscribe(([locale,timezone",{"_index":2356,"title":{},"body":{"injectables/I18nService.html":{}}}],["subscribe((maxedretries=>this.maxedretries=maxedretries",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(card",{"_index":1263,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(computeddate",{"_index":1218,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(form",{"_index":2922,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["subscribe(isauth",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(loaded",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(m=>this.loginmessage=m",{"_index":2588,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(next=>this.basesettings",{"_index":1134,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(next=>this.dispatch(this.convert(next",{"_index":1128,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(oauth2conf",{"_index":724,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subscribe(open=>this.open",{"_index":1209,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(provider=>this.codeprovider={name:provider",{"_index":2590,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(third",{"_index":1271,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(v=>this.hidetimeline",{"_index":1910,"title":{},"body":{"components/FeedComponent.html":{}}}],["subscribe(value",{"_index":3315,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["subscribetoloadi18n",{"_index":3107,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["subscribetoloadi18n(observable",{"_index":3060,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["subscription",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/TimeLineComponent.html":{}}}],["subtitle",{"_index":1245,"title":{},"body":{"components/CardComponent.html":{}}}],["success",{"_index":76,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["success/message",{"_index":1521,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["successful",{"_index":2630,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["such",{"_index":840,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["summary",{"_index":1159,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["super(store",{"_index":1851,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["super.computetextvalidators",{"_index":1852,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["super.ngoninit",{"_index":2521,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["support",{"_index":3634,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1978,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["svg",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{},"modules.html":{}}}],["svgpanzoom(document.getelementbyid('${svguid",{"_index":2306,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["swimlane/ngx",{"_index":2018,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1036,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["switch(operator",{"_index":2295,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch_list",{"_index":202,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":694,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{}}}],["switchmap(([lightcards",{"_index":1367,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap(([payload",{"_index":957,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action",{"_index":1000,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action:loadlightcardssuccess",{"_index":2485,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["switchmap((action:patchsettings)=>this.service.patchusersettings(action.payload.settings",{"_index":2831,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["switchmap((af",{"_index":1399,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap((auth)=>this.loaduserdata(auth",{"_index":802,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["switchmap((ids:string",{"_index":3064,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(action",{"_index":1278,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{}}}],["switchmap(followclocktick",{"_index":1939,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["switchmap(menu=>zip(of(menu),this.service.loadi18nformenuentries(menu",{"_index":2614,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["switchmap(third",{"_index":3002,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(ts=>from(ts",{"_index":3039,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["system",{"_index":128,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["t",{"_index":2607,"title":{},"body":{"classes/Map.html":{}}}],["t.i18nlabelkey",{"_index":3044,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.menuentries",{"_index":3045,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.version",{"_index":3043,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tab",{"_index":1755,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tab.active",{"_index":1754,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":3514,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["tabs",{"_index":1761,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tag",{"_index":1929,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tag_filter",{"_index":2139,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["tagfilterform",{"_index":2900,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["tags",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tagsfiltercomponent",{"_index":444,"title":{"components/TagsFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["take",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["takes",{"_index":1609,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/RouterStateUrl.html":{}}}],["takeuntil",{"_index":1106,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":1123,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe",{"_index":3198,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["takeuntil(this.service.unsubscribe",{"_index":1381,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["tap",{"_index":695,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(authenticationservice.saveauthenticationinformation",{"_index":801,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["tap(t=>object.setprototypeof(t,third.prototype",{"_index":2991,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t=>this.templatecache[key]=t",{"_index":2281,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["tap(t=>this.thirdcache.set(key,t",{"_index":2992,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(test=>console.log(`loaded",{"_index":2487,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["tap(v=>console.log(\"inittagfilteronloadedsettings",{"_index":1918,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tap(v=>console.log(\"loadfeedfilteronauthenticationsuccess",{"_index":1935,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tells",{"_index":946,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["template",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templatecache",{"_index":2214,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatecache:map",{"_index":2252,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatename",{"_index":1168,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{}}}],["templates",{"_index":2943,"title":{},"body":{"classes/Third.html":{}}}],["templates?:string",{"_index":170,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["templateurl",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templateurl:'icon.component.html",{"_index":2387,"title":{},"body":{"components/IconComponent.html":{}}}],["terms",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["test",{"_index":905,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{}}}],["test_filter",{"_index":2141,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["tests",{"_index":1972,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["text",{"_index":199,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["textsettingcomponent",{"_index":447,"title":{"components/TextSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["textsettingcomponent:22",{"_index":1826,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:28",{"_index":1832,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:35",{"_index":1831,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:47",{"_index":1834,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:51",{"_index":1833,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["that.time.currenttime().valueof",{"_index":2320,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["third",{"_index":166,"title":{"classes/Third.html":{}},"body":{"classes/Action.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third)=>!(!third.menuentries",{"_index":3001,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third,html",{"_index":1693,"title":{},"body":{"components/DetailComponent.html":{}}}],["third.extractstate(this.card",{"_index":1272,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["third.menuentries.filter(entry",{"_index":3003,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdcache",{"_index":2980,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu",{"_index":187,"title":{"classes/ThirdMenu.html":{}},"body":{"classes/Action.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t1",{"_index":3134,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t2",{"_index":3142,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu(t.name",{"_index":3042,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuentry",{"_index":184,"title":{"classes/ThirdMenuEntry.html":{}},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id1",{"_index":3136,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id2",{"_index":3139,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id3",{"_index":3144,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentryid",{"_index":2998,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuid",{"_index":3119,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdmenus",{"_index":2700,"title":{},"body":{"components/NavbarComponent.html":{}}}],["thirdmenuversion",{"_index":2997,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdname",{"_index":3122,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdname}.${version",{"_index":2986,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdparty",{"_index":546,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomRouterEffects.html":{},"modules/ThirdpartyModule.html":{}}}],["thirdpartymodule",{"_index":2953,"title":{"modules/ThirdpartyModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"index.html":{},"modules.html":{}}}],["thirdpartyroutingmodule",{"_index":2957,"title":{"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["thirds",{"_index":1643,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["thirdservice",{"_index":2483,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdsi18nloader",{"_index":2962,"title":{"classes/ThirdsI18nLoader.html":{}},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloader(thirdsservice",{"_index":3098,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloaderfactory(thirdsservice",{"_index":3097,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsservice",{"_index":1255,"title":{"injectables/ThirdsService.html":{}},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"index.html":{}}}],["thirdsservicemock",{"_index":3129,"title":{"classes/ThirdsServiceMock.html":{}},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdsurl",{"_index":2976,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirparty",{"_index":2184,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["this.$injector.get(translateservice",{"_index":3096,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this._defaultfilters",{"_index":2109,"title":{},"body":{"injectables/FilterService.html":{}}}],["this._description",{"_index":2457,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._filter",{"_index":2913,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(first",{"_index":3197,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this._filter$.pipe(first(),takeuntil(this.ngunsubscribe$)).subscribe",{"_index":2918,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((next",{"_index":2915,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._htmlcontent",{"_index":1694,"title":{},"body":{"components/DetailComponent.html":{}}}],["this._i18nprefix",{"_index":1202,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["this._locale",{"_index":2360,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._selectediframeurl",{"_index":2434,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._thirdmenus",{"_index":2723,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._thirdmenus=this.store.select(selectmenustatemenu",{"_index":2718,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._time",{"_index":2459,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._timezone",{"_index":2364,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._username",{"_index":2455,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.actions",{"_index":952,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["this.actions$.pipe",{"_index":938,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.actions$.pipe(oftype(authenticationactiontypes.rejectlogin",{"_index":994,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.active",{"_index":2085,"title":{},"body":{"classes/Filter.html":{}}}],["this.assignconfigurationproperties(oauth2conf",{"_index":725,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.attachaction(button",{"_index":1710,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.authservice.asktokenfromcode(code).pipe",{"_index":958,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.asktokenfrompassword(payload.username",{"_index":1002,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.checkauthentication(authenticationservice.extracttoken",{"_index":954,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.extractidentificationinformation",{"_index":1053,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.basesettings",{"_index":1141,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.big",{"_index":2402,"title":{},"body":{"components/IconComponent.html":{}}}],["this.big?'big':this.medium?'medium':'small",{"_index":2408,"title":{},"body":{"components/IconComponent.html":{}}}],["this.bindactions(third",{"_index":1699,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.card",{"_index":1264,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisher",{"_index":1673,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.card.publisherversion",{"_index":1270,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.cardoperationsurl",{"_index":1435,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardoperationsurl}&notification=true&rangestart=${minus2hour.valueof()}&rangeend=${plus48hours.valueof",{"_index":1453,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardservice.unsubscribecardoperation",{"_index":1033,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.cardsurl",{"_index":1437,"title":{},"body":{"injectables/CardService.html":{}}}],["this.changelocale(locale",{"_index":2357,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.clientid",{"_index":727,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.clientsecret",{"_index":730,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.computedisplayeddates(config",{"_index":1216,"title":{},"body":{"components/CardComponent.html":{}}}],["this.computelistvalidators",{"_index":2522,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.computemultivalidators",{"_index":2688,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.computenowmoment(realnowmoment",{"_index":3379,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.computetextvalidators",{"_index":2936,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.conf",{"_index":3289,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.configloaded",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurl",{"_index":1548,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.confzoom",{"_index":3298,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.convert(auth",{"_index":800,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.createformgroup",{"_index":2912,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.currentpath",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.currenttimereference",{"_index":3174,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.dark",{"_index":2406,"title":{},"body":{"components/IconComponent.html":{}}}],["this.datetodisplay",{"_index":1231,"title":{},"body":{"components/CardComponent.html":{}}}],["this.datetodisplay=computeddate",{"_index":1219,"title":{},"body":{"components/CardComponent.html":{}}}],["this.datewithspacebeforemoment(moment(actualmoment",{"_index":3249,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.delegateurl",{"_index":732,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.delegateurl}&redirect_uri=${authenticationservice.computeredirecturi",{"_index":884,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.detail",{"_index":1671,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles",{"_index":1672,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles.foreach(style",{"_index":1674,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.details",{"_index":1267,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.changes.subscribe",{"_index":1751,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.filter((tab",{"_index":1753,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.push(...state.details",{"_index":1273,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.toarray().foreach(detail",{"_index":1762,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.dragend.emit(event",{"_index":1808,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragging",{"_index":1801,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragmove.emit(event",{"_index":1805,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragstart.emit(event",{"_index":1802,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.element.nativeelement.getelementsbytagname('button",{"_index":1704,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('script",{"_index":1701,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.expandedmenu=new",{"_index":2720,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedmenu[index]=!this.expandedmenu[index",{"_index":2725,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedusermenu=!this.expandedusermenu",{"_index":2728,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expireclaim",{"_index":738,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.extractparams(child",{"_index":1628,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extractparams(routerstate.root",{"_index":1622,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.fetchcardoperation(new",{"_index":1452,"title":{},"body":{"injectables/CardService.html":{}}}],["this.fetchi18njson(publisher",{"_index":3076,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.fetchthird(thirdname,version",{"_index":2990,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.form",{"_index":1109,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value,{emitevent:false",{"_index":2690,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value?value",{"_index":2527,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.form.valuechanges",{"_index":1122,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.formbuilder.group",{"_index":2926,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.funktion",{"_index":2084,"title":{},"body":{"classes/Filter.html":{}}}],["this.funktion(card,this.status",{"_index":2089,"title":{},"body":{"classes/Filter.html":{}}}],["this.getcurrentguid().tostring",{"_index":2155,"title":{},"body":{"classes/GuidService.html":{}}}],["this.getroutepe",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["this.guid",{"_index":2152,"title":{},"body":{"classes/GuidService.html":{}}}],["this.guidservice.getcurrentguid",{"_index":798,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.guidservice.getcurrentguidstring",{"_index":1434,"title":{},"body":{"injectables/CardService.html":{}}}],["this.handlebars.executetemplate(this.detail.templatename",{"_index":1692,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handledate(lightcard.enddate",{"_index":1227,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.lttd",{"_index":1221,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.publishdate",{"_index":1223,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.startdate",{"_index":1225,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handleerrorontokengeneration(errorresponse,'authenticate",{"_index":1004,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handleerrorontokengeneration(errorresponse,'code",{"_index":962,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handlenewtoken(this.httpclient.post(this.asktokenurl",{"_index":789,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.handlerejectedlogin('invalid",{"_index":1054,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.hide",{"_index":2591,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hrefsofcsslink.push(safecssurl",{"_index":1684,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.httpclient.get(`${this.cardsurl}/${id",{"_index":1439,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.configurl",{"_index":1550,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher",{"_index":2995,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/i18n",{"_index":3027,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/templates/${name",{"_index":3014,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/`).pipe",{"_index":3038,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.userdataurl}/${auth.identifier",{"_index":804,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.httpclient.get(`${this.usersurl}/users/${this.userid}/settings",{"_index":2865,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.patch(`${this.usersurl}/users/${this.userid}/settings",{"_index":2867,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.post",{"_index":1472,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.post(this.checktokenurl",{"_index":764,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.iconpath",{"_index":2400,"title":{},"body":{"components/IconComponent.html":{}}}],["this.initfilters",{"_index":2110,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.initformgroup",{"_index":1110,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.initializehandlebarstemplates",{"_index":1670,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initializehrefsofcsslink",{"_index":1669,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initrecipientfilter",{"_index":2132,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittagfilter",{"_index":2136,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittimefilter",{"_index":2134,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittypefilter",{"_index":2130,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.isauthenticated",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isequal(forma",{"_index":1126,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.isvirtualtimeundefine",{"_index":3387,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.lastcards",{"_index":3329,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.light",{"_index":2407,"title":{},"body":{"components/IconComponent.html":{}}}],["this.lightcard",{"_index":1217,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.publisher+'.'+this.lightcard.publisherversion",{"_index":1203,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcards",{"_index":1903,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.lightcards$.pipe(debouncetime(300",{"_index":3314,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.loadedi18n",{"_index":3070,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadedi18n.push(result.id",{"_index":3092,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadingi18n",{"_index":3068,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadingi18n.push(id",{"_index":3072,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.locales",{"_index":2814,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.loginclaim",{"_index":734,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.medium",{"_index":2404,"title":{},"body":{"components/IconComponent.html":{}}}],["this.mousewheelfunc(event",{"_index":2666,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.mousewheelup.emit(event",{"_index":2677,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.ngunsubscribe$.complete",{"_index":1136,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":1135,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.open=true",{"_index":1201,"title":{},"body":{"components/CardComponent.html":{}}}],["this.pattern",{"_index":2939,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.placeholder",{"_index":1129,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.preparedlist",{"_index":2511,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.map(e=>e.value).indexof(control.value",{"_index":2533,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.push",{"_index":2518,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.push({value",{"_index":2513,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.processes[card.process",{"_index":177,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["this.querytemplate(card.publisher,card.publisherversion,templatename).pipe",{"_index":2269,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.querythird(thirdmenuid,thirdmenuversion).pipe",{"_index":2999,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.referencetime",{"_index":3384,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.registerarrayatindex",{"_index":2262,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindexlength",{"_index":2265,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerbool",{"_index":2266,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registercardaction",{"_index":2257,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerdateformat",{"_index":2256,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registeri18n",{"_index":2259,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registermath",{"_index":2263,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernow",{"_index":2267,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernumberformat",{"_index":2255,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerpreservespace",{"_index":2254,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerslice",{"_index":2261,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersort",{"_index":2260,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersplit",{"_index":2264,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersvg",{"_index":2258,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.reinsertscripts",{"_index":1698,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.requiredfield",{"_index":2525,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.resetstate",{"_index":1015,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.retryconfigurationloading",{"_index":1535,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.retrydelay",{"_index":1534,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.router.navigate",{"_index":2626,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.router.navigate(['/'+this.currentpath,'cards',this.lightcard.id",{"_index":1200,"title":{},"body":{"components/CardComponent.html":{}}}],["this.router.navigate(['/login",{"_index":941,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":1695,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(cssurl",{"_index":1683,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(iframeurl",{"_index":2435,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.selectdetail(this.details.first",{"_index":1759,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selection",{"_index":1907,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.service.computethirdsmenu",{"_index":2613,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.fetchconfiguration",{"_index":1515,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.service.fetchtimereferences().pipe",{"_index":3161,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.fetchusersettings",{"_index":2823,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.service.getcardoperation",{"_index":1380,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.service.loadcard(action.payload.id",{"_index":1279,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.movetocodeflowloginpage",{"_index":2598,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.pulsate",{"_index":3157,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.querymenuentryurl(action.payload.menu_id",{"_index":2621,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.updatecardsubscriptionwithdates(af.payload.status.start",{"_index":1400,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.setting",{"_index":1115,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.setting$.subscribe(next",{"_index":1118,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.size",{"_index":2409,"title":{},"body":{"components/IconComponent.html":{}}}],["this.small",{"_index":2405,"title":{},"body":{"components/IconComponent.html":{}}}],["this.speed",{"_index":3394,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.sprites='sprites",{"_index":2414,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites.svg",{"_index":2416,"title":{},"body":{"components/IconComponent.html":{}}}],["this.status",{"_index":2086,"title":{},"body":{"classes/Filter.html":{}}}],["this.store",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch",{"_index":2923,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.store.dispatch(new",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/BaseSettingComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.store.pipe",{"_index":1904,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(selectcurrenturl)).subscribe(url",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectexpirationtime",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectrouterstate",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector('feed.card.time.display",{"_index":1212,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(buildconfigselector('feed.timefilter.followclocktick",{"_index":1938,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.store.select(buildconfigselector('feed.timeline.hide",{"_index":1909,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('i10n.supported.time",{"_index":2817,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('i18n.supported.locales",{"_index":2815,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.mode",{"_index":2584,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.provider",{"_index":2589,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector(`settings.${this.settingpath",{"_index":1130,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.tag_filter",{"_index":2914,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.time_filter",{"_index":3184,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.type_filter",{"_index":3488,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale",{"_index":2354,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('timezone",{"_index":2355,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector('description",{"_index":2458,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector(this.settingpath",{"_index":1116,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(cardselectors.selectcardstateselected",{"_index":1262,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.store.select(feedselectors.selectlightcardselection",{"_index":1908,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(selectcardstateselectedid",{"_index":1207,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(selectcurrentdate",{"_index":2460,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(selectcurrenturl).subscribe(url",{"_index":1204,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.store.select(selectidentifier",{"_index":1131,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(selectidentifier).subscribe(id=>this.userid=id",{"_index":2864,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.store.select(selectmenustateselectediframeurl).subscribe",{"_index":2432,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.store.select(selectmessage).pipe(filter(m=>m!=null",{"_index":2586,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(selecttimereference).subscribe",{"_index":3173,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.store.select(selectusernameoridentifier",{"_index":2456,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(timelineselectors.selectlastcardsselection",{"_index":3330,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscribetoloadi18n(observable",{"_index":3054,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.subscription",{"_index":3313,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":3342,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.tagfilterform",{"_index":2911,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue",{"_index":2917,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue(next.active?next.status.tags",{"_index":2916,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.templatecache[key",{"_index":2276,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdcache.get(key",{"_index":2987,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirds.computethirdcssurl(publisher",{"_index":1676,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.thirds.fetchhbstemplate(publisher,version,name,locale).pipe",{"_index":2279,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdservice.loadi18nforlightcards(action.payload.lightcards",{"_index":2486,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.thirdsservice.querythird(this.card.publisher",{"_index":1269,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.thirdsurl",{"_index":2982,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.time.formatdatetime(timestamp",{"_index":1229,"title":{},"body":{"components/CardComponent.html":{}}}],["this.timefilterform",{"_index":3183,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(null",{"_index":3194,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(this.timeservice.asinputstring(next.status.end",{"_index":3193,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').value",{"_index":3196,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(null",{"_index":3189,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(this.timeservice.asinputstring(next.status.start",{"_index":3188,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').value",{"_index":3195,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.formattime(moment(values[0",{"_index":2462,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.timeservice.parsestring(form.end).valueof",{"_index":3205,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.start).valueof",{"_index":3204,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('end').value).valueof",{"_index":3190,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('start').value).valueof",{"_index":3185,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timezones",{"_index":2816,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.translate().currentlang",{"_index":3085,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().getlangs",{"_index":3077,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().settranslation(lang",{"_index":3088,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().use(currentlang",{"_index":3090,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().use(lang",{"_index":3089,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate.getbrowserlang",{"_index":2274,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this.translate.use(this._locale",{"_index":2362,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.translateservice.get(v.label.key",{"_index":2519,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.typefilterform",{"_index":3487,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(!next.active",{"_index":3491,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(true",{"_index":3498,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(!next.active",{"_index":3489,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(true",{"_index":3497,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(!next.active",{"_index":3495,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(true",{"_index":3500,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(!next.active",{"_index":3493,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(true",{"_index":3499,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.unsubscribe$.next",{"_index":1457,"title":{},"body":{"injectables/CardService.html":{}}}],["this.updateasync",{"_index":1750,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.updatevalue(next",{"_index":1119,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.urlcleaner",{"_index":2981,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlcleaner.encodevalue(`${this.thirdsurl}/${publisher}/css/${stylename",{"_index":3021,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.usecodeflow",{"_index":2583,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform",{"_index":2592,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('identifier').value",{"_index":2594,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('password').value",{"_index":2595,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.reset",{"_index":2597,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.valid",{"_index":2593,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usersurl",{"_index":2862,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.values",{"_index":2512,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.virtualtime",{"_index":3401,"title":{},"body":{"classes/TimeReference.html":{}}}],["those",{"_index":1288,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{}}}],["throw",{"_index":1112,"title":{},"body":{"components/BaseSettingComponent.html":{},"modules/ServicesModule.html":{}}}],["throwerror",{"_index":692,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{}}}],["throwerror('the",{"_index":777,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["throwerror(err",{"_index":3009,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror(error",{"_index":815,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["throwerror(new",{"_index":3006,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thrown",{"_index":750,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["thus",{"_index":129,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["tick",{"_index":1874,"title":{"classes/Tick.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tick(pulse",{"_index":3159,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["tick.payload.elapsedsincelast",{"_index":1950,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tick='[time",{"_index":1873,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["ticks",{"_index":3221,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["tickwindow.pipe",{"_index":1948,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["time",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["time:timeservice",{"_index":2253,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["time_filter",{"_index":2140,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["timeactions",{"_index":1891,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/typealiases.html":{}}}],["timeactiontypes",{"_index":1872,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timeactiontypes.failtoupdatetimereference",{"_index":1868,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["timeactiontypes.tick",{"_index":3151,"title":{},"body":{"classes/Tick.html":{}}}],["timeactiontypes.updatetimereference",{"_index":3524,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["timeeffects",{"_index":632,"title":{"injectables/TimeEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TimeEffects.html":{}}}],["timefiltercomponent",{"_index":448,"title":{"components/TimeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timefilterform",{"_index":3175,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["timeinitialstate",{"_index":3426,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timeline",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactions",{"_index":2479,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/typealiases.html":{}}}],["timelineactiontypes",{"_index":2474,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactiontypes.inittimeline",{"_index":2473,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelineactiontypes.setcarddatatimeline",{"_index":2477,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelinecomponent",{"_index":450,"title":{"components/TimeLineComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timelineinitialstate",{"_index":3433,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timelinereducer",{"_index":595,"title":{},"body":{"interfaces/AppState.html":{}}}],["timelinestate",{"_index":576,"title":{"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["timer",{"_index":1103,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timer(500",{"_index":1127,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timereducer",{"_index":608,"title":{},"body":{"interfaces/AppState.html":{}}}],["timeref",{"_index":3164,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["timereference",{"_index":1869,"title":{"classes/TimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["timereference(null,null,null,timespeed.x1",{"_index":3413,"title":{},"body":{"classes/TimeReference.html":{}}}],["timereference:neutraltimereference",{"_index":3427,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timescale",{"_index":3431,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timeservice",{"_index":1181,"title":{},"body":{"components/CardComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"index.html":{}}}],["timespan",{"_index":1884,"title":{"classes/TimeSpan.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TimeSpan.html":{},"classes/UpdateTimeReference.html":{}}}],["timespans",{"_index":3418,"title":{},"body":{"classes/TimeSpan.html":{}}}],["timespeed",{"_index":3351,"title":{},"body":{"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"miscellaneous/enumerations.html":{}}}],["timespeed.x1",{"_index":3386,"title":{},"body":{"classes/TimeReference.html":{}}}],["timespeed[value",{"_index":3372,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestamp",{"_index":1189,"title":{},"body":{"components/CardComponent.html":{}}}],["timestampnow",{"_index":3356,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestate",{"_index":575,"title":{"interfaces/TimeState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimeState.html":{}}}],["timezone",{"_index":1871,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/I18nService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"dependencies.html":{}}}],["timezones",{"_index":2808,"title":{},"body":{"components/SettingsComponent.html":{}}}],["title",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["titleposition",{"_index":1163,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["titlestyle",{"_index":1167,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["tlabel1",{"_index":3135,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tlabel2",{"_index":3143,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{entry.label",{"_index":2736,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.entries[0].label",{"_index":2737,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.label",{"_index":2734,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmp",{"_index":3317,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["todo",{"_index":551,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{}}}],["toggle",{"_index":2929,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["togglemenu",{"_index":2698,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index",{"_index":2704,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index:number",{"_index":2724,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggleusermenu",{"_index":2699,"title":{},"body":{"components/NavbarComponent.html":{}}}],["token",{"_index":81,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["tokeninjector",{"_index":2794,"title":{"interceptors/TokenInjector.html":{}},"body":{"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["trace",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["trans",{"_index":3080,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["transform",{"_index":3535,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transform(value",{"_index":3536,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced",{"_index":3540,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced(value",{"_index":3541,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered",{"_index":3547,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered(value",{"_index":3548,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["translate",{"_index":1180,"title":{},"body":{"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translate.config",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["translate/core",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":3586,"title":{},"body":{"dependencies.html":{}}}],["translateconfig",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":2964,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translatemodule",{"_index":506,"title":{},"body":{"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["translatemodule.forroot(translateconfig",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translateservice,private",{"_index":2353,"title":{},"body":{"injectables/I18nService.html":{}}}],["translation",{"_index":3079,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translation',error",{"_index":3095,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translationelement",{"_index":3086,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["treatment",{"_index":3226,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tree",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tries",{"_index":2629,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["trigger",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardOperationEffects.html":{}}}],["triggered",{"_index":1584,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["triggered.\\naction",{"_index":1724,"title":{},"body":{"components/DetailComponent.html":{}}}],["triggers",{"_index":992,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["true",{"_index":820,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["try",{"_index":71,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["trying",{"_index":1113,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["trylogout",{"_index":951,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["trytologin",{"_index":20,"title":{"classes/TryToLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["trytologin({username",{"_index":2596,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytologout",{"_index":72,"title":{"classes/TryToLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":3605,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":2051,"title":{},"body":{"classes/Filter.html":{}}}],["type",{"_index":33,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["type=timeactiontypes.tick",{"_index":1885,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["type=timeactiontypes.updatetimereference",{"_index":1889,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["type_filter",{"_index":2137,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["typeaheadmodule",{"_index":2033,"title":{},"body":{"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["typeaheadsettingscomponent",{"_index":452,"title":{"components/TypeAheadSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typealiases",{"_index":3637,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":1032,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["typefiltercomponent",{"_index":454,"title":{"components/TypeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typefilterform",{"_index":3480,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["typeof",{"_index":2329,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/ListSettingComponent.html":{},"classes/TimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["types/jwt",{"_index":3589,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":54,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["typically",{"_index":1583,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["u",{"_index":1814,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["u.firstname",{"_index":808,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["u.lastname",{"_index":810,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["u00a0",{"_index":2324,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["uid",{"_index":1162,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["unable",{"_index":1009,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unavailable",{"_index":1043,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["uncomment",{"_index":1809,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["undefined",{"_index":2403,"title":{},"body":{"components/IconComponent.html":{},"classes/TimeReference.html":{}}}],["undefined,undefined",{"_index":2064,"title":{},"body":{"classes/Filter.html":{}}}],["unexpected",{"_index":247,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["unique",{"_index":722,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["unselectedvalues",{"_index":212,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["unselection",{"_index":1810,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["unsubscribe",{"_index":1409,"title":{},"body":{"injectables/CardService.html":{}}}],["unsubscribecardoperation",{"_index":1412,"title":{},"body":{"injectables/CardService.html":{}}}],["unused",{"_index":1290,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{}}}],["up",{"_index":1164,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":10,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["updateasync",{"_index":1733,"title":{},"body":{"components/DetailsComponent.html":{}}}],["updatecardsubscriptionwithdates",{"_index":1413,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart",{"_index":1424,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart:number,rangeend:number):observable",{"_index":1471,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":1299,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["updatedsubscription",{"_index":243,"title":{"classes/UpdatedSubscription.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatefilteronclocktick",{"_index":1915,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updateon",{"_index":2524,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["updatestate",{"_index":155,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatestatebeforeaction",{"_index":156,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatesubscription",{"_index":244,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatetimereference",{"_index":1888,"title":{"classes/UpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetimereference({timereference",{"_index":3163,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["updatetimereference='[time",{"_index":1875,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["updatevalue",{"_index":1071,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value",{"_index":1092,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value:any",{"_index":1137,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["upon",{"_index":1524,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/Filter.html":{}}}],["uri",{"_index":196,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["uribase",{"_index":886,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["uribase}${pathend",{"_index":891,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["url",{"_index":186,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/check_token",{"_index":3451,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/code",{"_index":3453,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/token",{"_index":3452,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.split",{"_index":2717,"title":{},"body":{"components/NavbarComponent.html":{}}}],["url.split('/')[1",{"_index":1206,"title":{},"body":{"components/CardComponent.html":{}}}],["urlcleaner",{"_index":2979,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["urlencoded",{"_index":761,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["urlsearchparams",{"_index":755,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["usable",{"_index":872,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["use",{"_index":1213,"title":{},"body":{"components/CardComponent.html":{},"classes/Filter.html":{},"interfaces/TimelineState.html":{}}}],["useclass",{"_index":528,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["usecodeflow",{"_index":2569,"title":{},"body":{"components/LoginComponent.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/StateModule.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["user",{"_index":66,"title":{"classes/User.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["userdataurl",{"_index":714,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["userform",{"_index":2570,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":2853,"title":{},"body":{"injectables/SettingsService.html":{}}}],["username",{"_index":109,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["username$|async}}{{time$|async",{"_index":2463,"title":{},"body":{"components/InfoComponent.html":{}}}],["usersurl",{"_index":2854,"title":{},"body":{"injectables/SettingsService.html":{}}}],["uses",{"_index":1007,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["using",{"_index":678,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["utc",{"_index":904,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["v",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/ListSettingComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["v.label",{"_index":2515,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["v.label.parameters",{"_index":2520,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["v.label|async",{"_index":2534,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["v.value",{"_index":2516,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["v1",{"_index":2283,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["v2",{"_index":2285,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["val",{"_index":3035,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["val.enddate",{"_index":3319,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.severity",{"_index":3321,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.startdate",{"_index":3320,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.summary.parameters.value",{"_index":3326,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["valid",{"_index":743,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/ListSettingComponent.html":{}}}],["validate",{"_index":87,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["validators",{"_index":1850,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validators.push(this.valueinlistvalidator",{"_index":2523,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["validators.push(validators.email",{"_index":1853,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["validators.push(validators.pattern(this.pattern",{"_index":2940,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["validators.push(validators.required",{"_index":2526,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validity",{"_index":982,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["value",{"_index":50,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["value.replace",{"_index":2322,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.setting",{"_index":1143,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["value.slice(from",{"_index":2302,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.split(splitvalue)[index",{"_index":2291,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.tostring",{"_index":3571,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["value:string",{"_index":1354,"title":{},"body":{"classes/CardOperation.html":{}}}],["value[index",{"_index":2298,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index].length",{"_index":2288,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["valuechanges",{"_index":2919,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["valueinlist",{"_index":2508,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["valueinlistvalidator",{"_index":2500,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["values",{"_index":209,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["var",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["variant",{"_index":1240,"title":{},"body":{"components/CardComponent.html":{}}}],["variation",{"_index":929,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["verifyexpirationdate",{"_index":826,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["version",{"_index":189,"title":{},"body":{"classes/Action.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["version:string",{"_index":168,"title":{},"body":{"classes/Action.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["version:string):observable",{"_index":2985,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["versionparam",{"_index":3022,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["via",{"_index":22,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["virtual",{"_index":1863,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["virtualtime",{"_index":3349,"title":{},"body":{"classes/TimeReference.html":{}}}],["visible",{"_index":553,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["voir",{"_index":3284,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["w",{"_index":3250,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["wait",{"_index":1697,"title":{},"body":{"components/DetailComponent.html":{}}}],["waiting",{"_index":1945,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["warning",{"_index":1720,"title":{},"body":{"components/DetailComponent.html":{}}}],["way",{"_index":3170,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["we're",{"_index":1979,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["weather",{"_index":1300,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["web",{"_index":679,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["week",{"_index":3234,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["went",{"_index":1861,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wheel",{"_index":2663,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive",{"_index":2027,"title":{},"body":{"modules/FeedModule.html":{}}}],["wheel.directive.ts",{"_index":2643,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:11",{"_index":2653,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:13",{"_index":2652,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:16",{"_index":2657,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:21",{"_index":2655,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:26",{"_index":2659,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:34",{"_index":2661,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["width",{"_index":1234,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["win",{"_index":113,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["window.event",{"_index":2671,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["window.location.href",{"_index":882,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["window.location.href.indexof('code",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["window.location.pathname",{"_index":1606,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["windowtime",{"_index":1964,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["windowtime(20000",{"_index":1942,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom",{"_index":1024,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/I18nService.html":{}}}],["withlatestfrom(this.store.select(buildconfigselector('settings.defaulttags",{"_index":1920,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildfilterselector(filtertype.time_filter",{"_index":1954,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(selectcardstateselectedid",{"_index":1366,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["withlatestfrom(this.store.select(selectcode",{"_index":956,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["withlatestfrom(this.store.select(selectconfigretry",{"_index":1537,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["without",{"_index":123,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/BaseSettingComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["word",{"_index":1238,"title":{},"body":{"components/CardComponent.html":{}}}],["work",{"_index":3065,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["works",{"_index":666,"title":{},"body":{"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NoSelectionComponent.html":{}}}],["wouldn't",{"_index":3201,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["wrong",{"_index":998,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["www",{"_index":760,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["x1",{"_index":3402,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x10",{"_index":3404,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x2",{"_index":3403,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x3600",{"_index":3408,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x60",{"_index":3406,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["xaxistickformat",{"_index":3534,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["xaxistickformatpipe",{"_index":1997,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["y",{"_index":3278,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["year",{"_index":3242,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["years",{"_index":3282,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["yes",{"_index":684,"title":{},"body":{"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckTokenResponse.html":{},"classes/I18n.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/TimeSpan.html":{}}}],["yy",{"_index":3569,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["yyyy",{"_index":3557,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["zip",{"_index":1668,"title":{},"body":{"components/DetailComponent.html":{},"injectables/I18nService.html":{},"injectables/MenuEffects.html":{}}}],["zip(this.thirds.querythird(this.card.publisher,this.card.publisherversion",{"_index":1691,"title":{},"body":{"components/DetailComponent.html":{}}}],["zone.js",{"_index":3607,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":2818,"title":{},"body":{"components/SettingsComponent.html":{}}}],["zoom",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptLogIn.html":{"url":"classes/AcceptLogIn.html","title":"class - AcceptLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the authentication information\nEmitted by {AuthenticationEffects} in the following {Observable} @members:\n  * TryToLogIn\n  * CheckAuthentication via handleLogInAttempt @method\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\ncontaining the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: PayloadForSuccessfulAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        PayloadForSuccessfulAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PayloadForSuccessfulAuthentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOut.html":{"url":"classes/AcceptLogOut.html","title":"class - AcceptLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to removes authentication information of the system and thus logOut the user.\nEmitted by {AuthenticationEffect} in the following {Observable} @members:\n  * TryToLogOut\n  * RejectLogInAttempt\n  Consume by {AuthenticationEffect} in the AcceptLogOut {Observable} @member\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:128\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:128\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOutSuccess.html":{"url":"classes/AcceptLogOutSuccess.html","title":"class - AcceptLogOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store to remove authentication information\nEmitted by {AuthenticationEffect} in AcceptLogOut {Observable} @member.\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:144\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ActionType, label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockAction: boolean, lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, called: boolean, needsConfirm: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ActionType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                        Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        called\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLightCardFailure.html":{"url":"classes/AddLightCardFailure.html","title":"class - AddLightCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLightCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddLightCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configLoaded\n                            \n                            \n                                currentPath\n                            \n                            \n                                getRoutePE\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                maxedRetries\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, i18nService: I18nService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:33\n                            \n                        \n\n                \n                    \n                            NB: I18nService is injected to trigger its constructor at application startup\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                        I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:48\n                \n            \n\n\n            \n                \n                    On Init the app take trace of the current url and of the authentication status\nOnce the subscription done, send an Action to Check the current authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoutePE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OperatorFabric'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {InitAuthStatus} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl, selectRouterState} from '@ofSelectors/router.selectors';\nimport {selectExpirationTime} from '@ofSelectors/authentication.selectors';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {isInTheFuture} from \"@ofServices/authentication.service\";\nimport {LoadConfig} from \"@ofActions/config.actions\";\nimport {selectConfigLoaded, selectMaxedRetries} from \"@ofSelectors/config.selectors\";\nimport {I18nService} from \"@ofServices/i18n.service\";\n\n@Component({\n    selector: 'of-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    title = 'OperatorFabric';\n    getRoutePE: Observable;\n    currentPath: any;\n    isAuthenticated$: boolean = false;\n    configLoaded: boolean = false ;\n    private maxedRetries: boolean = false;\n\n    /**\n     * NB: I18nService is injected to trigger its constructor at application startup\n     * @param store\n     * @param i18nService\n     */\n    constructor(private store: Store,private i18nService:I18nService) {\n        this.getRoutePE = this.store.pipe(select(selectRouterState));\n    }\n\n    /**\n     * On Init the app take trace of the current url and of the authentication status\n     * Once the subscription done, send an Action to Check the current authentication status.\n     */\n    ngOnInit() {\n        console.log(`location: ${location.href}`)\n        let i = window.location.href.indexOf('code');\n        if(i != -1){\n            this.store.dispatch(new InitAuthStatus({code:window.location.href.substring(i + 5)}))\n        }\n        this.store.pipe(select(selectCurrentUrl)).subscribe(url => this.currentPath = url);\n        this.store.pipe(select(selectExpirationTime),\n            map(isInTheFuture)\n                        ).subscribe(isAUth => this.isAuthenticated$ = isAUth);\n        this.store\n            .select(selectConfigLoaded)\n            .subscribe(loaded => this.configLoaded = loaded);\n        this.store\n            .select(selectMaxedRetries)\n            .subscribe((maxedRetries=>this.maxedRetries=maxedRetries));\n        // First Action send by the application, is the user currently authenticated ?\n        this.store.dispatch(new LoadConfig());\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n        Application is loading ...\n    \n    \n        Application is not available yet, please reload later (F5)\n    \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n.button {margin-right: 8px;}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Application is loading ...                Application is not available yet, please reload later (F5)    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InfoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            StateModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {StateModule} from '@ofStore/state.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ServicesModule} from '@ofServices/services.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {IconComponent} from './components/icon/icon.component';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {translateConfig} from \"./translate.config\";\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport { InfoComponent } from './components/navbar/info/info.component';\n\nlibrary.add(faExternalLinkAlt);\nlibrary.add(faSignOutAlt)\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        StateModule.forRoot(),\n        ServicesModule.forRoot(),\n        NgbModule,\n        TranslateModule.forRoot(translateConfig),\n        FontAwesomeModule\n    ],\n    declarations: [AppComponent, NavbarComponent, LoginComponent, IconComponent, InfoComponent],\n    providers: [ { provide: LocationStrategy, useClass: HashLocationStrategy }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from '@ofServices/guard.service';\nimport {LoginComponent} from './components/login/login.component';\nimport {environment} from \"@env/environment\";\n\nconst routes: Routes = [\n    // {\n    //     path: 'login',\n    //     component: LoginComponent\n    // },\n    {\n        path: 'feed',\n        loadChildren: './modules/feed/feed.module#FeedModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'archives',\n        loadChildren: './modules/archives/archives.module#ArchivesModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'thirdparty',\n        loadChildren: './modules/thirdparty/thirdparty.module#ThirdpartyModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'settings',\n        loadChildren: './modules/settings/settings.module#SettingsModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'navbar',\n        component: LoginComponent\n    },\n    {path: '**', redirectTo: '/feed'}\n];\n// TODO manage visible path more gently\nexport const navigationRoutes: Routes = routes.slice(0, 2);\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes,{ enableTracing: false, preloadingStrategy: PreloadAllModules })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authentication\n                                \n                                \n                                        card\n                                \n                                \n                                        config\n                                \n                                \n                                        feed\n                                \n                                \n                                        menu\n                                \n                                \n                                        router\n                                \n                                \n                                        settings\n                                \n                                \n                                        time\n                                \n                                \n                                        timeline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                    \n                                \n                                \n                                    \n                                        authentication:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                    \n                                \n                                \n                                    \n                                        card:         CardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         ConfigState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         CardFeedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardFeedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         TimeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeline\n                                    \n                                \n                                \n                                    \n                                        timeline:         TimelineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimelineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport {RouterReducerState} from '@ngrx/router-store';\nimport {RouterStateUrl} from '@ofStore/states/router.state';\nimport {reducer as authenticationReducer} from '@ofStore/reducers/authentication.reducer';\nimport {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '@env/environment';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport {CardEffects} from '@ofEffects/card.effects';\nimport {CardOperationEffects} from '@ofEffects/card-operation.effects';\nimport {AuthenticationEffects} from '@ofEffects/authentication.effects';\nimport {RouterEffects} from 'ngrx-router';\nimport {CardFeedState} from '@ofStates/feed.state';\nimport {reducer as timelineReducer} from '@ofStore/reducers/timeline.reducer';\nimport {reducer as lightCardReducer} from '@ofStore/reducers/light-card.reducer';\nimport {reducer as cardReducer} from '@ofStore/reducers/card.reducer';\nimport {reducer as configReducer} from '@ofStore/reducers/config.reducer';\nimport {reducer as settingsReducer} from '@ofStore/reducers/settings.reducer';\nimport {reducer as menuReducer} from '@ofStore/reducers/menu.reducer';\nimport {reducer as timeReducer} from '@ofStore/reducers/time.reducer';\nimport {AuthState} from '@ofStates/authentication.state';\nimport {CardState} from \"@ofStates/card.state\";\nimport {CustomRouterEffects} from \"@ofEffects/custom-router.effects\";\nimport {MenuState} from \"@ofStates/menu.state\";\nimport {MenuEffects} from \"@ofEffects/menu.effects\";\nimport {LightCardEffects} from \"@ofEffects/light-card.effects\";\nimport {FeedFiltersEffects} from \"@ofEffects/feed-filters.effects\";\nimport {ConfigState} from \"@ofStates/config.state\";\nimport {ConfigEffects} from \"@ofEffects/config.effects\";\nimport {TimelineState} from \"@ofStates/timeline.state\";\nimport {SettingsState} from \"@ofStates/settings.state\";\nimport {SettingsEffects} from \"@ofEffects/settings.effects\";\nimport {TimeState} from \"@ofStates/time.state\";\nimport {TimeEffects} from \"@ofEffects/time.effects\";\n\nexport interface AppState {\n    router: RouterReducerState;\n    feed: CardFeedState;\n    timeline: TimelineState;\n    authentication: AuthState;\n    card: CardState;\n    menu: MenuState;\n    config: ConfigState;\n    settings: SettingsState;\n    time: TimeState;\n}\n\nexport const appEffects = [\n    CardEffects,\n    ConfigEffects,\n    SettingsEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects,\n    TimeEffects];\n\nexport const appReducer: ActionReducerMap = {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    timeline: timelineReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer,\n    settings: settingsReducer,\n    time: timeReducer\n};\n\nexport const appMetaReducers: MetaReducer[] = !environment.production\n    ? [storeFreeze]\n    : [];\n\nexport const storeConfig = {\n    metaReducers: appMetaReducers,\n    // initialState: {\n    //     router: routerInitialState,\n    // }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyFilter.html":{"url":"classes/ApplyFilter.html","title":"class - ApplyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ApplyFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchivesComponent.html":{"url":"components/ArchivesComponent.html","title":"component - ArchivesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchivesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/archives.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archives\n            \n\n            \n                styleUrls\n                ./archives.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archives.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/archives.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/archives.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-archives',\n  templateUrl: './archives.component.html',\n  styleUrls: ['./archives.component.scss']\n})\nexport class ArchivesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  archives works!\n\n\n    \n\n    \n                \n                    ./archives.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  archives works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchivesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesModule.html":{"url":"modules/ArchivesModule.html","title":"module - ArchivesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArchivesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArchivesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {ArchivesRoutingModule} from './archives-routing.module';\nimport {ArchivesComponent} from \"./archives.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ArchivesRoutingModule\n  ],\n  declarations: [ArchivesComponent]\n})\nexport class ArchivesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesRoutingModule.html":{"url":"modules/ArchivesRoutingModule.html","title":"module - ArchivesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {ArchivesComponent} from \"./archives.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ArchivesComponent,\n        // canActivate: [AuthenticationGuard]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArchivesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthObject.html":{"url":"classes/AuthObject.html","title":"class - AuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class used to try to login using the authentication web service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access_token\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, expires_in: number, clientId: Guid, identifier?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:288\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:291\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:293\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:292\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:294\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\nimport {User} from \"@ofModel/user.model\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError),\n            switchMap((auth)=>this.loadUserData(auth))\n        );\n    }\n\n    private loadUserData(auth:PayloadForSuccessfulAuthentication):Observable{\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(e=>of(auth))\n            );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate)\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        if(!this.delegateUrl)\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        else{\n            window.location.href = `${this.delegateUrl}&redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        }\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        code\n                                \n                                \n                                        expirationDate\n                                \n                                \n                                        firstName\n                                \n                                \n                                        identifier\n                                \n                                \n                                        lastName\n                                \n                                \n                                        message\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     Guid\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Guid\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                    \n                                \n                                \n                                    \n                                        expirationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface AuthState {\n    code: string;\n    identifier: string;\n    clientId: Guid;\n    token: string;\n    expirationDate: Date;\n    message: Message;\n    firstName: string;\n    lastName: string;\n}\n\nexport const authInitialState: AuthState = {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null,\n    firstName: null,\n    lastName: null\n};\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/authentication.effects.ts\n        \n\n            \n                Description\n            \n            \n                Management of the authentication of the current user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AcceptLogOut\n                            \n                            \n                                CheckAuthentication\n                            \n                            \n                                checkAuthenticationWhenReady\n                            \n                            \n                                RejectLogInAttempt\n                            \n                            \n                                TryToLogIn\n                            \n                            \n                                TryToLogOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleErrorOnTokenGeneration\n                            \n                            \n                                handleRejectedLogin\n                            \n                            \n                                    Private\n                                resetState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthenticationService, cardService: CardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/authentication.effects.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Store} state manager\n\n\n                                                        \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Action} {Observable} of Action of the Application\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice implementing the authentication business rules\n\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrouter service to redirect user accordingly to the user authentication status or variation of it.\n\nistanbul ignore next \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrorOnTokenGeneration\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrorOnTokenGeneration(errorResponse, category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRejectedLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRejectedLogin(errorMsg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthenticationActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AcceptLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:136\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\nIt tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\nThis {Effect} should be called as a consequence of a {TryLogOut} action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse,'code');\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:179\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\nIt extract the current authentication information if any and checks its validity, the expiration date.\n  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n  the {handleLogInAttempt} @method,\n  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\nThis {Effect} should be the first effect apply by the application to display the right page accordingly with the\ncurrent authentication state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthenticationWhenReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:61\n                            \n                        \n\n                \n                    \n                        Triggers Authentication Check when the application is ready\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RejectLogInAttempt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:155\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\nIt tells the {AuthenticationService} to clear authentication information from the system\nThis {Effect} should be called after a wrong login attempt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                            return this.handleErrorOnTokenGeneration(errorResponse,'authenticate');\n                            }\n                        ));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:83\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\nthe login payload to get an authentication token from the authentication service if the authentication is\nvalid and emit an {AcceptLogin} action with it.\nFor invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\nas paload\nThis effect should take action after the user has submitted login information in the login page by clicking\non the login button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap((action: TryToLogOut) => {\n                this.resetState();\n                return of(new EmptyLightCards(),new ClearCard(), new AcceptLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:110\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\nIt tells the {AuthenticationService} to clear the authentication information from the system and emit\nan {AcceptLogOut} Action.\nThis effect should take action after the Logout link/button has been clicked by the user.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable, of} from 'rxjs';\nimport {Action, Store} from '@ngrx/store';\nimport {\n    AcceptLogIn,\n    AcceptLogOut,\n    AcceptLogOutSuccess,\n    AuthenticationActions,\n    AuthenticationActionTypes,\n    CheckAuthenticationStatus,\n    RejectLogIn,\n    TryToLogIn,\n    TryToLogOut\n} from '@ofActions/authentication.actions';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {catchError, map, switchMap, tap, withLatestFrom} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {Router} from \"@angular/router\";\nimport {ConfigActionTypes} from \"@ofActions/config.actions\";\nimport {selectCode} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\nimport {CardService} from \"@ofServices/card.service\";\nimport {EmptyLightCards} from \"@ofActions/light-card.actions\";\nimport {ClearCard} from \"@ofActions/card.actions\";\n\n/**\n * Management of the authentication of the current user\n */\n@Injectable()\nexport class AuthenticationEffects {\n\n    /**\n     * @constructor\n     * @param store - {Store} state manager\n     * @param actions$ - {Action} {Observable} of Action of the Application\n     * @param authService - service implementing the authentication business rules\n     * @param router - router service to redirect user accordingly to the user authentication status or variation of it.\n     *\n     * istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private authService: AuthenticationService,\n                private cardService: CardService,\n                private router: Router) {\n    }\n\n    /**\n     * Triggers Authentication Check when the application is ready\n     */\n    @Effect()\n    checkAuthenticationWhenReady: Observable =\n        this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\n     * the login payload to get an authentication token from the authentication service if the authentication is\n     * valid and emit an {AcceptLogin} action with it.\n     * For invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\n     * as paload\n     *\n     * This effect should take action after the user has submitted login information in the login page by clicking\n     * on the login button.\n     *\n     * @member\n     * @name TryToLogin\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogIn: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                            return this.handleErrorOnTokenGeneration(errorResponse,'authenticate');\n                            }\n                        ));\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\n     * It tells the {AuthenticationService} to clear the authentication information from the system and emit\n     * an {AcceptLogOut} Action.\n     *\n     * This effect should take action after the Logout link/button has been clicked by the user.\n     *\n     * @member\n     * @name TryToLogOut\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap((action: TryToLogOut) => {\n                this.resetState();\n                return of(new EmptyLightCards(),new ClearCard(), new AcceptLogOut());\n            })\n        );\n\n    private resetState() {\n        AuthenticationService.clearAuthenticationInformation();\n        this.cardService.unsubscribeCardOperation();\n    }\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\n     * It tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\n     *\n     * This {Effect} should be called as a consequence of a {TryLogOut} action\n     *\n     * @member\n     * @name AcceptLogOut\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    AcceptLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        );\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\n     * It tells the {AuthenticationService} to clear authentication information from the system\n     *\n     * This {Effect} should be called after a wrong login attempt.\n\n     * @member\n     * @name RejectLogInAttempt\n     * @typedef {Observable}\n     */\n    @Effect()\n    RejectLogInAttempt: Observable =\n        this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()));\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\n     *It extract the current authentication information if any and checks its validity, the expiration date.\n     *  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n     *  the {handleLogInAttempt} @method,\n     *\n     *  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\n     *\n     * This {Effect} should be the first effect apply by the application to display the right page accordingly with the\n     * current authentication state.\n     *\n     * @member\n     * @name CheckAuthentication\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    CheckAuthentication: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse,'code');\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            );\n\n    handleErrorOnTokenGeneration(errorResponse,category:string) {\n        let message, key;\n        let params = new Map()\n        switch (errorResponse.status) {\n            case 401:\n                message = 'Unable to authenticate the user';\n                key = `login.error.${category}`;\n                break;\n            case 0:\n            case 500:\n                message = 'Authentication service currently unavailable';\n                key = 'login.error.unavailable';\n                break;\n            default:\n                message = 'Unexpected error';\n                key = 'login.error.unexpected';\n                params['error'] = errorResponse.message;\n        }\n        console.error(message, errorResponse);\n        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n    }\n\n    handleRejectedLogin(errorMsg: Message): AuthenticationActions {\n        AuthenticationService.clearAuthenticationInformation();\n        return new RejectLogIn({error: errorMsg});\n\n    }\n\n    // handleLogInAttempt(payload: CheckTokenResponse): AuthenticationActions {\n    //     if (payload) {\n    //         const authInfo = this.authService.extractIdentificationInformation();\n    //         return new AcceptLogIn(authInfo);\n    //\n    //     }\n    //     return this.handleRejectedLogin('invalid token');\n    // }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseSettingComponent.html":{"url":"components/BaseSettingComponent.html","title":"component - BaseSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/base-setting/base-setting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-base-setting\n            \n\n            \n                styleUrls\n                ./base-setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./base-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {PatchSettings} from \"@ofActions/settings.actions\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, filter, first, map, takeUntil} from \"rxjs/operators\";\nimport {FormGroup} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Component({\n    selector: 'of-base-setting',\n    templateUrl: './base-setting.component.html',\n    styleUrls: ['./base-setting.component.css']\n})\nexport class BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() public settingPath: string;\n    @Input() public messagePlaceOlder: string;\n    @Input() public requiredField: boolean;\n    private ngUnsubscribe$ = new Subject();\n    protected setting$;\n    protected placeholder$;\n    form: FormGroup;\n    private baseSettings = {};\n\n    constructor(protected store: Store) {\n\n    }\n\n    ngOnInit() {\n        this.form = this.initFormGroup();\n        if(!this.form){\n            throw 'Trying to instanciate component without form';\n        }\n        this.setting$ = this.store.select(buildSettingsSelector(this.settingPath))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n            this.setting$.subscribe(next => this.updateValue(next));\n        this.setting$\n            .pipe(first())\n            .subscribe(()=>\n                this.form.valueChanges\n                    .pipe(\n                        takeUntil(this.ngUnsubscribe$),\n                        filter(()=>this.form.valid),\n                        distinctUntilChanged((formA, formB) => this.isEqual(formA, formB)),\n                        debounce(() => timer(500))\n                    )\n                    .subscribe(next=>this.dispatch(this.convert(next)))\n            );\n        this.placeholder$ = this.store.select(buildConfigSelector(`settings.${this.settingPath}`))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n        this.store.select(selectIdentifier)\n            .pipe(\n                takeUntil(this.ngUnsubscribe$),\n                map(id=>{return {login:id}}))\n            .subscribe(next=>this.baseSettings = next);\n\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    protected updateValue(value:any){\n\n    }\n\n    protected initFormGroup():FormGroup{\n        return null\n    }\n\n    protected convert(value:any):any{\n        return value;\n    }\n\n\n    private dispatch(value:any) {\n        const settings = {...this.baseSettings};\n        settings[this.settingPath] = value.setting;\n        this.store.dispatch(new PatchSettings({settings: settings}));\n    }\n\n    protected isEqual(formA, formB):boolean{\n        return _.isEqual(formA, formB);\n    }\n\n    protected submitValue(){\n        alert('submitted');\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  base-setting works!\n\n\n    \n\n    \n                \n                    ./base-setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  base-setting works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, process?: string, processId?: string, state?: string, lttd?: number, title?: I18n, summary?: I18n, data?: any, details?: Detail[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                currentPath\n                            \n                            \n                                dateToDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeDisplayedDates\n                            \n                            \n                                handleDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCard\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, translate: TranslateService, time: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card/card.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCard\n                    \n                \n                \n                    \n                        Type :         LightCard\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeDisplayedDates\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeDisplayedDates(config: string, lightCard: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightCard\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDate\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDate(timeStamp: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStamp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:80\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Router} from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {map} from \"rxjs/operators\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as moment from \"moment\"\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Component({\n    selector: 'of-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit{\n\n    @Input() public open: boolean = false;\n    @Input() public lightCard: LightCard;\n    currentPath: any;\n    private _i18nPrefix: string;\n    dateToDisplay: string;\n\n    /* istanbul ignore next */\n    constructor(private router: Router,\n                private store: Store,\n                private translate: TranslateService,\n                private time: TimeService) {\n\n    }\n\n    public select() {\n        this.router.navigate(['/'+this.currentPath,'cards',this.lightCard.id]);\n        // this.open=true;\n    }\n\n    ngOnInit() {\n        this._i18nPrefix = this.lightCard.publisher+'.'+this.lightCard.publisherVersion+'.'\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/')[1];\n        });\n        // this.store.select(selectCardStateSelectedId)\n        //     .pipe(\n        //         map(id=>this.lightCard.id == id)\n        //     ).subscribe(open=>this.open = open)\n        // ;\n        // fetch configuration\n        this.store.select(buildConfigSelector('feed.card.time.display'))\n            // use configuration to compute date\n            .pipe(map(config => this.computeDisplayedDates(config, this.lightCard)))\n            .subscribe(computedDate => this.dateToDisplay=computedDate);\n    }\n\n    computeDisplayedDates(config:string,lightCard:LightCard):string{\n        switch (config) {\n            case 'NONE': return '';\n            case 'LTTD': return this.handleDate(lightCard.lttd);\n            case 'PUBLICATION': return this.handleDate(lightCard.publishDate);\n            case 'BUSINESS_START': return this.handleDate(lightCard.startDate);\n            default:return `${this.handleDate(lightCard.startDate)} - ${this.handleDate(lightCard.endDate)}`\n        }\n    }\n\n    handleDate(timeStamp:number):string{\n        return this.time.formatDateTime(timeStamp);\n    }\n\n\n    get i18nPrefix(): string {\n        return this._i18nPrefix;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n        \n        \n            {{i18nPrefix+lightCard.title.key}}\n            ({{this.dateToDisplay}})\n        \n    \n    \n        \n        \n            {{i18nPrefix+lightCard.summary.key}}\n        \n    \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.light-card-detail {\n  max-width: 400px;\n}\n\n.card {\n  margin-bottom: 5px;\n  word-break: break-all;\n}\n\n.card-title {\n  font-variant: small-caps;\n  font-size: larger;\n}\n\n.card-subtitle {\n  font-size: small;\n}\n\n.card-text {\n  font-size: small;\n}\n\n.badge-border {\n  width: 30px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{i18nPrefix+lightCard.title.key}}            ({{this.dateToDisplay}})                                            {{i18nPrefix+lightCard.summary.key}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card-details/card-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-details\n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card-details/card-details.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Detail[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport * as cardSelectors from '@ofStore/selectors/card.selectors';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\n\n@Component({\n    selector: 'of-card-details',\n    templateUrl: './card-details.component.html',\n})\nexport class CardDetailsComponent implements OnInit {\n\n    card: Card;\n    details: Detail[];\n\n    constructor(private store: Store, private thirdsService: ThirdsService) {\n\n    }\n\n    ngOnInit() {\n        this.store.select(cardSelectors.selectCardStateSelected)\n            .subscribe(card => {\n                this.card = card;\n                if(card) {\n                    if(card.details) {\n                        this.details = [...card.details];\n                    }else{\n                        this.details = [];\n                    }\n                    this.thirdsService.queryThird(this.card.publisher, this.card.publisherVersion)\n                        .subscribe(third => {\n                            const state = third.extractState(this.card)\n                            if (state != null)\n                                this.details.push(...state.details);\n                        });\n                }\n            });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardEffects.html":{"url":"injectables/CardEffects.html","title":"injectable - CardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => this.service.loadCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadCardFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {CardService} from '@ofServices/card.service';\nimport {AppState} from \"@ofStore/index\";\nimport {CardActionTypes, LoadCard, LoadCardFailure, LoadCardSuccess} from \"@ofActions/card.actions\";\nimport {Card} from \"@ofModel/card.model\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class CardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService\n    ) {\n    }\n\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => this.service.loadCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadCardFailure(err));\n                return caught;\n            })\n        );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFeedState.html":{"url":"interfaces/CardFeedState.html","title":"interface - CardFeedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardFeedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/feed.state.ts\n        \n\n            \n                Description\n            \n            \n                The Feed State consist of:\n  * EntityState of LightCard\n  * selectedCardId: the currently selected card id\n  * lastCards the last cards added / updated to the feed\n  * loading: weather there is an ongoing state modification\n  * message: last message during state processing\n  * filters: a collection of filter to apply to the rendered feed\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filters\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:         LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard, severityOrdinal} from '@ofModel/light-card.model';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n/**\n * The Feed State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * message: last message during state processing\n *  * filters: a collection of filter to apply to the rendered feed\n */\nexport interface CardFeedState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    filters: Map;\n}\n\nexport function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate\n}\n\nexport function compareBySeverity(card1: LightCard, card2: LightCard){\n    return severityOrdinal(card1.severity) - severityOrdinal(card2.severity);\n}\n\nexport function compareByLttd(card1: LightCard, card2: LightCard){\n    return card1.lttd - card2.lttd;\n}\n\nexport function compareByPublishDate(card1: LightCard, card2: LightCard){\n    return card1.publishDate - card2.publishDate;\n}\n\nexport function compareBySeverityLttdPublishDate(card1: LightCard, card2: LightCard){\n    let result = compareBySeverity(card1,card2);\n    if(result==0)\n        result = compareByLttd(card1,card2);\n    if(result == 0)\n        result = compareByPublishDate(card1,card2);\n    return result;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:compareBySeverityLttdPublishDate\n});\n\nexport const feedInitialState: CardFeedState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    });\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardListComponent.html":{"url":"components/CardListComponent.html","title":"component - CardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/card-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-list\n            \n\n\n\n\n            \n                templateUrl\n                ./card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/card-list.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :         LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'of-card-list',\n  templateUrl: './card-list.component.html',\n})\nexport class CardListComponent  {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n  \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CardOperation.html":{"url":"classes/CardOperation.html","title":"class - CardOperation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CardOperation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card-operation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CardOperation\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertTypeIntoEnum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(number: number, publicationDate: number, type: CardOperationType, cards?: LightCard[], cardIds?: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card-operation.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        number\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publicationDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        CardOperationType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cards\n                                                  \n                                                        \n                                                                        LightCard[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertTypeIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTypeIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/card-operation.model.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from './light-card.model';\n\nexport class CardOperation implements CardOperation {\n    /* istanbul ignore next */\n    constructor(\n        readonly number: number,\n        readonly publicationDate: number,\n        readonly type: CardOperationType,\n        readonly cards?: LightCard[],\n        readonly cardIds?: string[]\n    ) {\n    }\n\n    static convertTypeIntoEnum(key:string, value:string){\n        if(key === 'type'){\n            return CardOperationType[value]\n        }\n        return value;\n    }\n\n}\n\nexport enum CardOperationType {\n    ADD , UPDATE, DELETE\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardOperationEffects.html":{"url":"injectables/CardOperationEffects.html","title":"injectable - CardOperationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardOperationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card-operation.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshIfSelectedCard\n                            \n                            \n                                subscribe\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card-operation.effects.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshIfSelectedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:73\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, filter, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {\n    AddLightCardFailure,\n    HandleUnexpectedError,\n    LightCardActions,\n    LightCardActionTypes,\n    LoadLightCardsSuccess,\n    RemoveLightCard,\n    UpdatedSubscription\n} from '@ofActions/light-card.actions';\nimport {AuthenticationActionTypes} from '@ofActions/authentication.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ApplyFilter, FeedActionTypes} from \"@ofActions/feed.actions\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {CardOperationType} from \"@ofModel/card-operation.model\";\n\n@Injectable()\nexport class CardOperationEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    subscribe: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n\n    @Effect()\n    updateSubscription: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        );\n\n    @Effect()\n    refreshIfSelectedCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n    ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                cardOperationsUrl\n                            \n                            \n                                    Readonly\n                                cardsUrl\n                            \n                            \n                                    Readonly\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchCardOperation\n                            \n                            \n                                getCardOperation\n                            \n                            \n                                loadCard\n                            \n                            \n                                unsubscribeCardOperation\n                            \n                            \n                                    Public\n                                updateCardSubscriptionWithDates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authenticationService: AuthenticationService, guidService: GuidService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        guidService\n                                                  \n                                                        \n                                                                        GuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCardOperation(eventSource: EventSourcePolyfill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventSource\n                                    \n                                            EventSourcePolyfill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \ngetCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCardSubscriptionWithDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeEnd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardOperationsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {CardOperation} from '@ofModel/card-operation.model';\nimport {EventSourcePolyfill} from 'ng-event-source';\nimport {AuthenticationService} from './authentication.service';\nimport {Card} from \"@ofModel/card.model\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\n\n@Injectable()\nexport class CardService {\n    readonly unsubscribe$ = new Subject();\n    readonly cardOperationsUrl: string;\n    readonly cardsUrl: string;\n\n    constructor(private httpClient:HttpClient, private authenticationService: AuthenticationService,private guidService: GuidService) {\n        const clientId = this.guidService.getCurrentGuidString();\n        this.cardOperationsUrl = `${environment.urls.cards}/cardSubscription?clientId=${clientId}`;\n        this.cardsUrl = `${environment.urls.cards}/cards`;\n    }\n\n    loadCard(id: string): Observable {\n        return this.httpClient.get(`${this.cardsUrl}/${id}`);\n    }\n\n    getCardOperation(): Observable {\n        let minus2Hour = new Date(new Date().valueOf()-2*60*60*1000);\n        let plus48Hours = new Date(minus2Hour.valueOf()+48*60*60*1000);\n        //security header needed here as SSE request are not intercepted by our header interceptor\n        return this.fetchCardOperation(new EventSourcePolyfill(\n            `${this.cardOperationsUrl}&notification=true&rangeStart=${minus2Hour.valueOf()}&rangeEnd=${plus48Hours.valueOf()}`\n            , {headers: AuthenticationService.getSecurityHeader(),\n                heartbeatTimeout: 600000}));\n    }\n\n    unsubscribeCardOperation(){\n        this.unsubscribe$.next();\n    }\n\n    fetchCardOperation(eventSource: EventSourcePolyfill): Observable {\n        return Observable.create(observer => {\n            try {\n                eventSource.onmessage = message => {\n                    if (!message) {\n                        return observer.error(message);\n                    }\n                    return observer.next(JSON.parse(message.data,CardOperation.convertTypeIntoEnum));\n                };\n                eventSource.onerror = error => {\n                    console.error(`error occurred from ES: ${error.toString()}`)\n                }\n\n            } catch (error) {\n                return observer.error(error);\n            }\n            return () => {\n                if (eventSource && eventSource.readyState !== eventSource.CLOSED) {\n                    eventSource.close();\n                }\n            };\n        })\n    }\n\n    public updateCardSubscriptionWithDates(rangeStart:number,rangeEnd:number):Observable{\n        return this.httpClient.post(\n            `${this.cardOperationsUrl}`,\n            {rangeStart:rangeStart,rangeEnd: rangeEnd});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardState.html":{"url":"interfaces/CardState.html","title":"interface - CardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/card.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\n\nexport interface CardState{\n    selected: Card,\n    loading: boolean,\n    error: string\n}\n\nexport const cardInitialState: CardState = {\n    selected: null,\n    loading: false,\n    error: null\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/cards/cards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HandlebarsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/cards.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from \"./components/card/card.component\";\nimport {CardDetailsComponent} from \"./components/card-details/card-details.component\";\nimport {DetailsComponent} from \"./components/details/details.component\";\nimport {DetailComponent} from \"./components/detail/detail.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ThirdsService} from \"../../services/thirds.service\";\nimport {HandlebarsService} from \"./services/handlebars.service\";\n\n@NgModule({\n  declarations: [CardComponent, CardDetailsComponent, DetailsComponent, DetailComponent],\n  imports: [\n    CommonModule,\n      TranslateModule\n  ],\n    exports: [CardComponent, CardDetailsComponent, DetailsComponent, DetailComponent],\n    providers: [HandlebarsService]\n})\nexport class CardsModule {\n    static forRoot(): ModuleWithProviders{\n        return {\n            ngModule: CardsModule,\n            providers: [ThirdsService]\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckAuthenticationStatus.html":{"url":"classes/CheckAuthenticationStatus.html","title":"class - CheckAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckTokenResponse.html":{"url":"classes/CheckTokenResponse.html","title":"class - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class corresponding to the response of the web service checking jwt token when this token is a valid one.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Optional\n                                exp\n                            \n                            \n                                    Public\n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sub?: string, exp?: number, clientId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:303\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sub\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:307\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:306\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:305\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\nimport {User} from \"@ofModel/user.model\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError),\n            switchMap((auth)=>this.loadUserData(auth))\n        );\n    }\n\n    private loadUserData(auth:PayloadForSuccessfulAuthentication):Observable{\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(e=>of(auth))\n            );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate)\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        if(!this.delegateUrl)\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        else{\n            window.location.href = `${this.delegateUrl}&redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        }\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCard.html":{"url":"classes/ClearCard.html","title":"class - ClearCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.ClearCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearLightCardSelection.html":{"url":"classes/ClearLightCardSelection.html","title":"class - ClearLightCardSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearLightCardSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:70\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ClearLightCardSelection\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/config.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConfiguration\n                            \n                            \n                                retryConfigurationLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ConfigService, retryDelay: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/config.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryDelay\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:54\n                            \n                        \n\n                \n                    \n                        Manages configuration load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retryConfigurationLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:71\n                            \n                        \n\n                \n                    \n                        Manages load retry upon message\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, delay, filter, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {ConfigService} from '@ofServices/config.service';\nimport {AppState} from \"@ofStore/index\";\nimport {ConfigActionTypes, LoadConfig, LoadConfigFailure, LoadConfigSuccess} from \"@ofActions/config.actions\";\nimport {selectConfigRetry} from \"@ofSelectors/config.selectors\";\nimport {CONFIG_LOAD_MAX_RETRIES} from \"@ofStates/config.state\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class ConfigEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ConfigService,\n                @Inject('configRetryDelay')\n                private retryDelay: number = 5000,\n    ) {\n\n        if (this.retryDelay > 0)\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig()),\n                    delay(this.retryDelay)\n                );\n        else\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig())\n                );\n    }\n\n    /**\n     * Manages configuration load -> service request -> success/message\n     */\n    @Effect()\n    loadConfiguration: Observable = this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * Manages load retry upon message\n     */\n    @Effect()\n    retryConfigurationLoading: Observable;\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nfetchConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/config.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Injectable()\nexport class ConfigService {\n    private configUrl: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.configUrl = `${environment.urls.config}`;\n    }\n\n    fetchConfiguration(): Observable {\n        return this.httpClient.get(`${this.configUrl}`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigState.html":{"url":"interfaces/ConfigState.html","title":"interface - ConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/config.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        retry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retry\n                                    \n                                \n                                \n                                    \n                                        retry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\n\nexport const CONFIG_LOAD_MAX_RETRIES = 5;\n\nexport interface ConfigState{\n    config:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string,\n    retry: number\n}\n\nexport const configInitialState: ConfigState = {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomRouterEffects.html":{"url":"injectables/CustomRouterEffects.html","title":"injectable - CustomRouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomRouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/custom-router.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAwayFromFeed\n                            \n                            \n                                navigateToCard\n                            \n                            \n                                navigateToMenuURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/custom-router.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateAwayFromFeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToMenuURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:50\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\nThis will typically be triggered when clicking on a third-party menu link.\nIt then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {ROUTER_NAVIGATION, ROUTER_REQUEST, RouterNavigationAction, RouterRequestAction} from \"@ngrx/router-store\";\nimport {filter, map, switchMap, tap} from \"rxjs/operators\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {ClearLightCardSelection, SelectLightCard} from \"@ofActions/light-card.actions\";\nimport {SelectMenuLink} from \"@ofActions/menu.actions\";\nimport {AuthenticationActionTypes, TryToLogOut} from \"@ofActions/authentication.actions\";\n\n@Injectable()\nexport class CustomRouterEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions\n    ) {}\n\n    @Effect()\n    navigateToCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    /**\n     * This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\n     * This will typically be triggered when clicking on a third-party menu link.\n     * It then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n     * @name navigateToMenuURL\n     */\n    @Effect()\n    navigateToMenuURL: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateAwayFromFeed: Observable = this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractParams\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractParams(state: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Params\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titlePosition: TitlePosition, title: I18n, titleStyle: string, templateName: string, styles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titlePosition\n                                                  \n                                                        \n                                                                        TitlePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _htmlContent\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Readonly\n                                hrefsOfCssLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAction\n                            \n                            \n                                bindActions\n                            \n                            \n                                    Private\n                                initializeHandlebarsTemplates\n                            \n                            \n                                    Private\n                                initializeHrefsOfCssLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reinsertScripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                detail\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    htmlContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, thirds: ThirdsService, handlebars: HandlebarsService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/detail/detail.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handlebars\n                                                  \n                                                        \n                                                                        HandlebarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        detail\n                    \n                \n                \n                    \n                        Type :         Detail\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachAction\n                        \n                        \n                    \n                \n            \n            \n                \nattachAction(button: HTMLButtonElement, action: Action, actionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            HTMLButtonElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindActions\n                        \n                        \n                    \n                \n            \n            \n                \nbindActions(third: Third)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    third\n                                    \n                                                Third\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHandlebarsTemplates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHandlebarsTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHrefsOfCssLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHrefsOfCssLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reinsertScripts\n                        \n                        \n                    \n                \n            \n            \n                \nreinsertScripts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hrefsOfCssLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n\n                \n                    \n                        gethtmlContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:69\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {ThirdsService} from \"../../../../services/thirds.service\";\nimport {HandlebarsService} from \"../../services/handlebars.service\";\nimport {DomSanitizer, SafeHtml, SafeResourceUrl} from \"@angular/platform-browser\";\nimport {Action, Third} from \"@ofModel/thirds.model\";\nimport {zip} from \"rxjs\";\n\n@Component({\n    selector: 'of-detail',\n    templateUrl: './detail.component.html',\n})\nexport class DetailComponent implements OnInit {\n    public active = false;\n    @Input() detail: Detail;\n    @Input() card: Card;\n    readonly hrefsOfCssLink = new Array();\n    private _htmlContent: SafeHtml;\n\n    constructor(private element: ElementRef,\n                private thirds: ThirdsService,\n                private handlebars: HandlebarsService,\n                private sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit() {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n    }\n\n    private initializeHrefsOfCssLink() {\n        if (this.detail && this.detail.styles) {\n            const publisher = this.card.publisher;\n            const publisherVersion = this.card.publisherVersion;\n            this.detail.styles.forEach(style => {\n                const cssUrl = this.thirds.computeThirdCssUrl(publisher, style, publisherVersion);\n                //needed to instantiate href of link for css in component rendering\n                const safeCssUrl = this.sanitizer.bypassSecurityTrustResourceUrl(cssUrl);\n                this.hrefsOfCssLink.push(safeCssUrl);\n\n                console.log(`this is the safe resource Url for css '${safeCssUrl.toString()}' and with local version '${safeCssUrl.toLocaleString()}'`)\n            });\n        }\n    }\n\n    private initializeHandlebarsTemplates() {\n\n        zip(this.thirds.queryThird(this.card.publisher,this.card.publisherVersion),\n        this.handlebars.executeTemplate(this.detail.templateName, this.card))\n            .subscribe(\n                ([third,html]) => {\n                this._htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n                setTimeout(() => { // wait for DOM rendering\n                    this.reinsertScripts();\n                    this.bindActions(third);\n                });\n            }\n        );\n    }\n\n\n    get htmlContent() {\n        return this._htmlContent;\n    }\n\n    reinsertScripts(): void {\n        const scripts = this.element.nativeElement.getElementsByTagName('script');\n        const scriptsInitialLength = scripts.length;\n        for (let i = 0; i this.element.nativeElement.getElementsByTagName('button');\n\n        for (let button of buttons) {\n            if (button.attributes['action-id']) {\n                const actionId = button.attributes['action-id'].nodeValue;\n                if (actionId) {\n                    const state = third.extractState(this.card);\n                    if(!!state && !!state.actions[actionId])\n                        this.attachAction(button, state.actions[actionId], actionId);\n                }\n            }\n        }\n    }\n\n    attachAction(button: HTMLButtonElement, action: Action, actionId: string) {\n        button.classList.add('btn');\n        if (action.buttonStyle) {\n            for (let c of action.buttonStyle.split(' ')) {\n                button.classList.add(c);\n            }\n        } else {\n            button.classList.add('btn-light');\n        }\n        if (action.contentStyle) {\n            for (let c of action.contentStyle.split(' ')) {\n                button.children[0].classList.add(c);\n            }\n        } else {\n            button.children[0].classList.add('fa', 'fa-warning', 'text-dark');\n        }\n        button.addEventListener('click', (event: Event) => {\n            alert(`${actionId} was triggered.\\nAction handling is not yet implemented`);\n        });\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/details/details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-details\n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectDetail\n                            \n                            \n                                    Private\n                                updateAsync\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectDetail\n                        \n                        \n                    \n                \n            \n            \n                \nselectDetail(detail: DetailComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detail\n                                    \n                                                DetailComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DetailComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, Input, OnChanges, QueryList, SimpleChanges} from '@angular/core';\nimport {DetailComponent} from \"../detail/detail.component\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Component({\n    selector: 'of-details',\n    templateUrl: './details.component.html',\n})\nexport class DetailsComponent implements AfterViewInit, OnChanges {\n\n    @ContentChildren(DetailComponent) details: QueryList;\n    @Input() card: Card;\n    private _i18nPrefix: string;\n\n    constructor() {\n    }\n\n    ngAfterViewInit(): void {\n        this.updateAsync();\n        this.details.changes.subscribe(\n            () => {\n                this.updateAsync();\n            }\n        );\n    }\n\n    private updateAsync() {\n        setTimeout(() => {\n            let activeDetail = this.details.filter((tab) => tab.active)\n            // if there is no active tab set, activate the first\n            if (activeDetail.length === 0) {\n                this.selectDetail(this.details.first);\n            }\n        });\n    }\n\n    selectDetail(detail: DetailComponent) {\n        // deactivate all tabs\n        this.details.toArray().forEach(detail => detail.active = false);\n\n        // activate the tab the user has clicked on.\n        if (detail)\n            detail.active = true;\n    }\n\n    public get i18nPrefix(){\n        return this._i18nPrefix;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(changes['card'].currentValue)\n            this._i18nPrefix = changes['card'].currentValue.publisher+'.'+changes['card'].currentValue.publisherVersion+'.';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    {{i18nPrefix+detailC.detail.title.key}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{i18nPrefix+detailC.detail.title.key}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/app-draggable.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDraggable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dragging\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragEnd\n                            \n                            \n                                dragMove\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                pointerdown\n                            \n                            \n                                pointermove\n                            \n                            \n                                pointerup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragMove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:7\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            pointerdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerdown(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:18\n                \n            \n\n\n            \n                \n                    if drag is true emit drag start event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointermove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointermove(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:28\n                \n            \n\n\n            \n                \n                    if drag is true emit drag move event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointerup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerup(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:40\n                \n            \n\n\n            \n                \n                    if drag is true emit drag end event\n\n\n                \n            \n        \n    \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[appDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter();\n  @Output() dragMove = new EventEmitter();\n  @Output() dragEnd = new EventEmitter();\n\n  private dragging = false;\n\n  /**\n   * if drag is true emit drag start event\n   * @param event\n   */\n  @HostListener('pointerdown', ['$event'])\n  onPointerDown(event: PointerEvent): void {\n    this.dragging = true;\n    this.dragStart.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag move event\n   * @param event\n   */\n  @HostListener('pointermove', ['$event'])\n  onPointerMove(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragMove.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag end event\n   * @param event\n   */\n  @HostListener('pointerup', ['$event'])\n  onPointerUp(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragging = false;\n    this.dragEnd.emit(event);\n  }\n\n  // Uncomment if you delete the unselection set inside css,\n  // this code will block the movement when u select some text\n  // !!! a little movement still appear !!!\n  /* @HostListener('document:dragstart', ['$event'])\n   onDragEnd(event: DragEvent): void {\n     if (!this.dragging) {\n       return;\n     }\n     this.dragging = false;\n   }*/\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailSettingComponent.html":{"url":"components/EmailSettingComponent.html","title":"component - EmailSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/email-setting/email-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                TextSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-email-setting\n            \n\n            \n                styleUrls\n                ./email-setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeTextValidators\n                            \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pattern\n                            \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {TextSettingComponent} from \"../text-setting/text-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-email-setting',\n  templateUrl: './email-setting.component.html',\n  styleUrls: ['./email-setting.component.css']\n})\nexport class EmailSettingComponent extends TextSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    computeTextValidators(){\n      let validators = super.computeTextValidators();\n      validators.push(Validators.email);\n      return validators;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    Incorrect submission\n  \n\n\n    \n\n    \n                \n                    ./email-setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyLightCards.html":{"url":"classes/EmptyLightCards.html","title":"class - EmptyLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.EmptyLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FailToUpdateTimeReference.html":{"url":"classes/FailToUpdateTimeReference.html","title":"class - FailToUpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FailToUpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Notify that something went wrong while changing the virtual time.\nNothing has been done and an error is reported\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.FailToUpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:{currentTime:moment.Moment, elapsedSinceLast:number}){}\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-cards\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTimeLine\n                            \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/feed.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTimeLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport {catchError} from \"rxjs/operators\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\n\n@Component({\n    selector: 'of-cards',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, AfterViewInit {\n\n    lightCards$: Observable;\n    selection$: Observable;\n    hideTimeLine: boolean;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFilteredFeed),\n            catchError(err => of([]))\n        );\n        this.selection$ = this.store.select(feedSelectors.selectLightCardSelection);\n        this.store.select(buildConfigSelector('feed.timeline.hide'))\n            .subscribe(v=>this.hideTimeLine = v);\n    }\n\n\n    ngAfterViewInit() {\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedFiltersEffects.html":{"url":"injectables/FeedFiltersEffects.html","title":"injectable - FeedFiltersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedFiltersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/feed-filters.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initTagFilterOnLoadedSettings\n                            \n                            \n                                loadFeedFilterOnAuthenticationSuccess\n                            \n                            \n                                updateFilterOnClockTick\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/feed-filters.effects.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTagFilterOnLoadedSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateFilterOnClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.select(buildConfigSelector('feed.timeFilter.followClockTick'))\n        .pipe(\n            distinctUntilChanged(),\n            switchMap(followClockTick => {\n                if(followClockTick) {\n                    return this.actions$\n                        .pipe(\n                            ofType(TimeActionTypes.Tick),\n                            windowTime(20000),  // add up the elapsed time from each Tick action in local buffer, waiting for next emission\n                            concatMap(tickWindow => tickWindow.pipe(\n                                map(tick => tick.payload.elapsedSinceLast),\n                                reduce((acc, elapsedSinceLast) => acc + elapsedSinceLast))),\n                            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n                            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n                            map(([elapsedSinceLast, currentTimeFilter]) => {\n                                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                                return new ApplyFilter({\n                                    name: FilterType.TIME_FILTER,\n                                    active: true,\n                                    status: {\n                                        start: start,\n                                        end: end,\n                                    }\n                                })\n                            }))\n                }\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:75\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable} from 'rxjs';\nimport {\n    concatMap,\n    distinctUntilChanged,\n    filter,\n    map,\n    reduce,\n    switchMap,\n    tap,\n    windowTime,\n    withLatestFrom\n} from 'rxjs/operators';\nimport {AuthenticationActionTypes} from '@ofActions/authentication.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FilterService, FilterType} from \"@ofServices/filter.service\";\nimport {ApplyFilter, InitFilters} from \"@ofActions/feed.actions\";\nimport {LoadSettingsSuccess, SettingsActionTypes} from \"@ofActions/settings.actions\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Tick, TimeActionTypes} from \"@ofActions/time.actions\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\n\n@Injectable()\nexport class FeedFiltersEffects {\n\n    //private elapsedTimeBuffer: number;\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: FilterService) {\n    }\n\n    @Effect()\n    loadFeedFilterOnAuthenticationSuccess: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }));\n\n    @Effect()\n    initTagFilterOnLoadedSettings: Observable = this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        );\n\n    @Effect()\n    updateFilterOnClockTick: Observable = this.store.select(buildConfigSelector('feed.timeFilter.followClockTick'))\n        .pipe(\n            distinctUntilChanged(),\n            switchMap(followClockTick => {\n                if(followClockTick) {\n                    return this.actions$\n                        .pipe(\n                            ofType(TimeActionTypes.Tick),\n                            windowTime(20000),  // add up the elapsed time from each Tick action in local buffer, waiting for next emission\n                            concatMap(tickWindow => tickWindow.pipe(\n                                map(tick => tick.payload.elapsedSinceLast),\n                                reduce((acc, elapsedSinceLast) => acc + elapsedSinceLast))),\n                            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n                            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n                            map(([elapsedSinceLast, currentTimeFilter]) => {\n                                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                                return new ApplyFilter({\n                                    name: FilterType.TIME_FILTER,\n                                    active: true,\n                                    status: {\n                                        start: start,\n                                        end: end,\n                                    }\n                                })\n                            }))\n                }\n            })\n        )\n    //DONE Add and manage elapsed time since last heart beat info\n    //DONE Fix existing tests\n    //DONE Get previous filter status to update\n    //DONE Debounce events with a certain delay\n    //TODO Make delay a configurable property\n    //TODO Make sure we're not one elapsedTime short\n    //DONE Only do it if followClockTick property is set to true\n    //TODO Manual tests, including time reference / speed update\n    //TODO Add tests\n    //TODO Update doc & define properties\n    //DONE Test with and without timeline, with and without follow clock tick\n    //TODO Add default value somewhere (config file) if needed (see what happens if no value)\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\n\nCardListComponent\n\nCardListComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardListComponent\n                        \n                        \n                            CustomTimelineChartComponent\n                        \n                        \n                            DraggableDirective\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InitChartComponent\n                        \n                        \n                            MouseWheelDirective\n                        \n                        \n                            NoSelectionComponent\n                        \n                        \n                            TagsFilterComponent\n                        \n                        \n                            TimeFilterComponent\n                        \n                        \n                            TimeLineComponent\n                        \n                        \n                            TypeFilterComponent\n                        \n                        \n                            XAxisTickFormatPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            FeedRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardListComponent} from './components/card-list/card-list.component';\nimport {FeedComponent} from './feed.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FeedRoutingModule} from \"./feed-routing.module\";\nimport {NoSelectionComponent} from './components/no-selection/no-selection.component';\nimport {TimeLineComponent} from './components/time-line/time-line.component';\nimport {CardsModule} from \"../cards/cards.module\";\nimport {FiltersComponent} from './components/card-list/filters/filters.component';\nimport {TypeFilterComponent} from './components/card-list/filters/type-filter/type-filter.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TimeFilterComponent} from './components/card-list/filters/time-filter/time-filter.component';\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons\";\nimport {ChartCommonModule, NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CustomTimelineChartComponent} from \"./components/custom-timeline-chart/custom-timeline-chart.component\";\nimport {XAxisTickFormatPipe} from \"./components/time-line/x-axis-tick-format.pipe\";\nimport {MouseWheelDirective} from \"./components/time-line/mouse-wheel.directive\";\nimport {DraggableDirective} from \"./components/time-line/app-draggable\";\nimport {InitChartComponent} from \"./components/init-chart/init-chart.component\";\nimport {TagsFilterComponent } from './components/card-list/filters/tags-filter/tags-filter.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\nimport {TimeService} from \"@ofServices/time.service\";\n\nlibrary.add(faClock);\n\n@NgModule({\n    imports: [\n        TypeaheadModule,\n        CommonModule,\n        FormsModule,\n        NgxChartsModule,\n        ChartCommonModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgbModule.forRoot(),\n        CardsModule,\n        FeedRoutingModule,\n        FontAwesomeModule,\n    ],\n    declarations: [CardListComponent, FeedComponent, NoSelectionComponent, TimeLineComponent, FiltersComponent, TypeFilterComponent, TimeFilterComponent,\n        InitChartComponent,\n        CustomTimelineChartComponent,\n        DraggableDirective,\n        MouseWheelDirective,\n        XAxisTickFormatPipe,\n        TagsFilterComponent],\n    exports: [FeedComponent],\n    providers: [ {provide: TimeService, useClass: TimeService}]\n})\nexport class FeedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {FeedComponent} from \"./feed.component\";\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedComponent,\n        // canActivate: [AuthenticationGuard],\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n            ]\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/feed-filter.model.ts\n        \n\n            \n                Description\n            \n            \n                A Filter gather both the feed filtering behaviour and the filter status for\nfiltering parametrization and component state\nThe function property funktion takes two arguments :\n  * card: the card for which to evaluate filter\n  * status: the status of the current filter\nBeware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\nin Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\nfunktion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                chainFilter\n                            \n                            \n                                    Static\n                                chainFilter\n                            \n                            \n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(funktion: (undefined,undefined) => void, active: boolean, status: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/feed-filter.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        funktion\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:43\n                \n            \n\n\n            \n                \n                    apply the filter to the card, returns true if the card passes the filter, false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \nchainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:56\n                \n            \n\n\n            \n                \n                    Apply this filter to a card, then a chain of filter recursively.\nThe recursion stops when the card is filtered out\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:67\n                \n            \n\n\n            \n                \n                    Sequentially applies a chain of filters to a card\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Filter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\n/**\n * A Filter gather both the feed filtering behaviour and the filter status for\n * filtering parametrization and component state\n *\n * The function property funktion takes two arguments :\n *  * card: the card for which to evaluate filter\n *  * status: the status of the current filter\n *\n * Beware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\n * in Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\n * funktion\n */\nexport class Filter {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly funktion: (LightCard,any) => boolean,\n        public active:boolean,\n        public status: any\n    ) {\n    }\n\n    clone():Filter {\n        return new Filter(\n            this.funktion,\n            this.active,\n            this.status);\n    }\n\n    /**\n     * apply the filter to the card, returns true if the card passes the filter, false otherwise\n     * @param card\n     */\n    applyFilter(card: LightCard):boolean{\n        if(this.active){\n            return this.funktion(card,this.status);\n        }\n        return true;\n    }\n\n    /**\n     * Apply this filter to a card, then a chain of filter recursively.\n     * The recursion stops when the card is filtered out\n     * @param card\n     * @param next\n     */\n    chainFilter(card: LightCard, next: Filter[]){\n        if(this.applyFilter(card))\n            return !next || next.length == 0 || next[0].chainFilter(card,next.slice(1));\n        return false\n    }\n\n    /**\n     * Sequentially applies a chain of filters to a card\n     * @param card\n     * @param next\n     */\n    static chainFilter(card: LightCard, next: Filter[]){\n        return !next||next.length == 0 || next[0].chainFilter(card,next.slice(1));\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _defaultFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultFilters\n                            \n                            \n                                    Private\n                                initFilters\n                            \n                            \n                                    Private\n                                initRecipientFilter\n                            \n                            \n                                    Private\n                                initTagFilter\n                            \n                            \n                                    Private\n                                initTimeFilter\n                            \n                            \n                                    Private\n                                initTypeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initRecipientFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initRecipientFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTagFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTagFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTimeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTimeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTypeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTypeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {LightCard, Severity} from \"@ofModel/light-card.model\";\nimport * as _ from \"lodash\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterService {\n\n    private _defaultFilters = new Map();\n\n    constructor() {\n        this._defaultFilters = this.initFilters();\n    }\n\n    public defaultFilters(): Map {\n        return this._defaultFilters;\n    }\n\n\n    private initTypeFilter() {\n        const alarm = Severity.ALARM;\n        const action = Severity.ACTION;\n        const question = Severity.QUESTION;\n        const notification = Severity.NOTIFICATION;\n        return new Filter(\n            (card, status) => {\n                const result =\n                    status.alarm && card.severity == alarm ||\n                    status.action && card.severity == action ||\n                    status.question && card.severity == question ||\n                    status.notification && card.severity == notification;\n                return result;\n            },\n            true,\n            {\n                alarm: true,\n                action: true,\n                question: true,\n                notification: false\n            }\n        );\n    }\n\n    private initTagFilter() {\n        return new Filter(\n            (card, status) => _.intersection(card.tags,status.tags).length > 0,\n            false,\n            {tags:[]}\n        );\n    }\n\n    private initRecipientFilter() {\n        return new Filter(\n            (card, status) => false,\n            false,\n            {}\n        );\n    }\n\n    private initTimeFilter() {\n        return new Filter(\n            (card:LightCard, status) => {\n                if (!!status.start && !!status.end) {\n                    if (!card.endDate)\n                        return card.startDate  {\n        const filters = new Map();\n        filters.set(FilterType.TYPE_FILTER, this.initTypeFilter());\n        // filters.set(FilterType.RECIPIENT_FILTER, this.initRecipientFilter());\n        filters.set(FilterType.TIME_FILTER, this.initTimeFilter());\n        filters.set(FilterType.TAG_FILTER, this.initTagFilter());\n        return filters;\n    }\n}\n\nexport enum FilterType {\n    TYPE_FILTER,\n    RECIPIENT_FILTER,\n    TAG_FILTER,\n    TIME_FILTER,\n    TEST_FILTER\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidService.html":{"url":"classes/GuidService.html","title":"class - GuidService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guid.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                guid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentGuid\n                            \n                            \n                                getCurrentGuidString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            guid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Guid\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuidString\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuidString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject} from \"@angular/core\";\nimport {Guid} from \"guid-typescript\";\n\n@Inject({\n    providedIn: 'root'\n})\nexport class GuidService {\n\n    private readonly guid: Guid;\n\n    constructor() {\n        this.guid = Guid.create();\n    }\n\n    getCurrentGuid(): Guid {\n        return this.guid;\n    }\n\n    getCurrentGuidString():string{\n        return this.getCurrentGuid().toString();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError.html":{"url":"classes/HandleUnexpectedError.html","title":"class - HandleUnexpectedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-1.html":{"url":"classes/HandleUnexpectedError-1.html","title":"class - HandleUnexpectedError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-2.html":{"url":"classes/HandleUnexpectedError-2.html","title":"class - HandleUnexpectedError-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-3.html":{"url":"classes/HandleUnexpectedError-3.html","title":"class - HandleUnexpectedError-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-4.html":{"url":"classes/HandleUnexpectedError-4.html","title":"class - HandleUnexpectedError-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarsService.html":{"url":"injectables/HandlebarsService.html","title":"injectable - HandlebarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/cards/services/handlebars.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                templateCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                executeTemplate\n                            \n                            \n                                    Private\n                                queryTemplate\n                            \n                            \n                                    Private\n                                registerArrayAtIndex\n                            \n                            \n                                    Private\n                                registerArrayAtIndexLength\n                            \n                            \n                                    Private\n                                registerBool\n                            \n                            \n                                    Private\n                                registerCardAction\n                            \n                            \n                                    Private\n                                registerDateFormat\n                            \n                            \n                                    Private\n                                registerI18n\n                            \n                            \n                                    Private\n                                registerMath\n                            \n                            \n                                    Private\n                                registerNow\n                            \n                            \n                                    Private\n                                registerNumberFormat\n                            \n                            \n                                    Private\n                                registerPreserveSpace\n                            \n                            \n                                    Private\n                                registerSlice\n                            \n                            \n                                    Private\n                                registerSort\n                            \n                            \n                                    Private\n                                registerSplit\n                            \n                            \n                                    Private\n                                registerSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: TimeService, translate: TranslateService, thirds: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/services/handlebars.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            executeTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeTemplate(templateName: string, card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            queryTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    queryTemplate(publisher: string, version: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndexLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndexLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerBool\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerBool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerCardAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCardAction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerDateFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerDateFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerI18n()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerMath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerMath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNumberFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNumberFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerPreserveSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerPreserveSpace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSlice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSlice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSplit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSplit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSvg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSvg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Card} from \"@ofModel/card.model\";\nimport * as Handlebars from \"handlebars/dist/handlebars.js\"\nimport {TimeService} from \"@ofServices/time.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport * as moment from 'moment';\nimport {Map} from \"@ofModel/map\";\nimport {Observable, of} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport {ThirdsService} from \"../../../services/thirds.service\";\nimport {Guid} from \"guid-typescript\";\n\n@Injectable()\nexport class HandlebarsService {\n\n    private templateCache:Map = new Map();\n\n    constructor(private time:TimeService,\n                private translate: TranslateService,\n                private thirds: ThirdsService){\n        this.registerPreserveSpace();\n        this.registerNumberFormat();\n        this.registerDateFormat();\n        this.registerCardAction();\n        this.registerSvg();\n        this.registerI18n();\n        this.registerSort();\n        this.registerSlice();\n        this.registerArrayAtIndex();\n        this.registerMath();\n        this.registerSplit();\n        this.registerArrayAtIndexLength();\n        this.registerBool();\n        this.registerNow();\n    }\n\n    public executeTemplate(templateName: string, card: Card):Observable {\n        return this.queryTemplate(card.publisher,card.publisherVersion,templateName).pipe(\n            map(t=>t(card)));\n    }\n\n    private queryTemplate(publisher:string, version:string, name: string):Observable {\n        const locale = this.translate.getBrowserLang();\n        const key = `${publisher}.${version}.${name}.${locale}`;\n        let template = this.templateCache[key];\n        if(template){\n           return of(template);\n        }\n        return this.thirds.fetchHbsTemplate(publisher,version,name,locale).pipe(\n            map(s=>Handlebars.compile(s)),\n            tap(t=>this.templateCache[key]=t)\n        );\n    }\n\n    private registerBool() {\n        Handlebars.registerHelper('bool', function (v1, operator, v2, options) {\n            switch (operator) {\n                case '==':\n                    return (v1 == v2);\n                case '===':\n                    return (v1 === v2);\n                case '!=':\n                    return (v1 != v2);\n                case '!==':\n                    return (v1 !== v2);\n                case '':\n                    return (v1 > v2);\n                case '>=':\n                    return (v1 >= v2);\n                case '&&':\n                    return (v1 && v2);\n                case '||':\n                    return (v1 || v2);\n                default:\n                    return true;\n            }\n        });\n    }\n\n    private registerArrayAtIndexLength() {\n        Handlebars.registerHelper('arrayAtIndexLength', function (value, index, options) {\n            return value[index].length;\n        });\n    }\n\n    private registerSplit() {\n        Handlebars.registerHelper('split', function (value, splitValue, index, options) {\n            return value.split(splitValue)[index];\n        });\n    }\n\n    private registerMath(){\n        Handlebars.registerHelper(\"math\", function(lvalue, operator, rvalue, options) {\n            let result;\n            switch(operator) {\n                case \"+\": result = lvalue + rvalue; break;\n                case \"-\": result = lvalue - rvalue; break;\n                case \"*\": result = lvalue * rvalue; break;\n                case \"/\": result = lvalue / rvalue; break;\n                case \"%\": result = lvalue % rvalue; break;\n            }\n            return result;\n        });\n    }\n\n    private registerArrayAtIndex() {\n        Handlebars.registerHelper('arrayAtIndex', function (value, index, options) {\n            return value[index];\n        });\n    }\n\n    private registerSlice() {\n        Handlebars.registerHelper('slice', function () {\n            let args = [];\n            for (let index = 0; index =3) {\n                to = args[2];\n                return value.slice(from, to);\n            }\n            return value.slice(from);\n        });\n    }\n\n    private registerSort() {\n        Handlebars.registerHelper('sort', function () {\n            let args = [];\n            for (let index = 0; index  {\n            let args = [],\n                options = fctArgs[fctArgs.length - 1];\n            for (let i = 0; i \n                    document.getElementById('${svgUid}').addEventListener('load', function(){\n                            svgPanZoom(document.getElementById('${svgUid}'));});\n                    `\n        });\n    }\n\n    private registerCardAction() {\n        Handlebars.registerHelper('action', function () {\n            let args = [];\n            for (let i = 0; i `\n        });\n    }\n\n    private registerDateFormat() {\n        Handlebars.registerHelper('dateFormat', (value, options) => {\n            const m = moment(new Date(value));\n            m.locale(this.translate.getBrowserLang());\n            return m.format(options.hash.format);\n        });\n    }\n\n    private registerNumberFormat() {\n        Handlebars.registerHelper('numberFormat', (value, options) => {\n            const formatter = new Intl.NumberFormat(this.translate.getBrowserLang(), options.hash);\n            return formatter.format(value);\n        });\n    }\n\n    private registerNow() {\n        const that = this;\n        Handlebars.registerHelper('now', function (options) {\n            return that.time.currentTime().valueOf();\n        })\n    }\n\n    private registerPreserveSpace() {\n        Handlebars.registerHelper(\"preserveSpace\", function (value, options) {\n            return value.replace(/ /g, '\\u00A0')\n        });\n    }\n}\n\nfunction sortOnKey(key){\n    return function(a,b){\n        if(typeof  a[key] == 'string' && typeof b[key] == 'string'){\n            if(a[key]b[key])\n                return 1\n            return 0;\n        }else if(typeof  a[key] == 'number' && typeof b[key] == 'number'){\n            return a[key]-b[key];\n        }\n        return 0;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/I18n.html":{"url":"classes/I18n.html","title":"class - I18n","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/i18n.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, parameters?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/i18n.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport class I18n {\n    /* istanbul ignore next */\n    constructor(\n        readonly key: string,\n        readonly parameters?: Map) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18nService.html":{"url":"injectables/I18nService.html","title":"injectable - I18nService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18nService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                _timeZone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    locale\n                                \n                                \n                                    timeZone\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string, timeZone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18n.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeZone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timeZone\n                    \n                \n\n                \n                    \n                        gettimeZone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as moment from 'moment-timezone';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {withLatestFrom} from \"rxjs/operators\";\nimport {combineLatest, zip} from \"rxjs\";\n\n@Injectable()\nexport class I18nService {\n\n    private _locale:string;\n    private _timeZone:string;\n\n    constructor(private translate: TranslateService,private store: Store) {\n        combineLatest(\n        this.store.select(buildSettingsOrConfigSelector('locale')),\n        this.store.select(buildSettingsOrConfigSelector('timeZone' )))\n\n            .subscribe(([locale,timeZone]) =>this.changeLocale(locale, timeZone));\n    }\n\n    public changeLocale(locale:string, timeZone: string){\n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = this.translate.getBrowserLang();\n        }\n        moment.locale(this._locale);\n        this.translate.use(this._locale);\n        if(timeZone) {\n            this._timeZone = timeZone;\n        }else{\n            timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        moment.tz.setDefault(timeZone);\n    }\n\n    public get locale(){\n        return this._locale;\n    }\n\n    public get timeZone(){\n        return this._timeZone;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/icon/icon.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconPath\n                            \n                            \n                                size\n                            \n                            \n                                sprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                big\n                            \n                            \n                                dark\n                            \n                            \n                                icon\n                            \n                            \n                                light\n                            \n                            \n                                medium\n                            \n                            \n                                small\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        big\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dark\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        light\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        medium\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        small\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/icon/icon.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sprites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {PlatformLocation} from \"@angular/common\";\n\n@Component({\n  selector: 'of-icon',\n  templateUrl:'icon.component.html',\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon:string;\n  @Input() small:boolean;\n  @Input() medium:boolean;\n  @Input() big:boolean;\n  @Input() dark:boolean;\n  @Input() light:boolean;\n  size:string;\n  sprites:string;\n  iconPath:string;\n  constructor(platformLocation:PlatformLocation) {\n      let baseHref = platformLocation.getBaseHrefFromDOM();\n      this.iconPath = (baseHref?baseHref:'/')+'assets/images/icons/'\n  }\n\n  ngOnInit() {\n    this.big = this.big != undefined;\n    this.medium = this.medium != undefined && !this.big;\n    this.small = this.small != undefined && !this.medium;\n    this.dark = this.dark != undefined;\n    this.light = this.light != undefined && ! this.dark;\n    let size = this.big?'big':this.medium?'medium':'small'\n    switch (size) {\n        case 'big':\n          this.size = '64px';\n          break;\n        case 'medium':\n          this.size = '32px';\n          break;\n         default:\n          this.size = '16px';\n    }\n    if(this.dark||this.light){\n      this.sprites='sprites-mono.svg'\n    }else{\n      this.sprites='sprites.svg'\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n    \n                \n                    icon.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n.dark{\n  fill: $dark;\n}\n.light{\n  fill: $light;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IframeDisplayComponent.html":{"url":"components/IframeDisplayComponent.html","title":"component - IframeDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IframeDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/thirdparty/iframedisplay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-iframedisplay\n            \n\n            \n                styleUrls\n                ./iframedisplay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./iframedisplay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _selectedIframeURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedIframeURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframedisplay.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedIframeURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeUrl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIframeURL\n                    \n                \n\n                \n                    \n                        getselectedIframeURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  selectMenuStateSelectedIframeURL,\n} from \"@ofSelectors/menu.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'of-iframedisplay',\n  templateUrl: './iframedisplay.component.html',\n  styleUrls: ['./iframedisplay.component.scss']\n})\nexport class IframeDisplayComponent implements OnInit {\n\n  private _selectedIframeURL: SafeUrl;\n\n  constructor(private store: Store,\n              private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n\n    this.store.select(selectMenuStateSelectedIframeURL).subscribe( iframeURL => {\n      this._selectedIframeURL = this.sanitizer.bypassSecurityTrustResourceUrl(iframeURL);\n    })\n\n  }\n\n  get selectedIframeURL(): SafeUrl {\n    return this._selectedIframeURL;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n    \n\n\n    \n\n    \n                \n                    ./iframedisplay.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IframeDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/info/info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-info\n            \n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _description$\n                            \n                            \n                                    Private\n                                _time$\n                            \n                            \n                                    Private\n                                _userName$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName$\n                                \n                                \n                                    description$\n                                \n                                \n                                    time$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/info/info.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _time$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _userName$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName$\n                    \n                \n\n                \n                    \n                        getuserName$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description$\n                    \n                \n\n                \n                    \n                        getdescription$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        time$\n                    \n                \n\n                \n                    \n                        gettime$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {selectUserNameOrIdentifier} from \"@ofSelectors/authentication.selectors\";\nimport {combineLatest, Observable, of} from \"rxjs\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {map} from \"rxjs/operators\";\nimport * as moment from \"moment\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {selectCurrentDate} from \"@ofSelectors/time.selectors\";\n\n@Component({\n    selector: 'of-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n    private _userName$: Observable;\n    private _description$: Observable;\n    private _time$: Observable\n\n    constructor(private store: Store, private timeService: TimeService) {\n    }\n\n    ngOnInit() {\n        this._userName$ = this.store.select(selectUserNameOrIdentifier);\n        this._description$ = this.store.select(buildSettingsSelector('description'));\n        this._time$ = combineLatest(\n        this.store.select(selectCurrentDate),\n            this.store.select(buildSettingsOrConfigSelector('locale')),\n            this.store.select(buildSettingsOrConfigSelector('timeZone'))\n        ).pipe(\n            map(values => this.timeService.formatTime(moment(values[0])))\n        );\n    }\n    get userName$() {\n        return this._userName$;\n    }\n\n    get description$() {\n        return this._description$;\n    }\n\n    get time$() {\n        return this._time$;\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    {{userName$|async}}{{time$|async}}\n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                .navbar-info-block {\n  display: inline-block;\n  > .user-name {\n\n  }\n\n  > .time {\nfont-size: small;\n  }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName$|async}}{{time$|async}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAuthStatus.html":{"url":"classes/InitAuthStatus.html","title":"class - InitAuthStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAuthStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.InitAuthStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitFilters.html":{"url":"classes/InitFilters.html","title":"class - InitFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.InitFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitTimeline.html":{"url":"classes/InitTimeline.html","title":"class - InitTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.InitTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Input.html":{"url":"classes/Input.html","title":"class - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: InputType, name: string, label: I18n, value: string, mandatory: boolean, maxLength: number, rows: number, values: ParameterListItem[], selectedValues: string[], unSelectedValues: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        InputType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mandatory\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                        ParameterListItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unSelectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightCardEffects.html":{"url":"injectables/LightCardEffects.html","title":"injectable - LightCardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightCardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/light-card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/light-card.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            switchMap((action:LoadLightCardsSuccess)=>\n                    this.thirdService.loadI18nForLightCards(action.payload.lightCards)\n                        .pipe(\n                            tap(test=>console.log(`loaded lightCards:${test}`)),\n                            catchError((err,caught)=>{\n                                console.error(`i18 loading failed for card publishers`);\n                                console.error(err);\n                                return of(false);\n                            })\n                        )),\n            map(\n                ()=>{\n                    return new LoadLightCardsExtendedData();\n                }\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {LightCardActionTypes, LoadLightCardsExtendedData, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {tap} from \"rxjs/internal/operators/tap\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class LightCardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            switchMap((action:LoadLightCardsSuccess)=>\n                    this.thirdService.loadI18nForLightCards(action.payload.lightCards)\n                        .pipe(\n                            tap(test=>console.log(`loaded lightCards:${test}`)),\n                            catchError((err,caught)=>{\n                                console.error(`i18 loading failed for card publishers`);\n                                console.error(err);\n                                return of(false);\n                            })\n                        )),\n            map(\n                ()=>{\n                    return new LoadLightCardsExtendedData();\n                }\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSettingComponent.html":{"url":"components/ListSettingComponent.html","title":"component - ListSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/list-setting/list-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-list-setting\n            \n\n            \n                styleUrls\n                ./list-setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeListValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Private\n                                valueInListValidator\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                values\n                            \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeListValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeListValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            valueInListValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueInListValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (control: any) => { valueInList: { valid: boolean; }; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Observable, of} from \"rxjs\";\n\n@Component({\n    selector: 'of-list-setting',\n    templateUrl: './list-setting.component.html',\n    styleUrls: ['./list-setting.component.css']\n})\nexport class ListSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n    preparedList: { value: string, label: Observable }[];\n\n    constructor(protected store: Store, private translateService: TranslateService) {\n        super(store);\n    }\n\n    ngOnInit() {\n        this.preparedList = [];\n        if (this.values) {\n            for (let v of this.values) {\n                if (typeof v == 'string') {\n                    this.preparedList.push({value: v, label: of(v)});\n                } else if (typeof v.label == 'string') {\n                    this.preparedList.push({value: v.value, label: of(v.label)});\n                } else {\n                    this.preparedList.push({\n                        value: v.value,\n                        label: this.translateService.get(v.label.key, v.label.parameters)\n                    });\n                }\n            }\n        }\n        super.ngOnInit();\n    }\n\n    initFormGroup() {\n        let validators = this.computeListValidators();\n        validators.push(this.valueInListValidator());\n        return new FormGroup({\n            setting: new FormControl('', validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeListValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n// ngOnInit() {\n    // }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value?value:'', {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('TextSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n    private valueInListValidator(){\n        return (control: AbstractControl)=>{\n            if(!!control.value && this.preparedList.map(e=>e.value).indexOf(control.value)\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n      \n      {{v.label|async}}\n    \n    Incorrect submission\n  \n\n\n    \n\n    \n                \n                    ./list-setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}                {{v.label|async}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCard.html":{"url":"classes/LoadCard.html","title":"class - LoadCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardFailure.html":{"url":"classes/LoadCardFailure.html","title":"class - LoadCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardSuccess.html":{"url":"classes/LoadCardSuccess.html","title":"class - LoadCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfig.html":{"url":"classes/LoadConfig.html","title":"class - LoadConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfig\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigFailure.html":{"url":"classes/LoadConfigFailure.html","title":"class - LoadConfigFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigSuccess.html":{"url":"classes/LoadConfigSuccess.html","title":"class - LoadConfigSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCards.html":{"url":"classes/LoadLightCards.html","title":"class - LoadLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsExtendedData.html":{"url":"classes/LoadLightCardsExtendedData.html","title":"class - LoadLightCardsExtendedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsExtendedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsExtendedData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsFailure.html":{"url":"classes/LoadLightCardsFailure.html","title":"class - LoadLightCardsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsSuccess.html":{"url":"classes/LoadLightCardsSuccess.html","title":"class - LoadLightCardsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenu.html":{"url":"classes/LoadMenu.html","title":"class - LoadMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuFailure.html":{"url":"classes/LoadMenuFailure.html","title":"class - LoadMenuFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuSuccess.html":{"url":"classes/LoadMenuSuccess.html","title":"class - LoadMenuSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettings.html":{"url":"classes/LoadSettings.html","title":"class - LoadSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsFailure.html":{"url":"classes/LoadSettingsFailure.html","title":"class - LoadSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsSuccess.html":{"url":"classes/LoadSettingsSuccess.html","title":"class - LoadSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-login\n            \n\n\n            \n                styles\n                .btn-primary {margin-right: 8px;}\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeProvider\n                            \n                            \n                                hide\n                            \n                            \n                                loginMessage\n                            \n                            \n                                useCodeFlow$\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeFlow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, service: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            codeFlow\n                        \n                        \n                    \n                \n            \n            \n                \ncodeFlow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useCodeFlow$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {TryToLogIn} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {filter, map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {selectMessage} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\n\n@Component({\n    selector: 'of-login',\n    templateUrl: './login.component.html',\n    styles: ['.btn-primary {margin-right: 8px;}']\n})\nexport class LoginComponent implements OnInit {\n\n    hide: boolean;\n    userForm: FormGroup;\n    useCodeFlow$: Observable;\n    loginMessage: Message;\n    // codeProvider$: Observable;\n    codeProvider: any;\n    /* istanbul ignore next */\n    constructor( private store: Store, private service: AuthenticationService) {}\n\n    ngOnInit() {\n        this.useCodeFlow$ = this.store.select(buildConfigSelector('security.oauth2.flow.mode'))\n            .pipe(map(flowMode=>flowMode === 'CODE'));\n        this.store.select(selectMessage).pipe(filter(m=>m!=null && m.level==MessageLevel.ERROR))\n            .subscribe(m=>this.loginMessage=m);\n        this.store.select(buildConfigSelector('security.oauth2.flow.provider'))\n            .subscribe(provider=>this.codeProvider={name:provider});\n        this.hide = true;\n        this.userForm = new FormGroup({\n                identifier: new FormControl(''),\n                password: new FormControl('')\n            }\n        );\n    }\n\n    onSubmit(): void {\n        if (this.userForm.valid) {\n            const username = this.userForm.get('identifier').value;\n            const password = this.userForm.get('password').value;\n            this.store.dispatch(new TryToLogIn({username: username, password: password}));\n        }\n    }\n\n    resetForm(): void {\n        this.userForm.reset();\n    }\n\n    codeFlow(): void{\n        this.service.moveToCodeFlowLoginPage();\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n                    login.login\n                    \n                    \n                        login.password\n                        \n                    \n                    \n                        login.submit.password\n                        login.reset\n                    \n                \n                \n                    \n                    login.submit.code\n                    \n                \n            \n            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}\n        \n    \n\n\n    \n\n    \n            .btn-primary {margin-right: 8px;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            login.login                                                                login.password                                                                                        login.submit.password                        login.reset                                                                                            login.submit.code                                                            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/map.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/model/map.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class Map {\n    [key: string]: T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuEffects.html":{"url":"injectables/MenuEffects.html","title":"injectable - MenuEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/menu.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                resolveThirdPartyLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/menu.effects.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            switchMap(menu=>zip(of(menu),this.service.loadI18nForMenuEntries(menu)\n                .pipe(\n                    catchError((err,caught)=>{\n                        console.error(err);\n                        return of(false);\n                    })\n                ))),\n            map(array =>\n                new LoadMenuSuccess({menu: array[0]})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveThirdPartyLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:67\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\nIt then tries to get the corresponding menu link from the {ThirdsService}.\nIf successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\nIf not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of, zip} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {\n    LoadMenu,\n    LoadMenuFailure,\n    LoadMenuSuccess,\n    MenuActionTypes,\n    SelectMenuLink, SelectMenuLinkFailure,\n    SelectMenuLinkSuccess\n} from \"@ofActions/menu.actions\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class MenuEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ThirdsService,\n                private router: Router\n    ) {\n    }\n\n    @Effect()\n    load: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            switchMap(menu=>zip(of(menu),this.service.loadI18nForMenuEntries(menu)\n                .pipe(\n                    catchError((err,caught)=>{\n                        console.error(err);\n                        return of(false);\n                    })\n                ))),\n            map(array =>\n                new LoadMenuSuccess({menu: array[0]})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\n     * It then tries to get the corresponding menu link from the {ThirdsService}.\n     * If successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\n     * If not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n     *\n     * @name resolveThirdPartyLink\n     */\n    @Effect()\n    resolveThirdPartyLink: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuState.html":{"url":"interfaces/MenuState.html","title":"interface - MenuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        menu\n                                \n                                \n                                        selected_iframe_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     ThirdMenu[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThirdMenu[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_iframe_url\n                                    \n                                \n                                \n                                    \n                                        selected_iframe_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport interface MenuState{\n    menu: ThirdMenu[],\n    loading: boolean,\n    error:string,\n    selected_iframe_url: string\n}\n\nexport const menuInitialState: MenuState = {\n    menu:[],\n    loading: false,\n    error:null,\n    selected_iframe_url: null\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/message.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level, i18n?: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/message.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport class Message {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly message: string,\n        readonly level = MessageLevel.DEBUG,\n        readonly i18n?: I18n,\n    ){}\n}\n\nexport enum MessageLevel {\n    ERROR, INFO, DEBUG\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MouseWheelDirective.html":{"url":"directives/MouseWheelDirective.html","title":"directive - MouseWheelDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MouseWheelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/mouse-wheel.directive.ts\n        \n\n            \n                Description\n            \n            \n                Mousewheel directive\nhttps://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMouseWheel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelFunc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelDown\n                            \n                            \n                                mouseWheelUp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                DOMMouseScroll\n                            \n                            \n                                mousewheel\n                            \n                            \n                                onmousewheel\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseWheelDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseWheelUp\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:11\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            DOMMouseScroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nDOMMouseScroll(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:21\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:16\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onmousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nonmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:26\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseWheelFunc\n                        \n                        \n                    \n                \n            \n            \n                \nmouseWheelFunc(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:34\n                \n            \n\n\n            \n                \n                    emit mouse wheel up or down event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n * @export\n */\n@Directive({ selector: '[appMouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  /**\n   * emit mouse wheel up or down event\n   * @param event\n   */\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    let delta = 0;\n    delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n    if (delta > 0) {\n      this.mouseWheelUp.emit(event);\n    } else if (delta \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiSettingsComponent.html":{"url":"components/MultiSettingsComponent.html","title":"component - MultiSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-settings\n            \n\n            \n                styleUrls\n                ./multi-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./multi-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-multi-settings',\n  templateUrl: './multi-settings.component.html',\n  styleUrls: ['./multi-settings.component.css']\n})\nexport class MultiSettingsComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n      super(store)\n    }\n\n    initFormGroup(){\n        let validators = this.computeMultiValidators();\n        return new FormGroup({\n            setting: new FormControl([],validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeMultiValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  multi-settings works!\n\n\n    \n\n    \n                \n                    ./multi-settings.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  multi-settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _thirdMenus\n                            \n                            \n                                currentPath\n                            \n                            \n                                expandedMenu\n                            \n                            \n                                expandedUserMenu\n                            \n                            \n                                navbarCollapsed\n                            \n                            \n                                navigationRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thirdMenus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleUserMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _thirdMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedUserMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : navigationRoutes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thirdMenus\n                    \n                \n\n                \n                    \n                        getthirdMenus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/navbar.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {navigationRoutes} from '../../app-routing.module';\nimport {Store} from '@ngrx/store';\nimport {TryToLogOut} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl} from '@ofSelectors/router.selectors';\nimport {LoadMenu} from \"@ofActions/menu.actions\";\nimport {selectMenuStateMenu} from \"@ofSelectors/menu.selectors\";\nimport {Observable} from \"rxjs\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'of-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n    navbarCollapsed = true;\n    navigationRoutes = navigationRoutes;\n    currentPath: string[];\n    private _thirdMenus: Observable;\n    expandedMenu:boolean[]=[];\n    expandedUserMenu=false;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/');\n        });\n        this._thirdMenus=this.store.select(selectMenuStateMenu)\n            .pipe(tap(menus=>{\n                this.expandedMenu=new Array(menus.length);\n                _.fill(this.expandedMenu,false);\n            }));\n        this.store.dispatch(new LoadMenu());\n    }\n\n\n    logOut(){\n        this.store.dispatch(new TryToLogOut());\n    }\n\n    get thirdMenus(){\n        return this._thirdMenus;\n    }\n\n    toggleMenu(index:number){\n        this.expandedMenu[index]=!this.expandedMenu[index];\n        if(this.expandedMenu[index])\n            setTimeout(()=>this.expandedMenu[index]=false,5000);\n    }\n\n    toggleUserMenu(){\n        this.expandedUserMenu=!this.expandedUserMenu;\n        if(this.expandedUserMenu)\n            setTimeout(()=>this.expandedUserMenu=false,5000);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n  \n  \n    \n  \n  \n    \n      \n      \n        {{'menu.'+link.path}}\n      \n      \n      1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">\n        \n        1\"\n                translate\n        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}\n        1\"\n             [ngbCollapse]=\"!expandedMenu[index]\">\n          \n            \n              {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}\n            \n              \n            \n          \n        \n        \n        \n          {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}\n          \n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            menu.settings\n          \n          \n            \n              \n                menu.logout&nbsp;\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.dropdown-item > .dropdown-item-external-link{\n  color:inherit;\n  padding-left: 0.5rem;\n}\n\n.single-third-menu-entry {\n\n  > .dropdown-item-internal-link{\n    color: inherit;\n    text-decoration: none;\n  }\n\n  > .dropdown-item-external-link{\n    color: inherit;\n    text-decoration: none;\n    padding-left: 0.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{\\'menu.\\'+link.path}}                  1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">                1\"                translate        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}        1\"             [ngbCollapse]=\"!expandedMenu[index]\">                                    {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}                                                                                  {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}                                                                                                  menu.settings                                                              menu.logout                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoSelectionComponent.html":{"url":"components/NoSelectionComponent.html","title":"component - NoSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/no-selection/no-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-no-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./no-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-no-selection',\n  templateUrl: './no-selection.component.html',\n})\nexport class NoSelectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  no-selection works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  no-selection works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterListItem.html":{"url":"classes/ParameterListItem.html","title":"class - ParameterListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, value: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettings.html":{"url":"classes/PatchSettings.html","title":"class - PatchSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsFailure.html":{"url":"classes/PatchSettingsFailure.html","title":"class - PatchSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsSuccess.html":{"url":"classes/PatchSettingsSuccess.html","title":"class - PatchSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadForSuccessfulAuthentication.html":{"url":"classes/PayloadForSuccessfulAuthentication.html","title":"class - PayloadForSuccessfulAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadForSuccessfulAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Authentication success payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expirationDate\n                            \n                            \n                                    Public\n                                    Optional\n                                firstName\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                    Optional\n                                lastName\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, clientId: Guid, token: string, expirationDate: Date, firstName?: string, lastName?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Process.html":{"url":"classes/Process.html","title":"class - Process","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Process\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(states?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectLogIn.html":{"url":"classes/RejectLogIn.html","title":"class - RejectLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store that the authentication is not possible.\nEmmited by {AuthenticationEffect} in the following {Observable} @members:\n  * TryToLogin;\n  *  CheckAuthentication\n  and in the handleRejectedLogin @method called by the ChecAuthentication {Observable}\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information and containing a message about login rejection\nby filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:111\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.RejectLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:111\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveLightCard.html":{"url":"classes/RemoveLightCard.html","title":"class - RemoveLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:104\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.RemoveLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:104\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouterStateUrl.html":{"url":"classes/RouterStateUrl.html","title":"class - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n            \n                Description\n            \n            \n                The RouterStateSerializer takes the current RouterStateSnapshot\nand returns any pertinent information needed. The snapshot contains\nall information about the state of the router at the given point in time.\nThe entire snapshot is complex and not always needed. In this case, you only\nneed the URL and query parameters from the snapshot in the store. Other items could be\nreturned such as route parameters and static route data.\nsource: https://github.com/briebug/ngrx-complex-forms\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, params: Params, queryParams: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/states/router.state.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectLightCard.html":{"url":"classes/SelectLightCard.html","title":"class - SelectLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.SelectLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:62\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLink.html":{"url":"classes/SelectMenuLink.html","title":"class - SelectMenuLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\nPayload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\nEmitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLink\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkFailure.html":{"url":"classes/SelectMenuLinkFailure.html","title":"class - SelectMenuLinkFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the error\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:81\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkSuccess.html":{"url":"classes/SelectMenuLinkSuccess.html","title":"class - SelectMenuLinkSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the computed url\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CardService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            FilterService\n                        \n                        \n                            I18nService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            ThirdsService\n                        \n                        \n                            TimeService\n                        \n                        \n                            TokenInjector\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/services.module.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthenticationService} from './authentication.service';\nimport {TokenInjector} from './interceptors.service';\nimport {CardService} from './card.service';\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {FilterService} from \"@ofServices/filter.service\";\nimport {ConfigService} from \"@ofServices/config.service\";\nimport {I18nService} from \"@ofServices/i18n.service\";\nimport {SettingsService} from \"@ofServices/settings.service\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ConfigService,\n        SettingsService,\n        CardService,\n        AuthenticationService,\n        TimeService,\n        ThirdsService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInjector,\n            multi: true\n        }   ,\n        GuidService,\n        FilterService,\n        I18nService\n\n    ]\n})\nexport class ServicesModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ServicesModule\n        };\n    }\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n            parentModule: ServicesModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ServicesModule is already loaded. Import it in the AppModule only'\n            );\n        }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCardDataTimeline.html":{"url":"classes/SetCardDataTimeline.html","title":"class - SetCardDataTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCardDataTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.SetCardDataTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-settings\n            \n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                locales$\n                            \n                            \n                                timeZones$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/settings.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/settings.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locales$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeZones$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  locales$:Observable;\n  timeZones$: Observable;\n\n  constructor(private store:Store) { }\n\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/settings.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadSettings\n                            \n                            \n                                loadSettingsOnLogin\n                            \n                            \n                                patchSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/settings.effects.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:39\n                            \n                        \n\n                \n                    \n                        Manages settings load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettingsOnLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n      ofType(AuthenticationActionTypes.AcceptLogIn),\n      map(a=>new LoadSettings())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patchSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:57\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    LoadSettings,\n    LoadSettingsFailure,\n    LoadSettingsSuccess, PatchSettings, PatchSettingsFailure,\n    PatchSettingsSuccess,\n    SettingsActionTypes\n} from \"@ofActions/settings.actions\";\nimport {AcceptLogIn, AuthenticationActionTypes} from \"@ofActions/authentication.actions\";\nimport {SettingsService} from \"@ofServices/settings.service\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class SettingsEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: SettingsService\n    ) {}\n\n\n    /**\n     * Manages settings load -> service request -> success/message\n     */\n    @Effect()\n    loadSettings: Observable = this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        );\n\n\n    @Effect()\n    loadSettingsOnLogin: Observable = this.actions$.pipe(\n      ofType(AuthenticationActionTypes.AcceptLogIn),\n      map(a=>new LoadSettings())\n    );\n\n    @Effect()\n    patchSettings: Observable = this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BaseSettingComponent\n                        \n                        \n                            EmailSettingComponent\n                        \n                        \n                            ListSettingComponent\n                        \n                        \n                            MultiSettingsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TextSettingComponent\n                        \n                        \n                            TypeAheadSettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsRoutingModule} from \"./settings-routing.module\";\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { BaseSettingComponent } from './components/settings/base-setting/base-setting.component';\nimport { TextSettingComponent } from './components/settings/text-setting/text-setting.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport { EmailSettingComponent } from './components/settings/email-setting/email-setting.component';\nimport {ListSettingComponent} from \"./components/settings/list-setting/list-setting.component\";\nimport { MultiSettingsComponent } from './components/settings/multi-settings/multi-settings.component';\nimport { TypeAheadSettingsComponent } from './components/settings/type-ahead-settings/type-ahead-settings.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\n\n@NgModule({\n    declarations: [SettingsComponent, BaseSettingComponent, TextSettingComponent, EmailSettingComponent, ListSettingComponent, MultiSettingsComponent, TypeAheadSettingsComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TypeaheadModule,\n        SettingsRoutingModule,\n        TranslateModule,\n    ]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./components/settings/settings.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsComponent,\n        // canActivate: [AuthenticationGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                usersUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserSettings\n                            \n                            \n                                patchUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \npatchUserSettings(settings: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Injectable()\nexport class SettingsService {\n    private usersUrl: string;\n    private userId: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.usersUrl = `${environment.urls.users}`;\n        this.store.select(selectIdentifier).subscribe(id=>this.userId=id);\n    }\n\n    fetchUserSettings(): Observable {\n        return this.httpClient.get(`${this.usersUrl}/users/${this.userId}/settings`);\n    }\n\n    patchUserSettings(settings:any): Observable {\n        return this.httpClient.patch(`${this.usersUrl}/users/${this.userId}/settings`, settings);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/settings.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState{\n    settings:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string\n}\n\nexport const settingsInitialState: SettingsState = {\n    settings:{},\n    loading: false,\n    loaded: false,\n    error: null\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(details?: Detail[], actions?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateModule.html":{"url":"modules/StateModule.html","title":"module - StateModule","body":"\n                   \n\n\n\n\n    Modules\n    StateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\n\n!environment\n\n!environment\n\n\n\nStateModule\n\nStateModule\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/store/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/state.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {appEffects, appReducer, storeConfig} from './index';\nimport {environment} from '@env/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {NavigationActionTiming, RouterStateSerializer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {CustomRouterStateSerializer} from '@ofStore/states/router.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducer, storeConfig),\n    StoreRouterConnectingModule.forRoot({\n        navigationActionTiming: NavigationActionTiming.PostActivation,\n        serializer: CustomRouterStateSerializer\n    }),\n    EffectsModule.forRoot(appEffects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  declarations: [],\n    providers:[{provide:'configRetryDelay',useValue:5000}]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule\n      ,\n      providers: [\n        /**\n         * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n         * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n         * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n         */\n        {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsFilterComponent.html":{"url":"components/TagsFilterComponent.html","title":"component - TagsFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagsFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-tags-filter\n            \n\n            \n                styleUrls\n                ./tags-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tags-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                tagFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\n\n@Component({\n    selector: 'of-tags-filter',\n    templateUrl: './tags-filter.component.html',\n    styleUrls: ['./tags-filter.component.scss']\n})\nexport class TagsFilterComponent implements OnInit, OnDestroy {\n\n    tagFilterForm: FormGroup;\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    constructor(private formBuilder: FormBuilder,private store: Store) {\n        this.tagFilterForm = this.createFormGroup()\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TAG_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.tagFilterForm.get('tags').setValue(next.active?next.status.tags:[]);\n            } else {\n                this.tagFilterForm.get('tags').setValue([]);\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.tagFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.difference(formA.tags,formB.tags).length===0 && _.difference(formB.tags,formA.tags).length===0;\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TAG_FILTER,\n                        active: form.tags.length>0,\n                        status: form\n                    }))\n                );\n        });\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    private createFormGroup() {\n        return this.formBuilder.group({\n                tags: []\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n    \n\n    \n                \n                    ./tags-filter.component.scss\n                \n                .tags-field {\n  /deep/ .dropdown-toggle {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagsFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSettingComponent.html":{"url":"components/TextSettingComponent.html","title":"component - TextSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/text-setting/text-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-text-setting\n            \n\n            \n                styleUrls\n                ./text-setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./text-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pattern\n                            \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'of-text-setting',\n    templateUrl: './text-setting.component.html',\n    styleUrls: ['./text-setting.component.css']\n})\nexport class TextSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() pattern:string;\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    initFormGroup(){\n        let validators = this.computeTextValidators();\n        return new FormGroup({\n            setting: new FormControl(null,validators)\n        }, {updateOn: 'submit'});\n    }\n\n    protected computeTextValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        if (this.pattern)\n            validators.push(Validators.pattern(this.pattern));\n        return validators;\n    }\n\n// ngOnInit() {\n    // }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n    protected isEqual(formA, formB):boolean{\n        console.log('TextSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    Incorrect submission\n  \n\n\n    \n\n    \n                \n                    ./text-setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Third.html":{"url":"classes/Third.html","title":"class - Third","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Third\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, version: string, i18nLabelKey: string, templates?: string[], csses?: string[], locales?: string[], menuEntries?: ThirdMenuEntry[], processes?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nLabelKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templates\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        csses\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        locales\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuEntries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processes\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractState(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/thirds.model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenu.html":{"url":"classes/ThirdMenu.html","title":"class - ThirdMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, version: string, label: string, entries: ThirdMenuEntry[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenuEntry.html":{"url":"classes/ThirdMenuEntry.html","title":"class - ThirdMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, label: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyModule.html":{"url":"modules/ThirdpartyModule.html","title":"module - ThirdpartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IframeDisplayComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThirdpartyRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IframeDisplayComponent } from './iframedisplay.component';\nimport {ThirdpartyRoutingModule} from \"./thirdparty-routing.module\";\n\n@NgModule({\n  declarations: [IframeDisplayComponent],\n  imports: [\n    CommonModule,\n    ThirdpartyRoutingModule\n  ]\n})\nexport class ThirdpartyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyRoutingModule.html":{"url":"modules/ThirdpartyRoutingModule.html","title":"module - ThirdpartyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {IframeDisplayComponent} from \"./iframedisplay.component\";\n\nconst routes: Routes = [\n    {\n        path: ':menu_id/:menu_version/:menu_entry_id',\n        component: IframeDisplayComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThirdpartyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsI18nLoader.html":{"url":"classes/ThirdsI18nLoader.html","title":"class - ThirdsI18nLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsI18nLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:214\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {EMPTY, from, merge, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader, TranslateService} from \"@ngx-translate/core\";\nimport {catchError, filter, map, mergeMap, reduce, switchMap, take, tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../store/index\";\nimport {LightCard} from \"../model/light-card.model\";\nimport {Third, ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private loadedI18n: string[] = [];\n    private loadingI18n: string[] = [];\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n                private authenticationService: AuthenticationService,\n                private store: Store,\n                private $injector: Injector,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThird(thirdName:string, version:string):Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if(third){\n            return of(third);\n        }\n        return this.fetchThird(thirdName,version)\n            .pipe(\n                tap(t=>Object.setPrototypeOf(t,Third.prototype)),\n                tap(t=>this.thirdCache.set(key,t))\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`,{\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId,thirdMenuVersion).pipe(\n            //filter((third :Third)=>!(!third.menuEntries)),\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if(entry.length==1){\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map( menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`,{\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string){\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version',version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    fetchI18nJson(publisher: string, version: string, locales: string[]): Observable {\n        let previous: Observable;\n        for (let locale of locales) {\n            const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n            const httpCall = this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {\n                params\n            }).pipe(\n                map(r => {\n                        const object = {};\n                        object[locale] = {};\n                        object[locale][publisher] = {};\n                        object[locale][publisher][version] = r;\n                        return object;\n                    }\n                ));\n            if (previous) {\n                previous = merge(previous, httpCall);\n            } else {\n                previous = httpCall;\n            }\n        }\n        if (previous == null) {\n            return EMPTY;\n        }\n        const result = previous.pipe(\n            reduce((acc, val) => _.merge(acc,val))\n        );\n\n        return result;\n    }\n\n    computeThirdsMenu(): Observable{\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts=>from(ts)),\n            filter((t:Third)=>!(!t.menuEntries)),\n            map(t=>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus:ThirdMenu[],menu:ThirdMenu)=>{\n                menus.push(menu);\n                return menus;\n            },[])\n        );\n    }\n\n    loadI18nForLightCards(cards:LightCard[]){\n        let observable = from(cards).pipe(\n            map(card=> card.publisher + '###' + card.publisherVersion));\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    loadI18nForMenuEntries(menus:ThirdMenu[]){\n        const observable = from(menus).pipe(\n            map(menu=> menu.id + '###' + menu.version)\n        );\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    private subscribeToLoadI18n(observable) {\n        return observable\n            .pipe(\n                reduce((ids: string[], id: string) => {\n                    ids.push(id);\n                    return ids;\n                }, []),\n                switchMap((ids:string[]) => {\n                    let work = _.uniq(ids);\n                    work = _.difference(work, this.loadingI18n)\n                    return from(_.difference(work, this.loadedI18n))\n                }),\n                mergeMap((id: string) => {\n                    this.loadingI18n.push(id);\n                    const input = id.split('###');\n\n                    let publisher = input[0];\n                    let version = input[1];\n                    return this.fetchI18nJson(publisher, version, this.translate().getLangs())\n                        .pipe(map(trans => {\n                                return {id: id, translation: trans};\n                            }),\n                            catchError(err => {\n                                _.remove(this.loadingI18n, id);\n                                return throwError(err);\n                            })\n                        );\n                }),\n                reduce((acc, val) => _.merge(acc,val)),\n                map(\n                    (result:any) => {\n                        const langs = this.translate().getLangs();\n                        const currentLang = this.translate().currentLang;\n                        for (let lang of langs) {\n                            let translationElement = result.translation[lang];\n                            if (translationElement) {\n                                this.translate().setTranslation(lang, translationElement, true);\n                                // needed otherwise only one translation apply\n                                this.translate().use(lang);\n                            }\n                        }\n                        this.translate().use(currentLang);\n                        _.remove(this.loadingI18n, result.id);\n                        this.loadedI18n.push(result.id);\n                        return true;\n                    }\n                ),\n                catchError((error,caught )=>{\n                    console.error('something went wrong during translation',error);\n                    return caught;\n                })\n            )\n    }\n\n    private translate(): TranslateService {\n        return this.$injector.get(TranslateService);\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {}\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdsService.html":{"url":"injectables/ThirdsService.html","title":"injectable - ThirdsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadedI18n\n                            \n                            \n                                    Private\n                                loadingI18n\n                            \n                            \n                                    Private\n                                thirdCache\n                            \n                            \n                                    Readonly\n                                thirdsUrl\n                            \n                            \n                                    Private\n                                urlCleaner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdCssUrl\n                            \n                            \n                                computeThirdsMenu\n                            \n                            \n                                fetchHbsTemplate\n                            \n                            \n                                fetchI18nJson\n                            \n                            \n                                    Private\n                                fetchThird\n                            \n                            \n                                loadI18nForLightCards\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                            \n                                queryMenuEntryURL\n                            \n                            \n                                queryThird\n                            \n                            \n                                    Private\n                                subscribeToLoadI18n\n                            \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authenticationService: AuthenticationService, store: Store, $injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        $injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdCssUrl\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdCssUrl(publisher: string, styleName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    styleName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchHbsTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nfetchHbsTemplate(publisher: string, version: string, name: string, locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchI18nJson\n                        \n                        \n                    \n                \n            \n            \n                \nfetchI18nJson(publisher: string, version: string, locales: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locales\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchThird\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchThird(publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForLightCards\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForLightCards(cards: LightCard[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                                LightCard[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries(menus: ThirdMenu[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                            ThirdMenu[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryMenuEntryURL\n                        \n                        \n                    \n                \n            \n            \n                \nqueryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdMenuId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuEntryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThird\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThird(thirdName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribeToLoadI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToLoadI18n(observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            translate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    translate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TranslateService\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadedI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            thirdCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thirdsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlCleaner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpUrlEncodingCodec\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {EMPTY, from, merge, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader, TranslateService} from \"@ngx-translate/core\";\nimport {catchError, filter, map, mergeMap, reduce, switchMap, take, tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../store/index\";\nimport {LightCard} from \"../model/light-card.model\";\nimport {Third, ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private loadedI18n: string[] = [];\n    private loadingI18n: string[] = [];\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n                private authenticationService: AuthenticationService,\n                private store: Store,\n                private $injector: Injector,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThird(thirdName:string, version:string):Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if(third){\n            return of(third);\n        }\n        return this.fetchThird(thirdName,version)\n            .pipe(\n                tap(t=>Object.setPrototypeOf(t,Third.prototype)),\n                tap(t=>this.thirdCache.set(key,t))\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`,{\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId,thirdMenuVersion).pipe(\n            //filter((third :Third)=>!(!third.menuEntries)),\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if(entry.length==1){\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map( menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`,{\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string){\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version',version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    fetchI18nJson(publisher: string, version: string, locales: string[]): Observable {\n        let previous: Observable;\n        for (let locale of locales) {\n            const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n            const httpCall = this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {\n                params\n            }).pipe(\n                map(r => {\n                        const object = {};\n                        object[locale] = {};\n                        object[locale][publisher] = {};\n                        object[locale][publisher][version] = r;\n                        return object;\n                    }\n                ));\n            if (previous) {\n                previous = merge(previous, httpCall);\n            } else {\n                previous = httpCall;\n            }\n        }\n        if (previous == null) {\n            return EMPTY;\n        }\n        const result = previous.pipe(\n            reduce((acc, val) => _.merge(acc,val))\n        );\n\n        return result;\n    }\n\n    computeThirdsMenu(): Observable{\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts=>from(ts)),\n            filter((t:Third)=>!(!t.menuEntries)),\n            map(t=>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus:ThirdMenu[],menu:ThirdMenu)=>{\n                menus.push(menu);\n                return menus;\n            },[])\n        );\n    }\n\n    loadI18nForLightCards(cards:LightCard[]){\n        let observable = from(cards).pipe(\n            map(card=> card.publisher + '###' + card.publisherVersion));\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    loadI18nForMenuEntries(menus:ThirdMenu[]){\n        const observable = from(menus).pipe(\n            map(menu=> menu.id + '###' + menu.version)\n        );\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    private subscribeToLoadI18n(observable) {\n        return observable\n            .pipe(\n                reduce((ids: string[], id: string) => {\n                    ids.push(id);\n                    return ids;\n                }, []),\n                switchMap((ids:string[]) => {\n                    let work = _.uniq(ids);\n                    work = _.difference(work, this.loadingI18n)\n                    return from(_.difference(work, this.loadedI18n))\n                }),\n                mergeMap((id: string) => {\n                    this.loadingI18n.push(id);\n                    const input = id.split('###');\n\n                    let publisher = input[0];\n                    let version = input[1];\n                    return this.fetchI18nJson(publisher, version, this.translate().getLangs())\n                        .pipe(map(trans => {\n                                return {id: id, translation: trans};\n                            }),\n                            catchError(err => {\n                                _.remove(this.loadingI18n, id);\n                                return throwError(err);\n                            })\n                        );\n                }),\n                reduce((acc, val) => _.merge(acc,val)),\n                map(\n                    (result:any) => {\n                        const langs = this.translate().getLangs();\n                        const currentLang = this.translate().currentLang;\n                        for (let lang of langs) {\n                            let translationElement = result.translation[lang];\n                            if (translationElement) {\n                                this.translate().setTranslation(lang, translationElement, true);\n                                // needed otherwise only one translation apply\n                                this.translate().use(lang);\n                            }\n                        }\n                        this.translate().use(currentLang);\n                        _.remove(this.loadingI18n, result.id);\n                        this.loadedI18n.push(result.id);\n                        return true;\n                    }\n                ),\n                catchError((error,caught )=>{\n                    console.error('something went wrong during translation',error);\n                    return caught;\n                })\n            )\n    }\n\n    private translate(): TranslateService {\n        return this.$injector.get(TranslateService);\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {}\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsServiceMock.html":{"url":"classes/ThirdsServiceMock.html","title":"class - ThirdsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/mocks/thirds.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdsMenu\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\nexport class ThirdsServiceMock {\n    computeThirdsMenu(): Observable{\n        return of([new ThirdMenu('t1', '1', 'tLabel1', [\n            new ThirdMenuEntry('id1', 'label1', 'link1'),\n            new ThirdMenuEntry('id2', 'label2', 'link2'),\n        ]),\n            new ThirdMenu('t2', '1', 'tLabel2', [\n                new ThirdMenuEntry('id3', 'label3', 'link3'),\n            ])])\n    }\n    loadI18nForMenuEntries(){return of(true)}\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tick.html":{"url":"classes/Tick.html","title":"class - Tick","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tick\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Heart beat of the application change current date\nContains the elapsed virtual time since the previous heart beat so any components following the clock\ncan shift their timespan accordingly\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.Tick\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:{currentTime:moment.Moment, elapsedSinceLast:number}){}\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeEffects.html":{"url":"injectables/TimeEffects.html","title":"injectable - TimeEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/time.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTimeReference\n                            \n                            \n                                heartBeat\n                            \n                            \n                                stickToVirtualTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/time.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTimeReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeReference\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartBeat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:36\n                            \n                        \n\n                \n                    \n                        This Observable send a tick corresponding to the heart beat of the application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stickToVirtualTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:50\n                            \n                        \n\n                \n                    \n                        This Observable update the way time is managed in the application.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {AppState} from \"@ofStore/index\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of, throwError} from \"rxjs\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {AuthenticationActionTypes} from \"@ofActions/authentication.actions\";\nimport {catchError, map, switchMap} from \"rxjs/operators\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {FailToUpdateTimeReference, Tick, UpdateTimeReference} from \"@ofActions/time.actions\";\nimport * as moment from 'moment-timezone';\nimport {selectTimeReference} from \"@ofSelectors/time.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\" ;\n\n@Injectable()\nexport class TimeEffects {\n\n    private currentTimeReference: TimeReference;\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: TimeService\n    ) {\n        this.store.select(selectTimeReference).subscribe(\n            timeRef => this.currentTimeReference = timeRef\n        );\n    }\n\n    /**\n     *This Observable send a tick corresponding to the heart beat of the application.\n     *\n     */\n    @Effect()\n    heartBeat: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        );\n    /**\n     *This Observable update the way time is managed in the application.\n     *\n     */\n    @Effect()\n    stickToVirtualTime: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeFilterComponent.html":{"url":"components/TimeFilterComponent.html","title":"component - TimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./time-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                timeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Component({\n    selector: 'of-time-filter',\n    templateUrl: './time-filter.component.html'\n})\nexport class TimeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    get filter$(): Observable {\n        return this._filter$;\n    }\n\n    timeFilterForm: FormGroup;\n\n    constructor(private store: Store,\n                private timeService: TimeService) {\n        this.timeFilterForm = this.createFormGroup();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TIME_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                if (this.timeService.parseString(this.timeFilterForm.get('start').value).valueOf() != next.status.start) {\n                    if(!!next.status.start)\n                        this.timeFilterForm.get('start').setValue(this.timeService.asInputString(next.status.start));\n                    else\n                        this.timeFilterForm.get('start').setValue(null);\n                }\n                if (this.timeService.parseString(this.timeFilterForm.get('end').value).valueOf() != next.status.end) {\n                    if(!!next.status.end)\n                        this.timeFilterForm.get('end').setValue(this.timeService.asInputString(next.status.end));\n                    else\n                        this.timeFilterForm.get('end').setValue(null);\n                }\n            } else {\n                if (!!this.timeFilterForm.get('start').value)\n                    this.timeFilterForm.get('start').setValue(null);\n                if (!!this.timeFilterForm.get('end').value)\n                    this.timeFilterForm.get('end').setValue(null);\n            }\n        });\n        this._filter$.pipe(first(), takeUntil(this.ngUnsubscribe$)).subscribe(() => {\n            this.timeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB) => {\n                        return _.isEqual(formA, formB);\n                    }),\n                    debounce(() => timer(500))) //TODO Filter so it doesn't fire ApplyFilter actions that wouldn't change current filter\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TIME_FILTER,\n                        active: !!form.start || !!form.end,\n                        status: {\n                            start: form.start ? this.timeService.parseString(form.start).valueOf() : null,\n                            end: form.end ? this.timeService.parseString(form.end).valueOf() : null\n                        }\n                    }))\n                );\n        });\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            start: new FormControl(),\n            end: new FormControl()\n        }, {updateOn: 'change'});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        feed.filters.time.start.label\n        \n      \n      \n        feed.filters.time.end.label\n        \n      \n    \n  \n  feed.filters.time.title\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    feed.filters.time.start.label                            feed.filters.time.end.label                      feed.filters.time.title        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeLineComponent.html":{"url":"components/TimeLineComponent.html","title":"component - TimeLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/time-line/time-line.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-line\n            \n\n\n\n\n            \n                templateUrl\n                ./time-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conf\n                            \n                            \n                                    Public\n                                confZoom\n                            \n                            \n                                lightCards$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateWithSpaceBeforeMoment\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dateWithSpaceBeforeMoment\n                        \n                        \n                    \n                \n            \n            \n                \ndateWithSpaceBeforeMoment(date, clusterLevel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:190\n                \n            \n\n\n            \n                \n                    make start of domain begin 4 ticks before actual date (moment())\neach cluster level had a different treatment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confZoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Observable, of, Subscription} from 'rxjs';\nimport { LightCard } from '@ofModel/light-card.model';\nimport { select, Store } from '@ngrx/store';\nimport {catchError, debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { AppState } from '@ofStore/index';\nimport {InitTimeline, SetCardDataTimeline} from '@ofActions/timeline.actions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\n\n@Component({\n  selector: 'of-time-line',\n  templateUrl: './time-line.component.html',\n})\nexport class TimeLineComponent implements OnInit, OnDestroy {\n    lightCards$: Observable;\n    subscription: Subscription;\n\n    public conf: any;\n    public confZoom: any;\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        // set start of Week to saturday on moment locale used\n        moment.updateLocale('en', { week: {\n                dow: 6, // First day of week is Saturday\n                doy: 12 // First week of year must contain 1 January (7 + 6 - 1)\n            }});\n\n        const actualMoment = moment();\n\n        // conf 1 === end of the actual week + next week\n        /*const startDomain = moment();\n        startDomain.hours(0).minutes(0).seconds(0).millisecond(0);*/\n        const startDomain = this.dateWithSpaceBeforeMoment(moment(actualMoment), 'W');\n        const endDomain = _.cloneDeep(startDomain);\n        endDomain.add(1, 'week');\n        endDomain.startOf('week');\n        endDomain.hours(0).minutes(0).seconds(0).millisecond(0);\n        endDomain.add(7, 'days');\n        // endDomain.add(5, 'days'); // example\n\n        // conf 4 === end of the actual day + 7 days\n        /*const startDomain4 = moment();\n        startDomain4.hours(0).minutes(0).seconds(0).millisecond(0);*/\n        const startDomain4 = this.dateWithSpaceBeforeMoment(moment(actualMoment), 'W');\n        const endDomain4 = _.cloneDeep(startDomain4);\n        endDomain4.hours(0).minutes(0).seconds(0).millisecond(0);\n        endDomain4.add(8, 'days');\n        // endDomain.add(5, 'days'); // example\n\n        // conf 2 === actual month + next month\n        /*const startDomain2 = moment();\n        startDomain2.hours(0).minutes(0).seconds(0).millisecond(0);*/\n        const startDomain2 = this.dateWithSpaceBeforeMoment(moment(actualMoment), 'M');\n        const endDomain2 = _.cloneDeep(startDomain2);\n        endDomain2.startOf('month');\n        endDomain2.add(2, 'months');\n        // endDomain2.add(1, 'months'); // example\n        // endDomain2.date(15); // example\n\n        // conf 3 === from start of actual month to end of the year + 1 year\n        /*const startDomain3 = moment();\n        startDomain3.startOf('month');\n        startDomain3.hours(0);*/\n        const startDomain3 = this.dateWithSpaceBeforeMoment(moment(actualMoment), 'Y');\n        const endDomain3 = _.cloneDeep(startDomain3);\n        endDomain3.add(2, 'years');\n        endDomain3.startOf('year'); // Voir avec Guillaume\n        // endDomain3.add(1, 'years'); // example\n        // endDomain3.month(10); // example\n        this.conf = {\n            enableDrag: false,\n            enableZoom: true,\n            autoScale: false,\n            animations: false,\n            showGridLines: true,\n            realTimeBar: true,\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n        };\n        this.confZoom = [{\n            startDomain: startDomain.valueOf(),\n            endDomain: endDomain.valueOf(),\n            forwardLevel: 'W',\n            followCloackTick: false,\n        },\n        {\n            startDomain: startDomain4.valueOf(),\n            endDomain: endDomain4.valueOf(),\n            forwardLevel: '7D',\n            followCloackTick: true,\n        },\n        {\n            startDomain: startDomain2.valueOf(),\n            endDomain: endDomain2.valueOf(),\n            forwardLevel: 'M',\n            followCloackTick: false,\n        },\n        {\n            startDomain: startDomain3.valueOf(),\n            endDomain: endDomain3.valueOf(),\n            forwardLevel: 'Y',\n            followCloackTick: false,\n        }];\n\n        // timeline state is same than feed state (not filtered Feed)\n        // select all the feed\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFeed),\n            catchError(err => of([]))\n        );\n\n        // init timeline state\n        this.store.dispatch(new InitTimeline({\n            data: [],\n        }));\n\n        // add a card data to the timeline state for each new card received\n        this.subscription = this.lightCards$.pipe(debounceTime(300), distinctUntilChanged())\n            .subscribe(value => {\n            // console.log('timeline subscribe');\n            const tmp = _.cloneDeep(value);\n            this.store.dispatch(new InitTimeline({\n                data: [],\n            }));\n            /*for (const val of tmp) {\n                // val.endDate val.startDate val.severity\n                const myCardTimeline = {\n                    startDate: val.startDate,\n                    endDate: val.endDate,\n                    severity: val.severity\n                };\n                this.store.dispatch(new AddCardDataTimeline({\n\n                    cardTimeline: myCardTimeline,\n                }));\n                // console.log('timeline subscribe');\n            }*/\n            const myCardsTimeline = [];\n            for (const val of tmp) {\n                // val.endDate val.startDate val.severity\n                const myCardTimeline = {\n                    startDate: val.startDate,\n                    endDate: val.endDate,\n                    severity: val.severity,\n                    summary: val.summary.parameters.value\n                };\n                myCardsTimeline.push(myCardTimeline);\n            }\n            this.store.dispatch(new SetCardDataTimeline({\n                cardsTimeline: myCardsTimeline,\n            }));\n        });\n\n        // this.lastCards$ = this.store.select(timelineSelectors.selectLastCardsSelection);\n        /* // TRY ON TIMELINE\n         this.lightCards$ = this.store.pipe(\n             select(timelineSelectors.selectFeed),\n             catchError(err => of([]))\n         );*/\n        /* // TRY ON FEED\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFeed),\n            catchError(err => of([]))\n        );*/\n\n        /*\n        // TRY selectUnFilteredFeed\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectUnFilteredFeed),\n            catchError(err => of([]))\n        );*/\n    }\n\n    /**\n     * make start of domain begin 4 ticks before actual date (moment())\n     * each cluster level had a different treatment\n     * @param clusterLevel\n     */\n    dateWithSpaceBeforeMoment(date, clusterLevel) {\n        date.minutes(0).seconds(0).millisecond(0);\n        switch (clusterLevel) {\n            case 'W' : case '7D': {\n                for (let i = 0; i = 16) {\n                    date.startOf('month');\n                    date.subtract(1, 'months');\n                } else {\n                    // start at middle of month (16th)\n                    date.date(16);\n                    date.subtract(2, 'months');\n                }\n                return date;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeReference.html":{"url":"classes/TimeReference.html","title":"class - TimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/time.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                    Private\n                                computeNowMoment\n                            \n                            \n                                    Static\n                                convertSpeedIntoEnum\n                            \n                            \n                                    Private\n                                isVirtualTimeUndefine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(referenceTime: number, virtualTime: number, computedNow: number, speed: TimeSpeed)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/time.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        referenceTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        computedNow\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        speed\n                                                  \n                                                        \n                                                                        TimeSpeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(timeStampNow: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStampNow\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(momentNow: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    momentNow\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(realNow: number | moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNow\n                                    \n                                            number | moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            computeNowMoment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeNowMoment(realNowMoment: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNowMoment\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertSpeedIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertSpeedIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVirtualTimeUndefine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVirtualTimeUndefine()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment-timezone';\nimport {isMoment} from \"moment\";\n\nexport class TimeReference {\n    constructor(readonly referenceTime: number,\n                readonly  virtualTime: number,\n                readonly  computedNow: number,\n                readonly speed: TimeSpeed) {\n    }\n\n    static convertSpeedIntoEnum(key: string, value: string) {\n        if (key === 'speed') {\n            return TimeSpeed[value]\n        }\n        return value;\n    }\n\n\n    computeNow(timeStampNow:number):moment.Moment;\n    computeNow(momentNow:moment.Moment):moment.Moment;\n    computeNow(realNow:number|moment.Moment):moment.Moment{\n\n        let realNowMoment = null;\n        if(isMoment(realNow)){\n            realNowMoment=realNow\n        }else{\n            realNowMoment=moment(realNow);\n        }\n        return this.computeNowMoment(realNowMoment);\n\n    }\n\n    private computeNowMoment(realNowMoment: moment.Moment) {\n        /**\n         *   no computation for real time at normal speed with no virtualTime\n         *   or if the referenceTime doesn't exist\n         */\n\n        if (typeof this.referenceTime === 'undefined' || this.referenceTime == null) {\n                return realNowMoment;\n        }else if(this.speed === TimeSpeed.X1 && this.isVirtualTimeUndefine()){\n            return realNowMoment;\n        }\n        const ref = moment(this.referenceTime);\n        const duration = moment.duration(realNowMoment.diff(ref));\n        const computedOffsetInMilliseconds = duration.asMilliseconds() * this.speed;\n        const computedOffsetDuration = moment.duration(computedOffsetInMilliseconds)\n        let baseMoment=moment(this.virtualTime);\n        if(this.isVirtualTimeUndefine()) {\n            baseMoment=ref;\n        }\n        const result = baseMoment.add(computedOffsetDuration);\n        return result;\n    }\n\n    private isVirtualTimeUndefine(){\n        return typeof this.virtualTime === 'undefined' || this.virtualTime == null;\n    }\n}\n\n\nexport enum TimeSpeed {\n    X1 = 1,\n    X2 = 2,\n    X10 = 10,\n    X60 = 60,\n    X3600 = 3600,\n    HALF = 0.5\n}\n\nexport const neutralTimeReference:TimeReference=new TimeReference(null,null,null,TimeSpeed.X1);\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSpan.html":{"url":"classes/TimeSpan.html","title":"class - TimeSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: number, endDate?: number, display)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        display\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport interface LightCard {\n    readonly uid: string;\n    readonly id: string;\n    readonly publisher: string;\n    readonly publisherVersion: string;\n    readonly mainRecipient: string;\n    readonly publishDate: number;\n    readonly startDate: number;\n    readonly endDate: number;\n    readonly severity: Severity;\n    readonly processId?: string;\n    readonly lttd?: number;\n    readonly title?: I18n;\n    readonly summary?: I18n;\n    readonly tags?: string[];\n    readonly timeSpans?: TimeSpan[];\n\n}\n\nexport class LightCard implements LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[]\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", NOTIFICATION = \"NOTIFICATION\", QUESTION = \"QUESTION\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.QUESTION:\n            result = 2;\n            break;\n        case Severity.NOTIFICATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    NOTIFICATION, QUESTION\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly startDate: number,\n        readonly endDate?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeState.html":{"url":"interfaces/TimeState.html","title":"interface - TimeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/time.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentDate\n                                \n                                \n                                        error\n                                \n                                \n                                        timeReference\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentDate\n                                    \n                                \n                                \n                                    \n                                        currentDate:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeReference\n                                    \n                                \n                                \n                                    \n                                        timeReference:         TimeReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment-timezone'\nimport {neutralTimeReference, TimeReference, TimeSpeed} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface TimeState {\n\n    timeReference: TimeReference;\n    currentDate: moment.Moment;\n    error: Message;\n}\n\nexport const timeInitialState: TimeState = {\n    timeReference:neutralTimeReference,\n    currentDate: moment(),\n    error: null\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimelineState.html":{"url":"interfaces/TimelineState.html","title":"interface - TimelineState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimelineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/timeline.state.ts\n        \n\n            \n                Description\n            \n            \n                The Timeline State consist of:\n  * EntityState of LightCard\n  * selectedCardId: the currently selected card id\n  * lastCards the last cards added / updated to the feed\n  * loading: weather there is an ongoing state modification\n  * error: last message during state processing before error\n  * data: an array of data Card (less information than lightCard)\n   which are use for display on the chart the number of card on timescale\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:         LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {LightCardAdapter} from \"@ofStates/feed.state\";\n\n\n/**\n * The Timeline State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * error: last message during state processing before error\n *  * data: an array of data Card (less information than lightCard)\n *   which are use for display on the chart the number of card on timescale\n */\nexport interface TimelineState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    data: any[];\n}\n\n/*export function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:compareByStartDate\n});*/\n\nexport const timelineInitialState: TimelineState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        data: []\n    });\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInjector.html":{"url":"interceptors/TokenInjector.html","title":"interceptor - TokenInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeadersIfNecessary\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAuthHeadersIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \naddAuthHeadersIfNecessary(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from './authentication.service';\n\n@Injectable()\nexport class TokenInjector implements HttpInterceptor {\n    /* istanbul ignore next */\n    constructor(private authenticationService: AuthenticationService) {\n    }\n\n    /* istanbul ignore next */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(this.addAuthHeadersIfNecessary(request));\n    }\n\n\n    addAuthHeadersIfNecessary(request: HttpRequest): HttpRequest {\n        const url = request.url;\n\n        const notCheckTokenRequest = !(url.endsWith('/auth/check_token') || url.endsWith('/auth/token') || url.endsWith('/auth/code'));\n        if (notCheckTokenRequest) {\n            const update = {setHeaders: AuthenticationService.getSecurityHeader()};\n            request = request.clone(update);\n        }\n        return request;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogIn.html":{"url":"classes/TryToLogIn.html","title":"class - TryToLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to push login/password pair to the authentication service\nEmitted by {LoginComponent} in the onSubmit @method which is called\nwhen the user click on the Login button of the login page form.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogOut.html":{"url":"classes/TryToLogOut.html","title":"class - TryToLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used when the user logout\nEmitted by {NavbarComponent} win the logOut @method which is called\nwhen the user click on the logOut button of the navbar\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:94\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeAheadSettingsComponent.html":{"url":"components/TypeAheadSettingsComponent.html","title":"component - TypeAheadSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeAheadSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                MultiSettingsComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-ahead-settings\n            \n\n            \n                styleUrls\n                ./type-ahead-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-ahead-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MultiSettingsComponent} from \"../multi-settings/multi-settings.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-type-ahead-settings',\n  templateUrl: './type-ahead-settings.component.html',\n  styleUrls: ['./type-ahead-settings.component.scss']\n})\nexport class TypeAheadSettingsComponent extends MultiSettingsComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store)\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        settings.{{settingPath}}\n        \n    \n\n\n    \n\n    \n                \n                    ./type-ahead-settings.component.scss\n                \n                .tags-field {\n    /deep/ .dropdown-toggle {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings.{{settingPath}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeAheadSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeFilterComponent.html":{"url":"components/TypeFilterComponent.html","title":"component - TypeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-filter\n            \n\n            \n                styleUrls\n                ./type-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                typeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport * as _ from 'lodash';\nimport {FilterType} from \"@ofServices/filter.service\";\n\n\n@Component({\n    selector: 'of-type-filter',\n    templateUrl: './type-filter.component.html',\n    styleUrls: ['./type-filter.component.scss']\n})\nexport class TypeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    typeFilterForm: FormGroup;\n\n    private _filter$: Observable;\n\n    get filter$(): Observable{\n        return this._filter$;\n    }\n\n    // set filter$(filter: Observable) {\n    //     this._filter$ = filter;\n    // }\n\n    constructor(private store: Store) {\n        this.typeFilterForm = this.createFormGroup();\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            alarm: new FormControl(),\n            action: new FormControl(),\n            question: new FormControl(),\n            notification: new FormControl()\n        },{updateOn: 'change'});\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TYPE_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.typeFilterForm.get('alarm').setValue(!next.active || next.status.alarm);\n                this.typeFilterForm.get('action').setValue(!next.active || next.status.action);\n                this.typeFilterForm.get('question').setValue(!next.active || next.status.question);\n                this.typeFilterForm.get('notification').setValue(!next.active || next.status.notification);\n            } else {\n                this.typeFilterForm.get('alarm').setValue(true);\n                this.typeFilterForm.get('action').setValue(true);\n                this.typeFilterForm.get('question').setValue(true);\n                this.typeFilterForm.get('notification').setValue(true);\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.typeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.isEqual(formA,formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TYPE_FILTER,\n                        active: !(form.alarm && form.action && form.question && form.notification),\n                        status: form\n                    }))\n                );\n        });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n        \n            \n                \n                feed.filters.type.alarm.label\n            \n            \n                \n                feed.filters.type.action.label\n            \n            \n                \n                feed.filters.type.question.label\n            \n            \n                \n                feed.filters.type.notification.label\n            \n        \n    \n    feed.filters.type.title\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./type-filter.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n$cell-width: 10;\n\n.type-selections {\n  display: table;\n  width: $cell-width * 2px;\n  height: $cell-width * 2px;\n}\n\n.type-row {\n  display: table-row;\n}\n\n.type-cell {\n  display: table-cell;\n}\n\n/deep/ .popover {\n  background-color: $dark;\n  .popover-header {\n    color: $light;\n    background-color: $dark;\n  }\n  .popover-body {\n    color: $light;\n  }\n  .arrow::after{\n    border-right-color: $dark;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        feed.filters.type.alarm.label                                                        feed.filters.type.action.label                                                        feed.filters.type.question.label                                                        feed.filters.type.notification.label                            feed.filters.type.title                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTimeReference.html":{"url":"classes/UpdateTimeReference.html","title":"class - UpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action dispatch to update the current virtual time of the application\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.UpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:{currentTime:moment.Moment, elapsedSinceLast:number}){}\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedSubscription.html":{"url":"classes/UpdatedSubscription.html","title":"class - UpdatedSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:84\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdatedSubscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:84\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(login: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n    public constructor(\n    readonly login:string,\n    readonly firstName:string,\n    readonly lastName:string\n){}\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/XAxisTickFormatPipe.html":{"url":"pipes/XAxisTickFormatPipe.html","title":"pipe - XAxisTickFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  XAxisTickFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        xAxisTickFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts:53\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformAdvanced\n                        \n                        \n                    \n                \n            \n            \n                \ntransformAdvanced(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts:38\n                \n            \n\n\n            \n                \n                    special format function used for week ticks formatting, display only hours for each ticks\nif cluster level is W return a string formatted from value\nelse return a empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformHovered\n                        \n                        \n                    \n                \n            \n            \n                \ntransformHovered(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts:13\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({\n  name: 'xAxisTickFormat'\n})\nexport class XAxisTickFormatPipe implements PipeTransform {\n  /**\n   * return a string formatted from value by the according cluster level\n   * @param value\n   * @param clusterLevel\n   */\n  transformHovered(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    const date = moment(value);\n    switch (clusterLevel) {\n      case 'W': case '7D': {\n        return date.format('ddd DD MMM HH') + 'h';\n      }\n      case 'M': case 'Y': {\n        return date.format('ddd DD MMM YYYY');\n      }\n      default: {\n        return value;\n      }\n    }\n  }\n\n  /**\n   * special format function used for week ticks formatting, display only hours for each ticks\n   * if cluster level is W return a string formatted from value\n   * else return a empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transformAdvanced(value: any, clusterLevel: string): string {\n    if (clusterLevel) {\n      const date = moment(value);\n      if (date) {\n        return date.format('HH') + 'h';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * return a string formatted from value by the according cluster level\n   * @param value\n   * @param clusterLevel\n   */\n  transform(value: any, clusterLevel: string): string {\n    // if (languageTag) {\n    /*if (value instanceof moment) {*/\n    // const datePipe = moment.locale(languageTag);\n    if (typeof value === 'string') {\n      return value;\n    }\n    const date = moment(value);\n    const startYear = moment(date).startOf('year');\n    switch (clusterLevel) {\n      case 'W' : case '7D': {\n        if (date.valueOf() === startYear.valueOf()) {\n          return date.format('ddd DD MMM YYYY');\n        }\n        if (date.hours() === 0) {\n          return date.format('ddd DD MMM');\n        } else {\n          return date.format('HH');\n        }\n      }\n      case 'M': {\n        if (date.valueOf() === startYear.valueOf()) {\n          return date.format('DD MMM YY');\n        }\n        return date.format('ddd DD MMM');\n      }\n      case 'Y': {\n        if (date.valueOf() === startYear.valueOf()) {\n          return date.format('D MMM YY');\n        }\n        return date.format('D MMM');\n      }\n      default: {\n        return value;\n      }\n    }\n        // else {\n        // return value.toString();\n        // }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.2\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.2\n        \n            @angular/compiler : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.17\n        \n            @fortawesome/free-solid-svg-icons : ^5.8.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.0\n        \n            @ngrx/effects : ^7.1.0\n        \n            @ngrx/entity : ^7.1.0\n        \n            @ngrx/router-store : ^7.1.0\n        \n            @ngrx/store : ^7.1.0\n        \n            @ngrx/store-devtools : ^7.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-charts : ^10.1.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.6.3\n        \n            guid-typescript : ^1.0.9\n        \n            handlebars : ^4.0.14\n        \n            jwt-decode : ^2.2.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.25\n        \n            ng-event-source : ^1.0.14\n        \n            ngrx-router : ^2.0.1\n        \n            ngx-type-ahead : ^2.0.1\n        \n            rxjs : ^6.3.3\n        \n            svg-pan-zoom : ^3.6.0\n        \n            tslib : ^1.9.3\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../thirds.model.ts)\n                        \n                        \n                            AuthenticationActionTypes   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActionTypes   (src/.../card.actions.ts)\n                        \n                        \n                            CardOperationType   (src/.../card-operation.model.ts)\n                        \n                        \n                            ConfigActionTypes   (src/.../config.actions.ts)\n                        \n                        \n                            Display   (src/.../light-card.model.ts)\n                        \n                        \n                            FeedActionTypes   (src/.../feed.actions.ts)\n                        \n                        \n                            FilterType   (src/.../filter.service.ts)\n                        \n                        \n                            InputType   (src/.../thirds.model.ts)\n                        \n                        \n                            LightCardActionTypes   (src/.../light-card.actions.ts)\n                        \n                        \n                            LocalStorageAuthContent   (src/.../authentication.service.ts)\n                        \n                        \n                            MenuActionTypes   (src/.../menu.actions.ts)\n                        \n                        \n                            MessageLevel   (src/.../message.model.ts)\n                        \n                        \n                            SettingsActionTypes   (src/.../settings.actions.ts)\n                        \n                        \n                            Severity   (src/.../light-card.model.ts)\n                        \n                        \n                            Sound   (src/.../light-card.model.ts)\n                        \n                        \n                            TimeActionTypes   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActionTypes   (src/.../timeline.actions.ts)\n                        \n                        \n                            TimeSpeed   (src/.../time.model.ts)\n                        \n                        \n                            TitlePosition   (src/.../card.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/thirds.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                 JNLP\n                            \n                        \n                        \n                            \n                                 URI\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InputType\n                    \n                \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                 LIST_RADIO\n                            \n                        \n                        \n                            \n                                 SWITCH_LIST\n                            \n                        \n                        \n                            \n                                 LONGTEXT\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n            \n        \n\n    src/app/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 InitAuthStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Init Authentication Status\n                            \n                        \n                        \n                            \n                                 CheckAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status\n                            \n                        \n                        \n                            \n                                 AcceptLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log in attempt\n                            \n                        \n                        \n                            \n                                 RejectLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Reject the user log in attempt\n                            \n                        \n                        \n                            \n                                 TryToLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user in\n                            \n                        \n                        \n                            \n                                 TryToLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user out\n                            \n                        \n                        \n                            \n                                 AcceptLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 AcceptLogOutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Success Accept the user log out attempt\n                            \n                        \n            \n        \n\n    src/app/store/actions/card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CardActionTypes\n                    \n                \n                        \n                            \n                                 ClearCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Clear\n                            \n                        \n                        \n                            \n                                 LoadCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card\n                            \n                        \n                        \n                            \n                                 LoadCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Success\n                            \n                        \n                        \n                            \n                                 LoadCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Card] Handle unexpected error related to card issue\n                            \n                        \n            \n        \n\n    src/app/model/card-operation.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardOperationType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/store/actions/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActionTypes\n                    \n                \n                        \n                            \n                                 LoadConfig\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config\n                            \n                        \n                        \n                            \n                                 LoadConfigSuccess\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Success\n                            \n                        \n                        \n                            \n                                 LoadConfigFailure\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Config] Handle unexpected error related to configuration issue\n                            \n                        \n            \n        \n\n    src/app/model/light-card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Display\n                    \n                \n                        \n                            \n                                 BUBBLE\n                            \n                        \n                        \n                            \n                                 LINE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                        \n                            \n                                 ALARM\n                            \n                        \n                        \n                            \n                                Value : ALARM\n                            \n                        \n                        \n                            \n                                 ACTION\n                            \n                        \n                        \n                            \n                                Value : ACTION\n                            \n                        \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n                        \n                            \n                                Value : QUESTION\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n            \n        \n\n    src/app/store/actions/feed.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeedActionTypes\n                    \n                \n                        \n                            \n                                 ApplyFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change filter Status\n                            \n                        \n                        \n                            \n                                 InitFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Init filter\n                            \n                        \n            \n        \n\n    src/app/services/filter.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterType\n                    \n                \n                        \n                            \n                                 TYPE_FILTER\n                            \n                        \n                        \n                            \n                                 RECIPIENT_FILTER\n                            \n                        \n                        \n                            \n                                 TAG_FILTER\n                            \n                        \n                        \n                            \n                                 TIME_FILTER\n                            \n                        \n                        \n                            \n                                 TEST_FILTER\n                            \n                        \n            \n        \n\n    src/app/store/actions/light-card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LightCardActionTypes\n                    \n                \n                        \n                            \n                                 LoadLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load\n                            \n                        \n                        \n                            \n                                 EmptyLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Empty\n                            \n                        \n                        \n                            \n                                 LoadLightCardsSuccess\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Success\n                            \n                        \n                        \n                            \n                                 LoadLightCardsExtendedData\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Extended Data\n                            \n                        \n                        \n                            \n                                 LoadLightCardsFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Fail\n                            \n                        \n                        \n                            \n                                 SelectLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Select One\n                            \n                        \n                        \n                            \n                                 ClearLightCardSelection\n                            \n                        \n                        \n                            \n                                Value : [LCard] Clear Light Card Selection\n                            \n                        \n                        \n                            \n                                 AddLightCardFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Add Light Card Fail\n                            \n                        \n                        \n                            \n                                 UpdatedSubscription\n                            \n                        \n                        \n                            \n                                Value : [LCard] UpdateSubscription\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [LCard] Handle unexpected error related to authentication issue\n                            \n                        \n                        \n                            \n                                 RemoveLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Remove a card\n                            \n                        \n            \n        \n\n    src/app/services/authentication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageAuthContent\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 expirationDate\n                            \n                        \n                        \n                            \n                                Value : expirationDate\n                            \n                        \n                        \n                            \n                                 identifier\n                            \n                        \n                        \n                            \n                                Value : identifier\n                            \n                        \n                        \n                            \n                                 clientId\n                            \n                        \n                        \n                            \n                                Value : clientId\n                            \n                        \n            \n        \n\n    src/app/store/actions/menu.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuActionTypes\n                    \n                \n                        \n                            \n                                 LoadMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu\n                            \n                        \n                        \n                            \n                                 LoadMenuSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Success\n                            \n                        \n                        \n                            \n                                 LoadMenuFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Menu] Handle unexpected error\n                            \n                        \n                        \n                            \n                                 SelectMenuLink\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Success\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Failure\n                            \n                        \n            \n        \n\n    src/app/model/message.model.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageLevel\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n    src/app/store/actions/settings.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SettingsActionTypes\n                    \n                \n                        \n                            \n                                 LoadSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings\n                            \n                        \n                        \n                            \n                                 LoadSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Success\n                            \n                        \n                        \n                            \n                                 LoadSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Fail\n                            \n                        \n                        \n                            \n                                 PatchSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings\n                            \n                        \n                        \n                            \n                                 PatchSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Success\n                            \n                        \n                        \n                            \n                                 PatchSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Settings] Handle unexpected error related to user settings issue\n                            \n                        \n            \n        \n\n    src/app/store/actions/time.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeActionTypes\n                    \n                \n                        \n                            \n                                 Tick\n                            \n                        \n                        \n                            \n                                Value : [Time] tick\n                            \n                        \n                        \n                            \n                                 UpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] try to update the time reference\n                            \n                        \n                        \n                            \n                                 FailToUpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] fail to update the time reference\n                            \n                        \n            \n        \n\n    src/app/store/actions/timeline.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimelineActionTypes\n                    \n                \n                        \n                            \n                                 InitTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Init timeline\n                            \n                        \n                        \n                            \n                                 SetCardDataTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Set Card Data\n                            \n                        \n            \n        \n\n    src/app/model/time.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeSpeed\n                    \n                \n                        \n                            \n                                 X1\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X2\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 X10\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 X60\n                            \n                        \n                        \n                            \n                                Value : 60\n                            \n                        \n                        \n                            \n                                 X3600\n                            \n                        \n                        \n                            \n                                Value : 3600\n                            \n                        \n                        \n                            \n                                 HALF\n                            \n                        \n                        \n                            \n                                Value : 0.5\n                            \n                        \n            \n        \n\n    src/app/model/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TitlePosition\n                    \n                \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\nCardListComponent\n\nCardListComponent\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n!environment\n\n!environment\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    28 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    75 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationActions   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActions   (src/.../card.actions.ts)\n                        \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActions   (src/.../feed.actions.ts)\n                        \n                        \n                            LightCardActions   (src/.../light-card.actions.ts)\n                        \n                        \n                            MenuActions   (src/.../menu.actions.ts)\n                        \n                        \n                            SettingsActions   (src/.../settings.actions.ts)\n                        \n                        \n                            TimeActions   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActions   (src/.../timeline.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/authentication.actions.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationActions\n                \n            \n            \n                \n                        InitAuthStatus | AcceptLogIn | RejectLogIn | TryToLogIn | TryToLogOut | CheckAuthenticationStatus | AcceptLogOut | AcceptLogOutSuccess\n\n                \n            \n        \n    \n    src/app/store/actions/card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    CardActions\n                \n            \n            \n                \n                        ClearCard | LoadCard | LoadCardSuccess | LoadCardFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/config.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigActions\n                \n            \n            \n                \n                        LoadConfig | LoadConfigSuccess | LoadConfigFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/feed.actions.ts\n    \n    \n        \n            \n                \n                    \n                    FeedActions\n                \n            \n            \n                \n                        InitFilters | ApplyFilter\n\n                \n            \n        \n    \n    src/app/store/actions/light-card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    LightCardActions\n                \n            \n            \n                \n                        LoadLightCards | LoadLightCardsSuccess | LoadLightCardsFailure | SelectLightCard | ClearLightCardSelection | AddLightCardFailure | UpdatedSubscription | HandleUnexpectedError | EmptyLightCards | RemoveLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/menu.actions.ts\n    \n    \n        \n            \n                \n                    \n                    MenuActions\n                \n            \n            \n                \n                        LoadMenu | LoadMenuSuccess | LoadMenuFailure | HandleUnexpectedError | SelectMenuLink | SelectMenuLinkSuccess | SelectMenuLinkFailure\n\n                \n            \n        \n    \n    src/app/store/actions/settings.actions.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsActions\n                \n            \n            \n                \n                        LoadSettings | LoadSettingsSuccess | LoadSettingsFailure | PatchSettings | PatchSettingsSuccess | PatchSettingsFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/time.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimeActions\n                \n            \n            \n                \n                        Tick | UpdateTimeReference | FailToUpdateTimeReference\n\n                \n            \n        \n    \n    src/app/store/actions/timeline.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimelineActions\n                \n            \n            \n                \n                        InitTimeline | SetCardDataTimeline\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
