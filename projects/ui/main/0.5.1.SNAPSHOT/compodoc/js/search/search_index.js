var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AcceptLogIn.html",[0,0.248,1,2.352]],["body/classes/AcceptLogIn.html",[0,0.444,1,3.441,2,0.515,3,0.028,4,0.028,5,0.071,6,1.904,7,1.342,8,1.367,9,4.351,10,2.515,11,2.686,12,3.426,13,3.999,14,3.552,15,2.754,16,3.25,17,1.929,18,4.065,19,0.007,20,3.864,21,3.53,22,3.059,23,2.948,24,3.917,25,3.003,26,3.917,27,4.065,28,3.783,29,1.688,30,3.53,31,3.783,32,4.065,33,0.262,34,1.09,35,0.177,36,0.416,37,1.016,38,1.698,39,1.325,40,0.302,41,1.066,42,3.917,43,0.25,44,5.111,45,0.3,46,0.278,47,0.3,48,3.419,49,0.476,50,0.396,51,0.088,52,0.387,53,3.012,54,1.683,55,2.349,56,1.592,57,0.083,58,0.611,59,1.636,60,3.196,61,0.968,62,2.26,63,3.196,64,1.732,65,3.53,66,3.108,67,4.399,68,3.783,69,3.196,70,1.972,71,2.38,72,3.342,73,2.64,74,3.796,75,3.196,76,1.368,77,1.742,78,1.732,79,1.183,80,1.732,81,1.732,82,1.785,83,1.512,84,2.047,85,2.047,86,3.059,87,3.059,88,2.319,89,3.059,90,2.047,91,1.298,92,1.298,93,1.178,94,2.047,95,1.972,96,2.047,97,2.047,98,1.904,99,1.475,100,0.987,101,1.972,102,2.64,103,3.059,104,3.012,105,2.754,106,1.904,107,0.987,108,1.972,109,1.904,110,1.843,111,3.783,112,1.006,113,2.047,114,1.843,115,1.972,116,2.754,117,1.181,118,2.047,119,2.047,120,4.065,121,1.972,122,2.047,123,2.948,124,2.047,125,2.948,126,0.646,127,2.047,128,1.972,129,2.047,130,1.972,131,2.047,132,2.38,133,2.948,134,2.047,135,2.047,136,1.904,137,0.002,138,0.004,139,0.002]],["title/classes/AcceptLogOut.html",[0,0.248,74,2.424]],["body/classes/AcceptLogOut.html",[0,0.447,1,3.149,2,0.529,3,0.029,4,0.029,5,0.067,6,1.954,7,1.377,8,1.373,9,4.313,10,1.726,11,2.422,12,3.424,13,3.923,14,3.586,15,1.891,16,3.291,17,1.999,18,4.117,19,0.007,20,3.723,21,3.005,22,2.1,23,2.024,24,3.707,25,2.748,26,3.585,27,3.72,28,3.462,29,1.545,30,3.005,31,3.462,32,3.119,33,0.257,34,1.098,35,0.181,36,0.424,37,0.945,38,1.477,39,1.334,40,0.368,42,2.808,43,0.213,49,0.489,50,0.406,51,0.089,52,0.397,53,3.058,54,1.726,55,2.386,56,1.634,57,0.084,58,0.627,59,1.679,60,3.245,61,0.994,62,2.304,63,3.245,64,1.777,65,3.585,66,3.174,67,4.441,68,3.831,69,3.245,70,2.024,71,2.426,72,3.616,73,2.681,74,4.163,75,3.245,76,1.395,77,1.761,78,1.777,79,1.196,80,1.777,81,1.777,82,1.832,83,1.551,84,2.1,85,2.1,86,3.119,87,3.119,88,2.363,89,3.119,90,2.1,91,1.307,92,1.307,93,1.187,94,2.1,95,2.024,96,2.1,97,2.1,98,1.954,99,1.513,100,1.013,101,2.024,102,2.681,103,3.119,104,3.058,105,2.808,106,1.954,107,1.013,108,2.024,109,1.954,110,1.891,111,4.093,112,1.032,113,2.1,114,1.891,115,2.024,116,2.808,117,1.204,118,2.1,119,2.1,120,4.609,121,2.024,122,2.1,123,3.005,124,2.1,125,3.005,126,0.663,127,3.119,128,3.005,129,3.119,130,3.005,131,3.119,132,2.894,133,3.585,134,2.1,135,2.1,136,1.954,137,0.003,138,0.004,139,0.003,140,5.21]],["title/classes/AcceptLogOutSuccess.html",[0,0.248,75,2.424]],["body/classes/AcceptLogOutSuccess.html",[0,0.447,1,3.15,2,0.529,3,0.029,4,0.029,5,0.071,6,1.956,7,1.379,8,1.373,9,4.377,10,1.728,11,2.589,12,3.436,13,4.031,14,3.587,15,1.892,16,2.976,17,1.946,18,3.722,19,0.007,20,3.724,21,3.007,22,2.102,23,2.026,24,3.708,25,3.043,26,3.969,27,4.119,28,3.833,29,1.711,30,3.007,31,3.833,32,3.121,33,0.259,34,1.098,35,0.181,36,0.424,37,0.945,38,1.478,39,1.334,40,0.208,42,2.81,43,0.143,49,0.489,50,0.406,51,0.089,52,0.398,53,3.06,54,1.728,55,2.387,56,1.636,57,0.084,58,0.628,59,1.68,60,3.247,61,0.995,62,2.306,63,3.247,64,1.779,65,3.587,66,3.129,67,4.443,68,3.833,69,3.247,70,2.026,71,2.428,72,3.386,73,2.682,74,4.022,75,3.593,76,1.396,77,1.762,78,1.779,79,1.196,80,1.779,81,1.779,82,1.834,83,1.553,84,2.102,85,2.102,86,3.121,87,3.121,88,2.365,89,3.121,90,2.102,91,1.308,92,1.308,93,1.187,94,2.102,95,2.026,96,2.102,97,2.102,98,1.956,99,1.515,100,1.014,101,2.026,102,2.682,103,3.121,104,3.06,105,2.81,106,1.956,107,1.014,108,2.026,109,1.956,110,1.892,111,3.833,112,1.033,113,2.102,114,1.892,115,2.026,116,3.351,117,1.437,118,2.102,119,2.102,120,4.4,121,2.026,122,2.102,123,3.587,124,2.102,125,3.007,126,0.663,127,2.102,128,2.026,129,2.102,130,2.026,131,2.102,132,2.896,133,3.587,134,3.121,135,3.121,136,1.956,137,0.003,138,0.004,139,0.003,141,3.512]],["title/classes/Action.html",[0,0.248,8,0.7]],["body/classes/Action.html",[0,0.464,2,0.658,3,0.036,4,0.036,5,0.042,8,0.92,11,1.538,19,0.007,33,0.219,37,0.561,39,1.537,40,0.522,43,0.178,45,0.384,46,0.496,47,0.384,50,0.706,51,0.101,57,0.087,58,1.09,79,1.528,91,1.387,92,1.387,93,1.259,102,3.033,137,0.003,138,0.004,139,0.003,142,2.614,143,3.882,144,4.556,145,5.097,146,3.864,147,4.379,148,3.106,149,4.379,150,4.379,151,3.109,152,3.366,153,4.379,154,4.379,155,4.379,156,4.379,157,4.379,158,4.368,159,0.738,160,2.149,161,1.839,162,2.149,163,1.31,164,2.72,165,2.213,166,1.839,167,2.72,168,2.614,169,2.72,170,2.72,171,2.72,172,2.72,173,2.72,174,2.72,175,2.72,176,2.72,177,3.8,178,1.169,179,3.288,180,2.72,181,3.8,182,1.24,183,1.677,184,3.288,185,2.72,186,1.64,187,1.839,188,1.417,189,1.931,190,2.72,191,2.72,192,2.72,193,2.72,194,2.519,195,2.614,196,2.614,197,3.129,198,3.652,199,1.285,200,1.336,201,2.614,202,2.614,203,2.614,204,1.981,205,2.72,206,2.72,207,2.569,208,2.72,209,2.614,210,3.652,211,2.72,212,2.72]],["title/classes/AddLightCardFailure.html",[0,0.248,213,2.352]],["body/classes/AddLightCardFailure.html",[0,0.477,2,0.655,3,0.036,4,0.036,5,0.042,8,1.373,12,1.597,19,0.007,33,0.272,34,1.184,35,0.224,36,0.495,37,0.782,38,1.863,39,1.427,40,0.449,41,1.356,43,0.286,45,0.382,46,0.354,47,0.382,49,0.606,50,0.503,51,0.087,52,0.492,57,0.088,58,0.777,76,1.164,77,1.916,91,1.441,92,1.441,93,1.309,126,1.607,137,0.003,138,0.004,139,0.003,159,1.027,213,3.848,214,4.093,215,2.342,216,2.187,217,6.08,218,4.346,219,3.507,220,2.499,221,1.875,222,1.787,223,2.269,224,3.662,225,4.975,226,2.279,227,3.553,228,2.139,229,3.451,230,3.175,231,2.421,232,1.83,233,3.662,234,1.824,235,3.553,236,1.745,237,1.329,238,3.553,239,1.922,240,2.91,241,2.202,242,2.269,243,3.553,244,2.342,245,1.949,246,1.383,247,1.356,248,1.597,249,1.597,250,1.255,251,1.304,252,1.41,253,2.507,254,2.507,255,2.507,256,2.202,257,2.507,258,2.507,259,2.507,260,2.507,261,2.507,262,2.507,263,2.507,264,2.342]],["title/components/AppComponent.html",[265,0.944,266,1.635]],["body/components/AppComponent.html",[0,0.198,3,0.03,4,0.044,5,0.053,8,0.968,12,2.596,17,1.567,19,0.007,33,0.245,34,0.712,35,0.192,36,0.442,37,0.477,40,0.38,43,0.34,45,0.326,46,0.575,47,0.326,49,0.985,50,0.818,51,0.128,52,0.42,57,0.036,60,1.937,61,1.819,62,3.124,64,2.75,66,1.363,79,0.604,88,3.205,100,1.071,105,1.999,107,1.071,112,1.092,117,1.815,137,0.003,138,0.004,139,0.003,148,2.549,159,0.917,163,1.113,186,2.411,197,2.886,199,1.092,200,1.135,236,1.49,237,1.135,265,1.305,266,2.488,267,1.995,268,1.363,269,1.6,270,1.393,271,1.393,272,3.709,273,2.52,274,1.306,275,3.453,276,4.428,277,2.528,278,6.42,279,2.038,280,5.428,281,6.42,282,5.237,283,6.42,284,6.42,285,1.719,286,6.42,287,4.606,288,1.375,289,2.774,290,1.363,291,5.969,292,5.428,293,5.428,294,5.428,295,4.825,296,5.053,297,5.428,298,3.709,299,4.428,300,3.894,301,5.428,302,5.428,303,4.825,304,4.131,305,5.707,306,0.922,307,1.18,308,3.709,309,3.709,310,3.709,311,3.709,312,5.428,313,3.709,314,0.663,315,1.135,316,1.363,317,2.066,318,1.092,319,1.18,320,3.026,321,3.709,322,3.297,323,3.709,324,2.411,325,2.411,326,1.999,327,1.999,328,3.709,329,2.526,330,3.249,331,3.026,332,3.709,333,3.709,334,2.14,335,3.297,336,3.249,337,1.204,338,3.709,339,3.709,340,3.709,341,3.709,342,3.709,343,3.709,344,3.709,345,3.709,346,2.066,347,3.249,348,3.709,349,3.297,350,3.709,351,3.026,352,3.709,353,3.709,354,3.709,355,3.709,356,3.709,357,5.428,358,3.709,359,3.709,360,3.709,361,2.823,362,3.709,363,3.709,364,2.31,365,2.661,366,3.709,367,3.381,368,4.825,369,5.428,370,5.428,371,5.428,372,5.428,373,1.562,374,1.525,375,1.562,376,1.562,377,1.562,378,1.562,379,1.363,380,1.279,381,1.562,382,1.562,383,1.562,384,1.49,385,1.562,386,1.525,387,1.562,388,1.562,389,1.562,390,1.562,391,3.026,392,2.823,393,3.297,394,1.157,395,2.038,396,2.038,397,1.279,398,2.653,399,1.393,400,1.393,401,1.279,402,1.393,403,1.306,404,1.393,405,2.653,406,1.306,407,1.393,408,1.279,409,2.038,410,1.306,411,1.393,412,1.334,413,1.363,414,1.228,415,2.038,416,1.279,417,1.393,418,1.306,419,1.306,420,1.393,421,1.279,422,1.393,423,1.306,424,1.393,425,1.306,426,1.393,427,1.279,428,1.393,429,1.306,430,1.393,431,1.334,432,1.306,433,1.393,434,1.306,435,1.363,436,2.411,437,1.393,438,1.306,439,1.393,440,1.279,441,1.306,442,1.334,443,2.038,444,1.306,445,1.306,446,1.597,447,1.306,448,1.393,449,1.306,450,1.306,451,1.306,452,1.071,453,1.306,454,1.279,455,1.393,456,1.279,457,1.363,458,1.393]],["title/modules/AppModule.html",[459,1.908,460,3.331]],["body/modules/AppModule.html",[0,0.266,3,0.041,4,0.055,5,0.065,19,0.007,37,0.64,51,0.138,57,0.048,73,2.147,100,2.492,107,1.437,112,2.54,137,0.004,138,0.005,139,0.004,237,1.523,266,3.281,299,4.06,314,0.89,326,2.682,327,2.682,373,2.095,374,2.046,375,2.095,376,2.095,377,2.095,378,2.095,379,1.829,380,1.717,381,2.095,382,2.095,383,2.095,384,1.999,385,2.095,386,2.046,387,2.095,388,2.095,389,2.095,390,2.095,394,1.553,425,3.04,429,3.04,459,2.046,460,6.918,461,2.382,462,2.773,463,4.505,464,4.638,465,3.994,466,2.522,467,4.424,468,4.424,469,4.424,470,4.424,471,6.193,472,6.016,473,6.016,474,3.849,475,2.979,476,4.977,477,3.484,478,6.672,479,5.078,480,3.571,481,3.484,482,6.672,483,4.977,484,6.672,485,2.871,486,4.155,487,6.672,488,6.672,489,2.871,490,5.443,491,5.443,492,2.599,493,4.977,494,5.931,495,3.788,496,4.06,497,4.977,498,3.39,499,4.977,500,4.977,501,4.424,502,4.977,503,3.788,504,4.977,505,4.977,506,5.931,507,4.06,508,4.06,509,4.424,510,4.06,511,5.728,512,4.06,513,4.977,514,5.443,515,5.443,516,5.443,517,4.977,518,4.977,519,4.977,520,4.977,521,4.977,522,4.977,523,4.977,524,3.788,525,3.788]],["title/modules/AppRoutingModule.html",[459,1.908,471,3.331]],["body/modules/AppRoutingModule.html",[0,0.311,3,0.048,4,0.06,5,0.072,19,0.007,37,0.747,51,0.126,57,0.072,100,2.343,104,2.861,107,1.679,114,3.133,137,0.004,138,0.005,139,0.004,178,1.977,197,2.136,237,1.778,265,1.501,314,1.039,373,2.448,374,2.39,375,2.448,376,2.448,377,2.448,378,2.448,379,2.136,380,2.005,381,2.448,382,2.448,383,2.448,384,2.335,385,2.448,386,2.39,387,2.448,388,2.448,389,2.448,390,2.448,461,2.782,466,2.946,471,5.298,477,3.036,481,3.856,501,5.168,526,5.814,527,4.171,528,7.384,529,5.298,530,5.317,531,3.239,532,6.707,533,4.743,534,3.239,535,3.621,536,6.644,537,4.259,538,8.537,539,5.814,540,6.498,541,4.743,542,5.814,543,4.743,544,5.814,545,2.638,546,5.814,547,5.168,548,5.814,549,4.743,550,5.814,551,5.814,552,5.814,553,5.168,554,5.814,555,3.779,556,5.814,557,5.814,558,5.814]],["title/interfaces/AppState.html",[318,1.366,559,2.053]],["body/interfaces/AppState.html",[3,0.039,4,0.039,5,0.046,12,3.032,15,3.483,19,0.007,26,5.113,33,0.259,35,0.245,36,0.526,51,0.14,52,0.538,57,0.08,117,1.697,137,0.003,138,0.005,139,0.003,159,1.394,178,2.112,251,1.939,318,1.902,414,2.732,446,2.428,534,2.645,535,2.957,537,4.759,545,3.743,559,2.099,560,2.738,561,4.747,562,4.759,563,4.06,564,5.424,565,6.434,566,6.434,567,6.434,568,6.434,569,6.434,570,7.887,571,6.434,572,6.434,573,6.434,574,4.747,575,4.402,576,3.613,577,4.22,578,6.462,579,4.747,580,6.462,581,6.462,582,6.462,583,4.747,584,5.272,585,4.747,586,5.272,587,4.747,588,4.747,589,4.747,590,6.462,591,4.22,592,6.462,593,4.747,594,6.462,595,4.747,596,4.747,597,6.462,598,4.747,599,6.462,600,4.747,601,6.462,602,4.747,603,6.462,604,4.747,605,6.462,606,4.747,607,4.747,608,4.747,609,3.728,610,4.747,611,4.747,612,4.747,613,5.272,614,4.747,615,5.272,616,4.747,617,4.747,618,5.272,619,4.747,620,4.747,621,4.22,622,5.272,623,4.747,624,4.747,625,4.747,626,5.272,627,4.747,628,4.747,629,5.272,630,4.747,631,4.22,632,4.22,633,4.747,634,6.462,635,4.22,636,4.22,637,4.747,638,3.873,639,4.747]],["title/classes/ApplyFilter.html",[0,0.248,640,2.586]],["body/classes/ApplyFilter.html",[0,0.406,2,0.918,3,0.05,4,0.05,5,0.059,8,1.308,19,0.007,33,0.274,34,1.087,35,0.314,36,0.618,37,0.977,38,1.78,39,1.36,40,0.36,41,1.899,43,0.338,45,0.535,46,0.495,47,0.535,49,0.848,50,0.705,51,0.119,52,0.69,57,0.084,58,1.088,61,1.724,62,3.361,77,1.821,91,1.214,92,1.214,93,1.102,137,0.004,138,0.006,139,0.004,148,1.976,163,1.826,216,2.585,452,2.393,537,4.385,640,4.835,641,4.633,642,7.601,643,6.087,644,6.757,645,3.957,646,3.957,647,4.385,648,3.644,649,4.633,650,3.511,651,4.966,652,5.411,653,3.791,654,5.177,655,5.411,656,5.411,657,4.966]],["title/components/ArchivesComponent.html",[265,0.944,401,1.601]],["body/components/ArchivesComponent.html",[0,0.275,3,0.042,4,0.056,5,0.066,19,0.007,33,0.197,34,0.896,35,0.266,37,0.663,40,0.453,43,0.279,46,0.623,51,0.074,57,0.05,61,1.46,100,1.488,107,1.488,112,1.517,137,0.004,138,0.005,139,0.004,159,1.154,199,1.517,200,1.576,237,1.576,265,1.557,266,1.815,267,2.509,268,1.894,269,2.223,270,1.935,271,1.935,273,3.006,274,1.815,275,3.533,277,3.18,279,2.564,288,1.729,289,3.201,306,1.281,307,1.64,314,0.921,373,2.17,374,2.119,375,2.17,376,2.17,377,2.17,378,2.17,379,1.894,380,1.778,381,2.17,382,2.17,383,2.17,384,2.07,385,2.17,386,2.119,387,2.17,388,2.17,389,2.17,390,2.17,394,1.608,395,2.564,396,2.564,397,1.778,398,3.062,399,1.935,400,1.935,401,2.813,402,1.935,403,1.815,404,1.935,405,3.062,406,1.815,407,1.935,408,1.778,409,2.564,410,1.815,411,1.935,412,1.854,413,1.894,414,1.707,415,2.564,416,1.778,417,1.935,418,1.815,419,1.815,420,1.935,421,1.778,422,1.935,423,1.815,424,1.935,425,1.815,426,1.935,427,1.778,428,1.935,429,1.815,430,1.935,431,1.854,432,1.815,433,1.935,434,1.815,435,1.894,436,2.876,437,1.935,438,1.815,439,1.935,440,1.778,441,1.815,442,1.854,443,2.564,444,1.815,445,1.815,446,2.01,447,1.815,448,1.935,449,1.815,450,1.815,451,1.815,452,1.488,453,1.815,454,1.778,455,1.935,456,1.778,457,1.894,458,1.935,541,6.651,658,5.154,659,7.658,660,6.829,661,5.154,662,5.154,663,5.197]],["title/modules/ArchivesModule.html",[459,1.908,664,3.533]],["body/modules/ArchivesModule.html",[0,0.34,3,0.052,4,0.064,5,0.076,19,0.007,37,0.818,51,0.126,57,0.062,73,2.745,107,1.838,137,0.005,138,0.006,139,0.005,237,1.947,314,1.138,373,2.679,374,2.616,375,2.679,376,2.679,377,2.679,378,2.679,379,2.339,380,2.195,381,2.679,382,2.679,383,2.679,384,2.556,385,2.679,386,2.616,387,2.679,388,2.679,389,2.679,390,2.679,394,1.985,401,3.177,459,2.616,461,3.046,462,3.545,463,5.061,464,3.671,465,3.81,466,3.225,474,4.507,475,3.81,477,4.08,481,4.08,486,4.866,489,3.671,498,4.335,541,5.192,664,7.171,665,5.658,666,5.658,667,5.658,668,6.609,669,6.365,670,5.658]],["title/modules/ArchivesRoutingModule.html",[459,1.908,668,3.331]],["body/modules/ArchivesRoutingModule.html",[0,0.352,3,0.054,4,0.065,5,0.077,19,0.007,37,0.846,51,0.128,57,0.064,107,1.9,137,0.005,138,0.006,139,0.005,178,1.762,237,2.013,265,1.338,314,1.176,373,2.77,374,2.705,375,2.77,376,2.77,377,2.77,378,2.77,379,2.418,380,2.27,381,2.77,382,2.77,383,2.77,384,2.643,385,2.77,386,2.705,387,2.77,388,2.77,389,2.77,390,2.77,401,2.751,461,3.149,466,3.334,477,3.436,481,4.164,527,4.721,529,5.721,530,5.343,531,3.666,532,6.069,533,5.368,536,4.721,540,5.008,668,5.721,670,5.849,671,6.58,672,5.008]],["title/classes/AuthObject.html",[0,0.248,673,3.787]],["body/classes/AuthObject.html",[0,0.357,2,0.374,3,0.02,4,0.02,5,0.024,7,0.973,9,2.017,12,3.117,13,1.959,17,1.714,19,0.007,24,2.689,25,1.096,28,1.38,29,1.965,33,0.223,35,0.128,36,0.324,37,1.101,38,0.855,40,0.338,42,3.785,43,0.255,45,0.218,46,0.202,47,0.438,51,0.119,52,0.281,53,3.289,54,1.22,55,1.528,57,0.065,58,0.443,64,2.017,66,1.463,71,2.324,78,3.7,79,1.459,80,4.201,81,4.52,82,3.668,83,2.527,98,3.183,99,3.25,104,2.812,107,1.441,110,3.079,117,1.544,126,0.468,137,0.002,138,0.003,139,0.002,148,1.619,163,0.743,178,2.22,182,1.853,183,2.193,186,1.874,188,1.292,197,1.834,204,3.508,207,3.255,232,1.043,237,1.748,239,1.096,251,0.743,285,2.189,296,1.543,307,0.788,314,0.443,315,0.758,316,0.911,317,1.38,318,0.729,319,0.788,334,1.429,336,4.629,337,0.804,379,2.1,446,1.842,485,1.429,534,1.38,535,1.543,673,5.105,674,2.021,675,3.539,676,5.941,677,5.079,678,5.563,679,2.478,680,2.478,681,1.429,682,2.478,683,2.478,684,2.478,685,2.478,686,1.172,687,3.714,688,2.203,689,1.778,690,1.256,691,1.294,692,1.429,693,3.892,694,1.886,695,1.543,696,2.203,697,6.566,698,2.021,699,1.38,700,1.335,701,2.203,702,2.021,703,3.539,704,2.203,705,1.335,706,2.203,707,2.203,708,4.435,709,2.203,710,2.203,711,2.203,712,2.203,713,2.203,714,2.203,715,2.203,716,2.203,717,2.203,718,2.203,719,2.203,720,2.203,721,2.203,722,2.203,723,2.203,724,5.941,725,5.563,726,3.539,727,5.563,728,2.203,729,2.203,730,2.203,731,3.539,732,2.203,733,3.539,734,3.539,735,3.539,736,2.203,737,3.539,738,2.203,739,2.021,740,3.03,741,2.203,742,3.247,743,2.021,744,1.38,745,2.203,746,3.539,747,2.203,748,3.892,749,2.203,750,3.539,751,2.203,752,4.435,753,2.203,754,5.957,755,4.435,756,4.435,757,4.435,758,4.435,759,4.435,760,4.435,761,2.203,762,2.203,763,2.203,764,2.203,765,3.539,766,2.021,767,2.78,768,3.539,769,3.539,770,3.539,771,2.203,772,2.203,773,2.203,774,4.435,775,2.987,776,3.539,777,2.588,778,2.203,779,3.539,780,2.203,781,3.247,782,3.539,783,3.539,784,2.203,785,2.203,786,3.539,787,3.539,788,2.203,789,2.203,790,2.203,791,2.203,792,2.203,793,2.203,794,2.203,795,2.203,796,2.203,797,2.203,798,2.203,799,2.203,800,2.203,801,2.203,802,1.019,803,2.203,804,2.203,805,2.203,806,2.203,807,2.203,808,2.203,809,2.203,810,2.203,811,2.021,812,2.203,813,3.247,814,5.563,815,2.203,816,3.539,817,2.606,818,4.661,819,4.07,820,2.203,821,2.021,822,2.203,823,2.203,824,2.479,825,2.203,826,3.539,827,2.203,828,3.539,829,2.203,830,2.203,831,2.203,832,2.203,833,2.203,834,2.203,835,2.203,836,2.203,837,2.712,838,2.203,839,2.203,840,2.203,841,2.203,842,2.203,843,2.203,844,2.203,845,2.203,846,2.203,847,2.203,848,2.203,849,2.203,850,2.203,851,2.203,852,2.203,853,2.203,854,2.203,855,4.435,856,3.539,857,2.203,858,2.203,859,3.539,860,3.539,861,2.203,862,1.096,863,2.203,864,2.203,865,2.203,866,2.203,867,2.203,868,2.203,869,2.203,870,2.203,871,1.886,872,2.203,873,2.203,874,2.203,875,2.203,876,2.203,877,2.203,878,2.203,879,3.539,880,2.203,881,2.203,882,2.203,883,2.203,884,2.203,885,2.203,886,2.203,887,2.203,888,2.203,889,2.203,890,2.203,891,2.021,892,3.798,893,2.203,894,2.203,895,1.886,896,2.203,897,2.203,898,3.539,899,3.539,900,1.76,901,2.203,902,2.203,903,2.203,904,2.203]],["title/interfaces/AuthState.html",[559,2.053,565,3.787]],["body/interfaces/AuthState.html",[3,0.05,4,0.05,5,0.059,19,0.007,29,1.519,33,0.27,35,0.316,36,0.62,51,0.109,53,4.401,54,3.006,55,3.62,56,2.845,57,0.074,78,4.531,79,1.577,80,4.531,81,4.531,82,4.67,83,3.671,137,0.004,138,0.006,139,0.004,178,1.636,183,3.551,379,3.286,559,2.701,560,3.524,565,6.772,905,6.109,906,7.295,907,7.295,908,6.109,909,6.109]],["title/injectables/AuthenticationEffects.html",[15,2.502,686,1.366]],["body/injectables/AuthenticationEffects.html",[0,0.115,1,2.952,3,0.018,4,0.018,5,0.021,7,1.398,8,1.314,11,1.855,12,3.24,13,3.41,14,1.659,15,1.919,17,2.199,19,0.007,20,3.359,21,3.039,23,2.054,24,2.839,29,2.192,33,0.244,35,0.112,36,0.29,38,1.542,40,0.211,43,0.302,45,0.582,46,0.564,47,0.399,49,0.924,50,0.726,51,0.119,52,0.245,55,2.839,56,1.006,57,0.021,59,1.034,62,1.575,63,2.372,64,2.669,66,2.897,68,1.984,69,2.372,72,3.263,74,4.117,75,2.372,79,0.58,81,3.84,83,1.575,88,2.844,91,0.569,92,0.569,93,0.516,95,2.054,99,3.097,102,2.272,104,3.81,105,1.919,106,3.492,108,2.054,111,1.984,115,2.054,117,1.659,121,3.039,125,2.054,126,0.408,128,3.039,130,3.039,132,2.714,133,2.054,136,4.462,137,0.003,138,0.003,139,0.002,146,1.006,162,1.063,163,1.989,165,1.095,178,1.775,182,1.802,227,1.095,239,2.33,247,0.674,285,1.775,288,0.902,290,0.794,296,3.905,300,3.779,306,1.129,307,0.687,314,0.386,315,0.661,316,0.794,317,1.204,318,0.636,319,0.687,324,1.405,331,1.763,336,3.153,337,0.701,364,2.218,365,1.55,379,1.936,392,2.71,531,1.204,564,4.821,686,1.048,690,1.095,691,2.372,692,2.62,705,3.734,739,2.905,740,2.71,743,5.114,748,2.426,766,2.905,777,2.315,802,2.577,813,2.905,818,2.905,819,5.114,862,0.956,895,1.645,910,0.98,911,2.161,912,3.561,913,4.542,914,3.561,915,5.268,916,3.859,917,5.268,918,4.309,919,2.161,920,3.561,921,3.561,922,3.561,923,3.561,924,3.165,925,5.268,926,3.561,927,2.161,928,3.561,929,2.161,930,3.561,931,3.561,932,2.161,933,3.561,934,2.161,935,4.297,936,3.561,937,3.165,938,3.561,939,3.492,940,5.087,941,2.161,942,5.652,943,6.269,944,3.561,945,5.114,946,3.561,947,3.561,948,3.561,949,3.753,950,3.561,951,3.561,952,3.561,953,3.561,954,3.561,955,3.561,956,5.268,957,5.268,958,5.268,959,3.561,960,6.269,961,5.268,962,5.893,963,3.561,964,3.561,965,4.542,966,3.561,967,4.434,968,4.542,969,3.561,970,3.561,971,2.315,972,2.218,973,2.905,974,3.561,975,3.561,976,3.561,977,3.561,978,2.161,979,3.561,980,3.561,981,2.905,982,3.561,983,5.268,984,3.561,985,2.555,986,2.132,987,3.561,988,2.161,989,3.561,990,3.561,991,3.561,992,5.268,993,3.561,994,2.161,995,2.315,996,3.561,997,5.268,998,3.561,999,3.561,1000,3.561,1001,3.561,1002,2.161,1003,3.561,1004,3.561,1005,3.561,1006,4.542,1007,4.542,1008,3.561,1009,3.561,1010,2.132,1011,3.561,1012,3.561,1013,3.561,1014,2.719,1015,2.161,1016,3.561,1017,2.054,1018,1.246,1019,1.165,1020,2.161,1021,1.55,1022,1.405,1023,2.161,1024,1.55,1025,1.763,1026,1.645,1027,1.645,1028,1.645,1029,5.826,1030,2.161,1031,2.161,1032,3.424,1033,1.405,1034,2.161,1035,2.719,1036,2.161,1037,2.161,1038,2.555,1039,2.161,1040,2.161,1041,2.161,1042,2.161,1043,2.161,1044,2.161,1045,2.161,1046,3.561,1047,2.161,1048,2.161,1049,2.161,1050,2.161,1051,2.161]],["title/components/BaseSettingComponent.html",[265,0.944,403,1.635]],["body/components/BaseSettingComponent.html",[0,0.182,3,0.028,4,0.028,5,0.033,19,0.007,29,1.27,33,0.248,34,0.67,35,0.176,36,0.415,37,0.786,40,0.202,43,0.37,45,0.638,46,0.661,47,0.638,49,0.712,50,0.883,51,0.123,52,0.387,57,0.033,61,0.968,79,1.105,93,0.495,100,0.986,107,1.96,112,1.005,117,1.761,123,1.97,137,0.002,138,0.004,139,0.002,148,1.985,151,2.258,152,3.002,159,0.863,163,1.025,178,0.914,182,1.244,183,1.311,199,1.005,200,1.045,265,1.38,266,1.203,267,1.877,268,1.255,269,1.473,270,1.283,271,1.283,273,2.401,274,1.203,275,3.429,277,2.379,279,1.918,285,2.224,288,1.293,289,2.665,290,1.255,306,2.02,307,2.312,314,0.61,315,1.045,316,1.255,318,1.005,319,1.087,324,2.22,334,1.97,347,2.045,364,2.127,380,2.11,394,1.065,395,1.918,396,1.918,397,1.178,398,2.549,399,1.283,400,1.283,401,1.178,402,1.283,403,2.391,404,3.176,405,2.549,406,1.203,407,1.283,408,1.178,409,1.918,410,1.203,411,1.283,412,1.229,413,1.255,414,1.131,415,1.918,416,1.178,417,1.283,418,1.203,419,1.203,420,1.283,421,1.178,422,1.283,423,1.203,424,1.283,425,1.203,426,1.283,427,1.178,428,1.283,429,1.203,430,1.283,431,1.229,432,1.203,433,1.283,434,1.203,435,1.255,436,2.297,437,1.283,438,1.203,439,1.283,440,1.178,441,1.203,442,1.229,443,1.918,444,1.203,445,1.203,446,1.503,447,1.203,448,1.283,449,1.203,450,1.203,451,1.203,452,1.474,453,1.203,454,1.178,455,1.283,456,1.178,457,1.255,458,1.283,492,1.784,545,2.317,663,3.887,695,2.127,699,1.903,700,1.841,802,2.099,824,3.181,1052,9.122,1053,6.545,1054,2.6,1055,3.528,1056,5.382,1057,4.655,1058,3.887,1059,4.166,1060,3.661,1061,6.302,1062,4.166,1063,3.057,1064,4.166,1065,3.478,1066,3.915,1067,4.623,1068,3.478,1069,4.166,1070,4.166,1071,4.166,1072,5.107,1073,3.036,1074,3.416,1075,3.416,1076,2.326,1077,3.416,1078,2.326,1079,3.416,1080,3.416,1081,3.915,1082,3.478,1083,4.349,1084,3.416,1085,2.326,1086,3.416,1087,3.416,1088,3.416,1089,2.326,1090,3.416,1091,2.127,1092,3.416,1093,3.416,1094,3.416,1095,3.036,1096,1.841,1097,2.786,1098,3.036,1099,3.036,1100,2.6,1101,3.887,1102,2.45,1103,2.45,1104,2.786,1105,2.326,1106,3.416,1107,3.416,1108,3.416,1109,3.036,1110,3.416,1111,3.416,1112,5.107,1113,3.416,1114,5.107,1115,3.416,1116,3.416,1117,3.416,1118,2.6,1119,3.416,1120,3.887,1121,3.416,1122,2.6,1123,3.416,1124,2.6,1125,3.416,1126,3.416,1127,3.416,1128,3.416,1129,3.416,1130,3.416,1131,3.416,1132,2.6,1133,2.6,1134,3.416,1135,3.416,1136,3.416,1137,3.416,1138,3.416,1139,3.416,1140,3.416,1141,3.416,1142,3.036,1143,3.036,1144,3.416]],["title/classes/Card.html",[0,0.248,159,0.785]],["body/classes/Card.html",[0,0.374,2,0.807,3,0.044,4,0.044,5,0.052,11,2.747,19,0.007,33,0.154,39,1.523,40,0.462,43,0.218,45,0.47,46,0.435,47,0.47,51,0.112,57,0.076,58,0.956,79,1.594,91,1.118,92,1.118,93,1.015,137,0.004,138,0.005,139,0.004,146,4.24,159,1.183,160,4.072,162,2.633,163,1.605,165,2.711,179,4.204,188,2.532,207,3.965,221,2.308,222,2.2,232,3.284,269,2.308,287,5.936,681,5.251,1145,4.365,1146,5.351,1147,5.071,1148,5.937,1149,6.363,1150,5.937,1151,5.937,1152,6.113,1153,6.363,1154,6.363,1155,5.937,1156,5.937,1157,5.597,1158,5.351,1159,5.71,1160,6.363,1161,4.072,1162,4.072,1163,3.478,1164,4.756,1165,4.365]],["title/components/CardComponent.html",[265,0.944,406,1.635]],["body/components/CardComponent.html",[0,0.187,3,0.029,4,0.043,5,0.05,19,0.007,33,0.245,34,0.683,35,0.181,36,0.423,37,0.989,40,0.207,43,0.352,45,0.545,46,0.626,47,0.545,49,0.488,50,0.405,51,0.125,52,0.397,57,0.034,61,0.992,79,1.361,83,1.548,91,0.559,92,0.559,93,0.508,100,1.011,107,1.011,112,1.03,117,1.84,137,0.003,138,0.004,139,0.003,148,1.688,151,2.3,152,2.745,159,1.413,160,1.723,163,1.05,182,1.564,188,1.136,197,1.912,199,1.827,200,1.071,207,2.19,220,3.498,221,1.51,222,1.439,236,2.76,237,1.071,240,1.675,265,1.262,266,1.233,267,1.912,268,1.287,269,1.51,270,1.315,271,1.315,273,2.437,274,1.233,275,3.436,277,2.423,279,1.953,282,5.063,285,2.06,287,2.512,288,1.317,289,2.697,306,1.708,307,1.655,314,0.626,316,1.287,318,1.03,319,1.114,320,2.856,325,4.466,326,1.887,327,1.887,334,2.02,337,1.136,351,2.856,373,1.474,374,1.439,375,1.474,376,1.474,377,1.474,378,1.474,379,1.287,380,1.208,381,1.474,382,1.474,383,1.474,384,1.406,385,1.474,386,1.439,387,1.474,388,1.474,389,1.474,390,1.474,391,2.856,394,1.092,395,1.953,396,1.953,397,1.208,398,2.58,399,1.315,400,1.315,401,1.208,402,1.315,403,1.233,404,1.315,405,2.58,406,2.42,407,1.315,408,1.208,409,1.953,410,1.233,411,1.315,412,1.259,413,1.287,414,1.159,415,1.953,416,1.208,417,1.315,418,1.233,419,1.233,420,1.315,421,1.208,422,1.315,423,1.233,424,1.315,425,1.233,426,1.315,427,1.208,428,1.315,429,1.233,430,1.315,431,1.259,432,1.233,433,1.315,434,1.233,435,1.287,436,2.331,437,1.315,438,1.233,439,1.315,440,1.208,441,1.233,442,1.259,443,1.953,444,1.233,445,1.233,446,2.161,447,1.233,448,1.315,449,1.233,450,1.233,451,1.233,452,1.011,453,1.233,454,1.208,455,1.315,456,1.208,457,1.287,458,1.315,531,1.95,562,3.001,564,4.792,695,2.18,802,1.439,900,2.3,1033,2.276,1035,4.113,1038,3.732,1155,2.665,1163,2.276,1166,3.501,1167,6.207,1168,5.202,1169,5.518,1170,6.207,1171,5.202,1172,5.202,1173,6.871,1174,3.114,1175,5.518,1176,3.501,1177,4.228,1178,4.279,1179,5.202,1180,3.501,1181,3.501,1182,3.501,1183,3.501,1184,3.501,1185,3.501,1186,3.501,1187,3.501,1188,3.501,1189,3.501,1190,3.501,1191,3.112,1192,3.501,1193,3.501,1194,3.112,1195,3.112,1196,2.276,1197,3.501,1198,3.501,1199,4.624,1200,3.501,1201,3.112,1202,3.112,1203,3.501,1204,3.501,1205,3.501,1206,3.501,1207,3.501,1208,3.381,1209,3.501,1210,2.856,1211,3.501,1212,3.501,1213,3.501,1214,3.501,1215,3.501,1216,3.501,1217,3.501,1218,3.501,1219,3.501,1220,3.501,1221,3.501,1222,5.202,1223,3.501,1224,3.501,1225,3.501,1226,3.501,1227,5.202,1228,5.202,1229,5.202,1230,3.501,1231,4.624,1232,3.501,1233,3.501,1234,3.501,1235,3.501,1236,6.108,1237,3.501,1238,5.063,1239,3.501,1240,5.063,1241,3.501,1242,3.501,1243,3.501,1244,3.112,1245,3.501,1246,3.501,1247,3.501]],["title/components/CardDetailsComponent.html",[265,0.944,408,1.601]],["body/components/CardDetailsComponent.html",[0,0.252,3,0.039,4,0.039,5,0.046,11,2.263,19,0.007,33,0.237,34,0.843,35,0.243,36,0.523,40,0.279,43,0.321,45,0.413,46,0.639,47,0.413,51,0.122,52,0.533,57,0.046,61,1.334,100,1.36,112,1.386,117,1.962,137,0.003,138,0.005,139,0.003,159,1.571,160,3.601,161,1.982,178,1.261,183,1.808,199,1.386,200,1.44,265,1.487,266,1.658,267,2.362,268,1.73,270,1.768,271,1.768,273,2.872,274,1.658,275,3.513,279,2.413,285,1.261,288,1.627,289,3.086,290,1.73,306,1.171,307,1.498,314,0.842,318,1.386,319,1.498,337,1.528,394,1.469,395,2.413,396,2.413,397,1.624,398,2.952,399,1.768,400,1.768,401,1.624,402,1.768,403,1.658,404,1.768,405,2.952,406,1.658,407,1.768,408,2.711,409,2.413,410,1.658,411,1.768,412,1.694,413,1.73,414,1.559,415,2.413,416,1.624,417,1.768,418,1.658,419,1.658,420,1.768,421,1.624,422,1.768,423,1.658,424,1.768,425,1.658,426,1.768,427,1.624,428,1.768,429,1.658,430,1.768,431,1.694,432,1.658,433,1.768,434,1.658,435,1.73,436,2.747,437,1.768,438,1.658,439,1.768,440,1.624,441,1.658,442,1.694,443,2.413,444,1.658,445,1.658,446,1.891,447,1.658,448,1.768,449,1.658,450,1.658,451,1.658,452,1.36,453,1.658,454,1.624,455,1.768,456,1.624,457,1.73,458,1.768,1157,5.903,1248,8.227,1249,6.711,1250,4.709,1251,5.713,1252,4.841,1253,6.427,1254,4.709,1255,4.709,1256,4.709,1257,4.709,1258,3.584,1259,4.709,1260,4.709,1261,4.186,1262,4.709,1263,4.709,1264,6.427,1265,4.709,1266,4.709,1267,4.186,1268,4.709,1269,4.186,1270,4.709]],["title/injectables/CardEffects.html",[584,3.787,686,1.366]],["body/injectables/CardEffects.html",[0,0.304,3,0.047,4,0.047,5,0.055,8,0.858,17,1.961,19,0.007,29,1.811,33,0.21,35,0.294,36,0.593,40,0.337,43,0.297,45,0.5,46,0.463,47,0.5,49,0.793,50,0.659,51,0.133,52,0.645,57,0.055,91,0.909,92,0.909,93,0.825,99,3.465,117,2.069,137,0.004,138,0.005,139,0.004,159,1.48,161,2.396,163,1.707,182,1.722,285,1.95,290,2.091,314,1.017,315,1.741,316,2.091,318,1.675,319,1.81,337,1.847,347,4.36,584,5.942,686,2.144,690,2.883,691,2.972,802,2.994,900,2.517,910,2.582,916,5.072,918,5.505,939,3.17,940,4.634,949,4.36,971,4.735,972,5.275,1018,3.283,1019,3.067,1025,4.642,1028,4.331,1271,5.691,1272,7.141,1273,5.691,1274,7.284,1275,5.226,1276,7.284,1277,7.284,1278,7.284,1279,7.284,1280,5.691,1281,3.699,1282,3.067,1283,3.406,1284,3.406,1285,4.331,1286,4.331,1287,4.331]],["title/interfaces/CardFeedState.html",[559,2.053,568,3.787]],["body/interfaces/CardFeedState.html",[3,0.04,4,0.04,5,0.047,7,1.921,11,3.025,19,0.007,25,3.687,29,1.217,33,0.24,35,0.253,36,0.537,51,0.114,55,3.066,57,0.087,79,1.398,126,1.575,137,0.006,138,0.005,139,0.004,148,2.422,159,1.115,163,2.396,178,1.766,182,1.695,183,1.879,188,2.141,197,1.798,220,3.899,221,2.111,222,2.012,365,4.733,367,5.467,452,2.154,537,4.954,559,2.164,560,2.823,568,6.087,645,3.181,646,3.181,647,2.823,648,2.929,862,2.164,985,4.733,1288,4.894,1289,5.864,1290,7.411,1291,7.161,1292,5.021,1293,7.803,1294,7.099,1295,4.493,1296,5.381,1297,5.864,1298,5.864,1299,5.864,1300,5.864,1301,4.733,1302,5.864,1303,6.681,1304,6.596,1305,6.596,1306,4.288,1307,5.864,1308,5.864,1309,3.992,1310,4.894,1311,4.35,1312,7.411,1313,4.35,1314,4.35,1315,4.894,1316,4.894,1317,4.894,1318,4.894,1319,4.894,1320,4.894,1321,4.894,1322,4.894,1323,4.894,1324,4.894,1325,4.894,1326,4.894,1327,4.894,1328,4.894,1329,4.894,1330,4.35,1331,4.894,1332,4.894,1333,4.35]],["title/components/CardListComponent.html",[265,0.944,410,1.635]],["body/components/CardListComponent.html",[0,0.28,3,0.043,4,0.043,5,0.051,17,1.886,19,0.007,33,0.237,35,0.271,37,0.888,40,0.457,43,0.315,46,0.629,51,0.111,57,0.051,61,1.486,100,1.515,112,1.544,137,0.004,138,0.005,139,0.004,151,3.056,152,3.417,159,1.481,199,1.544,200,2.363,220,3.176,221,2.263,222,2.157,241,3.914,256,3.914,265,1.571,266,1.848,267,2.539,268,1.928,270,1.97,271,1.97,274,1.848,275,3.536,279,2.595,314,0.938,315,1.605,394,1.637,395,2.595,396,2.595,397,1.81,398,3.083,399,1.97,400,1.97,401,1.81,402,1.97,403,1.848,404,1.97,405,3.083,406,1.848,407,1.97,408,1.81,409,2.595,410,2.892,411,1.97,412,1.887,413,1.928,414,1.737,415,2.595,416,1.81,417,1.97,418,1.848,419,1.848,420,1.97,421,1.81,422,1.97,423,1.848,424,1.97,425,1.848,426,1.97,427,1.81,428,1.97,429,1.848,430,1.97,431,1.887,432,1.848,433,1.97,434,1.848,435,1.928,436,2.901,437,1.97,438,1.848,439,1.97,440,1.81,441,1.848,442,1.887,443,2.595,444,1.848,445,1.848,446,2.033,447,1.848,448,1.97,449,1.848,450,1.848,451,1.848,452,1.515,453,1.848,454,1.81,455,1.97,456,1.81,457,1.928,458,1.97,1334,5.891,1335,7.299,1336,5.246,1337,6.91,1338,6.91,1339,5.246]],["title/injectables/CardOperationEffects.html",[586,3.787,686,1.366]],["body/injectables/CardOperationEffects.html",[0,0.204,3,0.031,4,0.031,5,0.037,8,1.146,12,2.629,17,1.997,19,0.007,29,2.158,33,0.229,35,0.197,36,0.45,38,1.189,40,0.226,43,0.292,45,0.335,46,0.31,47,0.335,49,1.14,50,0.755,51,0.129,52,0.432,57,0.037,59,1.823,66,2.629,88,2.511,91,0.608,92,0.608,93,0.552,99,2.812,117,1.832,126,1.584,137,0.003,138,0.005,139,0.003,159,1.467,163,2.28,178,1.482,179,2.983,182,1.808,188,1.797,200,1.693,213,3.303,220,2.276,223,1.99,229,1.875,240,2.649,242,2.891,243,3.303,244,3.514,245,1.059,256,2.805,264,2.053,285,1.482,290,1.4,295,4.921,314,0.681,315,1.166,316,1.4,317,2.123,318,1.121,319,1.212,337,1.237,347,4.747,365,3.972,452,1.1,586,4.516,640,2.123,647,2.198,648,2.281,649,2.9,686,1.629,690,1.93,691,3.405,802,3.568,862,2.448,910,1.729,916,4.558,918,4.651,939,3.632,940,4.72,949,4.747,972,5.221,981,5.837,1018,2.198,1019,2.053,1021,2.734,1025,3.108,1026,2.9,1027,2.9,1028,2.9,1103,2.734,1118,4.962,1194,3.387,1195,3.387,1282,3.514,1291,4.516,1292,5.446,1295,3.771,1296,4.516,1340,7.601,1341,3.81,1342,6.52,1343,3.81,1344,4.921,1345,5.536,1346,5.536,1347,7.156,1348,5.536,1349,5.536,1350,5.536,1351,5.536,1352,5.536,1353,4.921,1354,5.536,1355,5.536,1356,5.536,1357,3.81,1358,6.361,1359,6.361,1360,4.213,1361,5.536,1362,5.536,1363,5.536,1364,7.156,1365,5.536,1366,7.156,1367,5.536,1368,5.536,1369,5.536,1370,5.536,1371,5.536,1372,5.837,1373,7.156,1374,3.81,1375,5.536,1376,5.536,1377,4.921,1378,5.536,1379,5.536,1380,3.81,1381,2.734]],["title/injectables/CardService.html",[686,1.366,918,3.018]],["body/injectables/CardService.html",[0,0.247,3,0.038,4,0.052,5,0.045,17,2.149,19,0.007,29,1.938,33,0.243,35,0.238,36,0.516,37,0.931,39,1.399,40,0.273,43,0.365,45,0.684,46,0.634,47,0.684,49,0.643,50,0.534,51,0.128,55,2.433,57,0.045,71,2.15,79,1.407,80,2.339,126,1.198,137,0.003,138,0.005,139,0.003,159,0.78,161,1.943,178,1.236,182,1.79,188,1.498,207,3.281,250,1.333,285,1.236,288,1.605,306,2.031,307,1.468,314,0.825,315,1.412,337,1.498,380,2.498,485,2.663,495,3.513,534,2.571,535,2.875,686,1.866,687,5.066,693,5.888,694,3.513,705,4.549,754,3.765,871,4.825,891,3.765,910,2.094,918,4.121,1282,3.416,1382,4.616,1383,7.24,1384,7.24,1385,7.24,1386,6.339,1387,7.794,1388,7.794,1389,6.339,1390,3.513,1391,6.339,1392,6.339,1393,8.169,1394,4.616,1395,6.339,1396,4.616,1397,6.339,1398,4.616,1399,4.616,1400,4.616,1401,7.24,1402,4.616,1403,4.616,1404,4.616,1405,4.616,1406,4.616,1407,4.616,1408,4.616,1409,3.312,1410,3.765,1411,4.616,1412,4.616,1413,4.616,1414,6.339,1415,4.616,1416,4.616,1417,4.616,1418,4.616,1419,4.616,1420,4.616,1421,4.616,1422,4.616,1423,4.616,1424,4.616,1425,4.616,1426,4.616,1427,4.616,1428,3.513,1429,4.616,1430,4.103,1431,4.616,1432,4.616,1433,4.103,1434,4.616,1435,4.616,1436,4.616,1437,4.616,1438,4.616,1439,4.616,1440,4.616,1441,4.616,1442,4.616,1443,4.616,1444,4.616,1445,4.616,1446,4.616,1447,4.616,1448,4.616,1449,4.616,1450,4.616,1451,4.616,1452,4.616]],["title/interfaces/CardState.html",[559,2.053,566,3.787]],["body/interfaces/CardState.html",[3,0.056,4,0.056,5,0.066,19,0.007,33,0.251,35,0.353,36,0.664,51,0.098,57,0.079,79,1.419,126,1.744,137,0.005,138,0.006,139,0.005,148,2.831,159,1.527,161,2.879,178,1.831,183,3.133,197,2.513,367,5.749,559,3.024,560,3.944,566,7.115,1292,7.026,1453,6.838,1454,6.838]],["title/modules/CardsModule.html",[459,1.908,1455,3.331]],["body/modules/CardsModule.html",[0,0.288,3,0.044,4,0.058,5,0.068,19,0.007,37,0.693,43,0.22,51,0.132,57,0.052,73,2.326,107,1.557,137,0.004,138,0.005,139,0.004,182,1.096,204,3.191,237,1.649,288,1.365,306,1.341,314,0.964,326,2.906,327,2.906,373,2.27,374,2.217,375,2.27,376,2.27,377,2.27,378,2.27,379,1.981,380,1.86,381,2.27,382,2.27,383,2.27,384,2.166,385,2.27,386,2.217,387,2.27,388,2.27,389,2.27,390,2.27,394,1.682,406,3.321,408,3.252,416,3.252,418,3.321,459,2.217,461,2.58,462,3.004,463,4.687,464,3.11,465,4.968,466,3.967,474,4.058,475,3.228,477,2.816,481,4.089,486,4.381,489,3.11,503,5.354,1249,4.399,1252,3.919,1455,6.938,1456,4.793,1457,4.793,1458,4.793,1459,4.793,1460,6.333,1461,5.392,1462,6.387,1463,5.392,1464,6.387,1465,5.392,1466,4.793,1467,4.793,1468,5.392,1469,5.392,1470,4.399,1471,4.793]],["title/classes/CheckAuthenticationStatus.html",[0,0.248,63,2.424]],["body/classes/CheckAuthenticationStatus.html",[0,0.45,1,3.19,2,0.541,3,0.029,4,0.029,5,0.067,6,1.998,7,1.408,8,1.369,9,4.263,10,1.765,11,2.449,12,3.433,13,3.82,14,3.454,15,1.933,16,3.013,17,1.895,18,3.769,19,0.007,20,3.758,21,3.055,22,2.147,23,2.069,24,3.747,25,2.784,26,3.632,27,3.769,28,3.508,29,1.565,30,3.055,31,3.508,32,3.171,33,0.258,34,1.104,35,0.185,36,0.431,37,0.953,38,1.493,39,1.341,40,0.212,42,2.854,43,0.146,49,0.5,50,0.415,51,0.09,52,0.406,53,3.099,54,1.765,55,2.417,56,1.671,57,0.084,58,0.641,59,1.717,60,3.288,61,1.016,62,2.342,63,3.631,64,1.818,65,3.632,66,3.145,67,4.477,68,3.873,69,3.288,70,2.069,71,2.467,72,3.422,73,2.716,74,3.873,75,3.288,76,1.418,77,1.777,78,1.818,79,1.207,80,1.818,81,1.818,82,1.873,83,1.586,84,2.147,85,2.147,86,3.769,87,3.769,88,2.857,89,3.769,90,2.147,91,1.316,92,1.316,93,1.195,94,2.147,95,3.055,96,2.147,97,2.147,98,1.998,99,1.547,100,1.036,101,2.069,102,2.716,103,3.171,104,3.099,105,2.854,106,1.998,107,1.036,108,2.069,109,1.998,110,1.933,111,3.873,112,1.056,113,2.147,114,1.933,115,2.069,116,2.854,117,1.224,118,2.147,119,2.147,120,4.162,121,2.069,122,2.147,123,3.055,124,2.147,125,3.055,126,0.678,127,2.147,128,2.069,129,2.147,130,2.069,131,2.147,132,2.467,133,3.055,134,2.147,135,2.147,136,1.998,137,0.003,138,0.004,139,0.003,1472,3.587]],["title/classes/CheckTokenResponse.html",[0,0.248,895,3.533]],["body/classes/CheckTokenResponse.html",[0,0.357,2,0.375,3,0.02,4,0.02,5,0.024,7,0.976,9,1.259,12,3.086,13,1.964,17,1.716,19,0.007,24,2.694,25,1.099,28,1.384,29,1.966,33,0.217,35,0.128,36,0.325,37,1.08,38,0.857,40,0.339,42,3.79,43,0.234,45,0.218,46,0.202,47,0.617,51,0.119,52,0.282,53,2.46,54,1.223,55,1.532,57,0.065,58,0.444,64,2.022,66,1.466,71,1.858,78,2.9,79,1.46,80,4.204,81,4.565,82,3.672,83,2.531,98,3.188,99,3.254,104,2.46,107,1.443,110,3.084,117,1.546,126,0.47,137,0.002,138,0.003,139,0.002,148,1.622,163,0.746,178,2.221,182,1.854,183,2.197,186,1.877,188,1.295,197,1.837,204,3.511,207,3.258,232,1.046,237,1.917,239,1.099,251,0.746,285,2.191,296,1.548,307,0.791,314,0.444,315,0.76,316,0.913,317,1.384,318,0.731,319,0.791,334,1.434,336,4.633,337,0.807,379,2.103,446,1.844,485,1.434,534,1.384,535,1.548,673,4.668,674,2.027,675,2.209,676,5.948,677,2.209,678,2.209,681,2.884,686,1.174,687,3.72,688,2.209,689,1.783,690,1.259,691,1.298,692,1.434,693,3.898,694,1.891,695,1.548,696,2.209,697,6.676,698,2.027,699,1.384,700,1.339,701,2.209,702,2.027,703,3.547,704,2.209,705,1.339,706,2.209,707,2.209,708,4.444,709,2.209,710,2.209,711,2.209,712,2.209,713,2.209,714,2.209,715,2.209,716,2.209,717,2.209,718,2.209,719,2.209,720,2.209,721,2.209,722,2.209,723,2.209,724,5.948,725,5.571,726,3.547,727,5.571,728,2.209,729,2.209,730,2.209,731,3.547,732,2.209,733,3.547,734,5.571,735,3.547,736,2.209,737,5.948,738,2.209,739,2.027,740,3.805,741,2.209,742,3.255,743,2.027,744,1.384,745,2.209,746,3.547,747,2.209,748,3.898,749,2.209,750,3.547,751,2.209,752,4.444,753,2.209,754,5.963,755,4.444,756,4.444,757,4.444,758,4.444,759,4.444,760,4.444,761,2.209,762,2.209,763,2.209,764,2.209,765,3.547,766,2.027,767,2.785,768,3.547,769,3.547,770,3.547,771,2.209,772,2.209,773,2.209,774,4.444,775,2.993,776,3.547,777,2.594,778,2.209,779,3.547,780,2.209,781,3.255,782,3.547,783,3.547,784,2.209,785,2.209,786,3.547,787,3.547,788,2.209,789,2.209,790,2.209,791,2.209,792,2.209,793,2.209,794,2.209,795,2.209,796,2.209,797,2.209,798,2.209,799,2.209,800,2.209,801,2.209,802,1.022,803,2.209,804,2.209,805,2.209,806,2.209,807,2.209,808,2.209,809,2.209,810,2.209,811,2.027,812,2.209,813,3.255,814,5.571,815,2.209,816,3.547,817,2.611,818,4.668,819,4.078,820,2.209,821,2.027,822,2.209,823,2.209,824,2.485,825,2.209,826,3.547,827,2.209,828,3.547,829,2.209,830,2.209,831,2.209,832,2.209,833,2.209,834,2.209,835,2.209,836,2.209,837,2.718,838,2.209,839,2.209,840,2.209,841,2.209,842,2.209,843,2.209,844,2.209,845,2.209,846,2.209,847,2.209,848,2.209,849,2.209,850,2.209,851,2.209,852,2.209,853,2.209,854,2.209,855,4.444,856,3.547,857,2.209,858,2.209,859,3.547,860,3.547,861,2.209,862,1.099,863,2.209,864,2.209,865,2.209,866,2.209,867,2.209,868,2.209,869,2.209,870,2.209,871,1.891,872,2.209,873,2.209,874,2.209,875,2.209,876,2.209,877,2.209,878,2.209,879,3.547,880,2.209,881,2.209,882,2.209,883,2.209,884,2.209,885,2.209,886,2.209,887,2.209,888,2.209,889,2.209,890,2.209,891,2.027,892,4.356,893,3.547,894,3.547,895,3.037,896,2.209,897,2.209,898,3.547,899,3.547,900,1.764,901,2.209,902,2.209,903,2.209,904,2.209,1473,2.485,1474,2.485,1475,2.485,1476,2.485,1477,2.485]],["title/classes/ClearCard.html",[0,0.248,1014,2.779]],["body/classes/ClearCard.html",[0,0.462,2,0.823,3,0.045,4,0.045,5,0.053,8,1.359,19,0.007,33,0.264,34,1.162,35,0.282,36,0.577,38,1.791,39,1.413,43,0.223,49,0.761,50,0.632,51,0.102,52,0.618,57,0.087,58,0.976,76,1.462,77,1.998,79,0.888,91,1.38,92,1.38,93,1.253,126,1.633,137,0.004,138,0.005,139,0.004,159,1.596,161,2.298,188,1.772,226,2.363,234,1.638,239,2.414,245,2.19,246,1.737,247,1.703,248,2.006,249,2.006,250,1.576,251,1.638,252,1.772,1014,4.991,1281,3.549,1282,4.245,1283,4.715,1284,4.715,1478,3.549,1479,5.088,1480,5.46,1481,3.917,1482,3.917,1483,3.917,1484,3.917,1485,3.719]],["title/classes/ClearLightCardSelection.html",[0,0.248,238,2.352]],["body/classes/ClearLightCardSelection.html",[0,0.48,2,0.673,3,0.036,4,0.036,5,0.043,8,1.379,12,1.64,19,0.007,33,0.266,34,1.19,35,0.23,36,0.504,38,1.733,39,1.433,40,0.478,43,0.253,49,0.622,50,0.517,51,0.089,52,0.506,57,0.089,58,0.798,76,1.195,77,1.934,91,1.448,92,1.448,93,1.315,126,1.618,137,0.003,138,0.005,139,0.003,159,1.047,213,3.604,214,3.833,215,2.405,219,2.574,220,2.546,221,1.925,222,1.835,223,2.33,224,3.714,225,5.002,226,2.305,227,3.604,228,2.196,229,3.5,230,3.234,231,2.486,232,1.879,233,3.714,234,1.858,235,3.604,236,1.792,237,1.365,238,3.893,239,1.973,240,2.964,241,2.261,242,2.33,243,3.604,244,2.405,245,1.977,246,1.42,247,1.392,248,1.64,249,1.64,250,1.288,251,1.339,252,1.448,253,2.574,254,2.574,255,2.574,256,2.261,257,2.574,258,2.574,259,2.574,260,2.574,261,3.572,262,2.574,263,2.574,264,2.405,1486,6.193]],["title/injectables/ConfigEffects.html",[622,3.787,686,1.366]],["body/injectables/ConfigEffects.html",[0,0.265,3,0.041,4,0.041,5,0.048,8,0.748,17,2.045,19,0.007,29,1.997,33,0.217,35,0.256,36,0.542,40,0.294,43,0.307,45,0.436,46,0.404,47,0.436,49,0.692,50,0.575,51,0.131,52,0.562,55,2.556,57,0.048,91,0.792,92,0.792,93,0.72,99,3.613,117,1.992,137,0.004,138,0.005,139,0.004,163,1.489,182,1.633,207,3.164,226,2.41,285,2.012,290,1.824,314,0.887,315,1.518,316,1.824,318,1.461,319,1.579,330,4.499,331,4.049,334,2.863,337,1.611,347,3.986,452,1.433,562,3.841,621,4.412,622,5.432,686,1.96,690,2.515,691,2.592,802,3.302,862,2.195,900,2.195,910,2.252,916,4.908,939,3.71,940,4.832,949,4.808,971,4.329,972,5.002,1018,2.863,1019,2.675,1021,3.561,1022,3.226,1208,4.329,1275,4.778,1285,3.777,1286,3.777,1287,3.777,1428,5.068,1487,4.963,1488,7.515,1489,7.515,1490,5.762,1491,7.515,1492,4.963,1493,6.659,1494,6.659,1495,6.659,1496,6.659,1497,6.659,1498,4.963,1499,7.14,1500,5.92,1501,4.963,1502,7.666,1503,5.92,1504,4.412,1505,4.963,1506,4.412,1507,3.091,1508,3.091,1509,4.963,1510,4.412,1511,4.963,1512,4.963,1513,4.963,1514,6.659,1515,6.659,1516,6.659,1517,6.659,1518,4.963]],["title/injectables/ConfigService.html",[686,1.366,1490,3.331]],["body/injectables/ConfigService.html",[0,0.338,3,0.052,4,0.052,5,0.061,17,2.059,19,0.007,33,0.225,35,0.327,36,0.633,40,0.375,43,0.344,45,0.556,46,0.515,47,0.556,51,0.135,52,0.717,57,0.061,79,1.267,117,2.153,137,0.005,138,0.006,139,0.005,182,1.287,285,2.356,288,1.972,306,1.574,314,1.131,315,1.936,318,1.863,319,2.014,324,4.114,329,4.311,337,2.054,485,3.651,534,3.526,535,3.942,686,2.292,687,5.98,705,3.411,910,2.872,1104,5.164,1390,4.818,1490,5.587,1519,6.33,1520,8.435,1521,8.8,1522,7.787,1523,6.33,1524,4.818,1525,4.818,1526,4.818,1527,6.33,1528,6.33,1529,6.33]],["title/interfaces/ConfigState.html",[559,2.053,567,3.787]],["body/interfaces/ConfigState.html",[3,0.054,4,0.054,5,0.063,19,0.007,33,0.263,35,0.338,36,0.646,51,0.094,57,0.083,79,1.393,126,1.723,137,0.005,138,0.006,139,0.005,148,3.009,159,1.106,161,2.755,178,2.128,183,2.512,197,2.92,207,3.603,349,5.816,361,6.942,367,5.68,559,2.894,560,3.774,562,5.135,567,6.982,862,2.894,1502,8.107,1510,5.816,1530,6.543,1531,6.543,1532,6.543]],["title/injectables/CustomRouterEffects.html",[609,2.678,686,1.366]],["body/injectables/CustomRouterEffects.html",[0,0.236,3,0.036,4,0.036,5,0.043,8,1.067,17,2.16,19,0.007,29,2.166,30,4.415,31,3.429,33,0.24,35,0.441,36,0.501,38,1.322,40,0.262,43,0.312,45,0.622,46,0.501,47,0.388,49,0.987,50,0.819,51,0.13,52,0.501,57,0.043,59,2.117,72,2.177,117,1.974,137,0.003,138,0.004,139,0.003,163,1.327,166,3.222,178,2.049,182,1.822,186,2.311,235,2.241,238,3.587,285,1.184,290,1.625,314,0.791,315,1.353,316,1.625,317,2.464,318,1.302,319,1.407,337,1.435,452,1.277,543,5.021,563,3.767,575,3.013,609,3.55,686,1.811,691,2.31,692,2.551,910,2.007,916,4.93,935,6.795,939,3.943,940,4.929,942,5.021,1010,3.684,1017,3.55,1018,2.551,1019,2.384,1026,3.366,1027,3.366,1028,3.366,1275,5.491,1282,2.384,1353,5.471,1533,8.045,1534,4.423,1535,7.079,1536,7.079,1537,4.767,1538,4.423,1539,6.155,1540,8.33,1541,7.079,1542,6.155,1543,6.155,1544,4.423,1545,7.654,1546,8.045,1547,6.155,1548,7.654,1549,7.654,1550,7.654,1551,6.155,1552,4.423,1553,6.155,1554,6.155,1555,6.155,1556,3.833,1557,6.155,1558,6.155,1559,4.423,1560,7.079,1561,6.155,1562,6.155,1563,3.833,1564,4.767,1565,3.317,1566,5.471,1567,3.815,1568,3.55,1569,3.833,1570,3.429,1571,4.423,1572,3.608]],["title/classes/CustomRouterStateSerializer.html",[0,0.248,1573,3.533]],["body/classes/CustomRouterStateSerializer.html",[0,0.376,2,0.813,3,0.044,4,0.058,5,0.052,11,2.758,13,3.462,19,0.007,29,1.341,33,0.203,34,0.923,35,0.279,39,1.227,40,0.319,43,0.287,45,0.729,46,0.572,47,0.618,51,0.101,57,0.076,79,0.877,88,2.446,91,0.861,92,0.861,93,0.782,117,1.625,137,0.004,138,0.005,139,0.004,178,2.222,182,1.43,186,3.116,204,2.446,232,2.27,250,2.031,285,2.096,288,1.781,306,1.947,446,1.587,531,3.004,564,3.358,575,3.673,576,5.959,638,4.399,744,3.004,767,3.004,777,6.189,837,3.673,862,2.385,1035,3.228,1568,4.058,1573,5.354,1574,4.793,1575,6.77,1576,7.035,1577,7.035,1578,6.253,1579,7.377,1580,5.392,1581,6.253,1582,7.022,1583,5.392,1584,6.253,1585,4.793,1586,7.377,1587,4.793,1588,4.399,1589,4.793,1590,6.387,1591,4.793,1592,4.793,1593,5.739,1594,4.793,1595,4.793,1596,4.793,1597,4.793,1598,4.793,1599,4.793,1600,4.793,1601,4.793,1602,4.793,1603,4.793,1604,4.793,1605,4.793,1606,4.793,1607,4.793]],["title/classes/Detail.html",[0,0.248,160,2.285]],["body/classes/Detail.html",[0,0.395,2,0.879,3,0.048,4,0.048,5,0.057,11,2.054,19,0.007,33,0.168,39,1.534,40,0.481,43,0.238,45,0.512,46,0.475,47,0.512,51,0.116,57,0.079,58,1.043,79,1.578,91,1.182,92,1.182,93,1.073,137,0.004,138,0.005,139,0.004,146,4.198,159,0.986,160,4,162,2.871,163,1.75,165,2.955,179,3.144,188,1.893,207,3.598,221,2.516,222,2.398,232,2.456,269,3.506,287,6.132,1145,4.758,1147,3.792,1148,4.44,1149,4.758,1150,4.44,1151,4.44,1152,5.536,1153,4.758,1154,4.758,1155,4.44,1156,4.44,1157,4.185,1159,4.758,1160,7.353,1161,4.44,1162,4.44,1163,3.792,1164,7.225,1165,6.63,1608,5.833,1609,5.833]],["title/components/DetailComponent.html",[265,0.944,416,1.601]],["body/components/DetailComponent.html",[0,0.186,3,0.028,4,0.028,5,0.034,8,1.198,11,1.223,19,0.007,29,1.286,33,0.235,34,0.678,35,0.179,36,0.421,37,0.794,39,0.968,40,0.206,43,0.36,45,0.542,46,0.624,47,0.542,49,0.721,50,0.599,51,0.114,57,0.034,61,0.984,79,1.005,100,1.003,105,2.787,112,1.022,137,0.003,138,0.004,139,0.003,151,2.287,152,2.732,159,1.38,160,4.018,161,1.462,166,2.881,178,2.186,182,0.706,186,1.304,188,1.127,189,1.536,197,1.9,199,1.522,200,1.062,240,1.662,250,1.003,265,1.391,266,1.223,267,1.9,268,1.276,270,1.942,271,1.304,273,2.425,274,1.223,275,3.434,279,1.942,285,2.336,288,1.31,289,2.687,306,1.907,307,2.528,314,0.621,315,1.062,337,1.127,374,2.126,394,1.083,395,1.942,396,2.57,397,1.198,398,2.57,399,1.304,400,1.304,401,1.198,402,1.304,403,1.223,404,1.304,405,2.57,406,1.223,407,1.304,408,1.198,409,1.942,410,1.223,411,1.304,412,1.249,413,1.276,414,1.15,415,1.942,416,2.361,417,1.304,418,1.223,419,1.223,420,1.304,421,1.198,422,1.304,423,1.223,424,1.304,425,1.223,426,1.304,427,1.198,428,1.304,429,1.223,430,1.304,431,1.249,432,1.223,433,1.304,434,1.223,435,1.276,436,2.32,437,1.304,438,1.223,439,1.304,440,1.198,441,1.223,442,1.249,443,1.942,444,1.223,445,1.223,446,1.522,447,1.223,448,1.304,449,1.223,450,1.223,451,1.223,452,1.003,453,1.223,454,1.198,455,1.304,456,1.198,457,1.276,458,1.304,479,2.643,480,2.492,653,3.847,862,1.536,1118,2.643,1147,2.258,1148,3.936,1174,3.095,1252,3.812,1261,3.087,1267,3.087,1269,3.087,1409,3.71,1460,4.91,1470,2.833,1471,3.087,1565,1.872,1610,3.473,1611,5.171,1612,6.178,1613,6.178,1614,5.171,1615,5.171,1616,6.844,1617,6.844,1618,6.844,1619,6.178,1620,3.473,1621,6.844,1622,5.492,1623,5.04,1624,5.492,1625,6.084,1626,5.171,1627,3.473,1628,3.473,1629,5.171,1630,6.178,1631,7.671,1632,3.473,1633,3.473,1634,3.473,1635,3.473,1636,3.473,1637,3.473,1638,3.473,1639,6.178,1640,3.473,1641,4.218,1642,3.473,1643,3.473,1644,3.473,1645,3.473,1646,1.814,1647,2.833,1648,3.473,1649,3.473,1650,3.473,1651,3.473,1652,3.473,1653,3.473,1654,3.473,1655,3.473,1656,3.473,1657,3.473,1658,3.473,1659,4.597,1660,5.171,1661,3.473,1662,3.473,1663,3.473,1664,3.473,1665,3.473,1666,3.473,1667,3.473,1668,3.473,1669,3.473,1670,3.473,1671,3.473,1672,3.473,1673,5.171,1674,3.473,1675,3.087,1676,3.473,1677,3.473,1678,3.473,1679,3.473,1680,3.473,1681,3.473,1682,3.473,1683,3.473,1684,3.473,1685,5.171,1686,3.473,1687,3.473,1688,5.171,1689,3.473,1690,5.171,1691,3.473,1692,3.473,1693,3.473,1694,3.473,1695,3.473,1696,3.473,1697,3.473,1698,3.473,1699,3.473,1700,2.833,1701,3.473,1702,3.473,1703,3.473,1704,3.473,1705,3.473]],["title/components/DetailsComponent.html",[265,0.944,418,1.635]],["body/components/DetailsComponent.html",[0,0.23,3,0.035,4,0.035,5,0.042,19,0.007,33,0.244,34,0.792,35,0.222,36,0.491,37,0.553,40,0.413,43,0.359,45,0.53,46,0.648,47,0.53,51,0.1,57,0.042,61,1.219,66,1.581,79,0.983,100,1.242,112,1.266,137,0.003,138,0.004,139,0.003,151,2.67,152,2.67,159,1.463,160,2.972,161,1.812,182,0.875,197,1.581,199,1.266,200,1.316,265,1.418,266,1.516,267,2.219,268,1.581,270,1.616,271,1.616,274,1.516,275,3.491,279,2.267,285,2.211,288,1.529,306,1.88,307,2.627,314,0.769,364,2.68,394,1.342,395,2.267,396,2.267,397,1.484,398,2.84,399,1.616,400,1.616,401,1.484,402,1.616,403,1.516,404,1.616,405,2.84,406,1.516,407,1.616,408,1.484,409,2.267,410,1.516,411,1.616,412,1.548,413,1.581,414,1.425,415,2.267,416,2.747,417,1.616,418,2.663,419,1.516,420,1.616,421,1.484,422,1.616,423,1.516,424,1.616,425,1.516,426,1.616,427,1.484,428,1.616,429,1.516,430,1.616,431,1.548,432,1.516,433,1.616,434,1.516,435,1.581,436,2.619,437,1.616,438,1.516,439,1.616,440,1.484,441,1.516,442,1.548,443,2.267,444,1.516,445,1.516,446,1.777,447,1.516,448,1.616,449,1.516,450,1.516,451,1.516,452,1.242,453,1.516,454,1.484,455,1.616,456,1.484,457,1.581,458,1.616,653,2.68,817,2.247,862,1.903,939,2.397,1017,2.482,1157,5.714,1169,6.2,1174,3.614,1175,6.2,1191,3.825,1199,5.367,1251,5.367,1675,3.825,1706,4.303,1707,6.2,1708,6.975,1709,6.722,1710,6.038,1711,6.038,1712,7.562,1713,6.038,1714,4.303,1715,4.303,1716,6.038,1717,7.562,1718,4.303,1719,4.303,1720,6.038,1721,4.303,1722,4.303,1723,6.975,1724,6.038,1725,4.303,1726,4.303,1727,4.303,1728,4.303,1729,6.038,1730,4.303,1731,4.303,1732,4.303,1733,4.303,1734,6.038,1735,2.797,1736,6.038,1737,4.303,1738,4.303,1739,4.303,1740,4.303,1741,4.303,1742,6.038,1743,4.303,1744,4.303,1745,6.038]],["title/directives/DraggableDirective.html",[397,1.601,454,1.601]],["body/directives/DraggableDirective.html",[0,0.263,3,0.04,4,0.04,5,0.048,19,0.007,29,1.862,33,0.216,35,0.255,36,0.539,43,0.359,49,0.687,50,0.57,51,0.071,57,0.048,137,0.004,138,0.005,139,0.004,182,1.523,197,2.943,199,1.45,236,1.979,274,1.736,275,2.384,285,2.005,307,2.548,314,0.881,336,4.483,379,1.811,397,2.286,453,1.736,454,2.286,817,4.592,821,4.02,945,7.021,1409,6.81,1659,4.381,1735,3.203,1746,6.804,1747,7.947,1748,4.928,1749,6.628,1750,7.489,1751,5.892,1752,7.489,1753,7.489,1754,7.489,1755,5.892,1756,6.628,1757,6.628,1758,6.628,1759,7.817,1760,4.928,1761,4.928,1762,4.928,1763,6.109,1764,4.928,1765,8.606,1766,4.928,1767,9.301,1768,5.044,1769,4.928,1770,4.928,1771,6.628,1772,4.928,1773,4.928,1774,5.407,1775,4.928,1776,4.381,1777,7.119,1778,4.928,1779,4.928,1780,8.606,1781,4.928,1782,4.928,1783,4.928,1784,4.928,1785,4.928,1786,4.928,1787,4.928,1788,4.928,1789,4.381,1790,4.928,1791,4.928,1792,4.381,1793,6.628,1794,4.928,1795,4.928,1796,4.928,1797,4.928,1798,4.928,1799,4.928]],["title/components/EmailSettingComponent.html",[265,0.944,419,1.635]],["body/components/EmailSettingComponent.html",[0,0.193,3,0.03,4,0.03,5,0.035,19,0.007,29,0.9,33,0.254,34,0.7,35,0.187,36,0.434,40,0.214,43,0.383,45,0.707,46,0.698,47,0.707,49,0.743,50,0.902,51,0.107,52,0.41,57,0.035,61,1.026,79,1.03,100,1.045,107,1.54,112,1.066,117,1.799,137,0.003,138,0.004,139,0.003,148,2.055,151,2.358,159,0.901,182,0.736,199,1.569,200,1.108,265,1.287,266,1.275,267,1.96,268,1.331,269,1.562,270,1.36,271,1.36,273,2.485,274,1.275,275,3.446,277,2.484,279,2.003,285,2.085,288,1.35,289,2.485,290,1.331,306,2.21,307,2.478,314,0.647,318,1.066,319,1.152,380,1.249,394,1.129,395,2.003,396,2.003,397,1.249,398,2.623,399,1.36,400,1.36,401,1.249,402,1.36,403,3.223,404,1.36,405,2.623,406,1.275,407,1.36,408,1.249,409,2.003,410,1.275,411,1.36,412,1.302,413,1.331,414,1.199,415,2.003,416,1.249,417,1.36,418,1.275,419,2.46,420,3.103,421,1.249,422,1.36,423,1.275,424,1.36,425,1.275,426,1.36,427,1.249,428,1.36,429,1.275,430,1.36,431,1.302,432,1.275,433,1.36,434,1.275,435,1.331,436,2.377,437,1.36,438,1.275,439,1.36,440,1.249,441,1.275,442,1.302,443,2.003,444,2.971,445,1.275,446,1.569,447,1.275,448,1.36,449,1.275,450,1.275,451,1.275,452,1.045,453,1.275,454,1.249,455,1.36,456,1.249,457,1.331,458,1.36,492,1.891,824,3.321,1054,2.756,1055,3.652,1056,4.757,1057,4.818,1058,4.059,1059,3.632,1060,3.192,1061,6.266,1062,3.632,1063,3.192,1064,5.305,1065,4.757,1066,3.652,1067,4.312,1068,4.757,1069,3.632,1070,3.632,1071,3.632,1076,2.466,1078,2.466,1081,3.076,1082,3.632,1083,4.181,1085,3.632,1089,3.632,1091,2.255,1105,2.466,1306,3.466,1800,6.331,1801,5.628,1802,7.158,1803,4.741,1804,3.621,1805,6.687,1806,3.621,1807,2.598,1808,2.598,1809,2.598,1810,3.219,1811,3.621,1812,3.621,1813,3.621,1814,3.621,1815,2.598,1816,2.598,1817,2.598,1818,2.598,1819,2.598,1820,2.598,1821,2.598,1822,2.598,1823,2.598,1824,2.598,1825,2.598,1826,2.598,1827,2.598,1828,2.954,1829,2.598,1830,4.818,1831,2.598,1832,3.621,1833,3.621,1834,4.059,1835,4.35,1836,4.35]],["title/classes/EmptyLightCards.html",[0,0.248,227,2.352]],["body/classes/EmptyLightCards.html",[0,0.48,2,0.677,3,0.037,4,0.037,5,0.044,8,1.381,12,1.65,19,0.007,33,0.266,34,1.192,35,0.232,36,0.506,38,1.737,39,1.435,40,0.422,43,0.183,49,0.626,50,0.52,51,0.089,52,0.509,57,0.089,58,0.803,76,1.202,77,1.939,91,1.45,92,1.45,93,1.317,126,1.621,137,0.003,138,0.005,139,0.003,159,1.051,213,3.616,214,3.352,215,2.42,219,2.591,220,2.557,221,1.937,222,1.846,223,2.345,224,3.727,225,5.008,226,2.311,227,3.903,228,2.21,229,3.512,230,3.248,231,2.502,232,1.891,233,3.727,234,1.866,235,3.616,236,1.804,237,1.374,238,3.616,239,1.986,240,2.977,241,2.275,242,2.345,243,3.616,244,2.42,245,1.984,246,1.429,247,1.401,248,1.65,249,1.65,250,1.297,251,1.347,252,1.458,253,2.591,254,3.588,255,2.591,256,2.275,257,2.591,258,2.591,259,2.591,260,2.591,261,2.591,262,2.591,263,2.591,264,2.42,1837,4.491]],["title/classes/FailToUpdateTimeReference.html",[0,0.248,1838,3.018]],["body/classes/FailToUpdateTimeReference.html",[0,0.427,2,0.848,3,0.046,4,0.046,5,0.055,7,2.209,8,1.346,10,3.559,19,0.007,33,0.268,34,1.107,35,0.291,36,0.588,37,0.93,38,1.811,39,1.367,40,0.333,41,1.755,43,0.326,45,0.494,46,0.458,47,0.494,49,0.784,50,0.651,51,0.121,52,0.637,55,2.776,56,2.621,57,0.085,58,1.006,71,2.621,77,1.915,83,2.488,88,3.281,116,3.897,126,1.51,137,0.004,138,0.005,139,0.004,216,2.493,234,1.688,296,4.504,304,5.504,446,2.567,650,3.246,900,3.198,995,4.7,1063,3.368,1838,5.194,1839,4.037,1840,5.899,1841,5.504,1842,4.925,1843,5.899,1844,6.519,1845,5.899,1846,5.899,1847,7.231,1848,5.627,1849,5.899,1850,3.657,1851,4.037,1852,3.504,1853,4.282,1854,4.59,1855,4.783,1856,4.59,1857,4.282,1858,5.188,1859,4.59,1860,4.282,1861,4.282,1862,4.59,1863,4.59,1864,4.7,1865,4.59,1866,4.59,1867,4.282]],["title/components/FeedComponent.html",[265,0.944,421,1.601]],["body/components/FeedComponent.html",[0,0.244,3,0.037,4,0.051,5,0.061,17,1.986,19,0.007,33,0.242,34,0.825,35,0.236,36,0.512,37,0.586,40,0.27,43,0.343,45,0.401,46,0.631,47,0.401,51,0.126,52,0.517,57,0.044,61,1.292,100,1.317,107,1.317,112,1.342,117,1.943,137,0.003,138,0.005,139,0.003,148,2.041,159,1.063,199,1.342,200,1.395,220,1.875,221,1.968,222,1.875,236,1.832,237,1.395,241,3.646,256,3.646,265,1.463,266,1.607,267,2.311,268,1.676,269,1.968,270,1.713,271,1.713,273,2.825,274,1.607,275,3.505,277,2.929,279,2.361,288,1.592,289,3.045,290,1.676,306,1.563,307,2,314,0.815,315,1.395,316,1.676,318,1.342,319,1.451,334,2.631,337,1.48,373,1.92,374,1.875,375,1.92,376,1.92,377,1.92,378,1.92,379,1.676,380,1.573,381,1.92,382,1.92,383,1.92,384,2.525,385,1.92,386,1.875,387,1.92,388,1.92,389,1.92,390,1.92,394,1.423,395,2.361,396,2.361,397,1.573,398,2.912,399,1.713,400,1.713,401,1.573,402,1.713,403,1.607,404,1.713,405,2.912,406,1.607,407,1.713,408,1.573,409,2.361,410,1.607,411,1.713,412,1.641,413,1.676,414,1.51,415,2.361,416,1.573,417,1.713,418,1.607,419,1.607,420,1.713,421,2.675,422,1.713,423,1.607,424,1.713,425,1.607,426,1.713,427,1.573,428,1.713,429,1.607,430,1.713,431,1.641,432,1.607,433,1.713,434,1.607,435,1.676,436,2.702,437,1.713,438,1.607,439,1.713,440,1.573,441,1.607,442,1.641,443,2.361,444,1.607,445,1.607,446,1.85,447,1.607,448,1.713,449,1.607,450,1.607,451,1.607,452,1.317,453,1.607,454,1.573,455,1.713,456,1.573,457,1.676,458,1.713,690,2.311,695,2.841,1295,4.283,1707,6.396,1709,6.894,1868,4.561,1869,7.196,1870,6.288,1871,7.196,1872,6.288,1873,4.561,1874,4.561,1875,4.561,1876,4.561,1877,4.055,1878,3.273,1879,4.055,1880,4.055,1881,4.561,1882,3.273,1883,4.561,1884,4.561,1885,4.561,1886,4.561]],["title/injectables/FeedFiltersEffects.html",[618,3.787,686,1.366]],["body/injectables/FeedFiltersEffects.html",[0,0.255,3,0.039,4,0.039,5,0.046,8,1.315,12,2.383,17,2.018,19,0.007,29,1.613,33,0.212,35,0.247,36,0.528,40,0.282,43,0.301,45,0.419,46,0.388,47,0.419,49,1.102,50,0.751,51,0.132,52,0.541,57,0.046,59,2.284,66,2.383,91,0.762,92,0.762,93,0.692,99,3.178,117,1.97,137,0.003,138,0.005,139,0.003,159,1.096,163,1.432,182,1.804,183,2.49,228,3.192,285,1.737,290,1.754,314,0.853,315,1.46,316,1.754,317,2.659,318,1.405,319,1.519,334,2.753,337,1.549,384,3.717,452,1.378,562,3.742,618,5.291,640,2.659,647,2.753,648,2.857,654,3.251,686,1.909,692,2.753,695,2.973,802,3.25,862,2.868,910,2.166,916,4.859,937,5.766,939,3.613,940,4.768,949,4.732,981,5.291,1018,2.753,1019,2.572,1021,3.425,1097,3.894,1358,5.766,1359,5.766,1360,4.937,1381,3.425,1641,6.448,1768,6.016,1887,7.905,1888,4.773,1889,7.368,1890,7.368,1891,5.671,1892,4.773,1893,9.098,1894,6.486,1895,6.486,1896,6.486,1897,6.486,1898,6.486,1899,6.486,1900,6.486,1901,7.905,1902,6.486,1903,7.905,1904,6.486,1905,6.486,1906,5.291,1907,6.486,1908,6.486,1909,4.773,1910,6.486,1911,6.486,1912,4.773,1913,2.572,1914,2.753]],["title/modules/FeedModule.html",[459,1.908,1915,3.533]],["body/modules/FeedModule.html",[0,0.236,3,0.036,4,0.05,5,0.06,19,0.007,33,0.128,37,0.569,51,0.138,57,0.043,73,1.908,107,1.277,137,0.003,138,0.004,139,0.003,237,1.353,314,0.791,326,3.317,327,2.384,373,1.862,374,1.818,375,1.862,376,1.862,377,1.862,378,1.862,379,1.625,380,1.526,381,1.862,382,1.862,383,1.862,384,1.776,385,1.862,386,1.818,387,1.862,388,1.862,389,1.862,390,1.862,394,1.38,410,2.934,412,2.996,414,2.038,421,3.152,423,2.934,431,2.996,438,2.934,441,2.934,445,2.934,447,2.934,450,1.558,451,2.934,454,2.873,456,2.873,459,1.818,461,2.117,462,2.464,463,4.237,464,3.55,465,3.684,466,3.587,474,3.55,475,2.648,477,3.214,481,3.214,486,3.833,489,2.551,490,5.021,491,5.021,492,2.31,494,3.932,495,3.366,496,3.608,498,3.013,503,4.684,506,5.471,507,3.608,508,3.608,509,3.932,510,3.608,511,4.684,512,3.608,514,3.608,515,3.608,516,3.608,524,3.366,525,3.366,537,2.551,1178,4.409,1196,2.875,1335,3.932,1455,5.976,1466,7.152,1747,3.932,1855,2.648,1915,7.427,1916,3.932,1917,3.932,1918,3.932,1919,3.932,1920,6.34,1921,5.976,1922,4.423,1923,4.423,1924,3.932,1925,4.423,1926,3.932,1927,4.423,1928,7.654,1929,3.932,1930,4.423,1931,4.423,1932,4.423,1933,3.932,1934,3.932,1935,7.079,1936,3.932,1937,3.932,1938,4.423,1939,6.155,1940,6.155,1941,3.932,1942,3.932,1943,4.423,1944,4.423,1945,6.155,1946,3.932,1947,3.932,1948,4.423,1949,3.932,1950,4.423,1951,4.423,1952,4.423,1953,4.423,1954,3.932,1955,3.932,1956,5.471,1957,4.423,1958,4.423]],["title/modules/FeedRoutingModule.html",[459,1.908,1921,3.331]],["body/modules/FeedRoutingModule.html",[0,0.32,3,0.049,4,0.062,5,0.073,19,0.007,37,0.77,51,0.13,57,0.058,107,1.73,137,0.004,138,0.006,139,0.004,178,1.605,237,1.833,265,1.755,314,1.071,373,2.523,374,2.464,375,2.523,376,2.523,377,2.523,378,2.523,379,2.202,380,2.067,381,2.523,382,2.523,383,2.523,384,2.407,385,2.523,386,2.464,387,2.523,388,2.523,389,2.523,390,2.523,408,2.839,416,2.597,421,2.597,461,2.868,466,3.036,477,3.13,481,3.931,527,4.3,529,5.401,530,5.125,531,3.339,532,5.729,533,4.889,536,6.512,540,4.561,547,5.328,672,4.561,1249,4.889,1295,5.127,1467,5.328,1921,5.401,1924,5.328,1959,5.993,1960,5.993,1961,5.993,1962,8.229,1963,5.993,1964,5.993,1965,5.993,1966,5.993]],["title/classes/Filter.html",[0,0.248,452,1.34]],["body/classes/Filter.html",[0,0.222,2,0.627,3,0.034,4,0.034,5,0.04,7,1.633,11,2.624,19,0.007,25,3.028,29,1.034,31,4.15,33,0.235,35,0.215,36,0.48,37,1.05,39,0.652,40,0.441,43,0.343,45,0.654,46,0.606,47,0.654,51,0.06,57,0.04,62,4.03,73,2.543,88,2.675,91,0.664,92,0.664,93,1.283,117,1.362,137,0.003,138,0.004,139,0.003,148,2.552,159,1.595,182,1.66,197,2.516,204,3.107,220,3.588,221,1.794,222,1.71,265,1.199,288,1.493,300,4.23,306,2.03,307,1.323,336,4.708,386,2.424,452,2.788,537,3.401,640,3.284,653,4.639,748,4.015,781,4.809,817,3.576,862,2.607,985,5.345,1210,4.809,1303,5.67,1503,5.24,1588,4.809,1763,4.809,1906,4.809,1967,8.581,1968,4.16,1969,5.895,1970,5.895,1971,5.895,1972,5.895,1973,5.895,1974,8.581,1975,5.895,1976,5.895,1977,5.895,1978,5.895,1979,5.895,1980,5.895,1981,5.895,1982,5.895,1983,5.895,1984,5.895,1985,7.45,1986,6.848,1987,4.16,1988,4.16,1989,4.16,1990,4.16,1991,4.16,1992,5.895,1993,4.16,1994,5.895,1995,7.45,1996,4.16,1997,7.45,1998,5.895,1999,5.895,2000,5.895,2001,4.16,2002,5.895,2003,5.895,2004,4.16,2005,4.16,2006,4.16,2007,4.16,2008,4.16,2009,4.16,2010,4.16,2011,4.16,2012,4.16,2013,4.16,2014,4.16,2015,4.16,2016,5.895,2017,4.16]],["title/injectables/FilterService.html",[686,1.366,1891,3.331]],["body/injectables/FilterService.html",[0,0.258,3,0.04,4,0.04,5,0.047,8,1.118,19,0.007,29,2.175,35,0.25,36,0.532,37,0.953,40,0.439,43,0.363,49,0.674,50,0.559,51,0.114,57,0.063,58,0.864,62,3.513,137,0.005,138,0.005,139,0.004,159,1.253,163,2.567,178,2.291,182,1.81,197,2.919,220,1.987,221,2.085,222,1.987,276,3.942,285,2.545,288,1.656,306,2.127,314,0.864,442,1.738,452,2.397,645,3.141,646,3.141,647,2.788,654,5.05,686,1.925,699,2.692,700,2.604,817,4.149,862,2.137,910,2.192,1152,3.292,1303,4.978,1891,4.693,2018,4.296,2019,7.414,2020,7.945,2021,7.945,2022,7.945,2023,7.945,2024,7.945,2025,6.541,2026,4.833,2027,4.833,2028,4.833,2029,4.833,2030,4.833,2031,4.833,2032,4.296,2033,6.541,2034,4.833,2035,5.643,2036,4.296,2037,4.296,2038,5.643,2039,4.296,2040,5.643,2041,4.296,2042,4.833,2043,7.945,2044,4.833,2045,4.833,2046,4.833,2047,4.833,2048,4.833,2049,4.833,2050,4.833,2051,4.833,2052,4.833,2053,4.833,2054,4.833,2055,4.833,2056,4.833,2057,4.833,2058,4.833,2059,4.833,2060,4.833,2061,4.296,2062,4.296,2063,4.296,2064,4.296,2065,4.296]],["title/components/FiltersComponent.html",[265,0.944,423,1.635]],["body/components/FiltersComponent.html",[0,0.29,3,0.044,4,0.044,5,0.053,19,0.007,33,0.204,34,0.928,35,0.281,40,0.465,43,0.289,46,0.639,51,0.078,57,0.053,61,1.539,100,1.569,112,1.599,137,0.004,138,0.005,139,0.004,159,1.195,199,1.599,200,1.662,265,1.598,266,1.914,267,2.598,268,1.997,270,2.041,271,2.041,273,3.085,274,1.914,275,3.543,279,2.655,288,1.79,289,3.268,306,1.351,307,1.729,314,0.971,394,1.695,395,2.655,396,2.655,397,1.874,398,3.126,399,2.041,400,2.041,401,1.874,402,2.041,403,1.914,404,2.041,405,3.126,406,1.914,407,2.041,408,1.874,409,2.655,410,1.914,411,2.041,412,1.955,413,1.997,414,1.799,415,2.655,416,1.874,417,2.041,418,1.914,419,1.914,420,2.041,421,1.874,422,2.041,423,2.931,424,2.041,425,1.914,426,2.041,427,1.874,428,2.041,429,1.914,430,2.041,431,1.955,432,1.914,433,2.041,434,1.914,435,1.997,436,2.951,437,2.041,438,1.914,439,2.041,440,1.874,441,1.914,442,1.955,443,2.655,444,1.914,445,1.914,446,2.081,447,1.914,448,2.041,449,1.914,450,1.914,451,1.914,452,1.569,453,1.914,454,1.874,455,2.041,456,1.874,457,1.997,458,2.041,1303,5.381,1334,5.639,2066,5.434,2067,7.07,2068,5.434,2069,5.434]],["title/classes/GuidService.html",[0,0.248,693,3.162]],["body/classes/GuidService.html",[0,0.35,2,0.988,3,0.054,4,0.054,5,0.064,19,0.007,33,0.189,35,0.339,36,0.647,39,1.342,40,0.507,43,0.364,51,0.114,53,4.695,54,3.226,57,0.064,79,1.067,137,0.005,138,0.006,139,0.005,182,1.617,276,5.348,285,2.293,288,2.015,306,1.978,314,1.172,693,5.419,1504,7.072,2032,5.827,2070,6.556,2071,8.907,2072,8.566,2073,7.956,2074,6.556,2075,6.556,2076,7.956,2077,6.556,2078,6.556,2079,6.556]],["title/classes/HandleUnexpectedError.html",[0,0.248,245,1.29]],["body/classes/HandleUnexpectedError.html",[0,0.456,2,0.793,3,0.043,4,0.043,5,0.051,8,1.347,19,0.007,33,0.272,34,1.15,35,0.272,36,0.563,37,0.89,38,1.92,39,1.4,40,0.311,41,1.641,43,0.316,45,0.462,46,0.428,47,0.462,49,0.733,50,0.609,51,0.099,52,0.596,57,0.087,58,0.941,76,1.409,77,1.97,79,0.856,91,1.364,92,1.364,93,1.238,126,1.614,137,0.004,138,0.005,139,0.004,159,1.588,161,2.215,188,1.708,216,2.414,226,2.321,234,1.579,239,2.327,245,2.285,246,1.674,247,1.641,248,1.934,249,1.934,250,1.519,251,1.579,252,1.708,1014,4.632,1281,3.42,1282,4.17,1283,4.632,1284,4.632,1478,3.42,1479,3.775,1481,3.775,1482,3.775,1483,3.775,1484,4.967,1485,3.584,2080,6.923,2081,5.262]],["title/classes/HandleUnexpectedError-1.html",[0,0.206,245,1.074,346,2.152]],["body/classes/HandleUnexpectedError-1.html",[0,0.447,2,0.831,3,0.045,4,0.045,5,0.053,8,1.339,19,0.007,33,0.273,34,1.137,35,0.285,36,0.58,37,0.917,38,1.907,39,1.391,40,0.326,41,1.719,43,0.323,45,0.484,46,0.448,47,0.484,49,0.768,50,0.638,51,0.079,52,0.624,57,0.086,58,0.985,76,1.476,77,1.896,91,1.336,92,1.336,93,1.213,126,1.638,137,0.004,138,0.005,139,0.004,216,2.468,226,2.374,234,1.653,245,2.326,246,1.753,247,1.719,248,2.025,249,2.025,250,1.591,251,1.653,252,1.789,330,4.736,562,5.284,1022,3.582,1208,3.582,1507,4.928,1508,4.928,2082,3.754,2083,7.135,2084,5.511,2085,5.431,2086,4.195,2087,4.195,2088,4.195,2089,3.954]],["title/classes/HandleUnexpectedError-2.html",[0,0.206,245,1.074,555,2.511]],["body/classes/HandleUnexpectedError-2.html",[0,0.477,2,0.655,3,0.036,4,0.036,5,0.042,8,1.373,12,1.597,19,0.007,33,0.272,34,1.184,35,0.224,36,0.495,37,0.782,38,1.863,39,1.427,40,0.449,41,1.356,43,0.286,45,0.382,46,0.354,47,0.382,49,0.606,50,0.503,51,0.087,52,0.492,57,0.088,58,0.777,76,1.164,77,1.916,91,1.441,92,1.441,93,1.309,126,1.607,137,0.003,138,0.004,139,0.003,159,1.027,213,3.553,214,4.093,215,2.342,216,2.187,219,2.507,220,2.499,221,1.875,222,1.787,223,2.269,224,3.662,225,4.975,226,2.279,227,3.553,228,2.139,229,3.451,230,3.175,231,2.421,232,1.83,233,3.662,234,1.824,235,3.553,236,1.745,237,1.329,238,3.553,239,1.922,240,2.91,241,2.202,242,2.269,243,3.553,244,2.342,245,2.111,246,1.383,247,1.356,248,1.597,249,1.597,250,1.255,251,1.304,252,1.41,253,2.507,254,2.507,255,2.507,256,2.202,257,2.507,258,2.507,259,2.507,260,2.507,261,2.507,262,2.507,263,3.507,264,2.342,2090,6.08,2091,4.346]],["title/classes/HandleUnexpectedError-3.html",[0,0.206,245,1.074,2092,2.94]],["body/classes/HandleUnexpectedError-3.html",[0,0.454,2,0.653,3,0.035,4,0.035,5,0.042,8,1.372,14,2.017,16,2.072,17,1.057,19,0.007,33,0.268,34,1.137,35,0.224,36,0.493,37,0.78,38,1.955,39,1.38,40,0.359,41,1.351,43,0.286,45,0.666,46,0.352,47,0.38,49,0.603,50,0.501,51,0.087,52,0.49,57,0.085,58,0.774,76,1.624,77,1.983,79,1.234,91,1.356,92,1.356,93,1.232,126,1.638,132,2.017,137,0.003,138,0.004,139,0.003,166,1.823,186,2.277,187,2.553,188,1.968,189,1.915,216,2.183,226,2.1,234,1.299,236,2.811,245,2.108,246,1.377,247,1.351,250,1.25,251,1.299,252,1.405,563,4.681,609,2.498,744,3.899,767,3.378,775,2.592,1010,2.592,1017,2.498,1537,2.697,1556,4.359,1563,4.359,1564,2.697,1565,4.302,1567,3.772,1568,2.498,1569,2.697,1570,3.899,1646,2.261,2093,2.592,2094,6.064,2095,4.33,2096,3.942,2097,2.592,2098,3.772,2099,3.899,2100,3.899,2101,3.899,2102,3.899,2103,2.697,2104,2.814,2105,2.814,2106,2.814,2107,2.814,2108,2.814,2109,2.592,2110,2.697,2111,4.549,2112,4.549,2113,3.942,2114,2.814,2115,2.814,2116,2.814,2117,2.814,2118,2.697]],["title/classes/HandleUnexpectedError-4.html",[0,0.206,245,1.074,2119,3.434]],["body/classes/HandleUnexpectedError-4.html",[0,0.468,2,0.733,3,0.04,4,0.04,5,0.047,8,1.361,19,0.007,33,0.272,34,1.169,35,0.251,36,0.534,37,0.844,38,1.94,39,1.415,40,0.288,41,1.516,43,0.304,45,0.427,46,0.395,47,0.427,49,0.677,50,0.563,51,0.07,52,0.551,57,0.088,58,0.869,66,1.786,76,1.758,77,2.054,91,1.369,92,1.369,93,1.243,126,1.655,137,0.004,138,0.005,139,0.004,216,2.319,226,2.231,234,1.97,245,2.214,246,1.546,247,1.516,248,1.786,249,1.786,250,1.403,251,1.458,252,1.577,545,4.299,1096,4.007,1913,4.007,1914,2.803,2120,2.909,2121,6.566,2122,4.86,2123,4.268,2124,4.142,2125,4.142,2126,4.631,2127,4.142,2128,4.142,2129,3.159,2130,3.159,2131,3.159,2132,3.159,2133,3.027,2134,3.159,2135,3.159,2136,3.027]],["title/injectables/HandlebarsService.html",[686,1.366,1460,3.331]],["body/injectables/HandlebarsService.html",[0,0.165,3,0.025,4,0.025,5,0.03,17,1.407,19,0.007,25,3.71,29,1.433,33,0.186,35,0.407,36,0.386,37,0.741,40,0.183,43,0.367,45,0.506,46,0.597,47,0.506,49,0.661,50,0.885,51,0.12,53,2.334,54,1.524,57,0.03,79,1.365,137,0.006,138,0.003,139,0.002,159,1.241,161,1.304,163,2.089,165,1.569,168,1.854,178,1.864,182,1.898,189,2.097,207,1.997,268,1.138,285,2.587,288,1.201,306,2.203,307,2.77,314,0.554,315,0.948,316,1.138,325,4.198,326,1.669,327,1.669,337,1.005,346,2.642,446,0.912,686,1.396,692,1.787,817,1.618,862,3.247,900,2.097,910,1.405,1032,2.013,1033,2.013,1035,5.157,1038,4.995,1147,2.013,1165,2.527,1177,3.926,1178,3.589,1196,2.013,1252,3.598,1460,3.403,1470,2.527,1622,5.123,1623,2.527,2092,2.358,2137,3.098,2138,4.743,2139,4.743,2140,4.743,2141,6.458,2142,6.458,2143,6.458,2144,6.458,2145,6.458,2146,5.763,2147,6.458,2148,6.458,2149,6.458,2150,6.458,2151,6.458,2152,6.458,2153,6.458,2154,5.763,2155,3.098,2156,4.743,2157,4.743,2158,3.098,2159,3.098,2160,3.098,2161,3.098,2162,3.098,2163,3.098,2164,3.098,2165,3.098,2166,3.098,2167,3.098,2168,3.098,2169,3.098,2170,3.098,2171,3.098,2172,3.098,2173,3.098,2174,3.098,2175,3.098,2176,3.098,2177,3.098,2178,3.098,2179,3.098,2180,3.098,2181,3.098,2182,3.098,2183,3.098,2184,3.098,2185,3.098,2186,3.098,2187,3.098,2188,3.098,2189,3.098,2190,3.098,2191,3.098,2192,3.098,2193,3.098,2194,3.098,2195,3.098,2196,3.098,2197,2.222,2198,2.753,2199,3.098,2200,3.098,2201,3.098,2202,3.098,2203,3.098,2204,3.098,2205,3.098,2206,3.098,2207,8.082,2208,5.763,2209,8.082,2210,8.248,2211,3.098,2212,3.098,2213,3.098,2214,3.098,2215,3.098,2216,3.098,2217,3.098,2218,7.343,2219,3.098,2220,6.962,2221,3.098,2222,3.098,2223,3.098,2224,6.458,2225,3.098,2226,4.743,2227,3.098,2228,3.098,2229,3.098,2230,3.098,2231,3.098,2232,3.098,2233,2.527,2234,3.098,2235,3.098,2236,3.098,2237,3.098,2238,3.098,2239,3.098,2240,3.098,2241,3.098,2242,3.098,2243,3.098,2244,3.098,2245,3.098,2246,3.098,2247,3.098,2248,3.098,2249,3.098,2250,3.098,2251,4.743,2252,5.763,2253,3.61,2254,5.763,2255,3.098]],["title/classes/I18n.html",[0,0.248,146,2.162]],["body/classes/I18n.html",[0,0.373,2,1.053,3,0.057,4,0.057,5,0.068,19,0.007,33,0.201,39,1.295,40,0.489,43,0.285,45,0.799,46,0.568,47,0.614,51,0.1,57,0.068,79,1.433,91,1.116,92,1.116,93,1.013,137,0.005,138,0.006,139,0.005,146,3.85,163,2.73,165,3.541,681,4.031,1032,5.373,2256,6.988,2257,6.988,2258,6.988]],["title/injectables/I18nService.html",[291,3.331,686,1.366]],["body/injectables/I18nService.html",[0,0.3,3,0.046,4,0.046,5,0.054,19,0.007,33,0.243,35,0.29,36,0.588,37,1.121,40,0.332,43,0.364,45,0.634,46,0.588,47,0.634,51,0.132,52,0.636,57,0.054,79,1.477,117,2.097,137,0.004,138,0.005,139,0.004,182,1.469,285,2.39,288,1.829,291,5.183,306,1.397,307,1.787,314,1.004,315,1.718,316,2.064,318,1.653,319,1.787,325,5.19,326,3.027,327,3.027,337,1.823,686,2.126,900,3.195,910,2.548,1021,4.03,1174,4.324,1177,4.92,1647,4.582,1852,5.833,2197,6.256,2198,4.994,2259,5.618,2260,7.224,2261,7.224,2262,7.224,2263,5.618,2264,7.224,2265,5.618,2266,5.618,2267,5.618,2268,5.618,2269,5.618,2270,5.618,2271,5.618,2272,4.582,2273,4.582,2274,6.421,2275,5.618,2276,5.618,2277,5.618,2278,4.994,2279,4.994,2280,5.618,2281,5.618,2282,5.618,2283,5.618,2284,7.985,2285,5.618,2286,5.618,2287,5.618,2288,7.224,2289,5.618,2290,5.618]],["title/components/IconComponent.html",[265,0.944,425,1.635]],["body/components/IconComponent.html",[0,0.221,3,0.034,4,0.048,5,0.057,19,0.007,33,0.26,34,0.771,35,0.214,36,0.478,37,0.532,40,0.245,43,0.365,45,0.364,46,0.605,47,0.364,49,0.577,51,0.098,57,0.04,61,1.173,79,1.21,100,1.195,107,1.195,112,1.218,137,0.003,138,0.004,139,0.003,148,2.548,151,2.598,152,3.709,159,0.993,199,1.218,200,1.266,237,1.266,240,3.557,265,1.389,266,1.458,267,2.159,268,1.521,269,1.786,270,1.555,271,1.555,273,2.681,274,1.458,275,3.482,277,2.737,279,1.555,288,1.488,289,2.918,306,1.029,307,1.317,314,0.74,373,1.743,374,1.702,375,1.743,376,1.743,377,1.743,378,1.743,379,1.521,380,1.428,381,1.743,382,1.743,383,1.743,384,1.663,385,1.743,386,1.702,387,1.743,388,1.743,389,1.743,390,1.743,394,1.291,395,2.206,396,2.206,397,1.428,398,2.791,399,1.555,400,1.555,401,1.428,402,1.555,403,1.458,404,1.555,405,2.791,406,1.458,407,1.555,408,1.428,409,2.206,410,1.458,411,1.555,412,1.489,413,1.521,414,1.371,415,2.206,416,1.428,417,1.555,418,1.458,419,1.458,420,1.555,421,1.428,422,1.555,423,1.458,424,1.555,425,2.618,426,1.555,427,1.428,428,1.555,429,1.458,430,1.555,431,1.489,432,1.458,433,1.555,434,1.458,435,1.521,436,2.565,437,1.555,438,1.458,439,1.555,440,1.428,441,1.458,442,1.489,443,2.206,444,1.458,445,1.458,446,1.729,447,1.458,448,1.555,449,1.458,450,1.458,451,1.458,452,1.195,453,1.458,454,1.428,455,1.555,456,1.428,457,1.521,458,1.555,489,2.388,1033,2.691,1035,3.517,1038,4.215,1238,4.793,1240,6.064,1700,6.064,2291,4.14,2292,7.434,2293,6.83,2294,4.14,2295,5.875,2296,5.875,2297,6.83,2298,6.83,2299,4.14,2300,7.434,2301,5.875,2302,4.14,2303,4.14,2304,4.14,2305,4.14,2306,4.14,2307,4.14,2308,4.14,2309,4.14,2310,4.14,2311,4.14,2312,4.14,2313,4.14,2314,4.14,2315,4.14,2316,4.14,2317,4.14,2318,4.14,2319,4.14,2320,4.14,2321,4.14,2322,4.14,2323,4.14,2324,4.14,2325,4.14,2326,6.83,2327,6.978,2328,6.83,2329,5.875,2330,6.83,2331,5.875,2332,4.14,2333,6.83,2334,4.14,2335,4.14,2336,4.14,2337,4.14,2338,4.14,2339,4.14,2340,4.14,2341,3.68,2342,5.875]],["title/components/IframeDisplayComponent.html",[265,0.944,427,1.601]],["body/components/IframeDisplayComponent.html",[0,0.25,3,0.038,4,0.052,5,0.062,19,0.007,33,0.226,34,0.84,35,0.242,36,0.521,37,0.602,40,0.277,43,0.32,45,0.411,46,0.638,47,0.411,51,0.118,52,0.531,57,0.045,61,1.327,100,1.352,107,1.352,112,1.378,117,1.959,137,0.003,138,0.005,139,0.003,159,1.082,182,0.952,199,1.378,200,1.433,237,1.433,265,1.483,266,1.65,267,2.353,268,1.721,269,2.02,270,1.759,271,1.759,273,2.864,274,1.65,275,3.512,277,2.982,279,2.404,285,2.1,288,1.621,289,3.079,290,1.721,306,1.164,307,1.49,314,0.837,318,1.378,319,1.49,337,1.52,373,1.972,374,1.925,375,1.972,376,1.972,377,1.972,378,1.972,379,1.721,380,1.616,381,1.972,382,1.972,383,1.972,384,1.881,385,1.972,386,1.925,387,1.972,388,1.972,389,1.972,390,1.972,394,1.461,395,2.404,396,2.404,397,1.616,398,2.945,399,1.759,400,1.759,401,1.616,402,1.759,403,1.65,404,1.759,405,2.945,406,1.65,407,1.759,408,1.616,409,2.404,410,1.65,411,1.759,412,1.685,413,1.721,414,1.551,415,2.404,416,1.616,417,1.759,418,1.65,419,1.65,420,1.759,421,1.616,422,1.759,423,1.65,424,1.759,425,1.65,426,1.759,427,2.705,428,1.759,429,1.65,430,1.759,431,1.685,432,1.65,433,1.759,434,1.65,435,1.721,436,2.74,437,1.759,438,1.65,439,1.759,440,1.616,441,1.65,442,1.685,443,2.404,444,1.65,445,1.65,446,1.884,447,1.65,448,1.759,449,1.65,450,1.65,451,1.65,452,1.352,453,1.65,454,1.616,455,1.759,456,1.616,457,1.721,458,1.759,479,3.565,480,3.36,1174,3.833,1624,6.485,1625,6.971,2343,4.684,2344,6.403,2345,7.296,2346,6.403,2347,7.296,2348,7.296,2349,6.403,2350,4.684,2351,7.842,2352,4.684,2353,4.684,2354,4.684,2355,4.163,2356,4.684,2357,4.684,2358,6.403,2359,4.684]],["title/components/InfoComponent.html",[265,0.944,429,1.635]],["body/components/InfoComponent.html",[0,0.232,3,0.062,4,0.036,5,0.042,7,2.755,17,2.076,19,0.007,33,0.239,34,0.798,35,0.225,36,0.495,40,0.258,43,0.354,45,0.382,46,0.651,47,0.382,51,0.129,52,0.493,57,0.042,61,1.233,66,1.599,100,1.256,109,3.909,112,1.281,114,2.345,117,1.914,137,0.003,138,0.004,139,0.003,159,1.028,163,1.305,182,1.427,199,1.281,200,1.331,265,1.427,266,1.533,267,2.236,268,1.599,269,1.877,270,1.634,271,1.634,273,2.755,274,1.533,275,3.494,277,2.834,279,2.285,285,2.392,288,1.541,289,2.983,290,1.599,306,1.082,307,1.384,314,0.778,315,1.331,316,1.599,318,1.281,319,1.384,324,2.828,337,1.412,394,1.357,395,2.285,396,2.285,397,1.501,398,2.854,399,1.634,400,1.634,401,1.501,402,1.634,403,1.533,404,1.634,405,2.854,406,1.533,407,1.634,408,1.501,409,2.285,410,1.533,411,1.634,412,1.565,413,1.599,414,1.441,415,2.285,416,1.501,417,1.634,418,1.533,419,1.533,420,1.634,421,1.501,422,1.634,423,1.533,424,1.634,425,1.533,426,1.634,427,1.501,428,1.634,429,2.676,430,1.634,431,1.565,432,1.533,433,1.634,434,1.533,435,1.599,436,2.635,437,1.634,438,1.533,439,1.634,440,1.501,441,1.533,442,1.565,443,2.285,444,1.533,445,1.533,446,2.439,447,1.533,448,1.634,449,1.533,450,1.533,451,1.533,452,1.256,453,1.533,454,1.501,455,1.634,456,1.501,457,1.599,458,1.634,802,1.789,900,2.691,986,2.605,1098,3.868,1099,3.868,1174,3.643,1178,5.298,1196,2.828,1236,3.868,1238,3.55,1240,3.55,1792,5.409,2272,3.55,2273,3.55,2274,5.409,2278,3.868,2279,3.868,2360,4.351,2361,7.017,2362,6.085,2363,7.017,2364,7.017,2365,7.017,2366,6.085,2367,4.351,2368,4.351,2369,4.351,2370,4.351,2371,4.351,2372,4.351,2373,4.351,2374,4.351,2375,4.351,2376,4.351,2377,4.351,2378,3.868,2379,6.085,2380,4.351,2381,6.085,2382,4.351,2383,6.085,2384,4.351,2385,4.351,2386,4.351,2387,6.085,2388,4.351]],["title/classes/InitAuthStatus.html",[0,0.248,60,2.424]],["body/classes/InitAuthStatus.html",[0,0.447,1,3.145,2,0.528,3,0.029,4,0.029,5,0.067,6,1.95,7,1.374,8,1.364,9,4.236,10,1.723,11,2.42,12,3.423,13,3.786,14,3.42,15,1.887,16,2.97,17,1.878,18,3.716,19,0.007,20,3.72,21,3.001,22,2.096,23,2.02,24,3.703,25,2.745,26,3.58,27,3.716,28,3.458,29,1.543,30,3.001,31,3.458,32,3.114,33,0.265,34,1.097,35,0.181,36,0.423,37,1.024,38,1.711,39,1.333,40,0.308,41,1.092,42,2.803,43,0.253,45,0.307,46,0.285,47,0.307,49,0.488,50,0.405,51,0.089,52,0.397,53,3.055,54,1.723,55,2.383,56,1.631,57,0.084,58,0.626,59,1.675,60,3.588,61,0.992,62,2.3,63,3.241,64,1.774,65,3.58,66,3.127,67,4.438,68,3.827,69,3.241,70,2.02,71,2.423,72,3.381,73,2.677,74,3.834,75,3.241,76,1.393,77,1.759,78,1.774,79,1.195,80,1.774,81,1.774,82,1.828,83,1.548,84,2.096,85,2.096,86,3.716,87,3.716,88,2.816,89,3.716,90,3.114,91,1.307,92,1.307,93,1.186,94,2.096,95,2.02,96,2.096,97,2.096,98,1.95,99,1.51,100,1.011,101,2.02,102,2.677,103,3.114,104,3.055,105,2.803,106,1.95,107,1.011,108,2.02,109,1.95,110,1.887,111,3.827,112,1.03,113,2.096,114,1.887,115,2.02,116,2.803,117,1.202,118,2.096,119,2.096,120,4.113,121,2.02,122,2.096,123,3.001,124,2.096,125,3.001,126,0.661,127,2.096,128,2.02,129,2.096,130,2.02,131,2.096,132,2.423,133,3.001,134,2.096,135,2.096,136,1.95,137,0.003,138,0.004,139,0.003,216,1.936,2389,5.202,2390,3.501]],["title/classes/InitFilters.html",[0,0.248,654,3.162]],["body/classes/InitFilters.html",[0,0.406,2,0.918,3,0.05,4,0.05,5,0.059,8,1.308,19,0.007,33,0.274,34,1.087,35,0.314,36,0.618,37,0.977,38,1.78,39,1.36,40,0.36,41,1.899,43,0.338,45,0.535,46,0.495,47,0.535,49,0.848,50,0.705,51,0.119,52,0.69,57,0.084,58,1.088,61,1.724,62,3.361,77,1.821,91,1.214,92,1.214,93,1.102,137,0.004,138,0.006,139,0.004,148,1.976,163,1.826,216,2.585,452,2.393,537,4.385,640,4.617,641,4.633,644,5.411,645,3.957,646,3.957,647,4.385,648,3.644,649,4.633,650,3.511,651,4.966,652,5.411,653,3.791,654,5.645,655,6.757,656,5.411,657,4.966,2391,7.601,2392,6.087]],["title/classes/InitTimeline.html",[0,0.248,2393,3.162]],["body/classes/InitTimeline.html",[0,0.416,2,0.954,3,0.052,4,0.052,5,0.061,8,1.327,19,0.007,33,0.275,34,1.107,35,0.327,36,0.633,37,1.001,38,1.811,39,1.379,40,0.375,41,1.975,43,0.344,45,0.556,46,0.515,47,0.556,49,0.882,50,0.733,51,0.091,52,0.717,57,0.085,58,1.131,61,1.793,77,1.866,137,0.005,138,0.006,139,0.005,159,1.07,216,2.631,232,2.665,414,2.793,1735,4.114,2393,5.994,2394,4.818,2395,7.787,2396,6.33,2397,6.922,2398,5.164,2399,5.745,2400,5.627,2401,5.627,2402,5.627,2403,5.164]],["title/classes/Input.html",[0,0.248,152,2.053]],["body/classes/Input.html",[0,0.465,2,0.665,3,0.036,4,0.036,5,0.043,8,0.665,11,1.554,19,0.007,33,0.22,37,0.567,39,1.537,40,0.523,43,0.18,45,0.387,46,0.622,47,0.387,50,0.885,51,0.101,57,0.087,58,1.098,79,1.551,91,1.391,92,1.391,93,1.263,102,1.903,137,0.003,138,0.004,139,0.003,142,2.641,143,3.922,144,3.678,145,5.112,146,3.876,147,2.748,148,2.938,149,2.748,150,2.748,151,1.951,152,3.126,153,2.748,154,2.748,155,2.748,156,2.748,157,2.748,159,0.746,160,2.171,161,1.857,162,2.171,163,1.324,164,2.748,165,2.235,166,1.857,167,2.748,168,2.641,169,2.748,170,2.748,171,2.748,172,2.748,173,2.748,174,2.748,175,2.748,176,2.748,177,3.826,178,1.181,179,3.311,180,2.748,181,3.826,182,1.249,183,1.694,184,3.311,185,2.748,186,1.657,187,1.857,188,1.432,189,1.951,190,2.748,191,2.748,192,2.748,193,2.748,194,2.545,195,2.641,196,2.641,197,3.138,198,4.576,199,1.298,200,1.35,201,2.641,202,2.641,203,2.641,204,2.001,205,4.403,206,4.403,207,3.504,208,4.403,209,4.232,210,4.576,211,4.403,212,4.403,2404,4.412]],["title/injectables/LightCardEffects.html",[615,3.787,686,1.366]],["body/injectables/LightCardEffects.html",[0,0.301,3,0.046,4,0.046,5,0.055,8,0.848,17,1.95,19,0.007,29,1.798,33,0.208,35,0.291,36,0.588,40,0.333,43,0.295,45,0.494,46,0.458,47,0.494,49,0.784,50,0.651,51,0.133,52,0.637,57,0.055,91,0.898,92,0.898,93,0.816,117,2.063,137,0.004,138,0.005,139,0.004,159,1.222,163,2.397,182,1.715,223,2.938,229,2.769,230,4.173,285,1.936,290,2.068,314,1.006,315,1.721,316,2.068,318,1.656,319,1.79,337,1.826,367,4.504,615,5.899,686,2.128,690,2.851,691,2.938,692,3.246,802,3.467,900,2.488,910,2.553,916,5.059,939,3.134,940,4.61,949,4.329,973,5.899,1018,3.246,1019,3.032,1026,4.282,1027,4.282,1252,4.698,1258,4.282,1272,7.103,1285,4.282,1286,4.282,1287,4.282,1344,6.428,2405,7.991,2406,5.627,2407,7.991,2408,5.627,2409,7.231,2410,7.231,2411,7.231,2412,7.231,2413,6.428,2414,7.231,2415,7.231,2416,7.231,2417,6.428,2418,5.627,2419,5.627]],["title/components/ListSettingComponent.html",[265,0.944,432,1.635]],["body/components/ListSettingComponent.html",[0,0.165,3,0.025,4,0.025,5,0.03,17,1.153,19,0.007,29,1.428,33,0.253,34,0.62,35,0.159,36,0.384,40,0.182,43,0.378,45,0.67,46,0.67,47,0.67,49,0.658,50,0.934,51,0.113,52,0.349,57,0.03,61,0.873,79,1.313,100,0.89,102,1.329,107,1.364,112,0.907,117,1.693,137,0.002,138,0.003,139,0.002,145,4.157,146,2.2,148,2.254,151,2.089,152,2.089,159,0.798,162,1.516,182,1.309,197,1.132,199,0.907,200,2.407,209,3.439,216,1.473,265,1.168,266,1.085,267,1.736,268,1.132,269,1.329,270,1.157,271,1.157,273,2.255,274,1.085,275,3.397,277,2.2,279,1.774,285,2.205,288,1.196,289,3.09,290,1.132,306,2.162,307,2.427,314,0.551,315,0.943,318,0.907,319,0.98,325,4.958,326,1.661,327,1.661,380,1.063,384,2.307,394,0.961,395,1.774,396,1.774,397,1.063,398,2.418,399,1.157,400,1.157,401,1.063,402,1.157,403,3.198,404,1.774,405,2.418,406,1.085,407,1.157,408,1.063,409,1.774,410,1.085,411,1.157,412,1.108,413,1.132,414,1.02,415,1.774,416,1.063,417,1.157,418,1.085,419,1.085,420,1.157,421,1.063,422,1.157,423,1.085,424,1.157,425,1.085,426,1.157,427,1.063,428,1.157,429,1.085,430,1.157,431,1.108,432,2.268,433,1.157,434,1.085,435,1.132,436,2.157,437,1.157,438,1.085,439,1.157,440,1.063,441,1.085,442,1.108,443,1.774,444,1.085,445,1.085,446,1.39,447,1.085,448,1.157,449,1.085,450,1.085,451,1.085,452,0.89,453,1.085,454,1.063,455,1.157,456,1.063,457,1.132,458,1.157,492,1.609,650,1.777,740,2.345,824,2.942,1053,2.211,1054,2.345,1055,3.314,1056,4.73,1057,4.372,1058,3.595,1059,3.217,1060,2.828,1061,6.185,1062,3.217,1063,2.828,1064,5.196,1065,4.387,1066,3.314,1067,3.913,1068,4.387,1069,3.217,1070,3.217,1071,3.217,1076,2.099,1078,2.099,1081,3.715,1082,3.913,1083,4.157,1085,3.217,1089,3.913,1091,1.919,1095,2.739,1105,2.099,1306,3.07,1805,6.352,1807,2.211,1808,2.211,1809,2.211,1810,4.199,1815,2.211,1816,2.211,1817,2.211,1818,2.211,1819,2.211,1820,2.211,1821,2.211,1822,2.211,1823,2.211,1824,2.211,1825,2.211,1826,2.211,1827,2.211,1829,2.211,1830,5.286,1831,2.211,1834,3.595,1835,3.853,1836,3.853,2253,3.595,2420,8.236,2421,7.321,2422,5.744,2423,6.44,2424,6.44,2425,3.081,2426,3.081,2427,3.081,2428,3.081,2429,3.081,2430,3.081,2431,4.724,2432,3.081,2433,4.724,2434,3.217,2435,3.081,2436,4.724,2437,4.724,2438,3.081,2439,3.081,2440,4.724,2441,3.081,2442,3.081,2443,3.081,2444,3.081,2445,3.081,2446,3.081,2447,3.081,2448,2.211,2449,2.513,2450,2.513,2451,3.081,2452,3.081,2453,2.739,2454,2.739,2455,2.739,2456,3.081,2457,3.081,2458,4.724]],["title/classes/LoadCard.html",[0,0.248,1282,2.502]],["body/classes/LoadCard.html",[0,0.456,2,0.793,3,0.043,4,0.043,5,0.051,8,1.347,19,0.007,33,0.272,34,1.15,35,0.272,36,0.563,37,0.89,38,1.92,39,1.4,40,0.311,41,1.641,43,0.316,45,0.462,46,0.428,47,0.462,49,0.733,50,0.609,51,0.099,52,0.596,57,0.087,58,0.941,76,1.409,77,1.97,79,0.856,91,1.364,92,1.364,93,1.238,126,1.614,137,0.004,138,0.005,139,0.004,159,1.588,161,2.215,188,1.708,216,2.414,226,2.321,234,1.579,239,2.327,245,2.151,246,1.674,247,1.641,248,1.934,249,1.934,250,1.519,251,1.579,252,1.708,1014,4.632,1281,3.42,1282,4.43,1283,4.632,1284,4.632,1478,3.42,1479,3.775,1481,4.967,1482,3.775,1483,3.775,1484,3.775,1485,3.584,2459,6.923,2460,5.262]],["title/classes/LoadCardFailure.html",[0,0.248,1283,2.779]],["body/classes/LoadCardFailure.html",[0,0.456,2,0.793,3,0.043,4,0.043,5,0.051,8,1.347,19,0.007,33,0.272,34,1.15,35,0.272,36,0.563,37,0.89,38,1.92,39,1.4,40,0.311,41,1.641,43,0.316,45,0.462,46,0.428,47,0.462,49,0.733,50,0.609,51,0.099,52,0.596,57,0.087,58,0.941,76,1.409,77,1.97,79,0.856,91,1.364,92,1.364,93,1.238,126,1.614,137,0.004,138,0.005,139,0.004,159,1.588,161,2.215,188,1.708,216,2.414,226,2.321,234,1.579,239,2.327,245,2.151,246,1.674,247,1.641,248,1.934,249,1.934,250,1.519,251,1.579,252,1.708,1014,4.632,1281,3.42,1282,4.17,1283,4.921,1284,4.632,1478,3.42,1479,3.775,1481,3.775,1482,4.967,1483,3.775,1484,3.775,1485,3.584,2461,6.923,2462,5.262]],["title/classes/LoadCardSuccess.html",[0,0.248,1284,2.779]],["body/classes/LoadCardSuccess.html",[0,0.456,2,0.793,3,0.043,4,0.043,5,0.051,8,1.347,19,0.007,33,0.272,34,1.15,35,0.272,36,0.563,37,0.89,38,1.92,39,1.4,40,0.311,41,1.641,43,0.316,45,0.462,46,0.428,47,0.462,49,0.733,50,0.609,51,0.099,52,0.596,57,0.087,58,0.941,76,1.409,77,1.97,79,0.856,91,1.364,92,1.364,93,1.238,126,1.614,137,0.004,138,0.005,139,0.004,159,1.588,161,2.215,188,1.708,216,2.414,226,2.321,234,1.579,239,2.327,245,2.151,246,1.674,247,1.641,248,1.934,249,1.934,250,1.519,251,1.579,252,1.708,1014,4.632,1281,3.42,1282,4.17,1283,4.632,1284,4.921,1478,3.42,1479,3.775,1481,3.775,1482,3.775,1483,4.967,1484,3.775,1485,3.584,2463,6.923,2464,5.262]],["title/classes/LoadConfig.html",[0,0.248,330,2.779]],["body/classes/LoadConfig.html",[0,0.454,2,0.863,3,0.047,4,0.047,5,0.056,8,1.352,19,0.007,33,0.263,34,1.151,35,0.296,36,0.595,38,1.731,39,1.405,43,0.234,49,0.798,50,0.663,51,0.082,52,0.649,57,0.087,58,1.024,76,1.534,77,1.931,91,1.356,92,1.356,93,1.231,126,1.657,137,0.004,138,0.005,139,0.004,226,2.418,234,1.718,245,2.24,246,1.822,247,1.787,248,2.105,249,2.105,250,1.654,251,1.718,252,1.859,330,5.082,562,5.326,1022,3.723,1208,3.723,1507,5.019,1508,5.019,2082,3.902,2085,4.36,2086,5.567,2087,4.36,2088,4.36,2089,4.11,2465,5.728]],["title/classes/LoadConfigFailure.html",[0,0.248,1507,2.891]],["body/classes/LoadConfigFailure.html",[0,0.447,2,0.831,3,0.045,4,0.045,5,0.053,8,1.339,19,0.007,33,0.273,34,1.137,35,0.285,36,0.58,37,0.917,38,1.907,39,1.391,40,0.326,41,1.719,43,0.323,45,0.484,46,0.448,47,0.484,49,0.768,50,0.638,51,0.079,52,0.624,57,0.086,58,0.985,76,1.476,77,1.896,91,1.336,92,1.336,93,1.213,126,1.638,137,0.004,138,0.005,139,0.004,216,2.468,226,2.374,234,1.653,245,2.199,246,1.753,247,1.719,248,2.025,249,2.025,250,1.591,251,1.653,252,1.789,330,4.736,562,5.284,1022,3.582,1208,3.582,1507,5.212,1508,4.928,2082,3.754,2085,4.195,2086,4.195,2087,5.431,2088,4.195,2089,3.954,2466,7.135,2467,5.511]],["title/classes/LoadConfigSuccess.html",[0,0.248,1508,2.891]],["body/classes/LoadConfigSuccess.html",[0,0.447,2,0.831,3,0.045,4,0.045,5,0.053,8,1.339,19,0.007,33,0.273,34,1.137,35,0.285,36,0.58,37,0.917,38,1.907,39,1.391,40,0.326,41,1.719,43,0.323,45,0.484,46,0.448,47,0.484,49,0.768,50,0.638,51,0.079,52,0.624,57,0.086,58,0.985,76,1.476,77,1.896,91,1.336,92,1.336,93,1.213,126,1.638,137,0.004,138,0.005,139,0.004,216,2.468,226,2.374,234,1.653,245,2.199,246,1.753,247,1.719,248,2.025,249,2.025,250,1.591,251,1.653,252,1.789,330,4.736,562,5.284,1022,3.582,1208,3.582,1507,4.928,1508,5.212,2082,3.754,2085,4.195,2086,4.195,2087,4.195,2088,5.431,2089,3.954,2468,7.135,2469,5.511]],["title/classes/LoadLightCards.html",[0,0.248,224,2.424]],["body/classes/LoadLightCards.html",[0,0.48,2,0.677,3,0.037,4,0.037,5,0.044,8,1.381,12,1.65,19,0.007,33,0.266,34,1.192,35,0.232,36,0.506,38,1.737,39,1.435,40,0.422,43,0.183,49,0.626,50,0.52,51,0.089,52,0.509,57,0.089,58,0.803,76,1.202,77,1.939,91,1.45,92,1.45,93,1.317,126,1.621,137,0.003,138,0.005,139,0.003,159,1.051,213,3.616,214,3.352,215,2.42,219,2.591,220,2.557,221,1.937,222,1.846,223,2.345,224,4.023,225,5.008,226,2.311,227,3.616,228,2.21,229,3.512,230,3.248,231,2.502,232,1.891,233,3.727,234,1.866,235,3.616,236,1.804,237,1.374,238,3.616,239,1.986,240,2.977,241,2.275,242,2.345,243,3.616,244,2.42,245,1.984,246,1.429,247,1.401,248,1.65,249,1.65,250,1.297,251,1.347,252,1.458,253,3.588,254,2.591,255,2.591,256,2.275,257,2.591,258,2.591,259,2.591,260,2.591,261,2.591,262,2.591,263,2.591,264,2.42,2470,4.491]],["title/classes/LoadLightCardsExtendedData.html",[0,0.248,230,2.424]],["body/classes/LoadLightCardsExtendedData.html",[0,0.48,2,0.673,3,0.036,4,0.036,5,0.043,8,1.379,12,1.64,19,0.007,33,0.266,34,1.19,35,0.23,36,0.504,38,1.733,39,1.433,40,0.478,43,0.253,49,0.622,50,0.517,51,0.089,52,0.506,57,0.089,58,0.798,76,1.195,77,1.934,91,1.448,92,1.448,93,1.315,126,1.618,137,0.003,138,0.005,139,0.003,159,1.047,213,3.604,214,3.833,215,2.405,219,2.574,220,2.546,221,1.925,222,1.835,223,2.33,224,3.714,225,5.002,226,2.305,227,3.604,228,2.196,229,3.5,230,3.714,231,2.486,232,1.879,233,3.714,234,1.858,235,3.604,236,1.792,237,1.365,238,3.604,239,1.973,240,2.964,241,2.261,242,2.33,243,3.604,244,2.405,245,1.977,246,1.42,247,1.392,248,1.64,249,1.64,250,1.288,251,1.339,252,1.448,253,2.574,254,2.574,255,2.574,256,2.261,257,3.572,258,2.574,259,2.574,260,2.574,261,2.574,262,2.574,263,2.574,264,2.405,2471,6.193]],["title/classes/LoadLightCardsFailure.html",[0,0.248,233,2.424]],["body/classes/LoadLightCardsFailure.html",[0,0.477,2,0.655,3,0.036,4,0.036,5,0.042,8,1.373,12,1.597,19,0.007,33,0.272,34,1.184,35,0.224,36,0.495,37,0.782,38,1.863,39,1.427,40,0.449,41,1.356,43,0.286,45,0.382,46,0.354,47,0.382,49,0.606,50,0.503,51,0.087,52,0.492,57,0.088,58,0.777,76,1.164,77,1.916,91,1.441,92,1.441,93,1.309,126,1.607,137,0.003,138,0.004,139,0.003,159,1.027,213,3.553,214,4.093,215,2.342,216,2.187,219,2.507,220,2.499,221,1.875,222,1.787,223,2.269,224,3.662,225,4.975,226,2.279,227,3.553,228,2.139,229,3.451,230,3.175,231,2.421,232,1.83,233,3.966,234,1.824,235,3.553,236,1.745,237,1.329,238,3.553,239,1.922,240,2.91,241,2.202,242,2.269,243,3.553,244,2.342,245,1.949,246,1.383,247,1.356,248,1.597,249,1.597,250,1.255,251,1.304,252,1.41,253,2.507,254,2.507,255,2.507,256,2.202,257,2.507,258,3.507,259,2.507,260,2.507,261,2.507,262,2.507,263,2.507,264,2.342,2472,6.08,2473,4.346]],["title/classes/LoadLightCardsSuccess.html",[0,0.248,229,2.285]],["body/classes/LoadLightCardsSuccess.html",[0,0.477,2,0.655,3,0.036,4,0.036,5,0.042,8,1.373,12,1.597,19,0.007,33,0.272,34,1.184,35,0.224,36,0.495,37,0.782,38,1.863,39,1.427,40,0.449,41,1.356,43,0.286,45,0.382,46,0.354,47,0.382,49,0.606,50,0.503,51,0.087,52,0.492,57,0.088,58,0.777,76,1.164,77,1.916,91,1.441,92,1.441,93,1.309,126,1.607,137,0.003,138,0.004,139,0.003,159,1.027,213,3.553,214,4.093,215,2.342,216,2.187,219,2.507,220,2.499,221,1.875,222,1.787,223,2.269,224,3.662,225,4.975,226,2.279,227,3.553,228,2.139,229,3.738,230,3.175,231,2.421,232,1.83,233,3.662,234,1.824,235,3.553,236,1.745,237,1.329,238,3.553,239,1.922,240,2.91,241,2.202,242,2.269,243,3.553,244,2.342,245,1.949,246,1.383,247,1.356,248,1.597,249,1.597,250,1.255,251,1.304,252,1.41,253,2.507,254,2.507,255,3.507,256,2.202,257,2.507,258,2.507,259,2.507,260,2.507,261,2.507,262,2.507,263,2.507,264,2.342,2474,6.08,2475,4.346]],["title/classes/LoadMenu.html",[0,0.248,2098,2.502]],["body/classes/LoadMenu.html",[0,0.457,2,0.669,3,0.036,4,0.036,5,0.043,8,1.378,14,2.068,16,2.125,17,1.084,19,0.007,33,0.259,34,1.144,35,0.229,36,0.502,38,1.902,39,1.388,40,0.42,43,0.252,45,0.623,49,0.619,50,0.514,51,0.088,52,0.503,57,0.086,58,0.794,76,1.652,77,1.998,79,1.248,91,1.366,92,1.366,93,1.24,126,1.648,132,2.068,137,0.003,138,0.005,139,0.003,166,1.869,186,2.317,187,2.598,188,2.003,189,1.963,226,2.128,234,1.332,236,2.849,245,1.972,246,1.412,247,1.385,250,1.282,251,1.332,252,1.441,563,4.693,609,2.561,744,3.951,767,3.438,775,2.658,1010,2.658,1017,2.561,1537,2.765,1556,4.418,1563,4.418,1564,2.765,1565,4.342,1567,3.823,1568,2.561,1569,2.765,1570,3.951,1646,2.318,2093,2.658,2096,2.886,2097,2.658,2098,4.131,2099,3.951,2100,3.951,2101,3.951,2102,3.951,2103,2.765,2104,4.011,2105,2.886,2106,2.886,2107,2.886,2108,2.886,2109,2.658,2110,2.765,2111,4.611,2112,4.611,2113,4.011,2114,2.886,2115,2.886,2116,2.886,2117,2.886,2118,2.765,2476,6.171]],["title/classes/LoadMenuFailure.html",[0,0.248,2100,2.586]],["body/classes/LoadMenuFailure.html",[0,0.454,2,0.653,3,0.035,4,0.035,5,0.042,8,1.372,14,2.017,16,2.072,17,1.057,19,0.007,33,0.268,34,1.137,35,0.224,36,0.493,37,0.78,38,1.955,39,1.38,40,0.359,41,1.351,43,0.286,45,0.666,46,0.352,47,0.38,49,0.603,50,0.501,51,0.087,52,0.49,57,0.085,58,0.774,76,1.624,77,1.983,79,1.234,91,1.356,92,1.356,93,1.232,126,1.638,132,2.017,137,0.003,138,0.004,139,0.003,166,1.823,186,2.277,187,2.553,188,1.968,189,1.915,216,2.183,226,2.1,234,1.299,236,2.811,245,1.945,246,1.377,247,1.351,250,1.25,251,1.299,252,1.405,563,4.681,609,2.498,744,3.899,767,3.378,775,2.592,1010,2.592,1017,2.498,1537,2.697,1556,4.359,1563,4.359,1564,2.697,1565,4.302,1567,3.772,1568,2.498,1569,2.697,1570,3.899,1646,2.261,2093,2.592,2096,2.814,2097,2.592,2098,3.772,2099,3.899,2100,4.224,2101,3.899,2102,3.899,2103,2.697,2104,2.814,2105,3.942,2106,2.814,2107,2.814,2108,2.814,2109,2.592,2110,2.697,2111,4.549,2112,4.549,2113,3.942,2114,2.814,2115,2.814,2116,2.814,2117,2.814,2118,2.697,2477,6.064,2478,4.33]],["title/classes/LoadMenuSuccess.html",[0,0.248,2099,2.586]],["body/classes/LoadMenuSuccess.html",[0,0.454,2,0.653,3,0.035,4,0.035,5,0.042,8,1.372,14,2.017,16,2.072,17,1.057,19,0.007,33,0.268,34,1.137,35,0.224,36,0.493,37,0.78,38,1.955,39,1.38,40,0.359,41,1.351,43,0.286,45,0.666,46,0.352,47,0.38,49,0.603,50,0.501,51,0.087,52,0.49,57,0.085,58,0.774,76,1.624,77,1.983,79,1.234,91,1.356,92,1.356,93,1.232,126,1.638,132,2.017,137,0.003,138,0.004,139,0.003,166,1.823,186,2.277,187,2.553,188,1.968,189,1.915,216,2.183,226,2.1,234,1.299,236,2.811,245,1.945,246,1.377,247,1.351,250,1.25,251,1.299,252,1.405,563,4.681,609,2.498,744,3.899,767,3.378,775,2.592,1010,2.592,1017,2.498,1537,2.697,1556,4.359,1563,4.359,1564,2.697,1565,4.302,1567,3.772,1568,2.498,1569,2.697,1570,3.899,1646,2.261,2093,2.592,2096,2.814,2097,2.592,2098,3.772,2099,4.224,2100,3.899,2101,3.899,2102,3.899,2103,2.697,2104,2.814,2105,2.814,2106,3.942,2107,2.814,2108,2.814,2109,2.592,2110,2.697,2111,4.549,2112,4.549,2113,3.942,2114,2.814,2115,2.814,2116,2.814,2117,2.814,2118,2.697,2479,6.064,2480,4.33]],["title/classes/LoadSettings.html",[0,0.248,2124,2.586]],["body/classes/LoadSettings.html",[0,0.472,2,0.758,3,0.041,4,0.041,5,0.049,8,1.371,19,0.007,33,0.265,34,1.178,35,0.26,36,0.546,38,1.859,39,1.425,43,0.205,49,0.701,50,0.582,51,0.072,52,0.57,57,0.088,58,0.899,66,1.847,76,1.798,77,2.074,91,1.382,92,1.382,93,1.255,126,1.67,137,0.004,138,0.005,139,0.004,226,2.269,234,2.015,245,2.103,246,1.599,247,1.568,248,1.847,249,1.847,250,1.452,251,1.508,252,1.632,545,4.316,1096,4.077,1913,4.077,1914,2.9,2120,3.009,2123,3.268,2124,4.497,2125,4.214,2126,4.711,2127,4.214,2128,4.214,2129,4.366,2130,3.268,2131,3.268,2132,3.268,2133,3.131,2134,3.268,2135,3.268,2136,3.131,2481,5.027]],["title/classes/LoadSettingsFailure.html",[0,0.248,2125,2.586]],["body/classes/LoadSettingsFailure.html",[0,0.468,2,0.733,3,0.04,4,0.04,5,0.047,8,1.361,19,0.007,33,0.272,34,1.169,35,0.251,36,0.534,37,0.844,38,1.94,39,1.415,40,0.288,41,1.516,43,0.304,45,0.427,46,0.395,47,0.427,49,0.677,50,0.563,51,0.07,52,0.551,57,0.088,58,0.869,66,1.786,76,1.758,77,2.054,91,1.369,92,1.369,93,1.243,126,1.655,137,0.004,138,0.005,139,0.004,216,2.319,226,2.231,234,1.97,245,2.067,246,1.546,247,1.516,248,1.786,249,1.786,250,1.403,251,1.458,252,1.577,545,4.299,1096,4.007,1913,4.007,1914,2.803,2120,2.909,2123,3.159,2124,4.142,2125,4.436,2126,4.631,2127,4.142,2128,4.142,2129,3.159,2130,4.268,2131,3.159,2132,3.159,2133,3.027,2134,3.159,2135,3.159,2136,3.027,2482,6.566,2483,4.86]],["title/classes/LoadSettingsSuccess.html",[0,0.248,1913,2.502]],["body/classes/LoadSettingsSuccess.html",[0,0.468,2,0.733,3,0.04,4,0.04,5,0.047,8,1.361,19,0.007,33,0.272,34,1.169,35,0.251,36,0.534,37,0.844,38,1.94,39,1.415,40,0.288,41,1.516,43,0.304,45,0.427,46,0.395,47,0.427,49,0.677,50,0.563,51,0.07,52,0.551,57,0.088,58,0.869,66,1.786,76,1.758,77,2.054,91,1.369,92,1.369,93,1.243,126,1.655,137,0.004,138,0.005,139,0.004,216,2.319,226,2.231,234,1.97,245,2.067,246,1.546,247,1.516,248,1.786,249,1.786,250,1.403,251,1.458,252,1.577,545,4.299,1096,4.007,1913,4.291,1914,2.803,2120,2.909,2123,3.159,2124,4.142,2125,4.142,2126,4.631,2127,4.142,2128,4.142,2129,3.159,2130,3.159,2131,4.268,2132,3.159,2133,3.027,2134,3.159,2135,3.159,2136,3.027,2484,6.566,2485,4.86]],["title/components/LoginComponent.html",[100,1.34,265,0.944]],["body/components/LoginComponent.html",[0,0.219,3,0.034,4,0.034,5,0.04,17,1.806,19,0.007,20,2.075,29,1.688,33,0.246,34,0.765,35,0.212,36,0.474,40,0.345,43,0.36,45,0.36,46,0.602,47,0.36,51,0.128,52,0.464,55,2.607,56,1.908,57,0.04,61,1.16,78,2.075,91,0.654,92,0.654,93,0.594,99,2.929,100,2.136,101,4.268,104,2.87,109,3.248,110,3.987,112,1.205,117,1.877,137,0.003,138,0.004,139,0.003,148,1.893,159,0.985,163,1.229,178,1.561,199,1.205,200,1.253,265,1.38,266,1.443,267,2.143,268,1.505,269,2.929,270,1.538,271,1.538,273,2.666,274,1.443,275,3.479,279,2.19,285,1.561,288,1.477,289,2.904,290,1.505,306,1.839,307,2.66,314,0.732,315,1.253,316,1.505,317,2.282,318,1.205,319,1.303,324,2.663,329,2.79,334,2.363,347,2.452,379,1.505,391,5.539,392,5.168,393,6.036,394,1.278,395,2.19,396,2.19,397,1.413,398,2.778,399,1.538,400,1.538,401,1.413,402,1.538,403,1.443,404,1.538,405,2.778,406,1.443,407,1.538,408,1.413,409,2.19,410,1.443,411,1.538,412,1.473,413,1.505,414,1.356,415,2.19,416,1.413,417,1.538,418,1.443,419,1.443,420,1.538,421,1.413,422,1.538,423,1.443,424,1.538,425,1.443,426,1.538,427,1.413,428,1.538,429,1.443,430,1.538,431,1.473,432,1.443,433,1.538,434,1.443,435,1.505,436,2.55,437,1.538,438,1.443,439,1.538,440,1.413,441,1.443,442,1.473,443,2.19,444,1.443,445,1.443,446,1.716,447,1.443,448,1.538,449,1.443,450,1.443,451,1.443,452,1.684,453,1.443,454,1.413,455,1.538,456,1.413,457,1.505,458,1.538,492,2.139,695,2.551,705,3.987,817,2.139,1024,2.939,1081,4.268,2434,4.625,2486,4.096,2487,6.79,2488,6.79,2489,5.831,2490,7.398,2491,6.79,2492,6.79,2493,6.79,2494,6.79,2495,7.398,2496,7.398,2497,5.831,2498,4.096,2499,4.096,2500,4.096,2501,4.096,2502,4.096,2503,4.096,2504,4.096,2505,4.096,2506,4.096,2507,4.096,2508,4.096,2509,4.096,2510,4.096,2511,4.096,2512,4.096,2513,4.096,2514,4.096,2515,4.096,2516,4.096,2517,4.096,2518,4.096,2519,4.096,2520,4.096,2521,4.096,2522,4.096,2523,5.831,2524,5.831,2525,5.831,2526,5.831,2527,5.831,2528,5.831]],["title/classes/Map.html",[0,0.248,163,1.393]],["body/classes/Map.html",[0,0.393,2,1.109,3,0.06,4,0.06,5,0.071,19,0.007,43,0.3,57,0.071,79,1.386,137,0.005,138,0.006,139,0.005,163,2.556,1032,5.537,2529,7.356,2530,7.356,2531,8.518,2532,7.356]],["title/injectables/MenuEffects.html",[613,3.787,686,1.366]],["body/injectables/MenuEffects.html",[0,0.244,3,0.037,4,0.037,5,0.044,8,1.227,17,2.104,19,0.007,29,1.929,33,0.235,35,0.42,36,0.512,38,1.666,40,0.27,43,0.294,45,0.401,46,0.512,47,0.401,49,0.877,50,0.729,51,0.128,52,0.517,57,0.044,91,0.729,92,0.729,93,0.662,99,3.106,106,4.323,117,1.944,126,1.466,137,0.005,138,0.005,139,0.003,163,1.37,182,1.71,186,2.363,226,2.16,285,1.928,290,1.678,314,0.816,315,1.397,316,1.678,318,1.344,319,1.453,337,1.482,347,3.767,531,2.544,563,3.097,564,5.369,613,5.134,686,1.852,690,2.314,691,2.385,742,5.134,802,3.459,892,4.79,910,2.072,916,4.802,924,5.594,939,3.506,940,4.695,942,5.134,949,4.645,967,4.79,971,4.091,972,4.833,973,6.863,1018,2.635,1019,2.461,1252,4.687,1258,3.476,1275,5.567,1565,3.392,1566,6.898,1567,2.461,1572,3.726,1647,3.726,1882,4.515,2097,2.734,2098,2.461,2099,2.544,2100,2.544,2101,4.011,2102,4.011,2110,3.92,2413,5.594,2417,5.594,2533,4.567,2534,7.76,2535,4.567,2536,6.294,2537,6.294,2538,6.294,2539,6.294,2540,6.294,2541,6.294,2542,6.294,2543,4.567,2544,6.294,2545,6.294,2546,6.294,2547,6.294,2548,6.294,2549,6.294,2550,6.294,2551,6.294,2552,4.567,2553,6.294,2554,6.294,2555,6.294]],["title/interfaces/MenuState.html",[559,2.053,569,3.787]],["body/interfaces/MenuState.html",[3,0.055,4,0.055,5,0.065,19,0.007,33,0.259,35,0.348,36,0.658,51,0.096,57,0.078,79,1.496,126,1.637,137,0.005,138,0.006,139,0.005,148,2.812,178,1.803,183,2.584,187,3.783,197,2.474,367,5.725,559,2.977,560,3.884,563,4.524,569,7.068,1646,3.516,2556,6.732,2557,9.192,2558,6.732,2559,6.732,2560,6.732]],["title/classes/Message.html",[0,0.248,55,1.782]],["body/classes/Message.html",[0,0.364,2,1.027,3,0.067,4,0.056,5,0.066,19,0.007,33,0.196,39,1.364,40,0.482,43,0.278,45,0.598,46,0.554,47,0.598,51,0.098,55,3.463,57,0.079,58,1.217,79,1.417,91,1.088,92,1.088,93,0.987,126,1.287,137,0.005,138,0.006,139,0.005,146,4.406,162,3.352,681,3.929,1024,4.887,2561,6.055,2562,6.811,2563,7.103,2564,6.811,2565,6.811,2566,6.055]],["title/directives/MouseWheelDirective.html",[397,1.601,456,1.601]],["body/directives/MouseWheelDirective.html",[0,0.289,3,0.044,4,0.044,5,0.053,7,2.127,19,0.007,29,1.754,33,0.226,35,0.28,43,0.361,45,0.476,46,0.441,47,0.476,51,0.078,57,0.068,137,0.004,138,0.005,139,0.004,274,1.908,275,2.538,288,1.787,306,1.347,307,2.743,314,0.968,336,3.243,346,3.018,397,2.868,453,1.908,456,2.434,457,2.593,862,3.12,945,5.756,1161,5.37,1162,5.37,1409,6.728,1746,6.851,1751,6.272,1755,6.272,1759,7.663,1763,6.402,1776,4.815,1777,6.976,1949,8.001,2109,3.243,2567,5.417,2568,8.314,2569,7.056,2570,7.056,2571,7.056,2572,7.847,2573,7.847,2574,7.056,2575,7.056,2576,5.417,2577,5.417,2578,5.417,2579,5.417,2580,5.417,2581,5.417,2582,5.417,2583,5.417,2584,7.056,2585,5.417,2586,7.056,2587,7.056,2588,5.417,2589,5.417,2590,7.847,2591,5.417,2592,5.417,2593,5.417,2594,5.417,2595,7.056,2596,8.314,2597,5.417,2598,5.417,2599,5.417,2600,5.417,2601,5.417]],["title/components/MultiSettingsComponent.html",[265,0.944,434,1.635]],["body/components/MultiSettingsComponent.html",[0,0.197,3,0.03,4,0.03,5,0.036,19,0.007,29,1.589,33,0.252,34,0.708,35,0.19,36,0.439,40,0.218,43,0.38,45,0.688,46,0.689,47,0.688,49,0.752,50,0.907,51,0.107,52,0.417,57,0.036,61,1.043,79,0.879,100,1.063,107,1.559,112,1.084,117,1.81,137,0.003,138,0.004,139,0.003,148,1.752,151,2.387,159,0.912,182,1.098,199,1.084,200,1.126,265,1.3,266,1.297,267,1.984,268,1.353,269,1.588,270,1.383,271,1.383,273,2.51,274,1.297,275,3.45,277,2.515,279,2.027,285,2.098,288,1.367,289,2.51,290,1.353,306,2.17,307,2.493,314,0.658,318,1.084,319,1.171,380,1.27,394,1.148,395,2.027,396,2.027,397,1.27,398,2.644,399,1.383,400,1.383,401,1.27,402,1.383,403,3.277,404,2.027,405,2.644,406,1.297,407,1.383,408,1.27,409,2.027,410,1.297,411,1.383,412,1.324,413,1.353,414,1.219,415,2.027,416,1.27,417,1.383,418,1.297,419,1.297,420,1.383,421,1.27,422,1.383,423,1.297,424,1.383,425,1.297,426,1.383,427,1.27,428,1.383,429,1.297,430,1.383,431,1.324,432,1.297,433,1.383,434,2.48,435,3.164,436,2.401,437,1.383,438,1.297,439,1.383,440,1.27,441,1.297,442,1.324,443,2.027,444,1.297,445,1.297,446,1.589,447,1.297,448,1.383,449,1.297,450,1.297,451,1.297,452,1.063,453,1.297,454,1.27,455,1.383,456,1.27,457,1.353,458,1.383,492,1.923,545,3.194,650,2.124,663,4.109,824,3.362,1053,2.642,1055,3.687,1056,4.354,1059,3.677,1060,3.232,1061,6.248,1062,3.677,1063,3.232,1064,5.514,1065,3.677,1066,3.687,1067,4.354,1068,4.795,1069,3.677,1070,3.677,1071,3.677,1076,2.508,1078,2.508,1081,4.061,1082,2.508,1083,3.232,1085,2.508,1089,4.354,1091,2.293,1105,2.508,1306,3.509,1805,6.543,1807,2.642,1808,2.642,1809,2.642,1815,2.642,1816,2.642,1817,2.642,1818,2.642,1819,2.642,1820,2.642,1821,2.642,1822,2.642,1823,2.642,1824,2.642,1825,2.642,1826,2.642,1827,2.642,1829,2.642,1830,5.358,1831,2.642,2434,2.508,2448,2.642,2449,3.003,2450,3.003,2602,7.496,2603,6.115,2604,3.273,2605,5.682,2606,4.404,2607,6.258,2608,3.682,2609,3.682,2610,3.682,2611,3.682,2612,3.682,2613,3.682,2614,3.273]],["title/components/NavbarComponent.html",[112,1.366,265,0.944]],["body/components/NavbarComponent.html",[0,0.202,3,0.031,4,0.045,5,0.053,17,1.582,19,0.007,33,0.235,34,0.721,35,0.284,36,0.447,37,0.485,40,0.223,43,0.362,45,0.483,46,0.616,47,0.483,49,0.993,50,0.825,51,0.127,52,0.427,57,0.037,61,1.069,72,2.705,79,0.894,100,1.089,107,1.089,111,3.968,112,2.096,114,2.962,117,1.826,137,0.003,138,0.004,139,0.003,148,1.225,159,0.929,166,1.589,182,0.767,187,1.589,194,3.171,197,1.387,199,1.908,200,1.154,207,2.314,237,1.154,265,1.318,266,1.329,267,2.02,268,1.387,269,1.628,270,1.417,271,1.417,273,2.545,274,1.329,275,3.457,277,2.56,279,2.064,282,5.289,285,1.736,288,1.392,289,2.796,290,1.387,299,3.078,306,1.771,307,2.266,314,0.674,315,1.154,316,1.387,317,2.102,318,1.11,319,1.2,320,3.078,322,3.354,337,1.225,346,4.402,347,3.29,351,3.078,373,1.589,374,1.551,375,1.589,376,1.589,377,1.589,378,1.589,379,1.387,380,1.302,381,1.589,382,1.589,383,1.589,384,1.516,385,1.589,386,1.551,387,1.589,388,1.589,389,1.589,390,1.589,394,1.177,395,2.064,396,2.064,397,1.302,398,2.675,399,1.417,400,1.417,401,1.302,402,1.417,403,1.329,404,1.417,405,2.675,406,1.329,407,1.417,408,1.302,409,2.064,410,1.329,411,1.417,412,1.357,413,1.387,414,1.249,415,2.064,416,1.302,417,1.417,418,1.329,419,1.329,420,1.417,421,1.302,422,1.417,423,1.329,424,1.417,425,1.329,426,1.417,427,1.302,428,1.417,429,1.329,430,1.417,431,1.357,432,1.329,433,1.417,434,1.329,435,1.387,436,2.435,437,1.417,438,1.329,439,1.417,440,1.302,441,1.329,442,1.357,443,2.064,444,1.329,445,1.329,446,1.618,447,1.329,448,1.417,449,1.329,450,1.329,451,1.329,452,1.089,453,1.329,454,1.302,455,1.417,456,1.302,457,1.387,458,1.417,498,2.57,553,7.025,563,1.857,692,2.177,699,2.102,700,2.034,817,2.87,1163,3.573,1174,3.29,1177,3.744,1201,3.354,1202,3.354,1565,3.494,1570,2.102,1572,3.078,1646,1.97,2098,2.962,2355,3.354,2615,3.773,2616,6.484,2617,5.497,2618,6.484,2619,5.497,2620,5.497,2621,6.484,2622,5.497,2623,7.123,2624,6.484,2625,5.497,2626,3.773,2627,3.773,2628,3.773,2629,3.773,2630,3.773,2631,3.773,2632,3.773,2633,3.773,2634,3.773,2635,3.773,2636,3.773,2637,3.773,2638,3.773,2639,3.773,2640,3.773,2641,3.773,2642,3.773,2643,3.773,2644,3.773,2645,3.773,2646,3.773,2647,3.773,2648,3.773,2649,3.773,2650,3.773,2651,3.773,2652,3.773,2653,3.773,2654,3.773,2655,3.773,2656,5.497,2657,5.497,2658,5.497,2659,5.497,2660,5.497,2661,5.497,2662,5.497,2663,3.773,2664,5.811,2665,7.123,2666,3.773,2667,5.497,2668,5.497,2669,5.497,2670,3.773,2671,3.773,2672,4.886,2673,5.497,2674,5.497,2675,3.773,2676,3.773]],["title/components/NoSelectionComponent.html",[265,0.944,438,1.635]],["body/components/NoSelectionComponent.html",[0,0.288,3,0.044,4,0.044,5,0.052,19,0.007,33,0.203,34,0.922,35,0.278,40,0.463,43,0.287,46,0.636,51,0.077,57,0.052,61,1.525,100,1.554,112,1.584,137,0.004,138,0.005,139,0.004,159,1.188,199,1.584,200,1.647,241,4.202,265,1.591,266,1.896,267,2.582,268,1.978,270,2.022,271,2.022,273,3.072,274,1.896,275,3.542,279,2.639,288,1.78,289,3.256,306,1.338,307,1.713,314,0.962,394,1.679,395,2.639,396,2.639,397,1.857,398,3.114,399,2.022,400,2.022,401,1.857,402,2.022,403,1.896,404,2.022,405,3.114,406,1.896,407,2.022,408,1.857,409,2.639,410,1.896,411,2.022,412,1.937,413,1.978,414,1.783,415,2.639,416,1.857,417,2.022,418,1.896,419,1.896,420,2.022,421,1.857,422,2.022,423,1.896,424,2.022,425,1.896,426,2.022,427,1.857,428,2.022,429,1.896,430,2.022,431,1.937,432,1.896,433,2.022,434,1.896,435,1.978,436,2.938,437,2.022,438,2.921,439,2.022,440,1.857,441,1.896,442,1.937,443,2.639,444,1.896,445,1.896,446,2.068,447,1.896,448,2.022,449,1.896,450,1.896,451,1.896,452,1.554,453,1.896,454,1.857,455,2.022,456,1.857,457,1.978,458,2.022,663,5.349,1926,6.955,2677,7.824,2678,5.384,2679,7.028,2680,5.384,2681,5.384]],["title/classes/ParameterListItem.html",[0,0.248,210,2.779]],["body/classes/ParameterListItem.html",[0,0.47,2,0.693,3,0.038,4,0.038,5,0.045,8,0.693,11,1.619,19,0.007,33,0.208,37,0.591,39,1.541,40,0.528,43,0.188,45,0.404,46,0.514,47,0.404,50,0.901,51,0.104,57,0.088,58,1.13,79,1.524,91,1.405,92,1.405,93,1.275,102,1.983,137,0.003,138,0.005,139,0.003,142,2.752,144,3.784,145,5.046,146,3.926,147,2.863,148,2.897,149,2.863,150,2.863,151,2.033,152,2.796,153,2.863,154,2.863,155,2.863,156,2.863,157,2.863,159,0.777,160,2.263,161,1.935,162,2.263,163,1.379,164,2.863,165,2.329,166,1.935,167,2.863,168,2.752,169,2.863,170,2.863,171,2.863,172,2.863,173,2.863,174,2.863,175,2.863,176,2.863,177,3.937,178,1.231,179,3.407,180,2.863,181,3.937,182,1.285,183,1.765,184,3.407,185,2.863,186,1.726,187,1.935,188,1.492,189,2.033,190,2.863,191,2.863,192,2.863,193,2.863,194,2.652,195,2.752,196,2.752,197,3.173,198,3.784,199,1.353,200,1.406,201,2.752,202,2.752,203,2.752,204,2.086,205,2.863,206,2.863,207,2.661,208,2.863,209,2.752,210,4.325,211,2.863,212,2.863,2682,4.597,2683,4.597]],["title/classes/PatchSettings.html",[0,0.248,1096,2.502]],["body/classes/PatchSettings.html",[0,0.468,2,0.733,3,0.04,4,0.04,5,0.047,8,1.361,19,0.007,33,0.272,34,1.169,35,0.251,36,0.534,37,0.844,38,1.94,39,1.415,40,0.288,41,1.516,43,0.304,45,0.427,46,0.395,47,0.427,49,0.677,50,0.563,51,0.07,52,0.551,57,0.088,58,0.869,66,1.786,76,1.758,77,2.054,91,1.369,92,1.369,93,1.243,126,1.655,137,0.004,138,0.005,139,0.004,216,2.319,226,2.231,234,1.97,245,2.067,246,1.546,247,1.516,248,1.786,249,1.786,250,1.403,251,1.458,252,1.577,545,4.299,1096,4.291,1913,4.007,1914,2.803,2120,2.909,2123,3.159,2124,4.142,2125,4.142,2126,4.631,2127,4.142,2128,4.142,2129,3.159,2130,3.159,2131,3.159,2132,4.268,2133,3.027,2134,3.159,2135,3.159,2136,3.027,2684,6.566,2685,4.86]],["title/classes/PatchSettingsFailure.html",[0,0.248,2128,2.586]],["body/classes/PatchSettingsFailure.html",[0,0.468,2,0.733,3,0.04,4,0.04,5,0.047,8,1.361,19,0.007,33,0.272,34,1.169,35,0.251,36,0.534,37,0.844,38,1.94,39,1.415,40,0.288,41,1.516,43,0.304,45,0.427,46,0.395,47,0.427,49,0.677,50,0.563,51,0.07,52,0.551,57,0.088,58,0.869,66,1.786,76,1.758,77,2.054,91,1.369,92,1.369,93,1.243,126,1.655,137,0.004,138,0.005,139,0.004,216,2.319,226,2.231,234,1.97,245,2.067,246,1.546,247,1.516,248,1.786,249,1.786,250,1.403,251,1.458,252,1.577,545,4.299,1096,4.007,1913,4.007,1914,2.803,2120,2.909,2123,3.159,2124,4.142,2125,4.142,2126,4.631,2127,4.142,2128,4.436,2129,3.159,2130,3.159,2131,3.159,2132,3.159,2133,3.027,2134,4.268,2135,3.159,2136,3.027,2686,6.566,2687,4.86]],["title/classes/PatchSettingsSuccess.html",[0,0.248,2127,2.586]],["body/classes/PatchSettingsSuccess.html",[0,0.468,2,0.733,3,0.04,4,0.04,5,0.047,8,1.361,19,0.007,33,0.272,34,1.169,35,0.251,36,0.534,37,0.844,38,1.94,39,1.415,40,0.288,41,1.516,43,0.304,45,0.427,46,0.395,47,0.427,49,0.677,50,0.563,51,0.07,52,0.551,57,0.088,58,0.869,66,1.786,76,1.758,77,2.054,91,1.369,92,1.369,93,1.243,126,1.655,137,0.004,138,0.005,139,0.004,216,2.319,226,2.231,234,1.97,245,2.067,246,1.546,247,1.516,248,1.786,249,1.786,250,1.403,251,1.458,252,1.577,545,4.299,1096,4.007,1913,4.007,1914,2.803,2120,2.909,2123,3.159,2124,4.142,2125,4.142,2126,4.631,2127,4.436,2128,4.142,2129,3.159,2130,3.159,2131,3.159,2132,3.159,2133,3.027,2134,3.159,2135,4.268,2136,3.027,2688,6.566,2689,4.86]],["title/classes/PayloadForSuccessfulAuthentication.html",[0,0.248,42,2.502]],["body/classes/PayloadForSuccessfulAuthentication.html",[0,0.44,1,3.047,2,0.501,3,0.027,4,0.027,5,0.065,6,1.85,7,1.304,8,1.342,9,4.176,10,1.635,11,2.357,12,3.401,13,3.713,14,3.344,15,1.79,16,2.878,17,1.841,18,3.6,19,0.007,20,3.637,21,2.885,22,1.988,23,1.916,24,3.607,25,2.66,26,3.47,27,3.6,28,3.351,29,1.495,30,2.885,31,3.351,32,2.994,33,0.263,34,1.057,35,0.172,36,0.407,37,1.161,38,1.542,39,1.262,40,0.296,42,3.241,43,0.32,45,0.292,46,0.27,47,0.63,51,0.086,52,0.376,53,3.713,54,1.635,55,2.309,56,1.547,57,0.083,58,0.594,59,1.589,60,3.141,61,0.941,62,2.211,63,3.141,64,1.683,65,3.47,66,3.086,67,4.352,68,3.728,69,3.141,70,1.916,71,2.329,72,3.294,73,2.594,74,3.749,75,3.141,76,1.61,77,1.72,78,3.391,79,1.469,80,3.637,81,3.637,82,3.749,83,2.96,84,1.988,85,1.988,86,2.994,87,2.994,88,2.269,89,2.994,90,1.988,91,1.286,92,1.286,93,1.168,94,1.988,95,1.916,96,1.988,97,1.988,98,1.85,99,1.433,100,0.959,101,1.916,102,2.594,103,2.994,104,2.96,105,2.695,106,1.85,107,0.959,108,1.916,109,1.85,110,1.79,111,3.728,112,0.977,113,1.988,114,1.79,115,1.916,116,2.695,117,1.155,118,1.988,119,1.988,120,4.007,121,1.916,122,1.988,123,2.885,124,1.988,125,2.885,126,0.627,127,1.988,128,1.916,129,1.988,130,1.916,131,1.988,132,2.329,133,2.885,134,1.988,135,1.988,136,1.85,137,0.002,138,0.004,139,0.002,681,2.885,906,5.46,907,5.46,2690,3.321,2691,3.321,2692,3.321,2693,3.321,2694,3.321,2695,3.321,2696,3.321,2697,3.321]],["title/classes/Process.html",[0,0.248,179,2.502]],["body/classes/Process.html",[0,0.47,2,0.696,3,0.038,4,0.038,5,0.045,8,0.696,11,1.626,19,0.007,33,0.209,37,0.593,39,1.541,40,0.529,43,0.188,45,0.405,46,0.516,47,0.405,50,0.734,51,0.104,57,0.088,58,1.133,79,1.508,91,1.406,92,1.406,93,1.276,102,1.991,137,0.003,138,0.005,139,0.003,142,2.763,144,3.795,145,4.89,146,3.63,147,2.875,148,2.899,149,2.875,150,2.875,151,2.041,152,2.803,153,2.875,154,2.875,155,2.875,156,2.875,157,2.875,159,0.78,160,2.272,161,1.943,162,2.272,163,1.385,164,4.509,165,2.339,166,1.943,167,2.875,168,2.763,169,2.875,170,2.875,171,2.875,172,2.875,173,2.875,174,2.875,175,2.875,176,2.875,177,3.948,178,1.236,179,3.902,180,2.875,181,3.948,182,1.289,183,1.772,184,3.416,185,2.875,186,1.733,187,1.943,188,1.498,189,2.041,190,2.875,191,2.875,192,2.875,193,2.875,194,2.663,195,2.763,196,2.763,197,3.177,198,3.795,199,1.358,200,1.412,201,2.763,202,2.763,203,2.763,204,2.094,205,2.875,206,2.875,207,2.669,208,2.875,209,2.763,210,3.795,211,2.875,212,2.875,681,2.663,2698,4.616,2699,4.616,2700,4.616]],["title/classes/RejectLogIn.html",[0,0.248,69,2.424]],["body/classes/RejectLogIn.html",[0,0.443,1,3.085,2,0.511,3,0.028,4,0.028,5,0.07,6,1.888,7,1.33,8,1.365,9,4.342,10,1.668,11,2.55,12,3.422,13,3.879,14,3.373,15,1.826,16,3.236,17,1.978,18,4.047,19,0.007,20,3.851,21,3.512,22,2.029,23,1.955,24,3.903,25,2.99,26,3.9,27,4.047,28,3.766,29,1.681,30,3.512,31,3.766,32,3.039,33,0.265,34,1.087,35,0.175,36,0.413,37,1.013,38,1.693,39,1.322,40,0.3,41,1.057,42,2.736,43,0.249,45,0.298,46,0.276,47,0.298,49,0.472,50,0.392,51,0.087,52,0.384,53,2.996,54,1.668,55,2.595,56,1.578,57,0.083,58,0.606,59,1.622,60,3.179,61,0.96,62,2.245,63,3.179,64,1.717,65,3.512,66,3.102,67,4.385,68,3.766,69,3.531,70,1.955,71,2.365,72,3.327,73,2.626,74,3.781,75,3.179,76,1.359,77,1.735,78,1.717,79,1.178,80,1.717,81,1.717,82,1.77,83,1.499,84,2.029,85,2.029,86,3.039,87,3.039,88,2.303,89,3.039,90,2.029,91,1.294,92,1.294,93,1.175,94,2.029,95,1.955,96,2.029,97,2.029,98,1.888,99,1.462,100,0.978,101,1.955,102,2.916,103,3.039,104,3.327,105,2.736,106,1.888,107,0.978,108,1.955,109,1.888,110,1.826,111,3.766,112,0.997,113,2.029,114,1.826,115,1.955,116,3.281,117,1.407,118,3.039,119,3.039,120,4.335,121,2.929,122,3.039,123,3.512,124,3.039,125,3.9,126,0.64,127,2.029,128,1.955,129,2.029,130,1.955,131,2.029,132,2.365,133,2.929,134,2.029,135,2.029,136,1.888,137,0.002,138,0.004,139,0.002,216,1.899,2701,5.077,2702,3.389]],["title/classes/RouterStateUrl.html",[0,0.248,576,3.533]],["body/classes/RouterStateUrl.html",[0,0.368,2,0.786,3,0.043,4,0.063,5,0.051,7,2.047,11,2.713,13,4.032,19,0.007,29,1.297,33,0.15,34,0.684,39,1.207,40,0.407,43,0.213,45,0.748,46,0.424,47,0.458,51,0.099,57,0.075,79,1.254,88,3.122,91,0.833,92,0.833,93,0.756,117,1.78,137,0.004,138,0.005,139,0.004,178,2.193,182,1.399,186,3.284,204,3.122,232,2.897,250,2.365,285,1.396,306,1.711,446,2.025,531,2.905,564,4.286,575,3.552,576,5.863,638,4.254,744,3.834,767,3.834,777,6.266,837,4.688,862,2.306,1035,4.12,1568,4.725,1573,3.969,1574,4.636,1575,6.682,1578,4.636,1579,6.118,1581,4.636,1582,6.682,1584,4.636,1585,4.636,1586,7.775,1587,4.636,1588,5.614,1589,6.118,1590,7.135,1591,6.118,1592,6.118,1593,6.682,1594,6.118,1595,6.118,1596,6.118,1597,6.118,1598,6.118,1599,6.118,1600,6.118,1601,4.636,1602,4.636,1603,4.636,1604,4.636,1605,4.636,1606,4.636,1607,4.636,2703,5.215,2704,5.215]],["title/classes/SelectLightCard.html",[0,0.248,235,2.352]],["body/classes/SelectLightCard.html",[0,0.477,2,0.655,3,0.036,4,0.036,5,0.042,8,1.373,12,1.597,19,0.007,33,0.272,34,1.184,35,0.224,36,0.495,37,0.782,38,1.863,39,1.427,40,0.449,41,1.356,43,0.286,45,0.382,46,0.354,47,0.382,49,0.606,50,0.503,51,0.087,52,0.492,57,0.088,58,0.777,76,1.164,77,1.916,91,1.441,92,1.441,93,1.309,126,1.607,137,0.003,138,0.004,139,0.003,159,1.027,213,3.553,214,4.093,215,2.342,216,2.187,219,2.507,220,2.499,221,1.875,222,1.787,223,2.269,224,3.662,225,4.975,226,2.279,227,3.553,228,2.139,229,3.451,230,3.175,231,2.421,232,1.83,233,3.662,234,1.824,235,3.848,236,1.745,237,1.329,238,3.553,239,1.922,240,2.91,241,2.202,242,2.269,243,3.553,244,2.342,245,1.949,246,1.383,247,1.356,248,1.597,249,1.597,250,1.255,251,1.304,252,1.41,253,2.507,254,2.507,255,2.507,256,2.202,257,2.507,258,2.507,259,3.507,260,2.507,261,2.507,262,2.507,263,2.507,264,2.342,2705,6.08,2706,4.346]],["title/classes/SelectMenuLink.html",[0,0.248,1567,2.502]],["body/classes/SelectMenuLink.html",[0,0.449,2,0.628,3,0.034,4,0.034,5,0.04,7,1.635,8,1.374,14,2.748,16,2.824,17,1.44,19,0.007,33,0.266,34,1.126,35,0.215,36,0.48,37,0.758,38,1.957,39,1.368,40,0.349,41,1.299,43,0.28,45,0.691,46,0.339,47,0.366,49,0.58,50,0.482,51,0.085,52,0.472,57,0.085,58,0.744,76,1.58,77,1.958,79,1.213,91,1.341,92,1.341,93,1.218,126,1.622,132,2.748,137,0.003,138,0.004,139,0.003,166,2.484,186,2.216,187,2.484,188,2.419,189,2.609,216,2.137,226,2.056,234,1.249,236,2.752,245,1.905,246,1.325,247,1.299,250,1.202,251,1.249,252,1.352,563,4.719,609,3.404,744,4.152,767,3.287,775,2.493,1010,3.532,1017,3.404,1537,3.675,1556,4.267,1563,4.642,1564,3.675,1565,4.403,1567,4.017,1568,3.404,1569,3.675,1570,4.383,1646,2.175,2093,2.493,2096,2.707,2097,2.493,2098,3.693,2099,3.817,2100,3.817,2101,3.817,2102,3.817,2103,2.594,2104,2.707,2105,2.707,2106,2.707,2107,3.835,2108,3.835,2109,3.532,2110,3.675,2111,4.454,2112,4.454,2113,3.835,2114,2.707,2115,2.707,2116,2.707,2117,2.707,2118,2.594,2707,5.9,2708,4.165]],["title/classes/SelectMenuLinkFailure.html",[0,0.248,2102,2.586]],["body/classes/SelectMenuLinkFailure.html",[0,0.452,2,0.642,3,0.035,4,0.035,5,0.041,7,1.671,8,1.379,14,1.982,16,2.037,17,1.039,19,0.007,33,0.267,34,1.132,35,0.22,36,0.487,37,0.77,38,1.965,39,1.374,40,0.355,41,1.328,43,0.283,45,0.697,46,0.346,47,0.374,49,0.593,50,0.493,51,0.086,52,0.482,57,0.085,58,0.761,76,1.604,77,1.972,79,1.225,91,1.35,92,1.35,93,1.226,126,1.658,132,1.982,137,0.003,138,0.004,139,0.003,166,1.792,186,2.25,187,2.522,188,1.944,189,1.882,216,2.163,226,2.08,234,1.277,236,2.785,245,1.927,246,1.354,247,1.328,250,1.229,251,1.277,252,1.381,563,4.686,609,2.455,744,4.192,767,3.863,775,2.548,1010,2.548,1017,2.455,1537,2.651,1556,4.687,1563,4.687,1564,2.651,1565,4.275,1567,3.737,1568,2.455,1569,2.651,1570,4.192,1646,2.222,2093,2.548,2096,2.766,2097,2.548,2098,3.737,2099,3.863,2100,3.863,2101,3.863,2102,4.192,2103,2.651,2104,2.766,2105,2.766,2106,2.766,2107,2.766,2108,2.766,2109,2.548,2110,2.651,2111,4.892,2112,4.892,2113,3.894,2114,2.766,2115,2.766,2116,3.894,2117,3.894,2118,2.651,2709,5.991,2710,4.256]],["title/classes/SelectMenuLinkSuccess.html",[0,0.248,2101,2.586]],["body/classes/SelectMenuLinkSuccess.html",[0,0.451,2,0.639,3,0.035,4,0.035,5,0.041,7,1.665,8,1.378,14,1.975,16,2.029,17,1.035,19,0.007,33,0.267,34,1.131,35,0.219,36,0.486,37,0.768,38,1.963,39,1.373,40,0.354,41,1.323,43,0.282,45,0.696,46,0.345,47,0.372,49,0.591,50,0.491,51,0.086,52,0.48,57,0.085,58,0.758,76,1.6,77,1.969,79,1.223,91,1.348,92,1.348,93,1.224,126,1.629,132,1.975,137,0.003,138,0.004,139,0.003,166,1.785,186,2.821,187,2.516,188,1.939,189,1.875,216,2.159,226,2.076,234,1.272,236,2.779,245,1.924,246,1.349,247,1.323,250,1.224,251,1.272,252,1.376,563,4.684,609,2.446,744,4.185,767,3.855,775,3.577,1010,2.538,1017,2.446,1537,2.641,1556,4.679,1563,4.679,1564,2.641,1565,4.429,1567,3.729,1568,2.446,1569,2.641,1570,3.855,1646,2.214,2093,2.538,2096,2.756,2097,2.538,2098,3.729,2099,3.855,2100,3.855,2101,4.185,2102,3.855,2103,2.641,2104,2.756,2105,2.756,2106,2.756,2107,2.756,2108,2.756,2109,2.538,2110,2.641,2111,4.884,2112,4.884,2113,4.884,2114,3.884,2115,2.756,2116,2.756,2117,2.756,2118,2.641,2711,5.976,2712,4.24]],["title/modules/ServicesModule.html",[459,1.908,472,3.331]],["body/modules/ServicesModule.html",[0,0.274,3,0.042,4,0.056,5,0.066,19,0.007,29,1.274,37,0.659,40,0.303,43,0.209,47,0.597,51,0.136,57,0.05,73,2.21,107,1.479,126,0.968,137,0.004,138,0.005,139,0.004,182,1.042,204,3.086,237,1.567,288,1.297,291,6.244,306,1.274,314,0.916,335,4.554,361,3.899,373,2.157,374,2.106,375,2.157,376,2.157,377,2.157,378,2.157,379,1.883,380,1.767,381,2.157,382,2.157,383,2.157,384,2.058,385,2.157,386,2.106,387,2.157,388,2.157,389,2.157,390,2.157,394,1.598,435,1.883,459,2.106,460,3.676,461,2.452,462,2.854,463,3.067,464,2.955,465,4.571,466,2.596,472,6.986,474,3.924,475,3.067,477,2.675,481,3.987,485,2.955,486,4.236,489,2.955,524,3.899,525,3.899,648,3.067,693,4.633,694,3.899,705,4.69,817,2.675,918,5.657,1109,4.554,1178,5.42,1196,3.33,1252,4.848,1258,3.899,1410,4.179,1462,6.229,1464,6.229,1490,6.244,1506,4.554,1891,6.244,2713,4.554,2714,4.554,2715,6.244,2716,6.624,2717,5.123,2718,5.123,2719,6.802,2720,6.802,2721,5.123,2722,5.123,2723,4.554,2724,6.802,2725,5.123]],["title/classes/SetCardDataTimeline.html",[0,0.248,2399,3.162]],["body/classes/SetCardDataTimeline.html",[0,0.416,2,0.954,3,0.052,4,0.052,5,0.061,8,1.327,19,0.007,33,0.275,34,1.107,35,0.327,36,0.633,37,1.001,38,1.811,39,1.379,40,0.375,41,1.975,43,0.344,45,0.556,46,0.515,47,0.556,49,0.882,50,0.733,51,0.091,52,0.717,57,0.085,58,1.131,61,1.793,77,1.866,137,0.005,138,0.006,139,0.005,159,1.07,216,2.631,232,2.665,414,2.793,1735,4.114,2393,5.745,2394,4.818,2397,5.627,2398,5.164,2399,5.994,2400,5.627,2401,6.922,2402,5.627,2403,5.164,2726,7.787,2727,6.33]],["title/components/SettingsComponent.html",[265,0.944,440,1.601]],["body/components/SettingsComponent.html",[0,0.269,3,0.041,4,0.041,5,0.049,17,1.971,19,0.007,33,0.243,34,0.881,35,0.26,36,0.546,40,0.298,43,0.33,45,0.441,46,0.657,47,0.441,51,0.121,52,0.57,57,0.049,61,1.424,100,1.452,112,1.48,117,1.865,137,0.004,138,0.005,139,0.004,159,1.135,199,1.48,200,1.538,265,1.538,266,1.771,267,2.468,268,1.847,269,2.169,270,1.888,271,1.888,273,2.97,274,1.771,275,3.527,277,3.128,279,2.522,288,1.701,289,3.17,290,1.847,306,1.25,307,1.599,314,0.899,315,1.538,318,1.48,319,1.599,334,2.9,337,1.632,394,1.568,395,2.522,396,2.522,397,1.734,398,3.032,399,1.888,400,1.888,401,1.734,402,1.888,403,1.771,404,1.888,405,3.032,406,1.771,407,1.888,408,1.734,409,2.522,410,1.771,411,1.888,412,1.808,413,1.847,414,1.665,415,2.522,416,1.734,417,1.888,418,1.771,419,1.771,420,1.888,421,1.734,422,1.888,423,1.771,424,1.888,425,1.771,426,1.888,427,1.734,428,1.888,429,1.771,430,1.888,431,1.808,432,1.771,433,1.888,434,1.771,435,1.847,436,2.841,437,1.888,438,1.771,439,1.888,440,2.785,441,1.771,442,1.808,443,2.522,444,1.771,445,1.771,446,1.977,447,1.771,448,1.888,449,1.771,450,1.771,451,1.771,452,1.452,453,1.771,454,1.734,455,1.888,456,1.734,457,1.847,458,1.888,545,3.047,695,3.131,2605,6.724,2606,5.479,2728,5.027,2729,5.112,2730,7.564,2731,6.717,2732,5.027,2733,5.027,2734,5.027,2735,5.027,2736,5.027,2737,5.027,2738,5.027,2739,5.027,2740,5.027]],["title/injectables/SettingsEffects.html",[626,3.787,686,1.366]],["body/injectables/SettingsEffects.html",[0,0.267,1,2.536,3,0.041,4,0.041,5,0.049,8,0.755,17,2.155,19,0.007,29,2.004,33,0.232,35,0.259,36,0.545,40,0.296,43,0.329,45,0.44,46,0.407,47,0.44,49,1.052,50,0.874,51,0.13,52,0.567,57,0.049,59,2.396,91,0.799,92,0.799,93,0.726,99,3.624,117,1.997,137,0.004,138,0.005,139,0.004,163,1.502,182,1.362,226,2.009,285,1.793,290,1.839,314,0.895,315,1.531,316,1.839,317,2.789,318,1.473,319,1.593,337,1.625,545,3.656,626,5.464,686,1.971,690,2.536,691,2.614,802,2.753,900,2.214,910,2.271,916,4.918,935,6.575,939,4.205,940,5.093,949,4.009,967,6.134,971,5.239,972,5.019,1018,2.888,1019,2.698,1096,4.343,1097,4.084,1275,4.805,1285,3.81,1286,3.81,1287,3.81,1360,5.098,1428,5.098,1499,5.954,1500,5.954,1913,2.698,1914,2.888,2124,4.816,2125,2.789,2127,2.789,2128,2.789,2715,5.782,2723,4.45,2741,5.006,2742,7.548,2743,5.006,2744,6.698,2745,6.698,2746,6.698,2747,6.698,2748,6.698,2749,5.006,2750,6.698,2751,5.006,2752,6.698,2753,6.698,2754,6.698,2755,6.698,2756,6.698,2757,5.006]],["title/modules/SettingsModule.html",[459,1.908,2758,3.533]],["body/modules/SettingsModule.html",[0,0.284,3,0.043,4,0.057,5,0.068,19,0.007,33,0.153,37,0.683,51,0.136,57,0.052,73,2.291,107,1.533,137,0.004,138,0.005,139,0.004,237,1.624,314,0.949,326,3.753,327,2.862,373,2.236,374,2.183,375,2.236,376,2.236,377,2.236,378,2.236,379,1.951,380,1.832,381,2.236,382,2.236,383,2.236,384,2.133,385,2.236,386,2.183,387,2.236,388,2.236,389,2.236,390,2.236,394,1.656,403,3.096,419,3.096,432,3.096,434,3.096,440,3.032,444,3.096,449,3.096,450,2.737,459,2.183,461,2.541,462,2.958,463,4.652,464,3.063,465,3.179,466,2.69,474,4.017,475,3.179,477,3.637,481,3.637,486,4.338,489,3.063,490,5.681,491,5.681,492,2.773,498,3.617,503,5.301,545,2.409,1053,3.81,1801,4.72,1828,4.332,1829,5.919,1956,6.191,2421,4.72,2603,4.332,2758,7.366,2759,4.72,2760,4.72,2761,4.72,2762,6.307,2763,5.31,2764,4.72,2765,5.31,2766,5.31,2767,5.31,2768,5.31,2769,5.31,2770,6.191,2771,5.31,2772,4.72]],["title/modules/SettingsRoutingModule.html",[459,1.908,2762,3.331]],["body/modules/SettingsRoutingModule.html",[0,0.354,3,0.054,4,0.066,5,0.078,19,0.007,37,0.852,51,0.123,57,0.064,107,1.914,137,0.005,138,0.006,139,0.005,178,1.775,237,2.028,265,1.348,314,1.185,373,2.791,374,2.726,375,2.791,376,2.791,377,2.791,378,2.791,379,2.436,380,2.287,381,2.791,382,2.791,383,2.791,384,2.663,385,2.791,386,2.726,387,2.791,388,2.791,389,2.791,390,2.791,440,2.763,461,3.173,466,3.359,477,3.462,481,4.183,527,4.757,529,5.747,530,5.361,531,3.693,532,5.046,536,4.757,540,5.046,672,5.046,2762,5.747,2764,5.894,2773,6.63]],["title/injectables/SettingsService.html",[686,1.366,2715,3.331]],["body/injectables/SettingsService.html",[0,0.319,3,0.049,4,0.049,5,0.058,17,2.167,19,0.007,33,0.248,35,0.308,36,0.61,40,0.353,43,0.362,45,0.659,46,0.61,47,0.659,51,0.133,52,0.675,57,0.058,79,1.402,117,2.126,137,0.004,138,0.005,139,0.004,182,1.525,285,2.463,288,1.9,306,1.865,314,1.066,315,1.824,318,1.755,319,1.897,324,3.876,329,4.061,337,1.935,485,3.439,534,3.322,535,3.713,545,3.404,686,2.208,687,5.892,705,3.213,910,2.705,1104,4.864,1390,4.538,1524,4.538,1525,4.538,1526,4.538,2715,5.383,2774,5.963,2775,8.21,2776,8.21,2777,8.616,2778,7.503,2779,7.503,2780,5.963,2781,5.963,2782,5.963,2783,5.963,2784,5.963,2785,5.963,2786,5.963,2787,5.963,2788,5.963,2789,5.963]],["title/interfaces/SettingsState.html",[559,2.053,571,3.787]],["body/interfaces/SettingsState.html",[3,0.055,4,0.055,5,0.066,19,0.007,33,0.26,35,0.35,36,0.661,57,0.079,79,1.415,126,1.74,137,0.005,138,0.006,139,0.005,148,3.035,178,1.817,183,2.605,197,2.985,361,7.011,367,5.737,545,4.088,559,3,560,3.914,571,7.092,2133,4.225,2790,6.785,2791,6.785]],["title/classes/State.html",[0,0.248,11,1.635]],["body/classes/State.html",[0,0.47,2,0.691,3,0.038,4,0.038,5,0.044,8,0.691,11,2.223,19,0.007,33,0.208,37,0.589,39,1.541,40,0.528,43,0.187,45,0.403,46,0.513,47,0.403,50,0.73,51,0.103,57,0.088,58,1.128,79,1.507,91,1.404,92,1.404,93,1.274,102,1.978,137,0.003,138,0.005,139,0.003,142,2.745,144,3.778,145,4.879,146,3.62,147,2.856,148,2.895,149,2.856,150,2.856,151,2.028,152,2.791,153,2.856,154,2.856,155,2.856,156,2.856,157,2.856,159,0.775,160,3.551,161,1.93,162,2.257,163,1.376,164,4.494,165,2.323,166,1.93,167,2.856,168,2.745,169,2.856,170,2.856,171,2.856,172,2.856,173,2.856,174,2.856,175,2.856,176,2.856,177,3.93,178,1.228,179,3.401,180,2.856,181,3.93,182,1.283,183,1.76,184,3.401,185,2.856,186,1.722,187,1.93,188,1.488,189,2.028,190,2.856,191,2.856,192,2.856,193,2.856,194,2.645,195,2.745,196,2.745,197,3.171,198,3.778,199,1.349,200,1.403,201,2.745,202,2.745,203,2.745,204,2.08,205,2.856,206,2.856,207,2.657,208,2.856,209,2.745,210,3.778,211,2.856,212,2.856,681,3.64,916,3.515,1157,3.29,2792,4.585,2793,4.585]],["title/modules/StateModule.html",[459,1.908,473,3.331]],["body/modules/StateModule.html",[0,0.299,3,0.046,4,0.059,5,0.07,9,2.832,19,0.007,35,0.289,37,0.719,43,0.228,51,0.133,52,0.816,57,0.054,73,2.411,107,1.614,117,1.664,137,0.004,138,0.005,139,0.004,182,1.137,204,3.267,237,1.71,288,1.416,306,1.39,314,0.999,373,2.354,374,2.298,375,2.354,376,2.354,377,2.354,378,2.354,379,2.054,380,1.928,381,2.354,382,2.354,383,2.354,384,2.245,385,2.354,386,2.298,387,2.354,388,2.354,389,2.354,390,2.354,394,1.744,413,2.054,459,2.298,461,2.675,462,3.114,463,4.311,464,3.225,465,4.311,466,2.832,473,6.506,474,4.154,475,3.347,477,3.761,481,4.16,486,4.485,489,3.225,524,4.255,525,4.255,534,4.85,535,3.482,564,3.482,575,4.905,577,4.97,631,4.97,632,4.97,635,4.97,636,6.402,1019,3.013,1462,6.499,1464,6.499,1573,6.063,1575,6.499,1582,5.875,1590,4.56,1593,4.56,2794,4.97,2795,4.97,2796,5.591,2797,5.591,2798,5.591,2799,5.591,2800,5.591,2801,4.97,2802,7.202,2803,5.591,2804,5.591,2805,5.591,2806,5.591,2807,5.591,2808,5.591,2809,5.591,2810,5.591,2811,7.202,2812,5.591,2813,5.591,2814,5.591,2815,5.591,2816,5.591,2817,5.591]],["title/components/TagsFilterComponent.html",[265,0.944,441,1.635]],["body/components/TagsFilterComponent.html",[0,0.216,3,0.033,4,0.033,5,0.039,17,1.643,19,0.007,29,1.674,33,0.224,34,0.757,35,0.208,36,0.469,40,0.239,43,0.34,45,0.354,46,0.632,47,0.354,49,0.562,50,0.467,51,0.129,52,0.457,57,0.039,61,1.143,62,1.784,93,0.585,100,1.165,107,1.165,112,1.187,117,1.923,137,0.003,138,0.004,139,0.003,159,0.975,182,1.173,199,1.187,200,1.234,265,1.369,266,1.421,267,2.12,268,1.483,269,1.74,270,1.515,271,1.515,273,2.643,274,1.421,275,3.475,277,2.687,279,2.166,285,2.32,288,1.461,289,2.885,306,1.674,307,1.835,314,0.721,315,1.234,316,1.483,318,1.187,319,1.284,337,1.309,364,2.513,380,2.323,394,1.259,395,2.166,396,2.166,397,1.392,398,2.759,399,1.515,400,1.515,401,1.392,402,1.515,403,1.421,404,1.515,405,2.759,406,1.421,407,1.515,408,1.392,409,2.166,410,1.421,411,1.515,412,1.451,413,1.483,414,1.336,415,2.166,416,1.392,417,1.515,418,1.421,419,1.421,420,1.515,421,1.392,422,1.515,423,1.421,424,1.515,425,1.421,426,1.515,427,1.392,428,1.515,429,1.421,430,1.515,431,1.451,432,1.421,433,1.515,434,1.421,435,1.483,436,2.528,437,1.515,438,1.421,439,1.515,440,1.392,441,2.588,442,3.162,443,2.166,444,1.421,445,1.421,446,1.698,447,1.421,448,1.515,449,1.421,450,1.421,451,1.421,452,2.244,453,1.421,454,1.392,455,1.515,456,1.392,457,1.483,458,1.515,492,2.107,640,3.214,645,2.623,646,2.623,647,2.327,648,2.415,653,2.513,699,2.248,700,2.174,802,1.659,986,2.415,1055,3.884,1060,4.031,1066,4.238,1081,3.884,1083,2.415,1100,3.071,1101,4.391,1102,2.895,1103,2.895,1120,3.071,1122,3.071,1124,3.071,1132,3.071,1133,3.071,1163,2.623,1334,6.107,1381,2.895,1878,2.895,1954,7.567,1955,7.567,2272,3.291,2273,3.291,2664,3.291,2818,3.291,2819,5.985,2820,4.706,2821,5.493,2822,6.733,2823,5.994,2824,4.035,2825,7.773,2826,5.128,2827,4.035,2828,4.035,2829,4.035,2830,3.587,2831,3.587,2832,3.291,2833,4.035,2834,5.769,2835,3.291,2836,3.291,2837,4.035,2838,3.291,2839,4.035,2840,4.035,2841,3.587,2842,3.291,2843,4.035,2844,4.035,2845,3.291,2846,3.291,2847,4.035,2848,4.035,2849,4.035,2850,3.587,2851,3.291,2852,3.587]],["title/components/TextSettingComponent.html",[265,0.944,444,1.635]],["body/components/TextSettingComponent.html",[0,0.187,3,0.029,4,0.029,5,0.034,19,0.007,29,1.543,33,0.252,34,0.683,35,0.181,36,0.423,40,0.207,43,0.38,45,0.7,46,0.692,47,0.7,49,0.725,50,0.891,51,0.105,52,0.397,57,0.034,61,0.992,79,1.01,100,1.011,102,1.51,107,1.502,112,1.03,117,1.777,137,0.003,138,0.004,139,0.003,148,2.014,151,2.3,152,2.3,159,0.879,182,1.262,199,2.408,200,1.071,265,1.262,266,1.233,267,1.912,268,1.287,269,1.51,270,1.315,271,1.315,273,2.437,274,1.233,275,3.436,277,2.423,279,1.953,285,2.06,288,1.317,289,2.697,290,1.287,306,2.173,307,2.448,314,0.626,318,1.03,319,1.114,380,1.208,394,1.092,395,1.953,396,1.953,397,1.208,398,2.58,399,1.315,400,1.315,401,1.208,402,1.315,403,3.255,404,1.953,405,2.58,406,1.233,407,1.315,408,1.208,409,1.953,410,1.233,411,1.315,412,1.259,413,1.287,414,1.159,415,1.953,416,1.208,417,1.315,418,1.233,419,1.233,420,1.315,421,1.208,422,1.315,423,1.233,424,1.315,425,1.233,426,1.315,427,1.208,428,1.315,429,1.233,430,1.315,431,1.259,432,1.233,433,1.315,434,1.233,435,1.287,436,2.331,437,1.315,438,1.233,439,1.315,440,1.208,441,1.233,442,1.259,443,1.953,444,2.42,445,1.233,446,1.531,447,1.233,448,1.315,449,1.233,450,1.233,451,1.233,452,1.011,453,1.233,454,1.208,455,1.315,456,1.208,457,1.287,458,1.315,492,1.828,824,3.24,1053,2.512,1054,2.665,1055,3.58,1056,5.001,1057,4.724,1058,3.959,1059,3.543,1060,3.114,1061,6.296,1062,3.543,1063,3.114,1064,5.426,1065,4.68,1066,3.58,1067,4.228,1068,4.68,1069,3.543,1070,3.543,1071,3.543,1073,3.112,1076,2.385,1078,2.385,1081,3.963,1082,4.228,1083,4.113,1085,3.543,1089,4.228,1091,2.18,1105,2.385,1142,3.112,1306,3.381,1802,6.108,1803,4.624,1805,6.492,1807,2.512,1808,2.512,1809,2.512,1815,2.512,1816,2.512,1817,2.512,1818,2.512,1819,2.512,1820,2.512,1821,2.512,1822,2.512,1823,2.512,1824,2.512,1825,2.512,1826,2.512,1827,2.512,1828,6.498,1829,2.512,1830,5.229,1831,2.512,1834,3.959,1835,4.243,1836,4.243,2434,2.385,2448,2.512,2449,2.856,2450,2.856,2453,3.112,2454,3.112,2455,3.112,2614,3.112,2853,7.966,2854,5.202,2855,3.501,2856,3.501,2857,3.501,2858,3.501,2859,3.501,2860,3.501,2861,3.501,2862,3.501,2863,3.501]],["title/classes/Third.html",[0,0.248,166,1.954]],["body/classes/Third.html",[0,0.463,2,0.65,3,0.035,4,0.035,5,0.042,8,0.65,11,2.13,19,0.007,33,0.218,35,0.223,37,0.898,39,1.536,40,0.521,43,0.247,45,0.531,46,0.616,47,0.531,50,0.7,51,0.1,57,0.086,58,1.081,79,1.562,91,1.383,92,1.383,93,1.256,102,1.861,137,0.003,138,0.004,139,0.003,142,2.582,144,3.621,145,4.772,146,3.526,147,2.687,148,2.856,149,2.687,150,2.687,151,1.908,152,2.675,153,2.687,154,2.687,155,2.687,156,2.687,157,2.687,159,1.279,160,2.123,161,1.816,162,2.123,163,1.294,164,4.35,165,2.186,166,2.546,167,2.687,168,2.582,169,4.35,170,2.687,171,2.687,172,2.687,173,2.687,174,2.687,175,2.687,176,2.687,177,3.767,178,1.155,179,3.26,180,2.687,181,3.767,182,1.23,183,1.656,184,4.08,185,2.687,186,1.62,187,1.816,188,1.4,189,3.089,190,2.687,191,2.687,192,2.687,193,2.687,194,2.488,195,2.582,196,2.582,197,3.118,198,3.621,199,1.269,200,1.32,201,2.582,202,2.582,203,2.582,204,1.957,205,2.687,206,2.687,207,2.546,208,2.687,209,2.582,210,3.621,211,2.687,212,2.687,288,1.532,306,1.072,681,4.598,2729,4.603,2864,6.048,2865,4.314,2866,6.048,2867,6.048,2868,6.048,2869,6.048,2870,4.314,2871,4.314,2872,4.314]],["title/classes/ThirdMenu.html",[0,0.248,187,1.954]],["body/classes/ThirdMenu.html",[0,0.469,2,0.686,3,0.037,4,0.037,5,0.044,8,0.686,11,1.602,19,0.007,33,0.207,37,0.585,39,1.54,40,0.527,43,0.186,45,0.399,46,0.511,47,0.399,50,0.727,51,0.103,57,0.087,58,1.122,79,1.547,91,1.401,92,1.401,93,1.272,102,1.962,137,0.003,138,0.005,139,0.003,142,2.723,144,3.757,145,5.155,146,3.608,147,2.833,148,2.89,149,2.833,150,2.833,151,2.012,152,2.776,153,2.833,154,2.833,155,2.833,156,2.833,157,2.833,159,0.769,160,2.239,161,1.915,162,2.239,163,1.365,164,2.833,165,2.305,166,1.915,167,2.833,168,2.723,169,2.833,170,2.833,171,2.833,172,2.833,173,2.833,174,2.833,175,2.833,176,2.833,177,3.909,178,1.218,179,3.383,180,2.833,181,3.909,182,1.276,183,1.747,184,4.175,185,2.833,186,1.708,187,2.642,188,2.037,189,3.178,190,4.475,191,2.833,192,2.833,193,2.833,194,2.624,195,2.723,196,2.723,197,3.164,198,3.757,199,1.339,200,1.392,201,2.723,202,2.723,203,2.723,204,2.064,205,2.833,206,2.833,207,2.642,208,2.833,209,2.723,210,3.757,211,2.833,212,2.833,2873,4.044,2874,4.55]],["title/classes/ThirdMenuEntry.html",[0,0.248,184,2.502]],["body/classes/ThirdMenuEntry.html",[0,0.469,2,0.689,3,0.037,4,0.037,5,0.044,8,0.689,11,1.611,19,0.007,33,0.208,37,0.588,39,1.54,40,0.528,43,0.187,45,0.402,46,0.512,47,0.402,50,0.729,51,0.103,57,0.088,58,1.126,79,1.548,91,1.403,92,1.403,93,1.274,102,1.973,137,0.003,138,0.005,139,0.003,142,2.738,144,3.771,145,5.162,146,3.616,147,2.848,148,2.894,149,2.848,150,2.848,151,2.022,152,2.786,153,2.848,154,2.848,155,2.848,156,2.848,157,2.848,159,0.773,160,2.251,161,1.925,162,2.251,163,1.372,164,2.848,165,2.317,166,1.925,167,2.848,168,2.738,169,2.848,170,2.848,171,2.848,172,2.848,173,2.848,174,2.848,175,2.848,176,2.848,177,3.923,178,1.224,179,3.395,180,2.848,181,3.923,182,1.281,183,1.756,184,3.883,185,2.848,186,2.706,187,1.925,188,2.044,189,2.022,190,2.848,191,2.848,192,2.848,193,2.848,194,2.638,195,2.738,196,2.738,197,3.169,198,3.771,199,1.346,200,1.399,201,2.738,202,2.738,203,2.738,204,2.075,205,2.848,206,2.848,207,2.652,208,2.848,209,2.738,210,3.771,211,2.848,212,2.848,2873,4.065,2875,4.573]],["title/modules/ThirdpartyModule.html",[459,1.908,2876,3.533]],["body/modules/ThirdpartyModule.html",[0,0.336,3,0.051,4,0.063,5,0.075,19,0.007,37,0.809,51,0.126,57,0.061,73,2.716,107,1.818,137,0.005,138,0.006,139,0.005,237,1.926,314,1.125,373,2.65,374,2.588,375,2.65,376,2.65,377,2.65,378,2.65,379,2.313,380,2.172,381,2.65,382,2.65,383,2.65,384,2.529,385,2.65,386,2.588,387,2.65,388,2.65,389,2.65,390,2.65,394,1.964,427,3.169,459,2.588,461,3.013,462,3.507,463,5.037,464,3.632,465,3.769,466,3.19,474,4.477,475,3.769,477,4.053,481,4.053,486,4.834,489,3.632,498,4.288,543,5.136,2876,7.157,2877,5.596,2878,5.596,2879,5.596,2880,6.591,2881,6.296,2882,5.596]],["title/modules/ThirdpartyRoutingModule.html",[459,1.908,2880,3.331]],["body/modules/ThirdpartyRoutingModule.html",[0,0.356,3,0.055,4,0.066,5,0.078,19,0.007,37,0.857,51,0.124,57,0.065,107,1.925,137,0.005,138,0.006,139,0.005,178,1.785,237,2.04,265,1.356,314,1.192,373,2.807,374,2.741,375,2.807,376,2.807,377,2.807,378,2.807,379,2.45,380,2.3,381,2.807,382,2.807,383,2.807,384,2.678,385,2.807,386,2.741,387,2.807,388,2.807,389,2.807,390,2.807,427,2.773,461,3.191,466,3.378,477,3.482,481,4.197,527,4.784,529,5.767,530,5.374,531,3.715,536,4.784,672,5.075,2880,5.767,2882,5.927,2883,6.668,2884,6.668]],["title/classes/ThirdsI18nLoader.html",[0,0.248,2885,3.787]],["body/classes/ThirdsI18nLoader.html",[0,0.273,2,0.515,3,0.028,4,0.028,5,0.033,17,2.123,19,0.007,25,1.512,29,2.02,33,0.147,34,0.671,35,0.177,39,0.536,40,0.202,43,0.209,45,0.449,46,0.498,47,0.449,51,0.125,52,0.387,57,0.059,79,1.522,117,1.414,137,0.004,138,0.004,139,0.002,152,1.512,163,2.037,166,2.152,178,2.376,182,1.913,183,1.312,184,1.843,186,1.284,187,1.439,188,2.204,189,3.674,199,1.006,220,1.405,222,1.405,228,2.515,237,1.046,250,0.987,285,2.265,288,1.294,300,2.453,306,0.85,314,0.611,315,1.046,316,1.256,318,1.006,325,3.322,326,1.843,327,1.843,329,2.329,337,1.11,452,0.987,485,1.972,534,1.904,549,2.789,563,1.683,686,1.504,687,3.978,689,2.453,690,1.732,691,1.785,692,1.972,699,1.904,700,1.843,705,3.298,748,2.329,777,4.957,802,2.516,817,2.669,837,2.329,971,2.222,972,3.183,985,2.453,995,2.222,1032,2.222,1091,3.183,1147,2.222,1177,2.329,1252,4.248,1301,2.453,1372,2.789,1524,4.658,1525,5.168,1526,4.658,1570,3.409,1646,1.785,1842,2.329,1882,2.453,2197,4.872,2729,3.89,2885,4.169,2886,3.039,2887,6.036,2888,5.111,2889,4.543,2890,3.419,2891,4.543,2892,3.419,2893,4.543,2894,3.039,2895,3.039,2896,3.039,2897,3.039,2898,3.039,2899,3.039,2900,3.039,2901,3.039,2902,3.039,2903,3.039,2904,3.039,2905,3.039,2906,3.039,2907,3.039,2908,3.039,2909,3.039,2910,3.039,2911,3.039,2912,3.039,2913,3.039,2914,3.039,2915,3.039,2916,3.039,2917,3.039,2918,5.44,2919,3.039,2920,3.039,2921,3.039,2922,4.543,2923,3.039,2924,3.039,2925,3.039,2926,3.039,2927,3.039,2928,3.039,2929,3.039,2930,3.039,2931,3.039,2932,3.039,2933,4.543,2934,3.039,2935,3.039,2936,3.039,2937,4.543,2938,3.039,2939,3.039,2940,3.039,2941,3.039,2942,3.039,2943,3.039,2944,3.039,2945,3.039,2946,3.039,2947,3.039,2948,3.039,2949,3.039,2950,6.461,2951,5.44,2952,3.039,2953,3.039,2954,3.039,2955,3.039,2956,3.039,2957,3.039,2958,3.039,2959,3.039,2960,4.543,2961,4.169,2962,4.543,2963,2.789,2964,3.039,2965,3.039,2966,3.039,2967,3.039,2968,3.039,2969,3.039,2970,3.039,2971,3.039,2972,3.039,2973,3.039,2974,3.039,2975,3.039,2976,3.039,2977,3.039,2978,3.039,2979,3.039,2980,4.543,2981,3.039,2982,3.039,2983,3.039,2984,3.039,2985,3.039,2986,3.039,2987,3.039,2988,3.039,2989,3.039,2990,3.039,2991,4.543,2992,3.039,2993,3.039,2994,3.039,2995,3.039,2996,3.039,2997,3.039,2998,3.039,2999,3.039,3000,3.039,3001,3.039,3002,3.039,3003,4.543,3004,3.039,3005,4.543,3006,3.039,3007,4.543,3008,3.039,3009,4.543,3010,3.039,3011,3.039,3012,5.44,3013,3.039,3014,3.039,3015,3.039,3016,3.039,3017,3.039,3018,3.039,3019,3.039,3020,3.039,3021,3.039,3022,3.039,3023,3.039]],["title/injectables/ThirdsService.html",[686,1.366,1252,2.586]],["body/injectables/ThirdsService.html",[0,0.23,3,0.022,4,0.022,5,0.027,17,2.147,19,0.007,25,1.21,29,1.935,33,0.242,34,0.359,35,0.141,36,0.35,39,0.834,40,0.162,43,0.356,45,0.7,46,0.682,47,0.7,49,0.742,50,0.617,51,0.118,52,0.31,57,0.052,79,1.576,117,1.687,137,0.004,138,0.003,139,0.002,152,1.21,163,1.972,166,1.813,178,2.271,182,1.863,183,1.05,184,1.475,186,1.027,187,2.243,188,1.961,189,3.918,199,0.805,220,2.19,222,1.125,228,2.12,237,0.837,250,0.79,285,2.435,288,1.091,300,1.963,306,2.02,314,0.489,315,0.837,316,1.005,318,0.805,325,3.463,326,1.475,327,1.475,329,1.864,337,0.888,452,0.79,485,1.578,534,1.524,549,2.232,563,1.347,686,1.268,687,4.536,689,1.963,690,1.386,691,1.429,692,1.578,699,1.524,700,1.475,705,3.936,748,1.864,777,4.536,802,2.19,817,2.249,837,1.864,910,1.241,971,1.779,972,2.683,985,1.963,995,1.779,1032,1.779,1091,2.683,1147,4.272,1177,4.115,1252,3.366,1295,1.864,1301,1.963,1372,2.232,1390,2.082,1524,5.558,1525,4.599,1526,4.599,1570,2.967,1646,1.429,1842,1.864,1882,1.963,2197,5.007,2729,4.599,2885,2.232,2886,2.432,2887,4.735,2889,2.432,2891,2.432,2893,2.432,2894,2.432,2895,2.432,2896,2.432,2897,2.432,2898,2.432,2899,2.432,2900,4.735,2901,4.735,2902,4.735,2903,4.735,2904,4.735,2905,2.432,2906,2.432,2907,2.432,2908,2.432,2909,2.432,2910,2.432,2911,2.432,2912,2.432,2913,2.432,2914,2.432,2915,2.432,2916,2.432,2917,3.829,2918,4.735,2919,2.432,2920,3.829,2921,4.735,2922,5.371,2923,2.432,2924,2.432,2925,2.432,2926,2.432,2927,2.432,2928,2.432,2929,2.432,2930,2.432,2931,2.432,2932,2.432,2933,3.829,2934,2.432,2935,2.432,2936,3.829,2937,3.829,2938,2.432,2939,2.432,2940,3.829,2941,4.735,2942,2.432,2943,2.432,2944,2.432,2945,2.432,2946,2.432,2947,2.432,2948,2.432,2949,3.829,2950,5.841,2951,4.735,2952,2.432,2953,2.432,2954,2.432,2955,2.432,2956,2.432,2957,2.432,2958,2.432,2959,2.432,2960,3.829,2961,3.514,2962,3.829,2963,4.929,2964,2.432,2965,2.432,2966,2.432,2967,2.432,2968,2.432,2969,2.432,2970,2.432,2971,2.432,2972,2.432,2973,2.432,2974,3.829,2975,2.432,2976,2.432,2977,2.432,2978,2.432,2979,2.432,2980,3.829,2981,2.432,2982,2.432,2983,2.432,2984,2.432,2985,2.432,2986,3.829,2987,2.432,2988,2.432,2989,2.432,2990,2.432,2991,3.829,2992,2.432,2993,2.432,2994,2.432,2995,2.432,2996,2.432,2997,2.432,2998,2.432,2999,2.432,3000,2.432,3001,2.432,3002,2.432,3003,3.829,3004,2.432,3005,3.829,3006,2.432,3007,3.829,3008,2.432,3009,3.829,3010,2.432,3011,2.432,3012,4.735,3013,2.432,3014,2.432,3015,2.432,3016,2.432,3017,2.432,3018,2.432,3019,2.432,3020,2.432,3021,2.432,3022,2.432,3023,2.432,3024,4.307,3025,4.307,3026,4.307,3027,4.307,3028,4.307,3029,3.829,3030,4.307,3031,4.307,3032,4.307,3033,4.307,3034,2.736,3035,2.736,3036,2.736,3037,2.736,3038,2.736,3039,2.736,3040,2.736,3041,2.736,3042,2.736,3043,2.736,3044,2.736,3045,2.736,3046,2.736,3047,2.736,3048,2.736,3049,2.736,3050,2.736,3051,2.736,3052,2.736,3053,2.736]],["title/classes/ThirdsServiceMock.html",[0,0.248,3054,4.127]],["body/classes/ThirdsServiceMock.html",[0,0.358,2,1.011,3,0.055,4,0.055,5,0.065,17,2.111,19,0.007,29,2.231,35,0.346,43,0.329,51,0.116,57,0.065,137,0.005,138,0.006,139,0.005,182,1.364,184,3.614,187,2.823,288,2.043,306,2.005,315,2.051,346,4.493,1646,3.502,2963,7.322,3029,7.69,3054,7.17,3055,6.707,3056,6.707,3057,6.707,3058,6.707,3059,6.707,3060,6.707,3061,6.707,3062,6.707,3063,6.707,3064,6.707,3065,6.707,3066,6.707,3067,6.707,3068,6.707,3069,6.707,3070,6.707,3071,6.707,3072,6.707,3073,6.707]],["title/classes/Tick.html",[0,0.248,1855,2.779]],["body/classes/Tick.html",[0,0.429,2,0.856,3,0.046,4,0.046,5,0.055,7,2.23,8,1.349,10,3.581,19,0.007,33,0.268,34,1.111,35,0.293,36,0.592,37,0.935,38,1.818,39,1.371,40,0.336,41,1.772,43,0.328,45,0.499,46,0.462,47,0.499,49,0.792,50,0.658,51,0.121,52,0.644,55,2.793,56,2.646,57,0.085,58,1.015,71,2.646,77,1.924,83,3.218,88,3.642,116,3.062,126,1.375,137,0.004,138,0.005,139,0.004,216,2.504,234,1.705,296,5,304,4.324,446,2.491,650,4.197,900,3.218,995,3.693,1063,3.401,1838,4.73,1839,4.076,1840,4.635,1841,4.324,1842,3.87,1843,4.635,1844,5.936,1845,4.635,1846,4.635,1849,4.635,1850,3.693,1851,4.076,1852,3.538,1853,4.324,1854,4.635,1855,5.067,1856,4.635,1857,4.324,1858,5.221,1859,4.635,1860,5.538,1861,5.538,1862,4.635,1863,4.635,1864,4.73,1865,4.635,1866,4.635,1867,4.324,3074,7.277,3075,5.681,3076,5.681]],["title/injectables/TimeEffects.html",[629,3.787,686,1.366]],["body/injectables/TimeEffects.html",[0,0.241,3,0.037,4,0.037,5,0.044,8,0.679,10,3.796,17,2.169,19,0.007,29,2.236,33,0.222,35,0.233,36,0.507,40,0.266,43,0.315,45,0.395,46,0.366,47,0.395,49,0.868,50,0.721,51,0.134,52,0.51,55,2.743,56,2.097,57,0.044,59,2.155,99,3.493,117,1.935,126,1.457,137,0.003,138,0.005,139,0.003,146,2.097,162,2.216,163,2.314,165,2.281,178,1.668,182,1.568,285,2.168,290,1.655,296,4.803,305,5.54,314,0.805,315,1.377,316,1.655,317,2.508,318,1.325,319,1.433,337,1.461,446,2.465,629,5.084,686,1.834,689,3.23,690,2.281,691,4.228,802,3.171,811,5.084,892,4.743,900,2.756,910,2.043,916,4.784,939,3.471,940,4.671,949,4.617,962,5.54,967,4.743,995,4.051,1018,2.597,1019,2.427,1024,3.23,1178,4.803,1196,2.927,1301,4.471,1360,5.87,1838,4.645,1841,4.743,1842,4.245,1850,4.645,1851,3.23,1852,2.804,1855,4.278,1858,4.471,1860,4.743,1861,4.743,1864,2.927,2378,4.003,3077,4.503,3078,7.147,3079,7.147,3080,7.147,3081,6.232,3082,6.232,3083,6.232,3084,6.232,3085,6.232,3086,4.503,3087,6.232,3088,6.232,3089,6.232,3090,7.713,3091,6.232,3092,7.713,3093,6.232,3094,6.232,3095,4.503,3096,6.232,3097,6.232,3098,4.503,3099,4.503,3100,4.503,3101,4.503]],["title/components/TimeFilterComponent.html",[265,0.944,445,1.635]],["body/components/TimeFilterComponent.html",[0,0.205,3,0.031,4,0.031,5,0.037,17,1.751,19,0.007,29,1.975,33,0.22,34,0.729,35,0.198,36,0.452,40,0.227,43,0.343,45,0.336,46,0.62,47,0.336,49,0.534,50,0.443,51,0.128,52,0.434,57,0.037,61,1.085,62,1.694,93,0.555,100,1.106,112,1.127,117,1.835,137,0.003,138,0.004,139,0.003,159,0.939,182,1.33,183,2.134,199,1.127,200,1.172,265,1.33,266,1.349,267,2.042,268,1.408,270,1.439,271,1.439,273,2.568,274,1.349,275,3.461,279,2.087,285,2.327,288,1.407,289,2.816,290,1.408,306,1.626,307,1.768,314,0.685,315,1.172,316,1.408,318,1.127,319,1.219,337,1.243,364,2.386,380,2.256,394,1.195,395,2.087,396,2.087,397,1.322,398,2.694,399,1.439,400,1.439,401,1.322,402,1.439,403,1.349,404,1.439,405,2.694,406,1.349,407,1.439,408,1.322,409,2.087,410,1.349,411,1.439,412,1.378,413,1.408,414,1.269,415,2.087,416,1.322,417,1.439,418,1.349,419,1.349,420,1.439,421,1.322,422,1.439,423,1.349,424,1.439,425,1.349,426,1.439,427,1.322,428,1.439,429,1.349,430,1.439,431,1.378,432,1.349,433,1.439,434,1.349,435,1.408,436,2.456,437,1.439,438,1.349,439,1.439,440,1.322,441,1.349,442,1.378,443,2.087,444,1.349,445,2.527,446,2.338,447,1.349,448,1.439,449,1.349,450,1.349,451,1.349,452,2.424,453,1.349,454,1.322,455,1.439,456,1.322,457,1.408,458,1.439,492,2.001,640,3.096,645,2.49,646,2.49,647,2.21,648,2.293,650,2.21,653,2.386,699,2.134,700,2.065,802,1.575,1055,3.773,1060,3.915,1066,4.138,1081,4.138,1083,3.327,1100,2.916,1101,4.23,1102,2.749,1103,2.749,1120,2.916,1122,2.916,1124,2.916,1132,2.916,1133,2.916,1143,3.406,1174,3.327,1178,5.104,1196,2.49,1334,6.139,1377,3.406,1381,2.749,1768,4.23,1774,4.534,1878,2.749,1936,7.606,1937,7.606,2434,4.455,2448,2.749,2818,3.125,2820,4.534,2821,5.335,2823,5.852,2830,3.406,2832,3.125,2835,3.125,2836,4.534,2838,3.125,2842,3.125,2845,3.125,2846,3.125,3102,6.54,3103,5.558,3104,3.831,3105,3.831,3106,3.831,3107,3.406,3108,3.831,3109,3.406,3110,5.558,3111,3.831,3112,3.831,3113,3.831,3114,3.831,3115,3.831,3116,5.558,3117,3.831,3118,3.831,3119,3.831,3120,3.831,3121,5.558,3122,3.831,3123,3.831,3124,3.831,3125,3.831,3126,5.558,3127,5.558,3128,3.831,3129,3.831,3130,5.558,3131,5.558,3132,5.558]],["title/components/TimeLineComponent.html",[265,0.944,447,1.635]],["body/components/TimeLineComponent.html",[0,0.148,3,0.023,4,0.023,5,0.027,9,1.406,11,2.145,17,1.312,19,0.007,29,0.69,33,0.212,34,0.571,35,0.143,36,0.354,37,0.903,40,0.164,43,0.31,45,0.382,46,0.538,47,0.382,51,0.115,52,0.314,57,0.027,61,1.234,71,2.504,83,2.693,93,0.631,100,0.801,112,0.817,117,1.622,137,0.002,138,0.003,139,0.002,159,1.029,178,2.378,182,0.564,197,2.58,199,0.817,200,0.849,220,1.141,221,1.197,222,1.141,232,2.263,236,1.749,242,1.449,256,2.724,265,1.093,266,0.977,267,1.601,268,1.02,270,1.042,271,1.042,273,2.111,274,0.977,275,3.361,279,1.636,288,1.103,289,2.391,290,1.02,303,6.241,306,1.337,307,1.386,314,0.496,315,0.849,316,1.02,318,0.817,319,0.883,336,1.661,337,0.901,346,3.392,347,3.645,364,2.713,394,0.866,395,1.636,396,1.636,397,0.957,398,2.287,399,1.042,400,1.042,401,0.957,402,1.042,403,0.977,404,1.042,405,2.287,406,0.977,407,1.042,408,0.957,409,1.636,410,0.977,411,1.042,412,0.998,413,1.02,414,2.191,415,1.636,416,0.957,417,1.042,418,0.977,419,0.977,420,1.042,421,0.957,422,1.042,423,0.977,424,1.042,425,0.977,426,1.042,427,0.957,428,1.042,429,0.977,430,1.042,431,0.998,432,0.977,433,1.042,434,0.977,435,1.02,436,2.019,437,1.042,438,0.977,439,1.042,440,0.957,441,0.977,442,0.998,443,1.636,444,0.977,445,0.977,446,2.066,447,2.145,448,1.042,449,0.977,450,0.977,451,0.977,452,0.801,453,0.977,454,0.957,455,1.042,456,0.957,457,1.02,458,1.042,537,3.513,555,1.804,690,1.406,699,1.546,700,1.496,817,3.666,862,1.227,900,3.538,1033,1.804,1035,2.607,1055,3.101,1066,3.513,1102,3.125,1118,3.315,1150,3.315,1151,3.315,1152,2.967,1156,2.112,1735,1.804,1746,5.951,1768,5.036,1774,4.386,1877,2.467,1878,1.991,1879,5.413,1880,5.413,1882,4.369,1906,2.264,1929,6.95,2092,2.112,2109,4.203,2119,4.779,2197,1.991,2233,3.553,2393,3.662,2399,2.967,2563,3.553,2961,3.553,3133,2.775,3134,3.553,3135,4.356,3136,7.342,3137,5.376,3138,4.356,3139,4.356,3140,4.356,3141,5.881,3142,2.775,3143,4.356,3144,4.356,3145,4.356,3146,3.872,3147,3.872,3148,7.021,3149,4.779,3150,3.872,3151,4.356,3152,4.356,3153,2.775,3154,2.775,3155,2.775,3156,2.775,3157,2.775,3158,2.775,3159,2.775,3160,6.527,3161,4.356,3162,2.775,3163,2.775,3164,4.356,3165,4.356,3166,2.775,3167,2.775,3168,5.376,3169,2.775,3170,2.775,3171,4.356,3172,2.775,3173,7.021,3174,2.775,3175,6.09,3176,5.413,3177,6.616,3178,2.775,3179,2.775,3180,2.775,3181,2.775,3182,2.775,3183,6.616,3184,4.356,3185,4.356,3186,2.775,3187,2.775,3188,2.775,3189,2.775,3190,2.775,3191,6.09,3192,4.356,3193,2.775,3194,2.775,3195,2.775,3196,2.775,3197,2.775,3198,6.09,3199,2.775,3200,2.775,3201,4.356,3202,2.775,3203,2.775,3204,3.872,3205,2.775,3206,2.775,3207,2.775,3208,4.356,3209,2.775,3210,2.775,3211,2.775,3212,2.775,3213,2.775,3214,2.775,3215,2.775,3216,2.775,3217,2.775,3218,2.775,3219,2.775,3220,2.775,3221,2.775,3222,2.775,3223,2.775,3224,2.775,3225,2.775,3226,2.775,3227,6.09,3228,6.09,3229,2.775,3230,2.775,3231,3.872,3232,2.775,3233,2.775,3234,2.775,3235,2.775,3236,2.775,3237,4.356,3238,2.775,3239,4.356,3240,2.775,3241,2.775,3242,4.356,3243,5.376,3244,2.775,3245,6.09,3246,6.09,3247,6.09,3248,5.376,3249,2.775,3250,2.775,3251,4.356,3252,2.775,3253,2.775,3254,2.775,3255,2.775,3256,2.775,3257,2.775,3258,2.775,3259,2.775,3260,2.775,3261,2.775,3262,2.775,3263,2.775,3264,2.775,3265,2.775,3266,2.775,3267,2.775,3268,2.775]],["title/classes/TimeReference.html",[0,0.248,1850,3.018]],["body/classes/TimeReference.html",[0,0.249,2,0.703,3,0.038,4,0.038,5,0.045,19,0.007,33,0.244,35,0.241,39,1.141,40,0.276,43,0.354,45,0.744,46,0.689,47,0.744,50,0.906,51,0.091,57,0.071,58,0.834,79,1.378,137,0.005,138,0.005,139,0.003,148,1.514,178,2.267,182,1.763,183,2.795,204,3.303,207,3.908,285,2.267,288,1.617,306,2.105,346,2.599,446,1.373,555,3.032,900,3.22,1032,4.151,1850,4.151,1852,2.905,2253,4.86,2327,5.676,3269,4.147,3270,8.467,3271,6.386,3272,6.386,3273,7.829,3274,4.665,3275,7.829,3276,7.281,3277,8.2,3278,6.387,3279,4.665,3280,7.281,3281,4.665,3282,4.665,3283,4.665,3284,8.052,3285,4.665,3286,4.665,3287,4.665,3288,4.665,3289,4.665,3290,4.665,3291,6.386,3292,4.665,3293,7.829,3294,6.386,3295,4.665,3296,4.665,3297,4.665,3298,4.665,3299,4.665,3300,4.665,3301,4.665,3302,4.665,3303,4.665,3304,4.665,3305,4.665,3306,4.665,3307,4.665,3308,4.665,3309,4.665,3310,4.665,3311,4.665,3312,6.386,3313,4.665,3314,4.665,3315,4.665,3316,4.665,3317,4.665,3318,4.665,3319,4.665,3320,4.665,3321,4.665,3322,4.665,3323,4.665,3324,4.665,3325,4.665,3326,4.665,3327,4.665,3328,4.665,3329,6.386,3330,4.147,3331,4.147,3332,4.147,3333,3.805,3334,4.147,3335,4.147,3336,4.147,3337,4.147,3338,4.147,3339,4.147,3340,4.665,3341,4.665]],["title/classes/TimeSpan.html",[0,0.248,3342,4.127]],["body/classes/TimeSpan.html",[0,0.363,2,0.772,3,0.042,4,0.042,5,0.05,8,1.025,19,0.007,25,2.266,33,0.148,34,0.672,39,1.539,40,0.452,43,0.209,45,0.45,46,0.417,47,0.45,51,0.073,57,0.086,58,1.365,79,1.539,91,0.818,92,0.818,93,0.743,137,0.006,138,0.005,139,0.004,146,3.943,162,2.521,182,1.042,188,2.208,207,3.982,220,3.139,287,4.88,346,2.854,442,2.447,555,3.33,559,2.266,681,2.955,862,2.266,986,4.869,1033,3.33,1035,4.869,1038,5.836,1147,4.421,1148,5.177,1149,5.549,1150,6.191,1151,6.444,1152,6.049,1153,5.549,1154,5.549,1155,5.177,1156,5.177,1159,5.549,2035,5.177,2036,4.554,2037,4.554,2038,5.812,2039,4.554,2040,5.812,2041,4.554,2092,3.899,3134,4.179,3342,7.231,3343,6.046,3344,4.554,3345,5.123,3346,5.123,3347,6.802,3348,5.123,3349,4.554,3350,4.554,3351,5.123]],["title/interfaces/TimeState.html",[559,2.053,572,3.787]],["body/interfaces/TimeState.html",[3,0.055,4,0.055,5,0.065,19,0.007,33,0.249,35,0.346,36,0.656,51,0.124,55,3.446,56,3.124,57,0.078,126,1.735,137,0.005,138,0.006,139,0.005,178,1.796,183,2.575,559,2.966,560,3.869,572,7.057,900,3.825,1850,6.183,1851,4.812,1852,4.177,3278,5.471,3284,7.69,3352,6.707,3353,9.183,3354,6.707,3355,6.707,3356,6.707]],["title/interfaces/TimelineState.html",[559,2.053,573,3.787]],["body/interfaces/TimelineState.html",[3,0.043,4,0.043,5,0.05,7,2.041,11,3.078,13,3.38,19,0.007,25,2.299,33,0.245,35,0.269,36,0.559,51,0.11,55,2.637,57,0.079,79,1.422,126,1.73,137,0.004,138,0.005,139,0.004,148,2.496,159,1.477,178,1.839,182,1.057,183,1.996,188,2.229,197,1.911,207,2.892,220,3.8,221,2.243,222,2.138,232,3.854,365,4.928,367,5.551,414,2.274,537,3.962,559,2.299,560,2.999,573,6.275,591,4.622,986,4.112,1210,5.603,1289,6.106,1290,7.563,1291,7.27,1292,5.228,1293,7.923,1294,7.273,1295,4.679,1296,5.603,1297,6.106,1298,6.106,1299,6.106,1300,6.106,1301,4.928,1302,6.106,1306,4.465,1307,6.106,1308,6.106,1309,4.242,1311,4.622,1312,4.622,1313,4.622,1314,4.622,1330,6.106,1333,4.622,1641,5.603,3147,6.106,3357,5.2,3358,6.869,3359,6.869,3360,6.869,3361,5.2,3362,5.2]],["title/interceptors/TokenInjector.html",[1430,4.127,2716,3.533]],["body/interceptors/TokenInjector.html",[0,0.317,3,0.049,4,0.049,5,0.058,10,2.92,17,1.999,19,0.007,33,0.236,34,0.778,35,0.306,40,0.351,43,0.334,45,0.719,46,0.666,47,0.719,51,0.123,57,0.058,91,1.194,92,1.194,93,1.285,137,0.004,138,0.005,139,0.004,178,2.193,182,1.521,186,2.228,288,1.894,306,1.859,314,1.06,315,1.815,337,1.925,485,3.422,686,2.201,705,4.879,1410,4.839,1428,6.545,1433,5.273,2716,5.692,3363,5.932,3364,5.932,3365,7.479,3366,7.479,3367,5.932,3368,5.932,3369,7.479,3370,9.381,3371,5.932,3372,7.479,3373,8.6,3374,5.932,3375,5.932,3376,7.479,3377,5.932,3378,5.932,3379,7.479,3380,5.932,3381,5.932,3382,5.932,3383,5.932,3384,5.932]],["title/classes/TryToLogIn.html",[0,0.248,20,2.352]],["body/classes/TryToLogIn.html",[0,0.445,1,3.119,2,0.52,3,0.028,4,0.028,5,0.066,6,1.923,7,1.355,8,1.369,9,4.296,10,1.699,11,2.403,12,3.418,13,3.767,14,3.565,15,1.861,16,2.946,17,1.868,18,3.685,19,0.007,20,3.878,21,2.97,22,2.067,23,1.992,24,3.934,25,2.722,26,3.551,27,3.685,28,3.429,29,1.53,30,2.97,31,3.429,32,3.082,33,0.265,34,1.093,35,0.178,36,0.419,37,1.019,38,1.703,39,1.328,40,0.305,41,1.077,42,2.775,43,0.251,45,0.303,46,0.281,47,0.303,49,0.481,50,0.4,51,0.088,52,0.391,53,3.03,54,1.699,55,2.363,56,1.608,57,0.083,58,0.617,59,1.652,60,3.215,61,0.978,62,2.277,63,3.215,64,1.749,65,3.551,66,3.163,67,4.415,68,3.801,69,3.215,70,1.992,71,2.398,72,3.358,73,2.655,74,3.811,75,3.215,76,1.378,77,1.749,78,1.749,79,1.188,80,1.749,81,1.749,82,1.803,83,1.527,84,2.067,85,2.067,86,3.082,87,3.082,88,2.336,89,3.082,90,2.067,91,1.301,92,1.301,93,1.182,94,2.067,95,1.992,96,3.082,97,3.082,98,2.868,99,2.221,100,1.486,101,2.97,102,2.943,103,3.685,104,3.592,105,3.318,106,2.868,107,1.486,108,2.97,109,1.923,110,1.861,111,3.801,112,1.016,113,2.067,114,1.861,115,1.992,116,2.775,117,1.189,118,2.067,119,2.067,120,4.085,121,1.992,122,2.067,123,2.97,124,2.067,125,2.97,126,0.652,127,2.067,128,1.992,129,2.067,130,1.992,131,2.067,132,2.398,133,2.97,134,2.067,135,2.067,136,1.923,137,0.003,138,0.004,139,0.003,216,1.92,3385,5.148,3386,3.453]],["title/classes/TryToLogOut.html",[0,0.248,72,2.285]],["body/classes/TryToLogOut.html",[0,0.448,1,3.171,2,0.535,3,0.029,4,0.029,5,0.067,6,1.978,7,1.394,8,1.375,9,4.326,10,1.748,11,2.437,12,3.417,13,3.806,14,3.602,15,1.914,16,2.995,17,1.888,18,3.747,19,0.007,20,3.742,21,3.032,22,2.126,23,2.048,24,3.98,25,2.768,26,3.61,27,3.747,28,3.487,29,1.556,30,3.032,31,3.487,32,3.147,33,0.258,34,1.101,35,0.183,36,0.428,37,0.949,38,1.486,39,1.337,40,0.21,42,2.833,43,0.145,49,0.495,50,0.411,51,0.09,52,0.402,53,3.08,54,1.748,55,2.403,56,1.654,57,0.084,58,0.635,59,1.699,60,3.268,61,1.006,62,2.325,63,3.268,64,1.799,65,3.61,66,3.221,67,4.461,68,3.854,69,3.268,70,2.048,71,2.448,72,3.635,73,2.7,74,3.857,75,3.268,76,1.407,77,1.77,78,1.799,79,1.202,80,1.799,81,1.799,82,1.854,83,1.57,84,2.126,85,2.126,86,3.147,87,3.147,88,2.385,89,3.147,90,2.126,91,1.312,92,1.312,93,1.191,94,2.126,95,2.048,96,2.126,97,2.126,98,1.978,99,1.532,100,1.025,101,2.048,102,2.984,103,3.747,104,3.08,105,3.373,106,1.978,107,1.025,108,2.048,109,1.978,110,1.914,111,4.458,112,1.547,113,3.147,114,2.833,115,3.032,116,2.833,117,1.214,118,2.126,119,2.126,120,4.141,121,2.048,122,2.126,123,3.032,124,2.126,125,3.032,126,0.671,127,2.126,128,2.048,129,2.126,130,2.048,131,2.126,132,2.448,133,3.032,134,2.126,135,2.126,136,1.978,137,0.003,138,0.004,139,0.003,3387,3.551]],["title/components/TypeAheadSettingsComponent.html",[265,0.944,449,1.635]],["body/components/TypeAheadSettingsComponent.html",[0,0.165,3,0.025,4,0.025,5,0.03,19,0.007,29,1.177,33,0.268,34,0.621,35,0.16,36,0.385,40,0.183,43,0.388,45,0.724,46,0.7,47,0.724,49,0.899,50,0.97,51,0.092,52,0.35,57,0.03,61,0.875,79,1.05,100,0.892,107,1.862,112,0.909,117,1.695,137,0.002,138,0.003,139,0.002,148,2.093,151,2.093,159,0.8,199,0.909,200,0.945,265,1.17,266,1.088,267,1.739,268,1.135,269,1.333,270,1.16,271,1.16,273,2.259,274,1.088,275,3.397,277,2.205,279,1.777,285,2.277,288,1.199,289,2.88,290,1.135,306,2.246,307,2.667,314,0.552,318,0.909,319,0.983,380,1.633,394,0.964,395,1.777,396,1.777,397,1.066,398,2.422,399,1.16,400,1.16,401,1.066,402,1.16,403,3.143,404,1.16,405,2.422,406,1.088,407,1.16,408,1.066,409,1.777,410,1.088,411,1.16,412,1.111,413,1.135,414,1.023,415,1.777,416,1.066,417,1.16,418,1.088,419,1.088,420,1.16,421,1.066,422,1.16,423,1.088,424,1.16,425,1.088,426,1.16,427,1.066,428,1.16,429,1.088,430,1.16,431,1.111,432,1.088,433,1.16,434,3.242,435,1.739,436,2.161,437,1.16,438,1.088,439,1.16,440,1.066,441,1.088,442,1.703,443,1.777,444,1.088,445,1.088,446,1.393,447,1.088,448,1.16,449,2.271,450,2.995,451,1.088,452,0.892,453,1.088,454,1.066,455,1.16,456,1.066,457,1.135,458,1.16,545,2.147,824,4.016,986,1.849,1055,3.319,1056,4.393,1059,4.393,1060,3.861,1061,6.405,1062,4.393,1063,3.861,1064,5.501,1065,4.393,1066,4.231,1067,4.996,1068,4.996,1069,4.393,1070,4.393,1071,4.393,1076,3.224,1078,3.224,1081,3.72,1082,3.224,1083,3.861,1085,3.224,1089,3.919,1091,2.948,1105,2.104,1163,2.008,1306,3.077,1805,6.815,1807,2.216,1808,2.216,1809,2.216,1815,2.216,1816,2.216,1817,2.216,1818,2.216,1819,2.216,1820,2.216,1821,2.216,1822,2.216,1823,2.216,1824,2.216,1825,2.216,1826,2.216,1827,2.216,1831,2.216,1834,3.602,2603,2.52,2604,2.746,2606,3.861,2607,5.115,2664,2.52,2770,2.746,2772,4.208,2850,2.746,2851,2.52,2852,2.746,3388,4.733,3389,5.754,3390,3.089,3391,3.089,3392,3.089,3393,3.089,3394,4.733,3395,3.089,3396,3.089,3397,3.089,3398,3.089,3399,3.089,3400,3.089,3401,3.089,3402,3.089,3403,3.089,3404,3.089,3405,3.089,3406,3.089,3407,3.089,3408,3.089]],["title/components/TypeFilterComponent.html",[265,0.944,451,1.635]],["body/components/TypeFilterComponent.html",[0,0.186,3,0.028,4,0.042,5,0.05,8,0.525,17,1.788,19,0.007,29,2.032,33,0.259,34,0.68,35,0.18,36,0.422,37,0.448,40,0.206,43,0.334,45,0.306,46,0.596,47,0.306,49,0.485,50,0.403,51,0.125,52,0.395,57,0.034,61,0.987,62,1.541,93,0.505,100,1.006,107,1.496,112,1.025,117,1.774,137,0.003,138,0.004,139,0.003,159,0.876,182,1.258,199,1.025,200,1.066,237,1.066,240,2.48,265,1.258,266,1.227,267,1.904,268,1.28,269,1.503,270,1.308,271,1.308,273,2.43,274,1.227,275,3.435,277,2.414,279,1.946,285,2.236,288,1.312,289,2.691,290,1.28,306,1.539,307,1.649,314,0.623,315,1.066,316,1.28,318,1.025,319,1.108,337,1.131,364,2.17,373,1.467,374,1.432,375,1.467,376,1.467,377,1.467,378,1.467,379,1.28,380,2.364,381,1.467,382,1.467,383,1.467,384,1.399,385,1.467,386,1.432,387,1.467,388,1.467,389,1.467,390,1.467,392,2.651,394,1.087,395,1.946,396,1.946,397,1.202,398,2.574,399,1.308,400,1.308,401,1.202,402,1.308,403,1.227,404,1.308,405,2.574,406,1.227,407,1.308,408,1.202,409,1.946,410,1.227,411,1.308,412,1.253,413,1.28,414,1.154,415,1.946,416,1.202,417,1.308,418,1.227,419,1.227,420,1.308,421,1.202,422,1.308,423,1.227,424,1.308,425,1.227,426,1.308,427,1.202,428,1.308,429,1.227,430,1.308,431,1.253,432,1.227,433,1.308,434,1.227,435,1.28,436,2.324,437,1.308,438,1.227,439,1.308,440,1.202,441,1.227,442,1.253,443,1.946,444,1.227,445,1.227,446,1.525,447,1.227,448,1.308,449,1.227,450,1.227,451,2.414,452,2.411,453,1.227,454,1.202,455,1.308,456,1.202,457,1.28,458,1.308,492,1.819,640,2.887,645,2.264,646,2.264,647,2.009,648,2.085,650,2.009,653,2.17,699,1.941,700,1.877,802,1.432,871,2.651,986,3.705,1055,3.57,1060,3.705,1066,3.954,1081,3.954,1083,2.085,1100,2.651,1101,3.944,1102,2.499,1103,2.499,1120,2.651,1122,2.651,1124,2.651,1132,2.651,1133,2.651,1174,3.102,1231,6.093,1244,3.097,1334,5.991,1381,2.499,1700,5.048,1735,2.264,1878,2.499,1933,7.423,1934,7.423,2035,2.651,2038,2.651,2040,2.651,2341,3.097,2434,4.99,2448,2.499,2672,6.513,2818,2.842,2819,5.501,2820,4.228,2821,5.048,2823,5.591,2826,3.097,2831,3.097,2832,2.842,2835,2.842,2836,5.048,2838,2.842,2841,3.097,2842,2.842,2845,2.842,2846,2.842,2851,2.842,3107,3.097,3109,3.097,3333,2.842,3409,6.189,3410,3.484,3411,3.484,3412,3.484,3413,3.484,3414,3.484,3415,3.484,3416,5.183,3417,3.484,3418,3.484,3419,3.484,3420,3.484,3421,3.484,3422,3.484,3423,3.484,3424,3.484,3425,3.484,3426,3.484,3427,3.484,3428,3.484,3429,3.484,3430,3.484,3431,3.484,3432,3.484,3433,3.484,3434,3.484,3435,3.484,3436,5.183,3437,5.183,3438,5.183,3439,5.183,3440,5.183,3441,7.327,3442,3.484,3443,6.189,3444,5.183,3445,3.484,3446,5.183,3447,6.189,3448,5.183,3449,3.484,3450,3.484]],["title/classes/UpdateTimeReference.html",[0,0.248,1864,3.018]],["body/classes/UpdateTimeReference.html",[0,0.429,2,0.855,3,0.046,4,0.046,5,0.055,7,2.227,8,1.371,10,3.948,19,0.007,33,0.268,34,1.11,35,0.293,36,0.591,37,0.934,38,1.817,39,1.37,40,0.336,41,1.769,43,0.327,45,0.498,46,0.461,47,0.498,49,0.79,50,0.657,51,0.121,52,0.643,55,2.79,56,2.642,57,0.085,58,1.014,71,2.642,77,1.922,83,2.508,88,3.639,116,3.057,126,1.373,137,0.004,138,0.005,139,0.004,216,2.502,234,1.702,296,4.996,304,4.317,446,2.574,650,3.272,900,3.214,995,3.687,1063,4.351,1838,4.725,1839,4.07,1840,4.627,1841,4.317,1842,3.864,1843,4.627,1844,6.544,1845,4.627,1846,4.627,1849,4.627,1850,3.687,1851,4.07,1852,3.533,1853,4.317,1854,4.627,1855,4.802,1856,4.627,1857,4.317,1858,5.215,1859,4.627,1860,4.317,1861,4.317,1862,4.627,1863,4.627,1864,5.214,1865,4.627,1866,4.627,1867,4.317,3451,7.269,3452,5.672,3453,5.672]],["title/classes/UpdatedSubscription.html",[0,0.248,243,2.352]],["body/classes/UpdatedSubscription.html",[0,0.48,2,0.673,3,0.036,4,0.036,5,0.043,8,1.379,12,1.64,19,0.007,33,0.266,34,1.19,35,0.23,36,0.504,38,1.733,39,1.433,40,0.478,43,0.253,49,0.622,50,0.517,51,0.089,52,0.506,57,0.089,58,0.798,76,1.195,77,1.934,91,1.448,92,1.448,93,1.315,126,1.618,137,0.003,138,0.005,139,0.003,159,1.047,213,3.604,214,3.833,215,2.405,219,2.574,220,2.546,221,1.925,222,1.835,223,2.33,224,3.714,225,5.002,226,2.305,227,3.604,228,2.196,229,3.5,230,3.234,231,2.486,232,1.879,233,3.714,234,1.858,235,3.604,236,1.792,237,1.365,238,3.604,239,1.973,240,2.964,241,2.261,242,2.33,243,3.893,244,2.405,245,1.977,246,1.42,247,1.392,248,1.64,249,1.64,250,1.288,251,1.339,252,1.448,253,2.574,254,2.574,255,2.574,256,2.261,257,2.574,258,2.574,259,2.574,260,2.574,261,2.574,262,3.572,263,2.574,264,2.405,3454,6.193]],["title/classes/User.html",[0,0.248,66,1.706]],["body/classes/User.html",[0,0.376,2,1.062,3,0.058,4,0.058,5,0.068,19,0.007,33,0.203,37,1.068,39,1.384,40,0.492,43,0.288,45,0.619,46,0.573,47,0.619,57,0.068,66,3.052,79,1.535,104,3.467,137,0.005,138,0.006,139,0.005,906,6.775,907,6.775,3455,7.045,3456,7.045,3457,7.045,3458,7.045,3459,7.045,3460,7.045]],["title/pipes/XAxisTickFormatPipe.html",[802,1.908,1920,3.533]],["body/pipes/XAxisTickFormatPipe.html",[0,0.223,3,0.034,4,0.034,5,0.04,9,2.992,19,0.007,25,2.611,33,0.198,34,0.547,43,0.28,45,0.602,46,0.64,47,0.602,49,0.823,50,1.089,51,0.085,57,0.04,79,1.557,83,3.298,137,0.003,138,0.004,139,0.003,178,2.107,182,1.941,228,2.906,274,1.468,288,1.056,306,1.705,314,0.745,336,4.893,802,2.428,862,1.844,900,3.032,986,3.535,1033,3.838,1035,5.14,1746,5.676,1855,4.464,1920,4.494,1946,6.629,1947,6.629,2233,4.817,2253,4.494,2563,6.668,3141,8.212,3146,6.629,3149,5.249,3150,7.266,3160,5.249,3176,6.629,3204,5.249,3231,5.249,3461,4.17,3462,4.17,3463,5.905,3464,4.17,3465,5.905,3466,4.17,3467,8.174,3468,7.457,3469,4.17,3470,5.905,3471,4.17,3472,5.905,3473,5.905,3474,5.905,3475,5.905,3476,4.17,3477,5.905,3478,4.17,3479,5.905,3480,6.857,3481,7.871,3482,7.871,3483,8.586,3484,4.17,3485,5.905,3486,5.905,3487,5.905,3488,4.17,3489,4.17,3490,4.17,3491,4.17,3492,4.17,3493,4.17,3494,6.857,3495,6.857,3496,4.17,3497,4.17,3498,5.905,3499,5.905,3500,4.17]],["title/dependencies.html",[462,3.115,3501,3.863]],["body/dependencies.html",[4,0.048,19,0.007,33,0.168,52,0.838,53,2.871,54,2.871,117,1.348,137,0.004,138,0.005,139,0.004,251,1.75,314,1.043,315,1.784,326,4.38,327,3.144,450,2.054,462,3.249,464,4.268,474,3.365,479,5.632,480,5.309,489,3.365,492,3.046,495,5.632,496,4.758,507,4.758,508,4.758,510,4.758,511,6.186,512,6.036,514,4.758,515,4.758,516,4.758,531,3.249,564,3.633,575,3.973,697,4.758,698,6.036,700,3.144,900,3.272,1019,3.144,1309,4.758,1409,4.185,1623,4.758,1852,3.633,1941,5.185,1942,5.185,2801,5.185,3502,5.833,3503,9.354,3504,5.833,3505,5.833,3506,5.833,3507,5.833,3508,5.833,3509,5.833,3510,5.833,3511,5.833,3512,7.4,3513,8.821,3514,5.833,3515,5.833,3516,5.833,3517,5.833,3518,5.833,3519,5.833,3520,5.833,3521,5.833,3522,5.833,3523,5.833,3524,5.833,3525,5.833,3526,5.833,3527,5.833,3528,5.833,3529,5.833,3530,7.4,3531,5.833,3532,5.833,3533,5.833,3534,5.833,3535,5.833,3536,5.833,3537,5.833]],["title/miscellaneous/enumerations.html",[3538,2.94,3539,4.97]],["body/miscellaneous/enumerations.html",[1,1.808,3,0.029,6,1.988,8,0.795,10,3.09,12,3.186,19,0.007,20,1.808,35,0.184,50,1.139,59,2.525,60,1.864,61,1.778,62,2.776,63,1.864,64,1.808,65,3.621,66,2.946,67,4.469,68,3.864,69,1.864,70,2.059,71,2.924,72,1.756,73,2.708,74,1.864,75,1.864,76,2.203,78,2.673,80,2.673,81,2.673,82,2.755,126,1.464,137,0.003,138,0.004,139,0.003,142,2.136,144,3.159,148,1.158,159,1.483,194,2.059,195,2.136,196,2.136,198,3.159,199,1.05,200,1.092,201,2.136,202,2.136,203,2.136,204,1.619,213,1.808,214,1.923,215,2.844,223,2.755,224,1.864,225,4.762,226,2.723,227,1.808,228,1.756,229,1.756,230,1.864,231,1.988,232,2.221,233,1.864,234,2.469,235,1.808,236,2.786,237,1.092,238,1.808,239,2.333,240,2.525,241,1.808,242,3.278,243,1.808,244,1.923,245,2.057,246,2.355,247,2.309,248,2.549,249,2.549,330,2.136,346,1.988,414,2.079,446,2.178,452,1.523,537,3.044,545,4.058,555,2.32,562,4.624,563,4.363,640,1.988,641,2.716,647,3.044,649,4.016,650,2.059,651,2.911,674,2.911,702,4.304,986,3.159,1014,2.136,1022,3.43,1024,3.786,1096,1.923,1145,2.911,1152,3.594,1160,4.304,1161,2.716,1162,2.716,1163,2.32,1208,2.32,1281,3.43,1282,1.923,1283,2.136,1284,2.136,1478,2.32,1507,2.223,1508,2.223,1565,3.383,1567,1.923,1735,2.32,1789,4.69,1838,2.32,1839,2.561,1853,4.016,1855,3.159,1857,2.716,1858,3.786,1864,2.32,1913,1.923,1914,3.044,2018,3.173,2035,4.016,2038,4.778,2040,4.778,2061,3.173,2062,3.173,2063,3.173,2064,3.173,2065,3.173,2082,2.431,2093,2.136,2097,3.159,2098,1.923,2099,1.988,2100,1.988,2101,1.988,2102,1.988,2103,2.223,2120,2.136,2124,1.988,2125,1.988,2126,3.91,2127,1.988,2128,1.988,2393,2.431,2394,2.716,2398,4.304,2399,2.431,2561,3.173,2566,3.173,3134,2.911,3269,3.173,3278,4.304,3330,3.173,3331,3.173,3332,3.173,3333,2.911,3334,3.173,3335,3.173,3336,3.173,3337,3.173,3338,3.173,3339,3.173,3343,3.173,3344,6.165,3349,4.69,3350,3.173,3538,2.716,3539,3.173,3540,5.277,3541,3.173,3542,3.173,3543,5.277,3544,3.569,3545,5.277,3546,3.173,3547,6.165,3548,3.173,3549,3.569,3550,3.569,3551,3.173,3552,3.569,3553,3.173,3554,3.173,3555,3.173,3556,3.569,3557,3.569,3558,3.569]],["title/index.html",[35,0.24,3559,4.127]],["body/index.html",[2,0.617,19,0.007,73,1.765,100,1.959,112,1.997,137,0.003,138,0.004,139,0.003,266,2.944,267,1.503,291,4.868,346,2.279,394,1.276,401,2.341,403,2.39,406,2.944,408,2.883,410,2.39,412,2.441,416,2.883,418,2.944,419,2.39,421,2.883,423,2.39,425,2.39,427,2.341,429,2.39,431,2.441,432,2.39,434,2.39,438,2.39,440,2.341,441,2.39,444,2.39,445,2.39,447,2.39,449,2.39,451,2.39,453,1.441,454,2.341,456,2.341,459,1.682,460,6.736,461,1.958,462,2.279,463,2.449,464,2.36,465,2.449,466,2.073,467,3.637,468,3.637,469,3.637,470,3.637,471,4.868,472,6.783,473,5.607,474,3.361,475,2.449,530,2.548,534,3.78,555,2.659,560,2.36,664,6.182,665,3.637,666,3.637,667,3.637,668,4.868,705,3.657,802,1.682,910,1.856,918,4.411,1178,4.226,1252,3.78,1455,6.68,1456,3.637,1457,3.637,1458,3.637,1459,3.637,1460,4.868,1490,4.868,1891,4.868,1915,7.371,1916,3.637,1917,3.637,1918,3.637,1919,3.637,1920,5.165,1921,4.868,2713,3.637,2714,3.637,2715,4.868,2716,5.165,2758,7.117,2759,3.637,2760,3.637,2761,3.637,2762,4.868,2794,3.637,2795,3.637,2876,6.182,2877,3.637,2878,3.637,2879,3.637,2880,4.868,3559,3.637,3560,4.091,3561,4.091,3562,4.091,3563,4.091,3564,4.091,3565,4.091]],["title/modules.html",[461,3.046]],["body/modules.html",[19,0.006,137,0.005,138,0.006,139,0.005,368,8.184,460,4.858,461,3.241,471,4.858,472,4.858,473,4.858,480,6.836,511,7.252,664,5.154,668,4.858,1455,4.858,1915,5.154,1921,4.858,2758,5.154,2762,4.858,2876,5.154,2880,4.858,3566,9.528,3567,9.746,3568,9.207]],["title/routes.html",[530,3.964]],["body/routes.html",[19,0.006,137,0.006,138,0.006,139,0.006,530,4.772]],["title/miscellaneous/typealiases.html",[3538,2.94,3569,5.591]],["body/miscellaneous/typealiases.html",[1,3.042,6,3.344,19,0.007,20,3.042,33,0.173,35,0.31,60,3.135,63,3.135,69,3.135,72,2.955,74,3.135,75,3.135,136,4.198,137,0.004,138,0.006,139,0.004,213,3.042,214,3.235,215,4.061,224,3.135,227,3.042,229,2.955,233,3.135,235,3.042,238,3.042,243,3.042,245,2.473,264,4.061,330,3.594,640,3.344,641,4.569,654,4.089,657,6.147,1014,3.594,1096,3.235,1282,3.235,1283,3.594,1284,3.594,1478,3.902,1485,5.133,1507,3.739,1508,3.739,1567,3.235,1838,3.902,1839,4.307,1855,3.594,1864,3.902,1867,5.735,1913,3.235,2082,4.089,2089,5.406,2093,3.594,2098,3.235,2099,3.344,2100,3.344,2101,3.344,2102,3.344,2118,4.693,2120,3.594,2124,3.344,2125,3.344,2127,3.344,2128,3.344,2136,4.693,2393,4.089,2394,4.569,2399,4.089,2403,6.147,3538,4.569,3541,5.337,3542,5.337,3546,5.337,3547,5.337,3548,5.337,3551,5.337,3553,5.337,3554,5.337,3555,5.337,3570,6.004]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":862,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"directives/MouseWheelDirective.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["0.3.0",{"_index":3509,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3339,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["0.5.25",{"_index":3528,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":2669,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.8.29",{"_index":3537,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":346,"title":{"classes/HandleUnexpectedError-1.html":{}},"body":{"components/AppComponent.html":{},"injectables/HandlebarsService.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1)?location.pathname",{"_index":887,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["1.0.14",{"_index":3529,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":3523,"title":{},"body":{"dependencies.html":{}}}],["1.2.17",{"_index":3510,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":3535,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3333,"title":{},"body":{"classes/TimeReference.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["10.1.0",{"_index":3517,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":704,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["11.0.1",{"_index":3514,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":3167,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["13",{"_index":3560,"title":{},"body":{"index.html":{}}}],["16",{"_index":3261,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["16px",{"_index":2336,"title":{},"body":{"components/IconComponent.html":{}}}],["16th",{"_index":3265,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["19",{"_index":3562,"title":{},"body":{"index.html":{}}}],["2",{"_index":555,"title":{"classes/HandleUnexpectedError-2.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["2*60*60*1000",{"_index":1422,"title":{},"body":{"injectables/CardService.html":{}}}],["2.0",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["2.0.1",{"_index":3530,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":3525,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":3519,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":3527,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":3522,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["22",{"_index":3565,"title":{},"body":{"index.html":{}}}],["28",{"_index":3561,"title":{},"body":{"index.html":{}}}],["2px",{"_index":3444,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["3",{"_index":2092,"title":{"classes/HandleUnexpectedError-3.html":{}},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["3.6.0",{"_index":3533,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":1245,"title":{},"body":{"components/CardComponent.html":{}}}],["32px",{"_index":2335,"title":{},"body":{"components/IconComponent.html":{}}}],["3600",{"_index":3337,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["4",{"_index":2119,"title":{"classes/HandleUnexpectedError-4.html":{}},"body":{"components/TimeLineComponent.html":{}}}],["4.0.0",{"_index":3512,"title":{},"body":{"dependencies.html":{}}}],["4.0.14",{"_index":3524,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":3526,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":3520,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":1232,"title":{},"body":{"components/CardComponent.html":{}}}],["401",{"_index":1036,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{}}}],["5.8.1",{"_index":3511,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1039,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5000",{"_index":1512,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["5px",{"_index":1234,"title":{},"body":{"components/CardComponent.html":{}}}],["6",{"_index":3164,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["6.3.3",{"_index":3531,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3335,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["600000",{"_index":1435,"title":{},"body":{"injectables/CardService.html":{}}}],["64px",{"_index":2334,"title":{},"body":{"components/IconComponent.html":{}}}],["7",{"_index":3171,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["7.1.0",{"_index":3513,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":3503,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":3505,"title":{},"body":{"dependencies.html":{}}}],["73",{"_index":3563,"title":{},"body":{"index.html":{}}}],["7d",{"_index":3231,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["8",{"_index":760,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["8px",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["9",{"_index":3564,"title":{},"body":{"index.html":{}}}],["_",{"_index":699,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_.clonedeep(startdomain",{"_index":3178,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(startdomain2",{"_index":3195,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(startdomain3",{"_index":3206,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(startdomain4",{"_index":3188,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(value",{"_index":3244,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.difference(forma.tags,formb.tags).length===0",{"_index":2843,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(formb.tags,forma.tags).length===0",{"_index":2844,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(work",{"_index":2993,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.fill(this.expandedmenu,false",{"_index":2646,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_.get(oauth2conf",{"_index":725,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["_.intersection(card.tags,status.tags).length",{"_index":2047,"title":{},"body":{"injectables/FilterService.html":{}}}],["_.isequal(forma",{"_index":1143,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TimeFilterComponent.html":{}}}],["_.isequal(forma,formb",{"_index":3430,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["_.merge(acc,val",{"_index":2962,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.remove(this.loadingi18n",{"_index":3007,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.uniq(ids",{"_index":2992,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_defaultfilters",{"_index":2019,"title":{},"body":{"injectables/FilterService.html":{}}}],["_description",{"_index":2363,"title":{},"body":{"components/InfoComponent.html":{}}}],["_filter",{"_index":2821,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_htmlcontent",{"_index":1612,"title":{},"body":{"components/DetailComponent.html":{}}}],["_i18nprefix",{"_index":1169,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["_locale",{"_index":2260,"title":{},"body":{"injectables/I18nService.html":{}}}],["_locale:string",{"_index":2275,"title":{},"body":{"injectables/I18nService.html":{}}}],["_selectediframeurl",{"_index":2347,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_thirdmenus",{"_index":2618,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_time",{"_index":2364,"title":{},"body":{"components/InfoComponent.html":{}}}],["_timezone",{"_index":2261,"title":{},"body":{"injectables/I18nService.html":{}}}],["_timezone:string",{"_index":2276,"title":{},"body":{"injectables/I18nService.html":{}}}],["_username",{"_index":2365,"title":{},"body":{"components/InfoComponent.html":{}}}],["a.payload.lightcards",{"_index":1346,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["a[key",{"_index":2252,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["abstractcontrol",{"_index":2433,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["accept",{"_index":65,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["acceptlogin",{"_index":1,"title":{"classes/AcceptLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogin(authenticationinfo",{"_index":957,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authinfo",{"_index":968,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogout",{"_index":74,"title":{"classes/AcceptLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsuccess",{"_index":75,"title":{"classes/AcceptLogOutSuccess.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsucess",{"_index":946,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["access_token",{"_index":677,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["accessors",{"_index":1174,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["according",{"_index":3468,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["accordingly",{"_index":925,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["action",{"_index":8,"title":{"classes/Action.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["action.buttonstyle",{"_index":1691,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.buttonstyle.split",{"_index":1692,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle",{"_index":1694,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle.split",{"_index":1695,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.payload",{"_index":998,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed",{"_index":1543,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed/cards/\")>=0",{"_index":1547,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/thirdparty/\")>=0",{"_index":1553,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.menu_entry_id",{"_index":2547,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.menu_version",{"_index":2546,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.routerstate",{"_index":1549,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.routerstate.url.indexof(\"/feed/cards/\")>=0",{"_index":1542,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.settings.defaulttags",{"_index":1900,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.settings.defaulttags.length>0",{"_index":1899,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["actionid",{"_index":1631,"title":{},"body":{"components/DetailComponent.html":{}}}],["actionreducermap",{"_index":580,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":916,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"injectables/TimeEffects.html":{}}}],["actions?:ofmap",{"_index":193,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actiontype",{"_index":144,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["activate",{"_index":1736,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1579,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["active",{"_index":653,"title":{},"body":{"classes/ApplyFilter.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["active:boolean",{"_index":2006,"title":{},"body":{"classes/Filter.html":{}}}],["activedetail",{"_index":1731,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activedetail.length",{"_index":1737,"title":{},"body":{"components/DetailsComponent.html":{}}}],["actual",{"_index":3148,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["actual_component",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["actualmoment",{"_index":3172,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["add",{"_index":242,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addauthheadersifnecessary",{"_index":3365,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addauthheadersifnecessary(request",{"_index":3369,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addcarddatatimeline",{"_index":3249,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["added",{"_index":1296,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["addlightcardfailure",{"_index":213,"title":{"classes/AddLightCardFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addlightcardfailure({error",{"_index":1371,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["afterviewinit",{"_index":1707,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{}}}],["ahead",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["aims",{"_index":86,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["alarm",{"_index":2035,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert('submitted",{"_index":1144,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["alert(`${actionid",{"_index":1702,"title":{},"body":{"components/DetailComponent.html":{}}}],["aliases",{"_index":3570,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1246,"title":{},"body":{"components/CardComponent.html":{}}}],["already",{"_index":2725,"title":{},"body":{"modules/ServicesModule.html":{}}}],["always",{"_index":1594,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["angular",{"_index":717,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["angular/animations",{"_index":3502,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3504,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"components/IconComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["angular/compiler",{"_index":3506,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"modules/FeedModule.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":3507,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/FeedRoutingModule.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"dependencies.html":{}}}],["animations",{"_index":3219,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["app",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["app.component",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":266,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["appdraggable",{"_index":1749,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appdraggable]'},{'name",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appear",{"_index":1796,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appeffects",{"_index":631,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["application",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["application/x",{"_index":756,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["applies",{"_index":2003,"title":{},"body":{"classes/Filter.html":{}}}],["apply",{"_index":985,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["applyfilter",{"_index":640,"title":{"classes/ApplyFilter.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["applyfilter(card",{"_index":1992,"title":{},"body":{"classes/Filter.html":{}}}],["applyfilter({name:filtertype.tag_filter,active:true,status:{tags:v",{"_index":1908,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["appmetareducers",{"_index":634,"title":{},"body":{"interfaces/AppState.html":{}}}],["appmodule",{"_index":460,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["appmousewheel",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appreducer",{"_index":632,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["appropriate",{"_index":868,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["approutingmodule",{"_index":471,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":318,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{}}}],["archives'},{'name",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives.component",{"_index":670,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{}}}],["archives.component.html",{"_index":660,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archives.component.scss",{"_index":659,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archivescomponent",{"_index":401,"title":{"components/ArchivesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivesmodule",{"_index":664,"title":{"modules/ArchivesModule.html":{}},"body":{"modules/ArchivesModule.html":{},"index.html":{},"modules.html":{}}}],["archivesroutingmodule",{"_index":668,"title":{"modules/ArchivesRoutingModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["args",{"_index":2224,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[2",{"_index":2225,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["arguments",{"_index":1763,"title":{},"body":{"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{}}}],["array",{"_index":1641,"title":{},"body":{"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"interfaces/TimelineState.html":{}}}],["array(menus.length",{"_index":2645,"title":{},"body":{"components/NavbarComponent.html":{}}}],["array[0",{"_index":2541,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["arrow::after",{"_index":3450,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["ask",{"_index":708,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfromcode(code",{"_index":773,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfrompassword(login",{"_index":788,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenurl",{"_index":709,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["assets/styles/_variables.scss",{"_index":2341,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["assignconfigurationproperties(oauth2conf",{"_index":723,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["attachaction",{"_index":1614,"title":{},"body":{"components/DetailComponent.html":{}}}],["attachaction(button",{"_index":1629,"title":{},"body":{"components/DetailComponent.html":{}}}],["attempt",{"_index":68,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":808,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["auth.firstname",{"_index":804,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["auth.lastname",{"_index":806,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticate",{"_index":1007,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticated",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/InitAuthStatus.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["authentication.reducer.ts",{"_index":27,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authentication.service",{"_index":1410,"title":{},"body":{"injectables/CardService.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationactions",{"_index":136,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationactiontypes",{"_index":59,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.acceptlogin",{"_index":32,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogout",{"_index":133,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogoutsuccess",{"_index":135,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.checkauthenticationstatus",{"_index":95,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.initauthstatus",{"_index":90,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.rejectlogin",{"_index":125,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologin",{"_index":108,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologout",{"_index":115,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffect",{"_index":120,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffects",{"_index":15,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationguard",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["authenticationreducer",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{}}}],["authenticationservice",{"_index":705,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"components/LoginComponent.html":{},"modules/ServicesModule.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["authenticationservice,private",{"_index":1412,"title":{},"body":{"injectables/CardService.html":{}}}],["authenticationservice.clearauthenticationinformation",{"_index":992,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.computeredirecturi",{"_index":785,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.decodetoken(payload.access_token",{"_index":858,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.extractidentificationinformation",{"_index":966,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.extracttoken",{"_index":875,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.getsecurityheader",{"_index":1433,"title":{},"body":{"injectables/CardService.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationservice.isexpirationdateover",{"_index":964,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.verifyexpirationdate",{"_index":832,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authinfo",{"_index":965,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authinitialstate",{"_index":908,"title":{},"body":{"interfaces/AuthState.html":{}}}],["authobject",{"_index":673,"title":{"classes/AuthObject.html":{}},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authorization",{"_index":873,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authorization_code",{"_index":780,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authservice",{"_index":917,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authstate",{"_index":565,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["autoscale",{"_index":3218,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["available",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["avec",{"_index":3211,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["axis",{"_index":1947,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["b[key",{"_index":2254,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["back",{"_index":742,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/MenuEffects.html":{}}}],["background",{"_index":3448,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["badge",{"_index":1243,"title":{},"body":{"components/CardComponent.html":{}}}],["base",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["basehref",{"_index":2322,"title":{},"body":{"components/IconComponent.html":{}}}],["basehref?basehref:'/')+'assets/images/icons",{"_index":2325,"title":{},"body":{"components/IconComponent.html":{}}}],["basemoment.add(computedoffsetduration",{"_index":3328,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=moment(this.virtualtime",{"_index":3325,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=ref",{"_index":3327,"title":{},"body":{"classes/TimeReference.html":{}}}],["basesettingcomponent",{"_index":403,"title":{"components/BaseSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["basesettingcomponent:27",{"_index":1809,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:28",{"_index":1807,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:29",{"_index":1808,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:30",{"_index":1825,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:31",{"_index":1827,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:32",{"_index":1826,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:33",{"_index":1824,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:34",{"_index":1823,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:40",{"_index":1820,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:70",{"_index":1819,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:75",{"_index":1822,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:79",{"_index":1817,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:83",{"_index":1815,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:88",{"_index":1816,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:94",{"_index":1818,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:98",{"_index":1821,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettings",{"_index":1059,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["bearer",{"_index":874,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["beat",{"_index":1861,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["before",{"_index":3147,"title":{},"body":{"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["begin",{"_index":3145,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["behaviour",{"_index":1971,"title":{},"body":{"classes/Filter.html":{}}}],["beware",{"_index":781,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{}}}],["big",{"_index":2297,"title":{},"body":{"components/IconComponent.html":{}}}],["big:boolean",{"_index":2315,"title":{},"body":{"components/IconComponent.html":{}}}],["bindactions",{"_index":1615,"title":{},"body":{"components/DetailComponent.html":{}}}],["bindactions(third",{"_index":1633,"title":{},"body":{"components/DetailComponent.html":{}}}],["block",{"_index":1792,"title":{},"body":{"directives/DraggableDirective.html":{},"components/InfoComponent.html":{}}}],["body",{"_index":3449,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["boolean",{"_index":148,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["border",{"_index":1244,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["both",{"_index":1970,"title":{},"body":{"classes/Filter.html":{}}}],["bottom",{"_index":1233,"title":{},"body":{"components/CardComponent.html":{}}}],["break",{"_index":1038,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/TimeSpan.html":{}}}],["browse",{"_index":3567,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":478,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":2487,"title":{},"body":{"components/LoginComponent.html":{}}}],["bubble",{"_index":3350,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["build",{"_index":718,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["buildconfigselector",{"_index":695,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["buildfilterselector",{"_index":2832,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["buildsettingsorconfigselector",{"_index":2272,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{},"components/TagsFilterComponent.html":{}}}],["buildsettingsselector",{"_index":1098,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["business",{"_index":922,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["business_start",{"_index":1221,"title":{},"body":{"components/CardComponent.html":{}}}],["button",{"_index":105,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["button.addeventlistener('click",{"_index":1701,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.attributes['action",{"_index":1685,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add('fa",{"_index":1697,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add(c",{"_index":1696,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add('btn",{"_index":1690,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add(c",{"_index":1693,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttons",{"_index":1684,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttonstyle",{"_index":149,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["c",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["call",{"_index":738,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["call.pipe",{"_index":793,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["called",{"_index":102,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["calling",{"_index":983,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["canactivate",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["caps",{"_index":1239,"title":{},"body":{"components/CardComponent.html":{}}}],["card",{"_index":159,"title":{"classes/Card.html":{}},"body":{"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"interfaces/ConfigState.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectLightCard.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["card'},{'name",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["card):observable",{"_index":2192,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["card.actions",{"_index":1027,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["card.actions.ts",{"_index":215,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["card.actions.ts:26",{"_index":2470,"title":{},"body":{"classes/LoadLightCards.html":{}}}],["card.actions.ts:31",{"_index":1837,"title":{},"body":{"classes/EmptyLightCards.html":{}}}],["card.actions.ts:35",{"_index":2474,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:38",{"_index":2475,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:43",{"_index":2471,"title":{},"body":{"classes/LoadLightCardsExtendedData.html":{}}}],["card.actions.ts:51",{"_index":2472,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:54",{"_index":2473,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:60",{"_index":2705,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:62",{"_index":2706,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:68",{"_index":1486,"title":{},"body":{"classes/ClearLightCardSelection.html":{}}}],["card.actions.ts:74",{"_index":217,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:77",{"_index":218,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:82",{"_index":3454,"title":{},"body":{"classes/UpdatedSubscription.html":{}}}],["card.actions.ts:91",{"_index":2090,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["card.actions.ts:93",{"_index":2091,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["card.component.html",{"_index":1168,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":1167,"title":{},"body":{"components/CardComponent.html":{}}}],["card.details",{"_index":1265,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["card.effects",{"_index":617,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.effects.ts",{"_index":2406,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:20",{"_index":2408,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:30",{"_index":2418,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.enddate",{"_index":2051,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.id.indexof(selectedcardid",{"_index":1351,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["card.model",{"_index":222,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["card.model.ts",{"_index":3344,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["card.model.ts:82",{"_index":3346,"title":{},"body":{"classes/TimeSpan.html":{}}}],["card.publisher",{"_index":2978,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisherversion",{"_index":2979,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.reducer",{"_index":596,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.service",{"_index":2722,"title":{},"body":{"modules/ServicesModule.html":{}}}],["card.severity",{"_index":2043,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.startdate",{"_index":2052,"title":{},"body":{"injectables/FilterService.html":{}}}],["card1.lttd",{"_index":1319,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.publishdate",{"_index":1322,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.startdate",{"_index":1313,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card2",{"_index":1312,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card2.lttd",{"_index":1320,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.publishdate",{"_index":1323,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.startdate",{"_index":1314,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card:lightcard",{"_index":2048,"title":{},"body":{"injectables/FilterService.html":{}}}],["cardactions",{"_index":1485,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["cardactiontypes",{"_index":1281,"title":{},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["cardactiontypes.clearcard",{"_index":1479,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.handleunexpectederror",{"_index":1484,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcard",{"_index":1481,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardfailure",{"_index":1482,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardsuccess",{"_index":1483,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardcomponent",{"_index":406,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["carddetailscomponent",{"_index":408,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardeffects",{"_index":584,"title":{"injectables/CardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardEffects.html":{}}}],["cardfeedstate",{"_index":568,"title":{"interfaces/CardFeedState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardFeedState.html":{}}}],["cardinitialstate",{"_index":1454,"title":{},"body":{"interfaces/CardState.html":{}}}],["cardlistcomponent",{"_index":410,"title":{"components/CardListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardoperation",{"_index":1406,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationeffects",{"_index":586,"title":{"injectables/CardOperationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardOperationEffects.html":{}}}],["cardoperationsurl",{"_index":1383,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationtype",{"_index":3543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cardreducer",{"_index":597,"title":{},"body":{"interfaces/AppState.html":{}}}],["cards",{"_index":1295,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"injectables/ThirdsService.html":{},"interfaces/TimelineState.html":{}}}],["cards'},{'name",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["cards/cards.module",{"_index":1931,"title":{},"body":{"modules/FeedModule.html":{}}}],["cards/components/card",{"_index":1961,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cards/components/detail/detail.component",{"_index":1960,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cardselectors",{"_index":1256,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cardservice",{"_index":918,"title":{"injectables/CardService.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["cardsmodule",{"_index":1455,"title":{"modules/CardsModule.html":{}},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["cardstate",{"_index":566,"title":{"interfaces/CardState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardState.html":{}}}],["cardstimeline",{"_index":3254,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["cardsurl",{"_index":1384,"title":{},"body":{"injectables/CardService.html":{}}}],["cardtimeline",{"_index":3250,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["care",{"_index":1978,"title":{},"body":{"classes/Filter.html":{}}}],["case",{"_index":1035,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["catch",{"_index":891,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror",{"_index":690,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{}}}],["catcherror((err",{"_index":971,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror((err,caught",{"_index":2413,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["catcherror((error",{"_index":1370,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["catcherror((error,caught",{"_index":1372,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror(authenticationservice.handleerror",{"_index":765,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror(e=>of(auth",{"_index":809,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror(err",{"_index":1882,"title":{},"body":{"components/FeedComponent.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["catcherror(error",{"_index":3091,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["catcherror(errorresponse",{"_index":958,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["category",{"_index":928,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["caught",{"_index":972,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["cell",{"_index":3441,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["center",{"_index":1247,"title":{},"body":{"components/CardComponent.html":{}}}],["centeredonticks",{"_index":3222,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["chain",{"_index":1997,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter",{"_index":1985,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter(card",{"_index":1995,"title":{},"body":{"classes/Filter.html":{}}}],["change",{"_index":650,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/Tick.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["changelocale",{"_index":2262,"title":{},"body":{"injectables/I18nService.html":{}}}],["changelocale(locale",{"_index":2265,"title":{},"body":{"injectables/I18nService.html":{}}}],["changelocale(locale:string",{"_index":2282,"title":{},"body":{"injectables/I18nService.html":{}}}],["changes",{"_index":1719,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changes['card'].currentvalue.publisher+'.'+changes['card'].currentvalue.publisherversion",{"_index":1744,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changing",{"_index":1843,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["character",{"_index":2942,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["charset=utf",{"_index":759,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["chart",{"_index":3359,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["chart'},{'name",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["chart.component",{"_index":1945,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/custom",{"_index":1944,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/init",{"_index":1953,"title":{},"body":{"modules/FeedModule.html":{}}}],["chartcommonmodule",{"_index":1939,"title":{},"body":{"modules/FeedModule.html":{}}}],["charts",{"_index":1942,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["checauthentication",{"_index":122,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["check",{"_index":64,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["checkauthentication",{"_index":21,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["checkauthentication(token",{"_index":749,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checkauthenticationstatus",{"_index":63,"title":{"classes/CheckAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checkauthenticationwhenready",{"_index":913,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checking",{"_index":894,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checks",{"_index":739,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["checktokenresponse",{"_index":895,"title":{"classes/CheckTokenResponse.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["checktokenurl",{"_index":706,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["child",{"_index":1605,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["children",{"_index":1962,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cid",{"_index":1965,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["claim",{"_index":733,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["class.thirds",{"_index":2656,"title":{},"body":{"components/NavbarComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"index.html":{}}}],["clear",{"_index":239,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["clearauthenticationinformation",{"_index":833,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clearcard",{"_index":1014,"title":{"classes/ClearCard.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearlightcardselection",{"_index":238,"title":{"classes/ClearLightCardSelection.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":103,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["clicked",{"_index":1017,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clicking",{"_index":1010,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clientid",{"_index":80,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["clientsecret",{"_index":713,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clone",{"_index":1986,"title":{},"body":{"classes/Filter.html":{}}}],["clone():filter",{"_index":2007,"title":{},"body":{"classes/Filter.html":{}}}],["cluster",{"_index":3150,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["cluster_appmodule",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":469,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_archivesmodule",{"_index":665,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_declarations",{"_index":666,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_imports",{"_index":667,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_cardsmodule",{"_index":1456,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_declarations",{"_index":1457,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_exports",{"_index":1458,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_providers",{"_index":1459,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_feedmodule",{"_index":1916,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_declarations",{"_index":1917,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_exports",{"_index":1919,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_imports",{"_index":1918,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":2713,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_servicesmodule_providers",{"_index":2714,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_settingsmodule",{"_index":2759,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2760,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_imports",{"_index":2761,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_statemodule",{"_index":2794,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_statemodule_imports",{"_index":2795,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule",{"_index":2877,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_declarations",{"_index":2878,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_imports",{"_index":2879,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["clusterlevel",{"_index":3141,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["clustertickstoticks",{"_index":3223,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["code",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["codeflow",{"_index":2495,"title":{},"body":{"components/LoginComponent.html":{}}}],["codeprovider",{"_index":2490,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":1304,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["color",{"_index":2672,"title":{},"body":{"components/NavbarComponent.html":{},"components/TypeFilterComponent.html":{}}}],["color:inherit",{"_index":2666,"title":{},"body":{"components/NavbarComponent.html":{}}}],["combinelatest",{"_index":2274,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["commonmodule",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{}}}],["comparebylttd(card1",{"_index":1318,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebylttd(card1,card2",{"_index":1327,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1",{"_index":1321,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1,card2",{"_index":1329,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1",{"_index":1315,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1,card2",{"_index":1325,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseveritylttdpublishdate(card1",{"_index":1324,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebystartdate(card1",{"_index":1311,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["complex",{"_index":1593,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["component",{"_index":265,"title":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component_template",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["components",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["components/card",{"_index":1466,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["components/card/card.component",{"_index":1465,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/custom",{"_index":1943,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/detail/detail.component",{"_index":1469,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/details/details.component",{"_index":1468,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/icon/icon.component",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["components/init",{"_index":1952,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/login/login.component",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/info/info.component",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/navbar.component",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["components/no",{"_index":1925,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/settings/base",{"_index":2765,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/email",{"_index":2767,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/list",{"_index":2768,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/multi",{"_index":2769,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/settings.component",{"_index":2764,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["components/settings/text",{"_index":2766,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/type",{"_index":2771,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/time",{"_index":1928,"title":{},"body":{"modules/FeedModule.html":{}}}],["computation",{"_index":3307,"title":{},"body":{"classes/TimeReference.html":{}}}],["compute",{"_index":1211,"title":{},"body":{"components/CardComponent.html":{}}}],["computed",{"_index":2113,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["computedisplayeddates",{"_index":1171,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config",{"_index":1182,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config:string,lightcard:lightcard):string",{"_index":1217,"title":{},"body":{"components/CardComponent.html":{}}}],["computednow",{"_index":3276,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetduration",{"_index":3323,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetinmilliseconds",{"_index":3320,"title":{},"body":{"classes/TimeReference.html":{}}}],["computelistvalidators",{"_index":2423,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["computemultivalidators",{"_index":2607,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["computenow",{"_index":3270,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow",{"_index":3285,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow:moment.moment):moment.moment",{"_index":3301,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow",{"_index":3288,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow:number|moment.moment):moment.moment",{"_index":3302,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow",{"_index":3281,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow:number):moment.moment",{"_index":3300,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment",{"_index":3271,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment(realnowmoment",{"_index":3291,"title":{},"body":{"classes/TimeReference.html":{}}}],["computeredirecturi",{"_index":882,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["computetextvalidators",{"_index":1802,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["computethirdcssurl",{"_index":3024,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["computethirdcssurl(publisher",{"_index":2940,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["computethirdsmenu",{"_index":2963,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["conf",{"_index":3136,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["config",{"_index":562,"title":{},"body":{"interfaces/AppState.html":{},"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["config:any",{"_index":1531,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["config_load_max_retries",{"_index":1510,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["configactions",{"_index":2089,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["configactiontypes",{"_index":1022,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configactiontypes.handleunexpectederror",{"_index":2085,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfig",{"_index":2086,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigfailure",{"_index":2087,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigsuccess",{"_index":2088,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configeffects",{"_index":622,"title":{"injectables/ConfigEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["configinitialstate",{"_index":1532,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["configloaded",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["configreducer",{"_index":599,"title":{},"body":{"interfaces/AppState.html":{}}}],["configservice",{"_index":1490,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["configstate",{"_index":567,"title":{"interfaces/ConfigState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ConfigState.html":{}}}],["configtags",{"_index":1901,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configtags.length",{"_index":1902,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configuration",{"_index":1208,"title":{},"body":{"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configurl",{"_index":1520,"title":{},"body":{"injectables/ConfigService.html":{}}}],["confirm",{"_index":896,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["confzoom",{"_index":3137,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["connection",{"_index":768,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["consequence",{"_index":947,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consist",{"_index":1289,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["console.error('something",{"_index":3019,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.error(`error",{"_index":1442,"title":{},"body":{"injectables/CardService.html":{}}}],["console.error(`i18",{"_index":2414,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["console.error(err",{"_index":973,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["console.error(error",{"_index":811,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/TimeEffects.html":{}}}],["console.error(message",{"_index":1045,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log('textsettingcomponent.isequal",{"_index":2453,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["console.log('timeline",{"_index":3242,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["console.log(`location",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`this",{"_index":1664,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(err",{"_index":2932,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["const",{"_index":178,"title":{},"body":{"classes/Action.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{}}}],["constructor(access_token",{"_index":679,"title":{},"body":{"classes/AuthObject.html":{}}}],["constructor(authenticationservice",{"_index":3367,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["constructor(details",{"_index":2792,"title":{},"body":{"classes/State.html":{}}}],["constructor(element",{"_index":1620,"title":{},"body":{"components/DetailComponent.html":{}}}],["constructor(formbuilder",{"_index":2824,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["constructor(funktion",{"_index":1987,"title":{},"body":{"classes/Filter.html":{}}}],["constructor(httpclient",{"_index":1390,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"injectables/ThirdsService.html":{}}}],["constructor(id",{"_index":2873,"title":{},"body":{"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["constructor(identifier",{"_index":2690,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["constructor(key",{"_index":2257,"title":{},"body":{"classes/I18n.html":{}}}],["constructor(label",{"_index":2682,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["constructor(login",{"_index":3456,"title":{},"body":{"classes/User.html":{}}}],["constructor(message",{"_index":2562,"title":{},"body":{"classes/Message.html":{}}}],["constructor(name",{"_index":2865,"title":{},"body":{"classes/Third.html":{}}}],["constructor(payload",{"_index":41,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/UpdateTimeReference.html":{}}}],["constructor(platformlocation",{"_index":2299,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(platformlocation:platformlocation",{"_index":2321,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(private",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{}}}],["constructor(protected",{"_index":1105,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["constructor(public",{"_index":77,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["constructor(readonly",{"_index":3298,"title":{},"body":{"classes/TimeReference.html":{}}}],["constructor(referencetime",{"_index":3274,"title":{},"body":{"classes/TimeReference.html":{}}}],["constructor(router",{"_index":1176,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(startdate",{"_index":3345,"title":{},"body":{"classes/TimeSpan.html":{}}}],["constructor(states",{"_index":2698,"title":{},"body":{"classes/Process.html":{}}}],["constructor(store",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["constructor(sub",{"_index":1473,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["constructor(thirdsservice",{"_index":2889,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["constructor(time",{"_index":2155,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["constructor(titleposition",{"_index":1608,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(translate",{"_index":2263,"title":{},"body":{"injectables/I18nService.html":{}}}],["constructor(type",{"_index":143,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{}}}],["constructor(uid",{"_index":1146,"title":{},"body":{"classes/Card.html":{}}}],["constructor(url",{"_index":2703,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["consume",{"_index":131,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["contain",{"_index":3169,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["containing",{"_index":30,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["contains",{"_index":744,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["content",{"_index":746,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["contentchildren",{"_index":1727,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentchildren(detailcomponent",{"_index":1724,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentstyle",{"_index":150,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["control",{"_index":2431,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["convert",{"_index":824,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(payload",{"_index":857,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["convert(value",{"_index":1076,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(value:any):any",{"_index":1136,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["convertspeedintoenum",{"_index":3272,"title":{},"body":{"classes/TimeReference.html":{}}}],["convertspeedintoenum(key",{"_index":3294,"title":{},"body":{"classes/TimeReference.html":{}}}],["copy",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["copyright",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["core",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["correctly",{"_index":775,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["corresponding",{"_index":892,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/MenuEffects.html":{},"injectables/TimeEffects.html":{}}}],["create",{"_index":28,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["createentityadapter",{"_index":1307,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["createformgroup",{"_index":2823,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["css",{"_index":1659,"title":{},"body":{"components/DetailComponent.html":{},"directives/DraggableDirective.html":{}}}],["csses",{"_index":2867,"title":{},"body":{"classes/Third.html":{}}}],["csses?:string",{"_index":171,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["cssurl",{"_index":1654,"title":{},"body":{"components/DetailComponent.html":{}}}],["current",{"_index":88,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["currentdate",{"_index":3353,"title":{},"body":{"interfaces/TimeState.html":{}}}],["currentlang",{"_index":3010,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["currently",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["currentpath",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["currenttimereference",{"_index":3078,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["custom",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["customroutereffects",{"_index":609,"title":{"injectables/CustomRouterEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["customrouterstateserializer",{"_index":1573,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["customtimelinechartcomponent",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dark",{"_index":1700,"title":{},"body":{"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["dark:boolean",{"_index":2316,"title":{},"body":{"components/IconComponent.html":{}}}],["data",{"_index":232,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/InitTimeline.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":83,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["date().valueof",{"_index":1421,"title":{},"body":{"injectables/CardService.html":{}}}],["date(+localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":854,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(0",{"_index":909,"title":{},"body":{"interfaces/AuthState.html":{}}}],["date(expirationdate",{"_index":866,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(minus2hour.valueof()+48*60*60*1000",{"_index":1424,"title":{},"body":{"injectables/CardService.html":{}}}],["date(new",{"_index":1420,"title":{},"body":{"injectables/CardService.html":{}}}],["date(value",{"_index":2235,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["date.date(16",{"_index":3266,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.format('d",{"_index":3499,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format('dd",{"_index":3497,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format('ddd",{"_index":3481,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format('hh",{"_index":3487,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hours",{"_index":3496,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.minutes(0).seconds(0).millisecond(0",{"_index":3260,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.now",{"_index":860,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date.startof('month",{"_index":3262,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.subtract(1",{"_index":3263,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.subtract(2",{"_index":3267,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.valueof",{"_index":3494,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datepipe",{"_index":3490,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datetodisplay",{"_index":1170,"title":{},"body":{"components/CardComponent.html":{}}}],["datewithspacebeforemoment",{"_index":3138,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["datewithspacebeforemoment(date",{"_index":3140,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["day",{"_index":3165,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["days",{"_index":3183,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dd",{"_index":3482,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["deactivate",{"_index":1739,"title":{},"body":{"components/DetailsComponent.html":{}}}],["debounce",{"_index":1101,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["debouncetime",{"_index":3158,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["debug",{"_index":2566,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["decode",{"_index":698,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["decodetoken(token",{"_index":889,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["decoration",{"_index":2674,"title":{},"body":{"components/NavbarComponent.html":{}}}],["decorators",{"_index":939,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["deep",{"_index":2851,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["default",{"_index":49,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["default:return",{"_index":1223,"title":{},"body":{"components/CardComponent.html":{}}}],["defaultfilters",{"_index":2020,"title":{},"body":{"injectables/FilterService.html":{}}}],["defined",{"_index":43,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["defines",{"_index":782,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delay",{"_index":1505,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delay(this.retrydelay",{"_index":1518,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delegateurl",{"_index":716,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delete",{"_index":1789,"title":{},"body":{"directives/DraggableDirective.html":{},"miscellaneous/enumerations.html":{}}}],["delta",{"_index":2596,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dentifier",{"_index":848,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["dependencies",{"_index":462,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"directives/MouseWheelDirective.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["deserializable",{"_index":745,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["desired",{"_index":2816,"title":{},"body":{"modules/StateModule.html":{}}}],["detail",{"_index":160,"title":{"classes/Detail.html":{}},"body":{"classes/Action.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detail'},{'name",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["detail.active",{"_index":1742,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.component.html",{"_index":1611,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.component",{"_index":1728,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailcomponent",{"_index":416,"title":{"components/DetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["details",{"_index":1157,"title":{},"body":{"classes/Card.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"classes/State.html":{}}}],["details'},{'name",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["details.component",{"_index":1467,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details.component.html",{"_index":1251,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details.component.ts",{"_index":1250,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":1255,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1253,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1254,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/:did",{"_index":1966,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["details/card",{"_index":1249,"title":{},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details?:detail",{"_index":192,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detailscomponent",{"_index":418,"title":{"components/DetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["devtools",{"_index":2801,"title":{},"body":{"modules/StateModule.html":{},"dependencies.html":{}}}],["different",{"_index":3151,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["directive",{"_index":397,"title":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["directives",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dispatch",{"_index":1063,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdateTimeReference.html":{}}}],["dispatch(value",{"_index":1078,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dispatch(value:any",{"_index":1137,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["display",{"_index":986,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/InfoComponent.html":{},"components/TagsFilterComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["display.bubble",{"_index":3351,"title":{},"body":{"classes/TimeSpan.html":{}}}],["distinctuntilchanged",{"_index":1102,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged((forma",{"_index":1122,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distributed",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["document.getelementbyid('${svguid}').addeventlistener('load",{"_index":2229,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["doesn't",{"_index":3310,"title":{},"body":{"classes/TimeReference.html":{}}}],["dom",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["domain",{"_index":3144,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dommousescroll",{"_index":2574,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dommousescroll(event",{"_index":2578,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["domsanitizer",{"_index":1625,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["done",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["dow",{"_index":3163,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["down",{"_index":1162,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["doy",{"_index":3166,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["drag",{"_index":1767,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragend",{"_index":1752,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragevent",{"_index":1799,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable",{"_index":1951,"title":{},"body":{"modules/FeedModule.html":{}}}],["draggable.ts",{"_index":1748,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:11",{"_index":1775,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:18",{"_index":1766,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:28",{"_index":1770,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:40",{"_index":1773,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:7",{"_index":1762,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:8",{"_index":1761,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:9",{"_index":1760,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggabledirective",{"_index":454,"title":{"directives/DraggableDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dragging",{"_index":1750,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragmove",{"_index":1753,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragstart",{"_index":1754,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dropdown",{"_index":2664,"title":{},"body":{"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dropdown]=\"tmenu.entries.length>1",{"_index":2657,"title":{},"body":{"components/NavbarComponent.html":{}}}],["duration",{"_index":3318,"title":{},"body":{"classes/TimeReference.html":{}}}],["duration.asmilliseconds",{"_index":3321,"title":{},"body":{"classes/TimeReference.html":{}}}],["during",{"_index":1301,"title":{},"body":{"interfaces/CardFeedState.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interfaces/TimelineState.html":{}}}],["dynamic",{"_index":3508,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":3149,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["effect",{"_index":940,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["effects",{"_index":1286,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodule",{"_index":2799,"title":{},"body":{"modules/StateModule.html":{}}}],["effectsmodule.forroot(appeffects",{"_index":2808,"title":{},"body":{"modules/StateModule.html":{}}}],["element",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["elementref",{"_index":1621,"title":{},"body":{"components/DetailComponent.html":{}}}],["email",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emailsettingcomponent",{"_index":419,"title":{"components/EmailSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["emit",{"_index":945,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["emitevent",{"_index":2452,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["emits",{"_index":1005,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emitted",{"_index":14,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["emittedby",{"_index":982,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emmited",{"_index":119,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["empty",{"_index":228,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["emptylightcards",{"_index":227,"title":{"classes/EmptyLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["emptylightcards(),new",{"_index":1013,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["enabledrag",{"_index":3216,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enabletracing",{"_index":557,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enablezoom",{"_index":3217,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["encoding",{"_index":2943,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["end",{"_index":1774,"title":{},"body":{"directives/DraggableDirective.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["enddate",{"_index":1151,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddomain",{"_index":3177,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.add(1",{"_index":3179,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.add(5",{"_index":3184,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.add(7",{"_index":3182,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":3181,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.startof('week",{"_index":3180,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.valueof",{"_index":3226,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2",{"_index":3194,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.add(1",{"_index":3199,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.add(2",{"_index":3197,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.date(15",{"_index":3200,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.startof('month",{"_index":3196,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.valueof",{"_index":3233,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3",{"_index":3205,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.add(1",{"_index":3213,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.add(2",{"_index":3207,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.month(10",{"_index":3214,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.startof('year",{"_index":3209,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.valueof",{"_index":3235,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4",{"_index":3187,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4.add(8",{"_index":3190,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":3189,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4.valueof",{"_index":3230,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["entire",{"_index":1592,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["entities",{"_index":252,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{}}}],["entityadapter",{"_index":1308,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entitystate",{"_index":1290,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entries",{"_index":190,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["entry",{"_index":1570,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.id",{"_index":2928,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["enum",{"_index":58,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["enumerations",{"_index":3539,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":535,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{}}}],["environment",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"index.html":{}}}],["environment.production",{"_index":635,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["environment.urls.auth}/check_token",{"_index":707,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/code/redirect_uri=${authenticationservice.computeredirecturi",{"_index":880,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/token",{"_index":710,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.cards}/cards",{"_index":1417,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cardsubscription?clientid=${clientid",{"_index":1415,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.config",{"_index":1528,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.urls.thirds",{"_index":2907,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["environment.urls.users",{"_index":2785,"title":{},"body":{"injectables/SettingsService.html":{}}}],["environment.urls.users}/users",{"_index":712,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environments/environment",{"_index":2894,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["err",{"_index":975,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["error",{"_index":126,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"interfaces/ConfigState.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["error('no",{"_index":2931,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["error(`unhandled",{"_index":1369,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["error.tostring",{"_index":1445,"title":{},"body":{"injectables/CardService.html":{}}}],["error:null",{"_index":2560,"title":{},"body":{"interfaces/MenuState.html":{}}}],["error:string",{"_index":2558,"title":{},"body":{"interfaces/MenuState.html":{}}}],["errormsg",{"_index":933,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse",{"_index":930,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.message",{"_index":1044,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.status",{"_index":1034,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["es",{"_index":1444,"title":{},"body":{"injectables/CardService.html":{}}}],["evaluate",{"_index":1976,"title":{},"body":{"classes/Filter.html":{}}}],["event",{"_index":1409,"title":{},"body":{"injectables/CardService.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"dependencies.html":{}}}],["event.detail",{"_index":2600,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["event.wheeldelta",{"_index":2599,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["eventemitter",{"_index":1759,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["eventsource",{"_index":1395,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.close",{"_index":1449,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.closed",{"_index":1448,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onerror",{"_index":1441,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onmessage",{"_index":1438,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.readystate",{"_index":1447,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsourcepolyfill",{"_index":1393,"title":{},"body":{"injectables/CardService.html":{}}}],["example",{"_index":2109,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"directives/MouseWheelDirective.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/TimeLineComponent.html":{}}}],["examples/blob/master/app/mousewheeldirective/mousewheel.directive.ts",{"_index":2570,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["executetemplate",{"_index":2139,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["executetemplate(templatename",{"_index":2157,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["exist",{"_index":3311,"title":{},"body":{"classes/TimeReference.html":{}}}],["exists",{"_index":89,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["exp",{"_index":737,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expandedmenu",{"_index":2619,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedmenu:boolean",{"_index":2639,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu",{"_index":2620,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu=false",{"_index":2640,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expiration",{"_index":818,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["expirationdate",{"_index":82,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["expireclaim",{"_index":715,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expired",{"_index":969,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["expires_in",{"_index":678,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["export",{"_index":57,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["exports",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{}}}],["extended",{"_index":231,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["extends",{"_index":1306,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["external",{"_index":194,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":813,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["extractidentificationinformation",{"_index":849,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["extractparams",{"_index":1576,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["extractparams(state",{"_index":1578,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["extractstate",{"_index":2864,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card",{"_index":2871,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card:card):state",{"_index":175,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extracttoken",{"_index":815,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["f5",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":1698,"title":{},"body":{"components/DetailComponent.html":{}}}],["faclock",{"_index":1938,"title":{},"body":{"modules/FeedModule.html":{}}}],["faexternallinkalt",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":234,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":2415,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["failtoupdatetimereference",{"_index":1838,"title":{"classes/FailToUpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["failtoupdatetimereference='[time",{"_index":1859,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["failure",{"_index":2103,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["false",{"_index":197,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["fasignoutalt",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["fctargs[fctargs.length",{"_index":2228,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["feed",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"miscellaneous/enumerations.html":{}}}],["feed.component",{"_index":1924,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":1870,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":1869,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.filters.time.end.label",{"_index":3131,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.start.label",{"_index":3130,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.title",{"_index":3132,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.type.action.label",{"_index":3437,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.alarm.label",{"_index":3436,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.notification.label",{"_index":3439,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.question.label",{"_index":3438,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.title",{"_index":3440,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feedactions",{"_index":657,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["feedactiontypes",{"_index":649,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["feedactiontypes.applyfilter",{"_index":644,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.initfilter",{"_index":655,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedcomponent",{"_index":421,"title":{"components/FeedComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["feedfilterseffects",{"_index":618,"title":{"injectables/FeedFiltersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/FeedFiltersEffects.html":{}}}],["feedinitialstate",{"_index":1332,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["feedmodule",{"_index":1915,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["feedroutingmodule",{"_index":1921,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["feedselectors",{"_index":1877,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["fetch",{"_index":1207,"title":{},"body":{"components/CardComponent.html":{}}}],["fetchcardoperation",{"_index":1386,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation(eventsource",{"_index":1392,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchconfiguration",{"_index":1521,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetchhbstemplate",{"_index":3025,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchhbstemplate(publisher",{"_index":2936,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchi18njson",{"_index":3026,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchi18njson(publisher",{"_index":2949,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchthird",{"_index":3027,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchthird(publisher",{"_index":2917,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchusersettings",{"_index":2777,"title":{},"body":{"injectables/SettingsService.html":{}}}],["field",{"_index":2850,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["fill",{"_index":2342,"title":{},"body":{"components/IconComponent.html":{}}}],["filter",{"_index":452,"title":{"classes/Filter.html":{}},"body":{"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filter$(filter",{"_index":3415,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter'},{'name",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter(()=>this.form.valid",{"_index":1121,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["filter(([action",{"_index":1517,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["filter((action",{"_index":1540,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["filter((af:applyfilter)=>af.payload.name",{"_index":1376,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["filter((t:third)=>!(!t.menuentries",{"_index":2966,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter((third",{"_index":2924,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter(v=>!!v",{"_index":1905,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter.component",{"_index":1935,"title":{},"body":{"modules/FeedModule.html":{}}}],["filter.component.html",{"_index":2820,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.scss",{"_index":2819,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts",{"_index":2818,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:26",{"_index":3108,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:27",{"_index":3107,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":2831,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":2830,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":2826,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":3414,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":3103,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":3410,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:36",{"_index":2829,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":3105,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:44",{"_index":3411,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:45",{"_index":3106,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:53",{"_index":3412,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":3413,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:64",{"_index":2828,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:69",{"_index":2827,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:90",{"_index":3104,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.model",{"_index":646,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.model.ts",{"_index":1968,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:22",{"_index":1989,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:27",{"_index":1990,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:28",{"_index":1991,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:32",{"_index":2004,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:43",{"_index":1993,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:56",{"_index":1996,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:67",{"_index":2001,"title":{},"body":{"classes/Filter.html":{}}}],["filter/tags",{"_index":1955,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["filter/time",{"_index":1937,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["filter/type",{"_index":1934,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["filtered",{"_index":1906,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["filtering",{"_index":31,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["filters",{"_index":1303,"title":{},"body":{"interfaces/CardFeedState.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{}}}],["filters'},{'name",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filters.component.html",{"_index":2067,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.effects",{"_index":620,"title":{},"body":{"interfaces/AppState.html":{}}}],["filters.effects.ts",{"_index":1888,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:21",{"_index":1892,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:30",{"_index":1912,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:40",{"_index":1909,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.set(filtertype.recipient_filter",{"_index":2055,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.tag_filter",{"_index":2059,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.time_filter",{"_index":2057,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.type_filter",{"_index":2053,"title":{},"body":{"injectables/FilterService.html":{}}}],["filterscomponent",{"_index":423,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["filterservice",{"_index":1891,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["filtertype",{"_index":647,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtertype.tag_filter",{"_index":2847,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filtertype.time_filter",{"_index":1377,"title":{},"body":{"injectables/CardOperationEffects.html":{},"components/TimeFilterComponent.html":{}}}],["filtertype.type_filter",{"_index":3431,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["fires",{"_index":1566,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["firing",{"_index":1356,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["first",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/DetailsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["firstname",{"_index":906,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{}}}],["firstname:string",{"_index":3459,"title":{},"body":{"classes/User.html":{}}}],["firstname?:string",{"_index":84,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["flow",{"_index":772,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["followcloacktick",{"_index":3228,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["following",{"_index":16,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["font",{"_index":1236,"title":{},"body":{"components/CardComponent.html":{},"components/InfoComponent.html":{}}}],["fontawesome",{"_index":508,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":506,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["form",{"_index":107,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["form.action",{"_index":3433,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.alarm",{"_index":3432,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.end",{"_index":3127,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.notification",{"_index":3435,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.question",{"_index":3434,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.start",{"_index":3126,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.tags.length>0",{"_index":2848,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["forma",{"_index":1085,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["forma.setting",{"_index":2454,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["format",{"_index":3473,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe",{"_index":1948,"title":{},"body":{"modules/FeedModule.html":{}}}],["format.pipe.ts",{"_index":3462,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:13",{"_index":3478,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:38",{"_index":3471,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:53",{"_index":3466,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatted",{"_index":3467,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatter",{"_index":2239,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatter.format(value",{"_index":2242,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatting",{"_index":3474,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formb",{"_index":1083,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formb):boolean",{"_index":1142,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formb.setting",{"_index":2455,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formbuilder",{"_index":2825,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formbuilder,private",{"_index":2833,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formcontrol",{"_index":2434,"title":{},"body":{"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formcontrol([],validators",{"_index":2613,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["formcontrol(null,validators",{"_index":2860,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["formdata",{"_index":751,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["formgroup",{"_index":1081,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["forms",{"_index":1600,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["formsmodule",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["forroot",{"_index":1462,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["fortawesome/angular",{"_index":507,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["forwardlevel",{"_index":3227,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["found",{"_index":2116,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["france.com",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["freeze",{"_index":583,"title":{},"body":{"interfaces/AppState.html":{}}}],["from(_.difference(work",{"_index":2995,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["from(cards).pipe",{"_index":2976,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["from(menus).pipe",{"_index":2982,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fromrouter",{"_index":574,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromrouter.routerreducer",{"_index":633,"title":{},"body":{"interfaces/AppState.html":{}}}],["full",{"_index":1964,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["function",{"_index":25,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["function(a,b",{"_index":2250,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["function(lvalue",{"_index":2217,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["funktion",{"_index":1974,"title":{},"body":{"classes/Filter.html":{}}}],["futur",{"_index":897,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["future",{"_index":903,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["g",{"_index":2247,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["gather",{"_index":1969,"title":{},"body":{"classes/Filter.html":{}}}],["generating",{"_index":769,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["gently",{"_index":552,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getcardoperation",{"_index":1387,"title":{},"body":{"injectables/CardService.html":{}}}],["getcurrentguid",{"_index":2071,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring",{"_index":2072,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring():string",{"_index":2078,"title":{},"body":{"classes/GuidService.html":{}}}],["getdescription",{"_index":2372,"title":{},"body":{"components/InfoComponent.html":{}}}],["getfilter",{"_index":3109,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["gethtmlcontent",{"_index":1643,"title":{},"body":{"components/DetailComponent.html":{}}}],["geti18nprefix",{"_index":1191,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["getitem",{"_index":852,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getlocale",{"_index":2268,"title":{},"body":{"injectables/I18nService.html":{}}}],["getroutepe",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["getsecurityheader",{"_index":872,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getselectediframeurl",{"_index":2352,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getthirdmenus",{"_index":2636,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gettime",{"_index":2374,"title":{},"body":{"components/InfoComponent.html":{}}}],["gettimezone",{"_index":2270,"title":{},"body":{"injectables/I18nService.html":{}}}],["gettranslation",{"_index":2888,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["gettranslation(lang",{"_index":2891,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["getusername",{"_index":2370,"title":{},"body":{"components/InfoComponent.html":{}}}],["given",{"_index":767,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["gives",{"_index":741,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["graph",{"_index":3568,"title":{},"body":{"modules.html":{}}}],["guid",{"_index":53,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["guid.create",{"_index":2077,"title":{},"body":{"classes/GuidService.html":{}}}],["guid.parse(localstorage.getitem(localstorageauthcontent.clientid",{"_index":851,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["guidservice",{"_index":693,"title":{"classes/GuidService.html":{}},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"modules/ServicesModule.html":{}}}],["guillaume",{"_index":3212,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["h",{"_index":3485,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["half",{"_index":3338,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["handle",{"_index":246,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":1623,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"dependencies.html":{}}}],["handlebars.registerhelper(\"math",{"_index":2216,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper(\"preservespace",{"_index":2245,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('action",{"_index":2231,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindex",{"_index":2221,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindexlength",{"_index":2211,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('bool",{"_index":2206,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('dateformat",{"_index":2232,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('now",{"_index":2243,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('numberformat",{"_index":2238,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('slice",{"_index":2223,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('sort",{"_index":2227,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('split",{"_index":2213,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars/dist/handlebars.js",{"_index":2175,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebarsservice",{"_index":1460,"title":{"injectables/HandlebarsService.html":{}},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"index.html":{}}}],["handledate",{"_index":1172,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp",{"_index":1184,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp:number):string",{"_index":1225,"title":{},"body":{"components/CardComponent.html":{}}}],["handleerror(error",{"_index":810,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handleerrorontokengeneration",{"_index":914,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse",{"_index":927,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse,category:string",{"_index":1031,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleloginattempt",{"_index":23,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handleloginattempt(payload",{"_index":1049,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handlenewtoken(call",{"_index":792,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handlerejectedlogin",{"_index":121,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handlerejectedlogin(errormsg",{"_index":931,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleunexpectederror",{"_index":245,"title":{"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["handleunexpectederror({error",{"_index":1373,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["handling",{"_index":1704,"title":{},"body":{"components/DetailComponent.html":{}}}],["hashlocationstrategy",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["header",{"_index":871,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/TypeFilterComponent.html":{}}}],["headers",{"_index":754,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["headers}).pipe",{"_index":763,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["heart",{"_index":1860,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["heartbeat",{"_index":3079,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["heartbeattimeout",{"_index":1434,"title":{},"body":{"injectables/CardService.html":{}}}],["height",{"_index":3445,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["helper",{"_index":855,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["here",{"_index":1426,"title":{},"body":{"injectables/CardService.html":{}}}],["hh",{"_index":3484,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hidden",{"_index":147,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hide",{"_index":2491,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidetimeline",{"_index":1871,"title":{},"body":{"components/FeedComponent.html":{}}}],["hostlistener",{"_index":1776,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["hostlistener('document:dragstart",{"_index":1797,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('dommousescroll",{"_index":2591,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('mousewheel",{"_index":2588,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('onmousewheel",{"_index":2593,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('pointerdown",{"_index":1778,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointermove",{"_index":1782,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointerup",{"_index":1785,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlisteners",{"_index":1755,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["hours",{"_index":3475,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["href",{"_index":1658,"title":{},"body":{"components/DetailComponent.html":{}}}],["hrefsofcsslink",{"_index":1613,"title":{},"body":{"components/DetailComponent.html":{}}}],["html",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["htmlbuttonelement",{"_index":1630,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlcontent",{"_index":1619,"title":{},"body":{"components/DetailComponent.html":{}}}],["http",{"_index":870,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["http://www.rte",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["http_interceptors",{"_index":2720,"title":{},"body":{"modules/ServicesModule.html":{}}}],["httpcall",{"_index":2951,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpclient",{"_index":687,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpclient:httpclient",{"_index":1411,"title":{},"body":{"injectables/CardService.html":{}}}],["httpclientmodule",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":3375,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httphandler",{"_index":3373,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpheaders",{"_index":688,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpheaders({'content",{"_index":755,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpinterceptor",{"_index":3376,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpparams",{"_index":1525,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('version',version",{"_index":2947,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httprequest",{"_index":3370,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["https://github.com/briebug/ngrx",{"_index":1599,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["https://github.com/sodhanalibrary/angular2",{"_index":2569,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["httpurlencodingcodec",{"_index":1526,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["i18n",{"_index":146,"title":{"classes/I18n.html":{}},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/I18n.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["i18n('login.error.token.expiration",{"_index":970,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.token.invalid",{"_index":963,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.unexpected",{"_index":977,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('time.error",{"_index":3094,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18n(key",{"_index":1048,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18nlabelkey",{"_index":169,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nparameters",{"_index":3092,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nparameters['message",{"_index":3093,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nprefix",{"_index":1175,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["i18nprefix+detailc.detail.title.key",{"_index":1745,"title":{},"body":{"components/DetailsComponent.html":{}}}],["i18nprefix+lightcard.summary.key",{"_index":1229,"title":{},"body":{"components/CardComponent.html":{}}}],["i18nprefix+lightcard.title.key",{"_index":1227,"title":{},"body":{"components/CardComponent.html":{}}}],["i18nservice",{"_index":291,"title":{"injectables/I18nService.html":{}},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["i18nservice:i18nservice",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":2292,"title":{},"body":{"components/IconComponent.html":{}}}],["icon'},{'name",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["icon.component.html",{"_index":2294,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":2293,"title":{},"body":{"components/IconComponent.html":{}}}],["icon:string",{"_index":2312,"title":{},"body":{"components/IconComponent.html":{}}}],["iconcomponent",{"_index":425,"title":{"components/IconComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iconpath",{"_index":2295,"title":{},"body":{"components/IconComponent.html":{}}}],["iconpath:string",{"_index":2320,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":516,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["id",{"_index":188,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{}}}],["id'].nodevalue",{"_index":1686,"title":{},"body":{"components/DetailComponent.html":{}}}],["id.split",{"_index":2999,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["id:string",{"_index":185,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["identifier",{"_index":78,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["identifying",{"_index":1569,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["ids",{"_index":2989,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ids.push(id",{"_index":2988,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(!!control.value",{"_index":2456,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["if(!!next.status.end",{"_index":3119,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!next.status.start",{"_index":3114,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!state",{"_index":1687,"title":{},"body":{"components/DetailComponent.html":{}}}],["if(!this.delegateurl",{"_index":878,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["if(!this.form",{"_index":1108,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["if(a[key]b[key",{"_index":2255,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(action.payload.settings.defaulttags",{"_index":1898,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(card",{"_index":1262,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["if(card.details",{"_index":1263,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["if(card.process",{"_index":176,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(card.state",{"_index":180,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(changes['card'].currentvalue",{"_index":1743,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(entry.length==1",{"_index":2929,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(i",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["if(ismoment(realnow",{"_index":3303,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(locale",{"_index":2283,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(result",{"_index":1328,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(result==0",{"_index":1326,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(template",{"_index":2201,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(third",{"_index":2912,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(this.active",{"_index":2012,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.applyfilter(card",{"_index":2014,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.dark||this.light",{"_index":2337,"title":{},"body":{"components/IconComponent.html":{}}}],["if(this.expandedmenu[index",{"_index":2650,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.expandedusermenu",{"_index":2653,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.isvirtualtimeundefine",{"_index":3326,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(this.speed",{"_index":3313,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(timezone",{"_index":2287,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(typeof",{"_index":2251,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(url",{"_index":1202,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["iframe_url",{"_index":2115,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["iframedisplay",{"_index":2344,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay'},{'name",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["iframedisplay.component",{"_index":2882,"title":{},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["iframedisplay.component.html",{"_index":2346,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay.component.scss",{"_index":2345,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplaycomponent",{"_index":427,"title":{"components/IframeDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iframeurl",{"_index":2357,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["ignore",{"_index":92,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}}}],["implementation",{"_index":1980,"title":{},"body":{"classes/Filter.html":{}}}],["implemented",{"_index":1705,"title":{},"body":{"components/DetailComponent.html":{}}}],["implementing",{"_index":921,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["implements",{"_index":34,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["imports",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["include",{"_index":2815,"title":{},"body":{"modules/StateModule.html":{}}}],["incorrect",{"_index":1835,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":2530,"title":{},"body":{"classes/Map.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["info.component.html",{"_index":2362,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":2361,"title":{},"body":{"components/InfoComponent.html":{}}}],["infocomponent",{"_index":429,"title":{"components/InfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["information",{"_index":13,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["informatios",{"_index":836,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["inherit",{"_index":2673,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inheritance",{"_index":1982,"title":{},"body":{"classes/Filter.html":{}}}],["inherited",{"_index":1805,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["iniitialized",{"_index":877,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["init",{"_index":61,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initauthstatus",{"_index":60,"title":{"classes/InitAuthStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initauthstatus({code:window.location.href.substring(i",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["initchartcomponent",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["initfilter",{"_index":651,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["initfilters",{"_index":654,"title":{"classes/InitFilters.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["initfilters({filters:this.service.defaultfilters",{"_index":1911,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["initformgroup",{"_index":1064,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["initformgroup():formgroup",{"_index":1135,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["initialized",{"_index":776,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["initializehandlebarstemplates",{"_index":1616,"title":{},"body":{"components/DetailComponent.html":{}}}],["initializehrefsofcsslink",{"_index":1617,"title":{},"body":{"components/DetailComponent.html":{}}}],["initialstate",{"_index":638,"title":{},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["initrecipientfilter",{"_index":2021,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilter",{"_index":2022,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilteronloadedsettings",{"_index":1889,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["inittimefilter",{"_index":2023,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimeline",{"_index":2393,"title":{"classes/InitTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["inittypefilter",{"_index":2024,"title":{},"body":{"injectables/FilterService.html":{}}}],["inject",{"_index":1504,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/GuidService.html":{}}}],["inject('configretrydelay",{"_index":1511,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["injectable",{"_index":686,"title":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interceptors/TokenInjector.html":{}}}],["injectables",{"_index":910,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"index.html":{}}}],["injected",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["injector",{"_index":1524,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["inline",{"_index":2388,"title":{},"body":{"components/InfoComponent.html":{}}}],["input",{"_index":152,"title":{"classes/Input.html":{}},"body":{"classes/Action.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["input[0",{"_index":3000,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["input[1",{"_index":3001,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["inputs",{"_index":151,"title":{},"body":{"classes/Action.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["inputtype",{"_index":198,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["inside",{"_index":1791,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["instance",{"_index":856,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["instanceof",{"_index":3489,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["instanciate",{"_index":1111,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["instanciation",{"_index":1981,"title":{},"body":{"classes/Filter.html":{}}}],["instantiate",{"_index":1657,"title":{},"body":{"components/DetailComponent.html":{}}}],["intercept",{"_index":3366,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercept(request",{"_index":3372,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercepted",{"_index":1429,"title":{},"body":{"injectables/CardService.html":{}}}],["interceptor",{"_index":1430,"title":{"interceptors/TokenInjector.html":{}},"body":{"injectables/CardService.html":{}}}],["interceptors",{"_index":3363,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["interceptors.service",{"_index":2721,"title":{},"body":{"modules/ServicesModule.html":{}}}],["interface",{"_index":559,"title":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{}}}],["interfaces",{"_index":560,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"index.html":{}}}],["internal",{"_index":2671,"title":{},"body":{"components/NavbarComponent.html":{}}}],["intl.datetimeformat().resolvedoptions().timezone",{"_index":2289,"title":{},"body":{"injectables/I18nService.html":{}}}],["intl.numberformat(this.translate.getbrowserlang",{"_index":2240,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["invalid",{"_index":743,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["isauth",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["isequal",{"_index":1065,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isequal(forma",{"_index":1082,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isexpirationdateover",{"_index":831,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["isinthefuture(expirationdate",{"_index":829,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture(time",{"_index":904,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ismoment",{"_index":3297,"title":{},"body":{"classes/TimeReference.html":{}}}],["isnan(expirationdate",{"_index":827,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isnotanumber",{"_index":826,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["issue",{"_index":249,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["istanbul",{"_index":91,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{}}}],["isused",{"_index":853,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isvirtualtimeundefine",{"_index":3273,"title":{},"body":{"classes/TimeReference.html":{}}}],["it's",{"_index":980,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["item",{"_index":2665,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":1597,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["january",{"_index":3170,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["jnlp",{"_index":195,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["js",{"_index":3521,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":697,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["jwt.expire",{"_index":736,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt.login",{"_index":732,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt[this.expireclaim",{"_index":861,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode",{"_index":696,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode(token",{"_index":890,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["keep",{"_index":1352,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["key",{"_index":1032,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Map.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeReference.html":{}}}],["label",{"_index":145,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label1",{"_index":3062,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label2",{"_index":3065,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label3",{"_index":3070,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["lang",{"_index":2893,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["langs",{"_index":3009,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["languagetag",{"_index":3488,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["large",{"_index":2812,"title":{},"body":{"modules/StateModule.html":{}}}],["larger",{"_index":1241,"title":{},"body":{"components/CardComponent.html":{}}}],["last",{"_index":1294,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastcards",{"_index":1293,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastname",{"_index":907,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{}}}],["lastname:string",{"_index":3460,"title":{},"body":{"classes/User.html":{}}}],["lastname?:string",{"_index":85,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["later",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["latest",{"_index":1896,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["lcard",{"_index":225,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["left",{"_index":2668,"title":{},"body":{"components/NavbarComponent.html":{}}}],["legend",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["less",{"_index":3358,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["level",{"_index":2563,"title":{},"body":{"classes/Message.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["library",{"_index":509,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["library.add(faclock",{"_index":1957,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(faexternallinkalt",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add(fasignoutalt",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["light",{"_index":240,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"components/IconComponent.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["light:boolean",{"_index":2317,"title":{},"body":{"components/IconComponent.html":{}}}],["lightcard",{"_index":220,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcard):boolean",{"_index":2011,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard,any",{"_index":2005,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard.id",{"_index":1354,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcardactions",{"_index":264,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardactiontypes",{"_index":223,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcardactiontypes.addlightcardfailure",{"_index":219,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.clearlightcardselection",{"_index":261,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.emptylightcards",{"_index":254,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.handleunexpectederror",{"_index":263,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcards",{"_index":253,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsextendeddata",{"_index":257,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsfailure",{"_index":258,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardssuccess",{"_index":255,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.selectlightcard",{"_index":259,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatedsubscription",{"_index":262,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardadapter",{"_index":1330,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardadapter.getinitialstate",{"_index":1333,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardeffects",{"_index":615,"title":{"injectables/LightCardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/LightCardEffects.html":{}}}],["lightcardreducer",{"_index":594,"title":{},"body":{"interfaces/AppState.html":{}}}],["lightcards",{"_index":256,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcards.filter",{"_index":1350,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcards:${test",{"_index":2412,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["line",{"_index":3134,"title":{},"body":{"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["line'},{'name",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["line.component",{"_index":1930,"title":{},"body":{"modules/FeedModule.html":{}}}],["line.component.html",{"_index":3135,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts",{"_index":3133,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:190",{"_index":3142,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:226",{"_index":3153,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:24",{"_index":3156,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:25",{"_index":3157,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:27",{"_index":3155,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:28",{"_index":3139,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:32",{"_index":3154,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line/app",{"_index":1747,"title":{},"body":{"directives/DraggableDirective.html":{},"modules/FeedModule.html":{}}}],["line/mouse",{"_index":1949,"title":{},"body":{"modules/FeedModule.html":{},"directives/MouseWheelDirective.html":{}}}],["line/time",{"_index":1929,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeLineComponent.html":{}}}],["line/x",{"_index":1946,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["link",{"_index":1565,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["link/button",{"_index":1016,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["link1",{"_index":3063,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link2",{"_index":3066,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link3",{"_index":3071,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["list",{"_index":200,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["list.component",{"_index":1923,"title":{},"body":{"modules/FeedModule.html":{}}}],["list.component.html",{"_index":1337,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts",{"_index":1336,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:18",{"_index":1339,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:19",{"_index":1338,"title":{},"body":{"components/CardListComponent.html":{}}}],["list/card",{"_index":1335,"title":{},"body":{"components/CardListComponent.html":{},"modules/FeedModule.html":{}}}],["list/filters/filters.component",{"_index":1932,"title":{},"body":{"modules/FeedModule.html":{}}}],["list/filters/filters.component.ts",{"_index":2066,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:14",{"_index":2068,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:18",{"_index":2069,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/tags",{"_index":1954,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["list/filters/time",{"_index":1936,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["list/filters/type",{"_index":1933,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["list_radio",{"_index":201,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":1003,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["listens",{"_index":942,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["listsettingcomponent",{"_index":432,"title":{"components/ListSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["literal",{"_index":216,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/UpdateTimeReference.html":{}}}],["little",{"_index":1795,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["load",{"_index":226,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadbyid",{"_index":1272,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["loadcard",{"_index":1282,"title":{"classes/LoadCard.html":{}},"body":{"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcard(id",{"_index":1397,"title":{},"body":{"injectables/CardService.html":{}}}],["loadcard({id",{"_index":1353,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["loadcardfailure",{"_index":1283,"title":{"classes/LoadCardFailure.html":{}},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardfailure(err",{"_index":1279,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcardsuccess",{"_index":1284,"title":{"classes/LoadCardSuccess.html":{}},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardsuccess({card",{"_index":1278,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadchildren",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconfig",{"_index":330,"title":{"classes/LoadConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure",{"_index":1507,"title":{"classes/LoadConfigFailure.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure(err",{"_index":1497,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess",{"_index":1508,"title":{"classes/LoadConfigSuccess.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigsuccess({config",{"_index":1496,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfiguration",{"_index":1488,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loaded",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{}}}],["loadedi18n",{"_index":2901,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loader",{"_index":3516,"title":{},"body":{"dependencies.html":{}}}],["loadfeedfilteronauthenticationsuccess",{"_index":1890,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["loadi18nforlightcards",{"_index":3028,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nforlightcards(cards",{"_index":3039,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nforlightcards(cards:lightcard",{"_index":2975,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loadi18nformenuentries",{"_index":3029,"title":{},"body":{"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(){return",{"_index":3072,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(menus",{"_index":3041,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nformenuentries(menus:thirdmenu",{"_index":2981,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loading",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"injectables/LightCardEffects.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimelineState.html":{}}}],["loadingi18n",{"_index":2902,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loadlightcards",{"_index":224,"title":{"classes/LoadLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsextendeddata",{"_index":230,"title":{"classes/LoadLightCardsExtendedData.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadlightcardsfailure",{"_index":233,"title":{"classes/LoadLightCardsFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess",{"_index":229,"title":{"classes/LoadLightCardsSuccess.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess({lightcards",{"_index":1368,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["loadmenu",{"_index":2098,"title":{"classes/LoadMenu.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure",{"_index":2100,"title":{"classes/LoadMenuFailure.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure(err",{"_index":2542,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loadmenusuccess",{"_index":2099,"title":{"classes/LoadMenuSuccess.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenusuccess({menu",{"_index":2540,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loads",{"_index":1358,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["loadsettings",{"_index":2124,"title":{"classes/LoadSettings.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure",{"_index":2125,"title":{"classes/LoadSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure(err",{"_index":2748,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingsonlogin",{"_index":2742,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingssuccess",{"_index":1913,"title":{"classes/LoadSettingsSuccess.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingssuccess({settings",{"_index":2747,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loaduserdata(auth:payloadforsuccessfulauthentication):observable",{"_index":800,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["local",{"_index":1668,"title":{},"body":{"components/DetailComponent.html":{}}}],["locale",{"_index":2197,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["locales",{"_index":2729,"title":{},"body":{"components/SettingsComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["locales$:observable",{"_index":2734,"title":{},"body":{"components/SettingsComponent.html":{}}}],["locales?:string",{"_index":172,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["localestorage",{"_index":820,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage",{"_index":814,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.clear",{"_index":834,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":825,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.identifier",{"_index":850,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.token",{"_index":816,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.clientid",{"_index":845,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.expirationdate",{"_index":843,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.identifier",{"_index":839,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.token",{"_index":841,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorageauthcontent",{"_index":702,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/enumerations.html":{}}}],["location.href",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["location.origin",{"_index":884,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["location.pathname.length",{"_index":886,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["locationstrategy",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["lockaction",{"_index":153,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lockcard",{"_index":154,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lodash",{"_index":700,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["log",{"_index":67,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":104,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/User.html":{}}}],["login'},{'name",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["login.component.html",{"_index":2489,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.error.${category",{"_index":1037,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unavailable",{"_index":1041,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unexpected",{"_index":1042,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.login",{"_index":2523,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":2524,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.reset",{"_index":2526,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.code",{"_index":2527,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.password",{"_index":2525,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/password",{"_index":97,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["login:id",{"_index":1130,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["login:string",{"_index":3458,"title":{},"body":{"classes/User.html":{}}}],["loginclaim",{"_index":714,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["logincomponent",{"_index":100,"title":{"components/LoginComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["loginmessage",{"_index":2492,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage.i18n.key|translate:loginmessage.i18n.parameters",{"_index":2528,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":111,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["longtext",{"_index":203,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["lttd",{"_index":1155,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["lvalue",{"_index":2220,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m",{"_index":2233,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["m.format(options.hash.format",{"_index":2237,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.level==messagelevel.error",{"_index":2511,"title":{},"body":{"components/LoginComponent.html":{}}}],["m.locale(this.translate.getbrowserlang",{"_index":2236,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["mainrecipient",{"_index":1153,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["make",{"_index":3143,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["manage",{"_index":549,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["managed",{"_index":3097,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["management",{"_index":912,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manager",{"_index":920,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manages",{"_index":1499,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["mandatory",{"_index":205,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["map",{"_index":163,"title":{"classes/Map.html":{}},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{}}}],["map(([action,configtags",{"_index":1897,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map((a:loadlightcardssuccess",{"_index":1345,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map((action",{"_index":937,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["map((auth",{"_index":796,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map((card",{"_index":1277,"title":{},"body":{"injectables/CardEffects.html":{}}}],["map((config",{"_index":1495,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["map((settings",{"_index":2746,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(a=>new",{"_index":2750,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(action",{"_index":993,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(array",{"_index":2539,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(authenticationinfo",{"_index":956,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(card",{"_index":2977,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(check",{"_index":764,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(data",{"_index":794,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(id=>this.lightcard.id",{"_index":1205,"title":{},"body":{"components/CardComponent.html":{}}}],["map(id=>{return",{"_index":1129,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["map(isinthefuture",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["map(menu",{"_index":2983,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(operation",{"_index":1363,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(r",{"_index":2953,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(s=>handlebars.compile(s",{"_index":2204,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(settings",{"_index":2754,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(t",{"_index":2967,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(t=>t(card",{"_index":2194,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(timeref",{"_index":3088,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["map(u",{"_index":803,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(url",{"_index":2548,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(v=>new",{"_index":1907,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(values",{"_index":2385,"title":{},"body":{"components/InfoComponent.html":{}}}],["mapped",{"_index":1903,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["margin",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/LoginComponent.html":{}}}],["matching",{"_index":138,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["math.max",{"_index":2597,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["math.min(1",{"_index":2598,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["max",{"_index":1230,"title":{},"body":{"components/CardComponent.html":{}}}],["maxedretries",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["maxlength",{"_index":206,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["medium",{"_index":2298,"title":{},"body":{"components/IconComponent.html":{}}}],["medium:boolean",{"_index":2314,"title":{},"body":{"components/IconComponent.html":{}}}],["member",{"_index":132,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["members",{"_index":18,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["menu",{"_index":563,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/enumerations.html":{}}}],["menu.'+link.path",{"_index":2655,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.\\'+link.path",{"_index":2675,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.id",{"_index":2984,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menu.logout",{"_index":2676,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.logout&nbsp",{"_index":2663,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.settings",{"_index":2662,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.version",{"_index":2985,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menu_entry_id",{"_index":2112,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id",{"_index":2111,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id/:menu_version/:menu_entry_id",{"_index":2884,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["menu_version",{"_index":1556,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactions",{"_index":2118,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["menuactiontypes",{"_index":2097,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["menuactiontypes.handleunexpectederror",{"_index":2096,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenu",{"_index":2104,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenufailure",{"_index":2105,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenusuccess",{"_index":2106,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulink",{"_index":2110,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinkfailure",{"_index":2117,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinksuccess",{"_index":2114,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menueffects",{"_index":613,"title":{"injectables/MenuEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MenuEffects.html":{}}}],["menuentries",{"_index":2868,"title":{},"body":{"classes/Third.html":{}}}],["menuentries?:thirdmenuentry",{"_index":173,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["menuentry",{"_index":2934,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuentry.url",{"_index":2935,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuinitialstate",{"_index":2559,"title":{},"body":{"interfaces/MenuState.html":{}}}],["menureducer",{"_index":603,"title":{},"body":{"interfaces/AppState.html":{}}}],["menus",{"_index":2974,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menus.push(menu",{"_index":2973,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menustate",{"_index":569,"title":{"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MenuState.html":{}}}],["merge",{"_index":2895,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["merge(previous",{"_index":2958,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["mergemap",{"_index":2896,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["mergemap((id",{"_index":2997,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["message",{"_index":55,"title":{"classes/Message.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["message('the",{"_index":961,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(err",{"_index":976,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(message",{"_index":1047,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["messagelevel",{"_index":1024,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"injectables/TimeEffects.html":{},"miscellaneous/enumerations.html":{}}}],["messagelevel.debug",{"_index":2565,"title":{},"body":{"classes/Message.html":{}}}],["messagelevel.error",{"_index":962,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/TimeEffects.html":{}}}],["messageplaceolder",{"_index":1069,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["metadata",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["metareducer",{"_index":581,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":637,"title":{},"body":{"interfaces/AppState.html":{}}}],["method",{"_index":24,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["methods",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["middle",{"_index":3264,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["minus2hour",{"_index":1419,"title":{},"body":{"injectables/CardService.html":{}}}],["miscellaneous",{"_index":3538,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mmm",{"_index":3483,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["model/light",{"_index":2899,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["modification",{"_index":1300,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["module",{"_index":459,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["modules",{"_index":461,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["modules/archives/archives.module#archivesmodule",{"_index":542,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/feed/feed.module#feedmodule",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/settings/settings.module#settingsmodule",{"_index":546,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/thirdparty/thirdparty.module#thirdpartymodule",{"_index":544,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modulewithproviders",{"_index":1464,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["moment",{"_index":900,"title":{},"body":{"classes/AuthObject.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["moment(date).startof('year",{"_index":3493,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment(new",{"_index":2234,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["moment(this.referencetime",{"_index":3317,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment(value",{"_index":3480,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.duration(computedoffsetinmilliseconds",{"_index":3324,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.duration(realnowmoment.diff(ref",{"_index":3319,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.locale(languagetag",{"_index":3491,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.locale(this._locale",{"_index":2285,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.moment",{"_index":3284,"title":{},"body":{"classes/TimeReference.html":{},"interfaces/TimeState.html":{}}}],["moment.tz.setdefault(timezone",{"_index":2290,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.updatelocale('en",{"_index":3162,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["momentnow",{"_index":3287,"title":{},"body":{"classes/TimeReference.html":{}}}],["mono.svg",{"_index":2339,"title":{},"body":{"components/IconComponent.html":{}}}],["month",{"_index":3191,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["months",{"_index":3198,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["more",{"_index":551,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mouse",{"_index":2586,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel",{"_index":2568,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel(event",{"_index":2580,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheeldirective",{"_index":456,"title":{"directives/MouseWheelDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["mousewheeldown",{"_index":2572,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc",{"_index":2571,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc(event",{"_index":2584,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelup",{"_index":2573,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["move",{"_index":1771,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["movement",{"_index":1793,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["movetocodeflowloginpage",{"_index":876,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["mozilla",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["mpl",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["multi",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["multisettingscomponent",{"_index":434,"title":{"components/MultiSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent:25",{"_index":3395,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:27",{"_index":3393,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:28",{"_index":3391,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:29",{"_index":3392,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:30",{"_index":3407,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:31",{"_index":3408,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:32",{"_index":3394,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:33",{"_index":3406,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:34",{"_index":3405,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:39",{"_index":3396,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:40",{"_index":3402,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:70",{"_index":3401,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:75",{"_index":3404,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:79",{"_index":3399,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:83",{"_index":3397,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:88",{"_index":3398,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:94",{"_index":3400,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:98",{"_index":3403,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["mycardstimeline",{"_index":3251,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimeline",{"_index":3253,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimeline",{"_index":3248,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["name",{"_index":46,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["name:string",{"_index":167,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["navbar",{"_index":114,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/CheckAuthenticationStatus.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["navbar'},{'name",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["navbar.component.html",{"_index":2617,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":2616,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcollapsed",{"_index":2621,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":112,"title":{"components/NavbarComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["navigate",{"_index":944,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["navigateawayfromfeed",{"_index":1535,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigates",{"_index":2555,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["navigatetocard",{"_index":1536,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetomenuurl",{"_index":1537,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigating",{"_index":1561,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigation",{"_index":2107,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigationactiontiming",{"_index":2802,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationactiontiming.postactivation",{"_index":2806,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationid",{"_index":1587,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["navigationroutes",{"_index":553,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["nb",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":1595,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["needed",{"_index":250,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdatedSubscription.html":{}}}],["needsconfirm",{"_index":157,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["neutraltimereference",{"_index":3354,"title":{},"body":{"interfaces/TimeState.html":{}}}],["neutraltimereference:timereference=new",{"_index":3340,"title":{},"body":{"classes/TimeReference.html":{}}}],["new",{"_index":29,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["next",{"_index":93,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["next.handle(this.addauthheadersifnecessary(request",{"_index":3377,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["next.length",{"_index":2015,"title":{},"body":{"classes/Filter.html":{}}}],["next.status.action",{"_index":3421,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.alarm",{"_index":3419,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.end",{"_index":3118,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next.status.notification",{"_index":3425,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.question",{"_index":3423,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.start",{"_index":3113,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next[0].chainfilter(card,next.slice(1",{"_index":2016,"title":{},"body":{"classes/Filter.html":{}}}],["next||next.length",{"_index":2017,"title":{},"body":{"classes/Filter.html":{}}}],["ng",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":1709,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{}}}],["ngbcollapse]=\"!expandedmenu[index",{"_index":2659,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngbmodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["ngbmodule.forroot",{"_index":1958,"title":{},"body":{"modules/FeedModule.html":{}}}],["ngmodule",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["ngonchanges",{"_index":1710,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngonchanges(changes",{"_index":1716,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngondestroy",{"_index":1066,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngoninit",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngrx",{"_index":251,"title":{},"body":{"classes/AddLightCardFailure.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":1019,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"modules/StateModule.html":{},"injectables/TimeEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":1309,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":575,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":52,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":1060,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngx",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":1940,"title":{},"body":{"modules/FeedModule.html":{}}}],["none",{"_index":1163,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":3309,"title":{},"body":{"classes/TimeReference.html":{}}}],["noselectioncomponent",{"_index":438,"title":{"components/NoSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["notchecktokenrequest",{"_index":3379,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["nothing",{"_index":1845,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["notification",{"_index":2040,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notify",{"_index":116,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["null",{"_index":183,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{}}}],["number",{"_index":207,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{}}}],["oauth2.client",{"_index":726,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["oauth2.flow.delagate",{"_index":730,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["object",{"_index":1091,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["object[locale",{"_index":2954,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[locale][publisher",{"_index":2955,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[locale][publisher][version",{"_index":2956,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["observable",{"_index":17,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{}}}],["observable.create(observer",{"_index":1437,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(error",{"_index":1446,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(message",{"_index":1439,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.next(json.parse(message.data",{"_index":1440,"title":{},"body":{"injectables/CardService.html":{}}}],["obtain",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["occurred",{"_index":1443,"title":{},"body":{"injectables/CardService.html":{}}}],["of([new",{"_index":3058,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(false",{"_index":2417,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["of(new",{"_index":967,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["of(null",{"_index":766,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["of(template",{"_index":2202,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["of(third",{"_index":2913,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["of(this.handlerejectedlogin(new",{"_index":960,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(true",{"_index":3073,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(v",{"_index":2438,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["of(v.label",{"_index":2441,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["ofactions/authentication.actions",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["ofactions/card.actions",{"_index":1028,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofactions/config.actions",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["ofactions/feed.actions",{"_index":1381,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofactions/light",{"_index":1026,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["ofactions/menu.actions",{"_index":1572,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{}}}],["ofactions/settings.actions",{"_index":1097,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{}}}],["ofactions/time.actions",{"_index":3098,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["ofactions/timeline.actions",{"_index":3159,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofeffects/authentication.effects",{"_index":589,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card",{"_index":587,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card.effects",{"_index":585,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/config.effects",{"_index":623,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/custom",{"_index":610,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/feed",{"_index":619,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/light",{"_index":616,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/menu.effects",{"_index":614,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/settings.effects",{"_index":627,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/time.effects",{"_index":630,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofmap",{"_index":164,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/card",{"_index":1407,"title":{},"body":{"injectables/CardService.html":{}}}],["ofmodel/card.model",{"_index":161,"title":{},"body":{"classes/Action.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"interfaces/ConfigState.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/feed",{"_index":645,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofmodel/i18n.model",{"_index":162,"title":{},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["ofmodel/light",{"_index":221,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/map",{"_index":165,"title":{},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{}}}],["ofmodel/message.model",{"_index":56,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/thirds.model",{"_index":1646,"title":{},"body":{"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["ofmodel/time.model",{"_index":1851,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/user.model",{"_index":701,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ofselectors/authentication.selectors",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"injectables/ConfigService.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"injectables/SettingsService.html":{}}}],["ofselectors/card.selectors",{"_index":1195,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{}}}],["ofselectors/config.selectors",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["ofselectors/feed.selectors",{"_index":1878,"title":{},"body":{"components/FeedComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofselectors/menu.selectors",{"_index":2355,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/router.selectors",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/settings.selectors",{"_index":1099,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["ofselectors/settings.x.config.selectors",{"_index":2273,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{},"components/TagsFilterComponent.html":{}}}],["ofselectors/time.selectors",{"_index":2378,"title":{},"body":{"components/InfoComponent.html":{},"injectables/TimeEffects.html":{}}}],["ofservices/authentication.service",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/LoginComponent.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ofservices/card.service",{"_index":1025,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["ofservices/config.service",{"_index":1506,"title":{},"body":{"injectables/ConfigEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/filter.service",{"_index":648,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"modules/ServicesModule.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofservices/guard.service",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["ofservices/guid.service",{"_index":694,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"modules/ServicesModule.html":{}}}],["ofservices/i18n.service",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/services.module",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["ofservices/settings.service",{"_index":2723,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{}}}],["ofservices/thirds.service",{"_index":1258,"title":{},"body":{"components/CardDetailsComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/time.service",{"_index":1196,"title":{},"body":{"components/CardComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{}}}],["ofstates/authentication.state",{"_index":607,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/card.state",{"_index":608,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/config.state",{"_index":621,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["ofstates/feed.state",{"_index":591,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["ofstates/menu.state",{"_index":612,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/settings.state",{"_index":625,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/time.state",{"_index":628,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/timeline.state",{"_index":624,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/index",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofstore/reducers/authentication.reducer",{"_index":579,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/card.reducer",{"_index":598,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/config.reducer",{"_index":600,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/light",{"_index":595,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/menu.reducer",{"_index":604,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/settings.reducer",{"_index":602,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/time.reducer",{"_index":606,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/timeline.reducer",{"_index":593,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/selectors/card.selectors",{"_index":1257,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["ofstore/selectors/router.selectors",{"_index":1193,"title":{},"body":{"components/CardComponent.html":{}}}],["ofstore/state.module",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["ofstore/states/router.state",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["oftype",{"_index":1018,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogin",{"_index":1360,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogout",{"_index":936,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.checkauthenticationstatus",{"_index":950,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologin",{"_index":996,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologout",{"_index":1011,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(cardactiontypes.loadcard",{"_index":1274,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(configactiontypes.loadconfig",{"_index":1493,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigfailure",{"_index":1515,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigsuccess",{"_index":987,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(feedactiontypes.applyfilter",{"_index":1375,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["oftype(lightcardactiontypes.loadlightcardssuccess",{"_index":1344,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/LightCardEffects.html":{}}}],["oftype(menuactiontypes.loadmenu",{"_index":2536,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(menuactiontypes.selectmenulink",{"_index":2544,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(router_navigation",{"_index":1545,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(router_request",{"_index":1539,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(settingsactiontypes.loadsettings",{"_index":2744,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(settingsactiontypes.loadsettingssuccess",{"_index":1894,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(settingsactiontypes.patchsettings",{"_index":2752,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oidc",{"_index":771,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ok",{"_index":981,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["once",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["onchanges",{"_index":1708,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ondestroy",{"_index":1055,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ondragend(event",{"_index":1798,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["one",{"_index":237,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-2.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NavbarComponent.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["one_second",{"_index":703,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ongoing",{"_index":1299,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["oninit",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["onmousewheel",{"_index":2575,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheel(event",{"_index":2582,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome(event",{"_index":2589,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox(event",{"_index":2592,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie(event",{"_index":2594,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onpointerdown(event",{"_index":1779,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointermove(event",{"_index":1783,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointerup(event",{"_index":1786,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onsubmit",{"_index":101,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["opcards",{"_index":1366,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["open",{"_index":1173,"title":{},"body":{"components/CardComponent.html":{}}}],["operation.cards",{"_index":1367,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects",{"_index":588,"title":{},"body":{"interfaces/AppState.html":{}}}],["operation.effects.ts",{"_index":1341,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:29",{"_index":1343,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:38",{"_index":1374,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:69",{"_index":1380,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:88",{"_index":1357,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.model",{"_index":1408,"title":{},"body":{"injectables/CardService.html":{}}}],["operation.model.ts",{"_index":3545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operation.type",{"_index":1364,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.type.tostring",{"_index":1365,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operations",{"_index":1359,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["operator",{"_index":2208,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["operatorfabric",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["options",{"_index":2210,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["options.hash",{"_index":2241,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["otherwise",{"_index":748,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["out",{"_index":73,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":1777,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["outputs",{"_index":1751,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["over",{"_index":830,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["overview",{"_index":3559,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":3501,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":2667,"title":{},"body":{"components/NavbarComponent.html":{}}}],["page",{"_index":106,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["pair",{"_index":98,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["paload",{"_index":1008,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pan",{"_index":3532,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameterlistitem",{"_index":210,"title":{"classes/ParameterListItem.html":{}},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["parameters",{"_index":45,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameters['message",{"_index":974,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parametrization",{"_index":1972,"title":{},"body":{"classes/Filter.html":{}}}],["params",{"_index":777,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["params.append('client_secret",{"_index":791,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('clientid",{"_index":783,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('code",{"_index":778,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('grant_type",{"_index":779,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('password",{"_index":790,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('redirect_uri",{"_index":784,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('username",{"_index":789,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.tostring",{"_index":787,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params['error",{"_index":1043,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parentmodule",{"_index":2724,"title":{},"body":{"modules/ServicesModule.html":{}}}],["parse",{"_index":2814,"title":{},"body":{"modules/StateModule.html":{}}}],["party",{"_index":1564,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["pass",{"_index":1984,"title":{},"body":{"classes/Filter.html":{}}}],["passes",{"_index":1994,"title":{},"body":{"classes/Filter.html":{}}}],["password",{"_index":110,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["patch",{"_index":2126,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patchsettings",{"_index":1096,"title":{"classes/PatchSettings.html":{}},"body":{"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettings({settings",{"_index":1141,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["patchsettingsfailure",{"_index":2128,"title":{"classes/PatchSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingsfailure(err",{"_index":2756,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchsettingssuccess",{"_index":2127,"title":{"classes/PatchSettingsSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingssuccess({settings:settings",{"_index":2755,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchusersettings",{"_index":2778,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings",{"_index":2781,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings:any",{"_index":2788,"title":{},"body":{"injectables/SettingsService.html":{}}}],["path",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["pathend",{"_index":885,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pathmatch",{"_index":1963,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["pattern",{"_index":1803,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["pattern:string",{"_index":2858,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["payload",{"_index":38,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["payload.access_token",{"_index":865,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid",{"_index":864,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid.tostring",{"_index":846,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expirationdate.gettime().tostring",{"_index":844,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expires_in",{"_index":859,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.identifier",{"_index":840,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.password).pipe",{"_index":1000,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["payload.token",{"_index":842,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload:{cardstimeline",{"_index":2402,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{code",{"_index":94,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["payload:{currenttime:moment.moment",{"_index":1863,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["payload:{data",{"_index":2400,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{filters",{"_index":656,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{name",{"_index":652,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{timereference:timereference",{"_index":1866,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["payloadforsuccessfulauthentication",{"_index":42,"title":{"classes/PayloadForSuccessfulAuthentication.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["payloadforsuccessfulauthentication(jwt[this.loginclaim",{"_index":863,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pertinent",{"_index":1589,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pieces",{"_index":2817,"title":{},"body":{"modules/StateModule.html":{}}}],["pipe",{"_index":802,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["pipe(catcherror",{"_index":952,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(first",{"_index":1117,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["pipe(map",{"_index":3083,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["pipe(map(config",{"_index":1212,"title":{},"body":{"components/CardComponent.html":{}}}],["pipe(map(flowmode=>flowmode",{"_index":2509,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(trans",{"_index":3004,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["pipe(takeuntil(this.ngunsubscribe",{"_index":1114,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["pipe(tap(menus",{"_index":2643,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipes",{"_index":3461,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["pipetransform",{"_index":3479,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["placeholder",{"_index":1062,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["platformlocation",{"_index":2300,"title":{},"body":{"components/IconComponent.html":{}}}],["platformlocation.getbasehreffromdom",{"_index":2323,"title":{},"body":{"components/IconComponent.html":{}}}],["please",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["plus48hours",{"_index":1423,"title":{},"body":{"injectables/CardService.html":{}}}],["point",{"_index":1591,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pointerdown",{"_index":1756,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerdown(event",{"_index":1764,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerevent",{"_index":1765,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove",{"_index":1757,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove(event",{"_index":1769,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup",{"_index":1758,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup(event",{"_index":1772,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["popover",{"_index":3447,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["possible",{"_index":118,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["postdata",{"_index":750,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.append('token",{"_index":753,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.tostring",{"_index":762,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["preloadallmodules",{"_index":528,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":558,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preparedlist",{"_index":2422,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["present",{"_index":899,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["previous",{"_index":2950,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["previous.pipe",{"_index":2959,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["primary",{"_index":2488,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/RouterStateUrl.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["process",{"_index":179,"title":{"classes/Process.html":{}},"body":{"classes/Action.html":{},"classes/Card.html":{},"injectables/CardOperationEffects.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["process.states[card.state",{"_index":181,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processes",{"_index":2869,"title":{},"body":{"classes/Third.html":{}}}],["processes?:ofmap",{"_index":174,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processid",{"_index":1154,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["processing",{"_index":1302,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["properties",{"_index":36,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["property",{"_index":1973,"title":{},"body":{"classes/Filter.html":{}}}],["protected",{"_index":1061,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["provide",{"_index":524,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["provided",{"_index":2811,"title":{},"body":{"modules/StateModule.html":{}}}],["providedin",{"_index":2032,"title":{},"body":{"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["providers",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["providers:[{provide:'configretrydelay',usevalue:5000",{"_index":2810,"title":{},"body":{"modules/StateModule.html":{}}}],["public",{"_index":37,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/Tick.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{}}}],["publication",{"_index":1219,"title":{},"body":{"components/CardComponent.html":{}}}],["publishdate",{"_index":1149,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["publisher",{"_index":1147,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{}}}],["publishers",{"_index":2416,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["publisherversion",{"_index":1148,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/TimeSpan.html":{}}}],["publisher}.${version}.${name}.${locale",{"_index":2199,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["push",{"_index":96,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["put",{"_index":867,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["query",{"_index":1596,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querylist",{"_index":1723,"title":{},"body":{"components/DetailsComponent.html":{}}}],["querymenuentryurl",{"_index":3030,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querymenuentryurl(thirdmenuid",{"_index":2920,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["queryparams",{"_index":1586,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querytemplate",{"_index":2140,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher",{"_index":2159,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher:string",{"_index":2195,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querythird",{"_index":3031,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname",{"_index":3045,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname:string",{"_index":2908,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["question",{"_index":2038,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["r",{"_index":2957,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["rangeend",{"_index":1401,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart",{"_index":1403,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart:rangestart,rangeend",{"_index":1452,"title":{},"body":{"injectables/CardService.html":{}}}],["reactiveformsmodule",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["readonly",{"_index":39,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/Card.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{}}}],["ready",{"_index":990,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["real",{"_index":3308,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnow",{"_index":3290,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment",{"_index":3293,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=moment(realnow",{"_index":3305,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=realnow",{"_index":3304,"title":{},"body":{"classes/TimeReference.html":{}}}],["realtimebar",{"_index":3221,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["reason",{"_index":1983,"title":{},"body":{"classes/Filter.html":{}}}],["received",{"_index":3238,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["recipient_filter",{"_index":2062,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["recursion",{"_index":1999,"title":{},"body":{"classes/Filter.html":{}}}],["recursively",{"_index":1998,"title":{},"body":{"classes/Filter.html":{}}}],["redirect",{"_index":924,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["redirectto",{"_index":547,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["reduce",{"_index":2897,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((acc",{"_index":2960,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((ids",{"_index":2987,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((menus:thirdmenu[],menu:thirdmenu",{"_index":2972,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reducer",{"_index":26,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["ref",{"_index":3316,"title":{},"body":{"classes/TimeReference.html":{}}}],["reference",{"_index":1858,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["referencetime",{"_index":3280,"title":{},"body":{"classes/TimeReference.html":{}}}],["refresh",{"_index":1355,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["refreshifselectedcard",{"_index":1342,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["regarding",{"_index":898,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registerarrayatindex",{"_index":2141,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerarrayatindexlength",{"_index":2142,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerbool",{"_index":2143,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registercardaction",{"_index":2144,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerdateformat",{"_index":2145,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registered",{"_index":770,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registeri18n",{"_index":2146,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registermath",{"_index":2147,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernow",{"_index":2148,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernumberformat",{"_index":2149,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerpreservespace",{"_index":2150,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerslice",{"_index":2151,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersort",{"_index":2152,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersplit",{"_index":2153,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersvg",{"_index":2154,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reinsertscripts",{"_index":1618,"title":{},"body":{"components/DetailComponent.html":{}}}],["reject",{"_index":70,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["rejectedlogin",{"_index":984,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejection",{"_index":124,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rejectlogin",{"_index":69,"title":{"classes/RejectLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rejectlogin({error",{"_index":1046,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectloginattempt",{"_index":130,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["related",{"_index":248,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":847,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["reload",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":134,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["removes",{"_index":127,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rendered",{"_index":1305,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["rendering",{"_index":1660,"title":{},"body":{"components/DetailComponent.html":{}}}],["replication",{"_index":1977,"title":{},"body":{"classes/Filter.html":{}}}],["reported",{"_index":1846,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["request",{"_index":1428,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{},"interceptors/TokenInjector.html":{}}}],["request.clone(update",{"_index":3384,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["request.url",{"_index":3378,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["requiredfield",{"_index":1070,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["reset",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["resetform",{"_index":2496,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetstate",{"_index":915,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["resolvethirdpartylink",{"_index":2534,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["resource",{"_index":1666,"title":{},"body":{"components/DetailComponent.html":{}}}],["resourceurl",{"_index":2944,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["resourceurl}?${versionparam.tostring",{"_index":2948,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["response",{"_index":893,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["responsetype",{"_index":2939,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result",{"_index":137,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["result.id",{"_index":3017,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result.translation[lang",{"_index":3013,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result:any",{"_index":3008,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["results",{"_index":139,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":1347,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["retry",{"_index":1502,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["retryconfigurationloading",{"_index":1489,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["retrydelay",{"_index":1491,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["return",{"_index":182,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["returned",{"_index":1598,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["returns",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["right",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["root",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["root'},{'name",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["route",{"_index":1568,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["router",{"_index":564,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["router.effects",{"_index":611,"title":{},"body":{"interfaces/AppState.html":{}}}],["router.effects.ts",{"_index":1534,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:21",{"_index":1538,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:28",{"_index":1552,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:50",{"_index":1559,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:64",{"_index":1544,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigation",{"_index":1560,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_request",{"_index":1571,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routereffects",{"_index":590,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerinitialstate",{"_index":639,"title":{},"body":{"interfaces/AppState.html":{}}}],["routermodule",{"_index":529,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":672,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":556,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigationaction",{"_index":1546,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerreducerstate",{"_index":570,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerrequestaction",{"_index":1541,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate",{"_index":1584,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate.params['cid",{"_index":1550,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_entry_id",{"_index":1558,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_id",{"_index":1555,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_version'],menu_entry_id",{"_index":1557,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.root.queryparams",{"_index":1602,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate:any",{"_index":1548,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstateserializer",{"_index":1575,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstatesnapshot",{"_index":1582,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstateurl",{"_index":576,"title":{"classes/RouterStateUrl.html":{}},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstateurl(url",{"_index":1603,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routes",{"_index":530,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routes.slice(0",{"_index":554,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":498,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"components/NavbarComponent.html":{},"modules/SettingsModule.html":{},"modules/ThirdpartyModule.html":{}}}],["routing.module.ts",{"_index":527,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["row",{"_index":3446,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["rows",{"_index":208,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["rte",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["rules",{"_index":923,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["running",{"_index":822,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["rvalue",{"_index":2218,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["rxjs",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/operators/tap",{"_index":2419,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["rxjs/operators",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["safe",{"_index":1665,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl",{"_index":1661,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tolocalestring",{"_index":1669,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tostring",{"_index":1667,"title":{},"body":{"components/DetailComponent.html":{}}}],["safehtml",{"_index":1639,"title":{},"body":{"components/DetailComponent.html":{}}}],["saferesourceurl",{"_index":1645,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeurl",{"_index":2351,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["same",{"_index":3236,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["sanitizer",{"_index":1624,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["saturday",{"_index":3161,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["save",{"_index":835,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["saveauthenticationinformation(payload",{"_index":838,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["scope",{"_index":1979,"title":{},"body":{"classes/Filter.html":{}}}],["scripts",{"_index":1679,"title":{},"body":{"components/DetailComponent.html":{}}}],["scripts.length",{"_index":1682,"title":{},"body":{"components/DetailComponent.html":{}}}],["scriptsinitiallength",{"_index":1681,"title":{},"body":{"components/DetailComponent.html":{}}}],["secret",{"_index":728,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["security",{"_index":1425,"title":{},"body":{"injectables/CardService.html":{}}}],["select",{"_index":236,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"classes/ClearLightCardSelection.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/TimeLineComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["select(feedselectors.selectfeed",{"_index":3237,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["select(feedselectors.selectfilteredfeed",{"_index":1881,"title":{},"body":{"components/FeedComponent.html":{}}}],["select(feedselectors.selectunfilteredfeed",{"_index":3259,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["select(selectconfigloaded",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectmaxedretries",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["select(timelineselectors.selectfeed",{"_index":3257,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["selectcardstateselectedid",{"_index":1194,"title":{},"body":{"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{}}}],["selectcode",{"_index":1023,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["selectconfigloaded",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["selectconfigretry",{"_index":1509,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["selectcurrentdate",{"_index":2377,"title":{},"body":{"components/InfoComponent.html":{}}}],["selectcurrenturl",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["selectdetail",{"_index":1711,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selectdetail(detail",{"_index":1720,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selected",{"_index":1292,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/CardState.html":{},"interfaces/TimelineState.html":{}}}],["selected_iframe_url",{"_index":2557,"title":{},"body":{"interfaces/MenuState.html":{}}}],["selectedcardid",{"_index":1291,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["selectedcardid:string",{"_index":260,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["selectediframeurl",{"_index":2348,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedvalues",{"_index":211,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["selectexpirationtime",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["selectidentifier",{"_index":1104,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{}}}],["selection",{"_index":241,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NoSelectionComponent.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selection'},{'name",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selection.component",{"_index":1927,"title":{},"body":{"modules/FeedModule.html":{}}}],["selection.component.html",{"_index":2679,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts",{"_index":2678,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:14",{"_index":2680,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":2681,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection/no",{"_index":1926,"title":{},"body":{"modules/FeedModule.html":{},"components/NoSelectionComponent.html":{}}}],["selections",{"_index":3442,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["selectlightcard",{"_index":235,"title":{"classes/SelectLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectlightcard({selectedcardid",{"_index":1551,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmaxedretries",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenulink",{"_index":1567,"title":{"classes/SelectMenuLink.html":{}},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulink({menu_id",{"_index":1554,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmenulinkfailure",{"_index":2102,"title":{"classes/SelectMenuLinkFailure.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinkfailure(err",{"_index":2551,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenulinksuccess",{"_index":2101,"title":{"classes/SelectMenuLinkSuccess.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinksuccess({iframe_url",{"_index":2549,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenustatemenu",{"_index":2638,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectmenustateselectediframeurl",{"_index":2354,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectmessage",{"_index":2506,"title":{},"body":{"components/LoginComponent.html":{}}}],["selector",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selectrouterstate",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["selecttimereference",{"_index":3099,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["selectunfilteredfeed",{"_index":3258,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["selectusernameoridentifier",{"_index":2376,"title":{},"body":{"components/InfoComponent.html":{}}}],["send",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"injectables/TimeEffects.html":{}}}],["sequentially",{"_index":2002,"title":{},"body":{"classes/Filter.html":{}}}],["serialize",{"_index":1577,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerstate",{"_index":1581,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["serializer",{"_index":2807,"title":{},"body":{"modules/StateModule.html":{}}}],["service",{"_index":99,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["services/authentication.service",{"_index":1020,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["services/handlebars.service",{"_index":1471,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{}}}],["services/thirds.service",{"_index":1470,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["servicesmodule",{"_index":472,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["servicesmodule.forroot",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":1735,"title":{},"body":{"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["set(\"locale",{"_index":2937,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set(\"version",{"_index":2918,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["setcarddatatimeline",{"_index":2399,"title":{"classes/SetCardDataTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setheaders",{"_index":3383,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["settimeout",{"_index":1675,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["settimeout(()=>this.expandedmenu[index]=false,5000",{"_index":2651,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settimeout(()=>this.expandedusermenu=false,5000",{"_index":2654,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setting",{"_index":1056,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["setting'},{'name",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["setting.component",{"_index":1829,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.css",{"_index":1057,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.html",{"_index":1058,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts",{"_index":1054,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:19",{"_index":1804,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["setting.component.ts:22",{"_index":2854,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:24",{"_index":2425,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:25",{"_index":1810,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:27",{"_index":1075,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:28",{"_index":1073,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:29",{"_index":1074,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:30",{"_index":1093,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:31",{"_index":1095,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:32",{"_index":1094,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:33",{"_index":1092,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:34",{"_index":1072,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:35",{"_index":2855,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:40",{"_index":1087,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:47",{"_index":2857,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:50",{"_index":2427,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:51",{"_index":2856,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:58",{"_index":2426,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:68",{"_index":2429,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:70",{"_index":1086,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:72",{"_index":2428,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:75",{"_index":1090,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:77",{"_index":2430,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:79",{"_index":1080,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:83",{"_index":1077,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:88",{"_index":1079,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:94",{"_index":1084,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:98",{"_index":1088,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting/base",{"_index":1053,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting/email",{"_index":1801,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/list",{"_index":2421,"title":{},"body":{"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/text",{"_index":1828,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["settingpath",{"_index":1071,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings",{"_index":545,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiSettingsComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["settings'},{'name",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["settings.component",{"_index":2770,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.css",{"_index":2605,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":2606,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.scss",{"_index":3389,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts",{"_index":2604,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":3390,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:19",{"_index":2608,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":2610,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:32",{"_index":2609,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:39",{"_index":2611,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.{{settingpath",{"_index":1834,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/multi",{"_index":2603,"title":{},"body":{"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/type",{"_index":2772,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings:any",{"_index":2133,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"interfaces/SettingsState.html":{}}}],["settings[this.settingpath",{"_index":1139,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["settingsactions",{"_index":2136,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["settingsactiontypes",{"_index":1914,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["settingsactiontypes.handleunexpectederror",{"_index":2123,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettings",{"_index":2129,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingsfailure",{"_index":2130,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingssuccess",{"_index":2131,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettings",{"_index":2132,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingsfailure",{"_index":2134,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingssuccess",{"_index":2135,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingscomponent",{"_index":440,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["settingseffects",{"_index":626,"title":{"injectables/SettingsEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SettingsEffects.html":{}}}],["settingsinitialstate",{"_index":2791,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["settingsmodule",{"_index":2758,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"index.html":{},"modules.html":{}}}],["settingsreducer",{"_index":601,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingsroutingmodule",{"_index":2762,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["settingsservice",{"_index":2715,"title":{"injectables/SettingsService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["settingsstate",{"_index":571,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SettingsState.html":{}}}],["severity",{"_index":1152,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/FilterService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["severity.action",{"_index":2037,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severity.alarm",{"_index":2036,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severity.notification",{"_index":2041,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severity.question",{"_index":2039,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severityordinal",{"_index":1310,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card1.severity",{"_index":1316,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card2.severity",{"_index":1317,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(severity",{"_index":3348,"title":{},"body":{"classes/TimeSpan.html":{}}}],["showgridlines",{"_index":3220,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["simplechanges",{"_index":1717,"title":{},"body":{"components/DetailsComponent.html":{}}}],["single",{"_index":2670,"title":{},"body":{"components/NavbarComponent.html":{}}}],["size",{"_index":1240,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["size:string",{"_index":2318,"title":{},"body":{"components/IconComponent.html":{}}}],["skipself",{"_index":2719,"title":{},"body":{"modules/ServicesModule.html":{}}}],["small",{"_index":1238,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["small:boolean",{"_index":2313,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":1590,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["solid",{"_index":515,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["something",{"_index":1841,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["sortcomparer:comparebyseveritylttdpublishdate",{"_index":1331,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sortcomparer:comparebystartdate",{"_index":3361,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["sortonkey(key",{"_index":2249,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sound",{"_index":3349,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["special",{"_index":3472,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["speed",{"_index":3277,"title":{},"body":{"classes/TimeReference.html":{}}}],["splitvalue",{"_index":2214,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sprites",{"_index":2296,"title":{},"body":{"components/IconComponent.html":{}}}],["sprites:string",{"_index":2319,"title":{},"body":{"components/IconComponent.html":{}}}],["src/.../authentication.actions.ts",{"_index":3541,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":3550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card",{"_index":3544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.actions.ts",{"_index":3542,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":3557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.actions.ts",{"_index":3546,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../feed.actions.ts",{"_index":3548,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../filter.service.ts",{"_index":3549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../light",{"_index":3547,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.actions.ts",{"_index":3551,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../message.model.ts",{"_index":3552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../settings.actions.ts",{"_index":3553,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../thirds.model.ts",{"_index":3540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../time.actions.ts",{"_index":3554,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.model.ts",{"_index":3556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../timeline.actions.ts",{"_index":3555,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":526,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/icon/icon.component.ts",{"_index":2291,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:18",{"_index":2304,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:19",{"_index":2307,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:20",{"_index":2306,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:21",{"_index":2302,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:22",{"_index":2303,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:23",{"_index":2305,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:24",{"_index":2309,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:25",{"_index":2310,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:26",{"_index":2301,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:32",{"_index":2308,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":2486,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:27",{"_index":2502,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":2505,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":2504,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":2503,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":2497,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":2499,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:51",{"_index":2500,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":2501,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:63",{"_index":2498,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts",{"_index":2360,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:26",{"_index":2369,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:27",{"_index":2368,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:28",{"_index":2366,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:33",{"_index":2367,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:44",{"_index":2371,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:48",{"_index":2373,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:52",{"_index":2375,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":2615,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":2634,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":2635,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":2632,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":2631,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":2633,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:33",{"_index":2625,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":2627,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:52",{"_index":2626,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:56",{"_index":2637,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:60",{"_index":2629,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:66",{"_index":2630,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/model/card",{"_index":3558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts",{"_index":1145,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts:12",{"_index":1158,"title":{},"body":{"classes/Card.html":{}}}],["src/app/model/card.model.ts:41",{"_index":1609,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/model/feed",{"_index":1967,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/model/i18n.model.ts",{"_index":2256,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/i18n.model.ts:10",{"_index":2258,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/light",{"_index":3343,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/map.ts",{"_index":2529,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/map.ts:8",{"_index":2532,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/message.model.ts",{"_index":2561,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/message.model.ts:10",{"_index":2564,"title":{},"body":{"classes/Message.html":{}}}],["src/app/model/thirds.model.ts",{"_index":142,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/thirds.model.ts:105",{"_index":2404,"title":{},"body":{"classes/Input.html":{}}}],["src/app/model/thirds.model.ts:12",{"_index":2870,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:122",{"_index":2683,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["src/app/model/thirds.model.ts:25",{"_index":2872,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:36",{"_index":2875,"title":{},"body":{"classes/ThirdMenuEntry.html":{}}}],["src/app/model/thirds.model.ts:45",{"_index":2874,"title":{},"body":{"classes/ThirdMenu.html":{}}}],["src/app/model/thirds.model.ts:54",{"_index":2699,"title":{},"body":{"classes/Process.html":{}}}],["src/app/model/thirds.model.ts:61",{"_index":2793,"title":{},"body":{"classes/State.html":{}}}],["src/app/model/thirds.model.ts:76",{"_index":158,"title":{},"body":{"classes/Action.html":{}}}],["src/app/model/time.model.ts",{"_index":3269,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/time.model.ts:11",{"_index":3295,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:19",{"_index":3282,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:20",{"_index":3286,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:21",{"_index":3289,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:33",{"_index":3292,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:4",{"_index":3279,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:56",{"_index":3296,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/user.model.ts",{"_index":3455,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.model.ts:8",{"_index":3457,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/archives/archives",{"_index":671,"title":{},"body":{"modules/ArchivesRoutingModule.html":{}}}],["src/app/modules/archives/archives.component.ts",{"_index":658,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:15",{"_index":661,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:19",{"_index":662,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.module.ts",{"_index":669,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["src/app/modules/cards/cards.module.ts",{"_index":1461,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/cards.module.ts:28",{"_index":1463,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/components/card",{"_index":1248,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts",{"_index":1166,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:28",{"_index":1181,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:29",{"_index":1180,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:30",{"_index":1190,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:31",{"_index":1189,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:32",{"_index":1179,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:42",{"_index":1188,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:47",{"_index":1187,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:65",{"_index":1183,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:75",{"_index":1185,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:80",{"_index":1192,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts",{"_index":1610,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:104",{"_index":1632,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:21",{"_index":1640,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:22",{"_index":1628,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:23",{"_index":1627,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:24",{"_index":1642,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:25",{"_index":1626,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:33",{"_index":1637,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:38",{"_index":1636,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:53",{"_index":1635,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:69",{"_index":1644,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:73",{"_index":1638,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:88",{"_index":1634,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts",{"_index":1706,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:18",{"_index":1725,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:19",{"_index":1714,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:20",{"_index":1713,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:25",{"_index":1715,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:34",{"_index":1722,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:44",{"_index":1721,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:53",{"_index":1726,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:57",{"_index":1718,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts",{"_index":2137,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:103",{"_index":2167,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:117",{"_index":2161,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:123",{"_index":2171,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:140",{"_index":2172,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:182",{"_index":2166,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:208",{"_index":2174,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:226",{"_index":2164,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:23",{"_index":2156,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:240",{"_index":2165,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:248",{"_index":2169,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:255",{"_index":2168,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:262",{"_index":2170,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:44",{"_index":2158,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:49",{"_index":2160,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:62",{"_index":2163,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:91",{"_index":2162,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:97",{"_index":2173,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/feed/components/card",{"_index":1334,"title":{},"body":{"components/CardListComponent.html":{},"components/FiltersComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["src/app/modules/feed/components/no",{"_index":2677,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["src/app/modules/feed/components/time",{"_index":1746,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["src/app/modules/feed/feed",{"_index":1959,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/modules/feed/feed.component.ts",{"_index":1868,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:24",{"_index":1875,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:25",{"_index":1876,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:26",{"_index":1872,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:31",{"_index":1874,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:42",{"_index":1873,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.module.ts",{"_index":1922,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/modules/settings/components/settings/base",{"_index":1052,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/email",{"_index":1800,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/list",{"_index":2420,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/multi",{"_index":2602,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts",{"_index":2728,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:20",{"_index":2733,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:21",{"_index":2731,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:26",{"_index":2732,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/text",{"_index":2853,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/type",{"_index":3388,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["src/app/modules/settings/settings",{"_index":2773,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":2763,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts",{"_index":2343,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:23",{"_index":2349,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:29",{"_index":2350,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:37",{"_index":2353,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/thirdparty",{"_index":2883,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["src/app/modules/thirdparty/thirdparty.module.ts",{"_index":2881,"title":{},"body":{"modules/ThirdpartyModule.html":{}}}],["src/app/services/authentication.service.ts",{"_index":674,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/authentication.service.ts:288",{"_index":680,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:291",{"_index":682,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:292",{"_index":684,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:293",{"_index":683,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:294",{"_index":685,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:303",{"_index":1474,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:305",{"_index":1477,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:306",{"_index":1476,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:307",{"_index":1475,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/card.service.ts",{"_index":1382,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:20",{"_index":1405,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:21",{"_index":1404,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:22",{"_index":1391,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:30",{"_index":1398,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:34",{"_index":1396,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:44",{"_index":1399,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:48",{"_index":1394,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:72",{"_index":1402,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/config.service.ts",{"_index":1519,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:19",{"_index":1522,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:26",{"_index":1523,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/filter.service.ts",{"_index":2018,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/filter.service.ts:18",{"_index":2025,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:24",{"_index":2026,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:29",{"_index":2031,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:53",{"_index":2029,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:61",{"_index":2028,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:69",{"_index":2030,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:91",{"_index":2027,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/guid.service.ts",{"_index":2070,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:16",{"_index":2073,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:22",{"_index":2074,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:26",{"_index":2075,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/i18n.service.ts",{"_index":2259,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:20",{"_index":2267,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:21",{"_index":2264,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:31",{"_index":2266,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:47",{"_index":2269,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:51",{"_index":2271,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/interceptors.service.ts",{"_index":3364,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:14",{"_index":3368,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:20",{"_index":3374,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:25",{"_index":3371,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/services.module.ts",{"_index":2717,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/services.module.ts:45",{"_index":2718,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/settings.service.ts",{"_index":2774,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":2783,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:20",{"_index":2779,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:28",{"_index":2780,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:32",{"_index":2782,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/thirds.service.ts",{"_index":2886,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:128",{"_index":3035,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:142",{"_index":3040,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:148",{"_index":3042,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:155",{"_index":3048,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:209",{"_index":3049,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:214",{"_index":2890,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:218",{"_index":2892,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:23",{"_index":3052,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:24",{"_index":3050,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:25",{"_index":3051,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:26",{"_index":3053,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:27",{"_index":3033,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:38",{"_index":3046,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:51",{"_index":3038,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:59",{"_index":3043,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:78",{"_index":3036,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:88",{"_index":3034,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:95",{"_index":3037,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/store/actions/authentication.actions.ts",{"_index":6,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/authentication.actions.ts:111",{"_index":2701,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:114",{"_index":2702,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:128",{"_index":140,"title":{},"body":{"classes/AcceptLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:144",{"_index":141,"title":{},"body":{"classes/AcceptLogOutSuccess.html":{}}}],["src/app/store/actions/authentication.actions.ts:26",{"_index":2691,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:27",{"_index":2695,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:28",{"_index":2692,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:29",{"_index":2697,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:30",{"_index":2693,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:31",{"_index":2694,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:32",{"_index":2696,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:41",{"_index":2389,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:43",{"_index":2390,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:52",{"_index":1472,"title":{},"body":{"classes/CheckAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:67",{"_index":44,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:70",{"_index":48,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:80",{"_index":3385,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:83",{"_index":3386,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:94",{"_index":3387,"title":{},"body":{"classes/TryToLogOut.html":{}}}],["src/app/store/actions/card.actions.ts",{"_index":1478,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/card.actions.ts:20",{"_index":1480,"title":{},"body":{"classes/ClearCard.html":{}}}],["src/app/store/actions/card.actions.ts:23",{"_index":2459,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:26",{"_index":2460,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:29",{"_index":2461,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:32",{"_index":2462,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:36",{"_index":2463,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:39",{"_index":2464,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:44",{"_index":2080,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/card.actions.ts:47",{"_index":2081,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/config.actions.ts",{"_index":2082,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/config.actions.ts:18",{"_index":2465,"title":{},"body":{"classes/LoadConfig.html":{}}}],["src/app/store/actions/config.actions.ts:21",{"_index":2466,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:24",{"_index":2467,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:29",{"_index":2468,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:32",{"_index":2469,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:38",{"_index":2083,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/config.actions.ts:40",{"_index":2084,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/feed.actions.ts",{"_index":641,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/feed.actions.ts:18",{"_index":642,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:20",{"_index":643,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:24",{"_index":2391,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:27",{"_index":2392,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/light",{"_index":214,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts",{"_index":2093,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts:22",{"_index":2476,"title":{},"body":{"classes/LoadMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:29",{"_index":2477,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:32",{"_index":2478,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:37",{"_index":2479,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:40",{"_index":2480,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:45",{"_index":2094,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["src/app/store/actions/menu.actions.ts:48",{"_index":2095,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["src/app/store/actions/menu.actions.ts:59",{"_index":2707,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:62",{"_index":2708,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:70",{"_index":2711,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:73",{"_index":2712,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:81",{"_index":2709,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:84",{"_index":2710,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/settings.actions.ts",{"_index":2120,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/settings.actions.ts:24",{"_index":2481,"title":{},"body":{"classes/LoadSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:27",{"_index":2482,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:30",{"_index":2483,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:35",{"_index":2484,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:38",{"_index":2485,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:43",{"_index":2684,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:44",{"_index":2685,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:47",{"_index":2686,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:50",{"_index":2687,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:55",{"_index":2688,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:58",{"_index":2689,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:64",{"_index":2121,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/settings.actions.ts:66",{"_index":2122,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/time.actions.ts",{"_index":1839,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/time.actions.ts:16",{"_index":3074,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:17",{"_index":3075,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:25",{"_index":3451,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:26",{"_index":3452,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:35",{"_index":1847,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:36",{"_index":1848,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/timeline.actions.ts",{"_index":2394,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/timeline.actions.ts:16",{"_index":2395,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:17",{"_index":2396,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:21",{"_index":2726,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:22",{"_index":2727,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/effects/authentication.effects.ts",{"_index":911,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:110",{"_index":1015,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:119",{"_index":934,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:136",{"_index":941,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:155",{"_index":994,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:179",{"_index":978,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:224",{"_index":929,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:246",{"_index":932,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:40",{"_index":919,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:61",{"_index":988,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:83",{"_index":1002,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/card",{"_index":1340,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["src/app/store/effects/card.effects.ts",{"_index":1271,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:20",{"_index":1273,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:30",{"_index":1280,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/config.effects.ts",{"_index":1487,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:21",{"_index":1492,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:54",{"_index":1498,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:71",{"_index":1501,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/custom",{"_index":1533,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["src/app/store/effects/feed",{"_index":1887,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["src/app/store/effects/light",{"_index":2405,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["src/app/store/effects/menu.effects.ts",{"_index":2533,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:26",{"_index":2535,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:37",{"_index":2543,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:67",{"_index":2552,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/settings.effects.ts",{"_index":2741,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:26",{"_index":2743,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:39",{"_index":2749,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:51",{"_index":2751,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:57",{"_index":2757,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/time.effects.ts",{"_index":3077,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:20",{"_index":3081,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:37",{"_index":3086,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:51",{"_index":3095,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/index.ts",{"_index":561,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/store/state.module.ts",{"_index":2796,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/state.module.ts:33",{"_index":2797,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/states/authentication.state.ts",{"_index":905,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/store/states/card.state.ts",{"_index":1453,"title":{},"body":{"interfaces/CardState.html":{}}}],["src/app/store/states/config.state.ts",{"_index":1530,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["src/app/store/states/feed.state.ts",{"_index":1288,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["src/app/store/states/menu.state.ts",{"_index":2556,"title":{},"body":{"interfaces/MenuState.html":{}}}],["src/app/store/states/router.state.ts",{"_index":1574,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:37",{"_index":2704,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:48",{"_index":1583,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/router.state.ts:55",{"_index":1580,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/settings.state.ts",{"_index":2790,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/store/states/time.state.ts",{"_index":3352,"title":{},"body":{"interfaces/TimeState.html":{}}}],["src/app/store/states/timeline.state.ts",{"_index":3357,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["src/tests/mocks/thirds.service.mock.ts",{"_index":3055,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:14",{"_index":3057,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:5",{"_index":3056,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["sse",{"_index":1427,"title":{},"body":{"injectables/CardService.html":{}}}],["start",{"_index":1768,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["startdate",{"_index":1150,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdomain",{"_index":3173,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":3174,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain.valueof",{"_index":3225,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2",{"_index":3192,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":3193,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.valueof",{"_index":3232,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3",{"_index":3201,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.hours(0",{"_index":3203,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.startof('month",{"_index":3202,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.valueof",{"_index":3234,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4",{"_index":3185,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":3186,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4.valueof",{"_index":3229,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startup",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["startyear",{"_index":3492,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["startyear.valueof",{"_index":3495,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["state",{"_index":11,"title":{"classes/State.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["state.actions[actionid",{"_index":1688,"title":{},"body":{"components/DetailComponent.html":{}}}],["state.children",{"_index":1606,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.params",{"_index":1604,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["statemodule",{"_index":473,"title":{"modules/StateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StateModule.html":{},"index.html":{},"modules.html":{}}}],["statemodule.forroot",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["states",{"_index":2700,"title":{},"body":{"classes/Process.html":{}}}],["states?:ofmap",{"_index":191,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["static",{"_index":204,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["status",{"_index":62,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["status.action",{"_index":2044,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.alarm",{"_index":2042,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.end",{"_index":2050,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.notification",{"_index":2046,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.question",{"_index":2045,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.start",{"_index":2049,"title":{},"body":{"injectables/FilterService.html":{}}}],["sticktovirtualtime",{"_index":3080,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["still",{"_index":821,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{}}}],["stillvalid",{"_index":828,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["stops",{"_index":2000,"title":{},"body":{"classes/Filter.html":{}}}],["store",{"_index":117,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["store,private",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["store.select(buildconfigselector('security",{"_index":720,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["store/index",{"_index":2898,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["store:store",{"_index":2735,"title":{},"body":{"components/SettingsComponent.html":{}}}],["storeconfig",{"_index":636,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["stored",{"_index":819,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["storedevtoolsmodule",{"_index":2800,"title":{},"body":{"modules/StateModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":2809,"title":{},"body":{"modules/StateModule.html":{}}}],["storefreeze",{"_index":582,"title":{},"body":{"interfaces/AppState.html":{}}}],["storemodule",{"_index":2798,"title":{},"body":{"modules/StateModule.html":{}}}],["storemodule.forroot(appreducer",{"_index":2804,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule",{"_index":2803,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":2805,"title":{},"body":{"modules/StateModule.html":{}}}],["string",{"_index":79,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["string):observable",{"_index":2196,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["structure",{"_index":2813,"title":{},"body":{"modules/StateModule.html":{}}}],["style",{"_index":1656,"title":{},"body":{"components/DetailComponent.html":{}}}],["stylename",{"_index":2941,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["styles",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["styleurls",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sub",{"_index":734,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subject",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["submission",{"_index":1836,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["submit",{"_index":2861,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["submitted",{"_index":1009,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["submitvalue",{"_index":1067,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["subscribe",{"_index":1118,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"components/DetailComponent.html":{},"components/TimeLineComponent.html":{}}}],["subscribe(([locale,timezone",{"_index":2280,"title":{},"body":{"injectables/I18nService.html":{}}}],["subscribe((maxedretries=>this.maxedretries=maxedretries",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(card",{"_index":1260,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(computeddate",{"_index":1215,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(form",{"_index":2845,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["subscribe(isauth",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(loaded",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(m=>this.loginmessage=m",{"_index":2512,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(next=>this.basesettings",{"_index":1131,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(next=>this.dispatch(this.convert(next",{"_index":1125,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(oauth2conf",{"_index":721,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subscribe(open=>this.open",{"_index":1206,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(provider=>this.codeprovider={name:provider",{"_index":2514,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(third",{"_index":1268,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(v=>this.hidetimeline",{"_index":1886,"title":{},"body":{"components/FeedComponent.html":{}}}],["subscribe(value",{"_index":3241,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["subscribetoloadi18n",{"_index":3032,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["subscribetoloadi18n(observable",{"_index":2986,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["subscription",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/TimeLineComponent.html":{}}}],["subtitle",{"_index":1242,"title":{},"body":{"components/CardComponent.html":{}}}],["success",{"_index":76,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["success/message",{"_index":1500,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["successful",{"_index":2554,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["such",{"_index":837,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["summary",{"_index":1156,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["super(store",{"_index":1831,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["super.computetextvalidators",{"_index":1832,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["super.ngoninit",{"_index":2445,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["support",{"_index":3566,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":511,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{},"modules.html":{}}}],["svgpanzoom(document.getelementbyid('${svguid",{"_index":2230,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["swimlane/ngx",{"_index":1941,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1033,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["switch(operator",{"_index":2219,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch_list",{"_index":202,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":691,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{}}}],["switchmap(([lightcards",{"_index":1349,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap(([payload",{"_index":954,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action",{"_index":997,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action:loadlightcardssuccess",{"_index":2409,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["switchmap((action:patchsettings)=>this.service.patchusersettings(action.payload.settings",{"_index":2753,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["switchmap((af:applyfilter",{"_index":1378,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap((auth)=>this.loaduserdata(auth",{"_index":799,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["switchmap((ids:string",{"_index":2990,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(action",{"_index":1275,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{}}}],["switchmap(menu=>zip(of(menu),this.service.loadi18nformenuentries(menu",{"_index":2538,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["switchmap(third",{"_index":2926,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(ts=>from(ts",{"_index":2965,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["system",{"_index":128,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["t",{"_index":2531,"title":{},"body":{"classes/Map.html":{}}}],["t.i18nlabelkey",{"_index":2970,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.menuentries",{"_index":2971,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.version",{"_index":2969,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tab",{"_index":1734,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tab.active",{"_index":1733,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":3443,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["tabs",{"_index":1740,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tag",{"_index":1904,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tag_filter",{"_index":2063,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["tagfilterform",{"_index":2822,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["tags",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tagsfiltercomponent",{"_index":441,"title":{"components/TagsFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["take",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["takes",{"_index":1588,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/RouterStateUrl.html":{}}}],["takeuntil",{"_index":1103,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":1120,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe",{"_index":3125,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["takeuntil(this.service.unsubscribe",{"_index":1362,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["tap",{"_index":692,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(authenticationservice.saveauthenticationinformation",{"_index":798,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["tap(t=>object.setprototypeof(t,third.prototype",{"_index":2915,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t=>this.templatecache[key]=t",{"_index":2205,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["tap(t=>this.thirdcache.set(key,t",{"_index":2916,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(test=>console.log(`loaded",{"_index":2411,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["tap(v=>console.log(\"inittagfilteronloadedsettings",{"_index":1893,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tap(v=>console.log(\"loadfeedfilteronauthenticationsuccess",{"_index":1910,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tells",{"_index":943,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["template",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templatecache",{"_index":2138,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatecache:map",{"_index":2176,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatename",{"_index":1165,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{}}}],["templates",{"_index":2866,"title":{},"body":{"classes/Third.html":{}}}],["templates?:string",{"_index":170,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["templateurl",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templateurl:'icon.component.html",{"_index":2311,"title":{},"body":{"components/IconComponent.html":{}}}],["terms",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["test",{"_index":902,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["test_filter",{"_index":2065,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["text",{"_index":199,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["textsettingcomponent",{"_index":444,"title":{"components/TextSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["textsettingcomponent:22",{"_index":1806,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:28",{"_index":1812,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:35",{"_index":1811,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:47",{"_index":1814,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:51",{"_index":1813,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["that.time.currenttime().valueof",{"_index":2244,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["thate",{"_index":1840,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["third",{"_index":166,"title":{"classes/Third.html":{}},"body":{"classes/Action.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third)=>!(!third.menuentries",{"_index":2925,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third,html",{"_index":1672,"title":{},"body":{"components/DetailComponent.html":{}}}],["third.extractstate(this.card",{"_index":1269,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["third.menuentries.filter(entry",{"_index":2927,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdcache",{"_index":2904,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu",{"_index":187,"title":{"classes/ThirdMenu.html":{}},"body":{"classes/Action.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t1",{"_index":3059,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t2",{"_index":3067,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu(t.name",{"_index":2968,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuentry",{"_index":184,"title":{"classes/ThirdMenuEntry.html":{}},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id1",{"_index":3061,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id2",{"_index":3064,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id3",{"_index":3069,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentryid",{"_index":2922,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuid",{"_index":3044,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdmenus",{"_index":2624,"title":{},"body":{"components/NavbarComponent.html":{}}}],["thirdmenuversion",{"_index":2921,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdname",{"_index":3047,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdname}.${version",{"_index":2910,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdparty",{"_index":543,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomRouterEffects.html":{},"modules/ThirdpartyModule.html":{}}}],["thirdpartymodule",{"_index":2876,"title":{"modules/ThirdpartyModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"index.html":{},"modules.html":{}}}],["thirdpartyroutingmodule",{"_index":2880,"title":{"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["thirds",{"_index":1622,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["thirdservice",{"_index":2407,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdsi18nloader",{"_index":2885,"title":{"classes/ThirdsI18nLoader.html":{}},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloader(thirdsservice",{"_index":3023,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloaderfactory(thirdsservice",{"_index":3022,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsservice",{"_index":1252,"title":{"injectables/ThirdsService.html":{}},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"index.html":{}}}],["thirdsservicemock",{"_index":3054,"title":{"classes/ThirdsServiceMock.html":{}},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdsurl",{"_index":2900,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirparty",{"_index":2108,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["this.$injector.get(translateservice",{"_index":3021,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this._defaultfilters",{"_index":2033,"title":{},"body":{"injectables/FilterService.html":{}}}],["this._description",{"_index":2381,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._filter",{"_index":2836,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(first",{"_index":3124,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this._filter$.pipe(first(),takeuntil(this.ngunsubscribe$)).subscribe",{"_index":2841,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((next",{"_index":2838,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._htmlcontent",{"_index":1673,"title":{},"body":{"components/DetailComponent.html":{}}}],["this._i18nprefix",{"_index":1199,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["this._locale",{"_index":2284,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._selectediframeurl",{"_index":2358,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._thirdmenus",{"_index":2647,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._thirdmenus=this.store.select(selectmenustatemenu",{"_index":2642,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._time",{"_index":2383,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._timezone",{"_index":2288,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._username",{"_index":2379,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.actions",{"_index":949,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["this.actions$.pipe",{"_index":935,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.actions$.pipe(oftype(authenticationactiontypes.rejectlogin",{"_index":991,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.active",{"_index":2009,"title":{},"body":{"classes/Filter.html":{}}}],["this.assignconfigurationproperties(oauth2conf",{"_index":722,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.attachaction(button",{"_index":1689,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.authservice.asktokenfromcode(code).pipe",{"_index":955,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.asktokenfrompassword(payload.username",{"_index":999,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.checkauthentication(authenticationservice.extracttoken",{"_index":951,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.extractidentificationinformation",{"_index":1050,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.basesettings",{"_index":1138,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.big",{"_index":2326,"title":{},"body":{"components/IconComponent.html":{}}}],["this.big?'big':this.medium?'medium':'small",{"_index":2332,"title":{},"body":{"components/IconComponent.html":{}}}],["this.bindactions(third",{"_index":1678,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.card",{"_index":1261,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisher",{"_index":1652,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.card.publisherversion",{"_index":1267,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.cardoperationsurl",{"_index":1414,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardoperationsurl}&notification=true&rangestart=${minus2hour.valueof()}&rangeend=${plus48hours.valueof",{"_index":1432,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardservice.unsubscribecardoperation",{"_index":1030,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.cardsurl",{"_index":1416,"title":{},"body":{"injectables/CardService.html":{}}}],["this.changelocale(locale",{"_index":2281,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.clientid",{"_index":724,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.clientsecret",{"_index":727,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.computedisplayeddates(config",{"_index":1213,"title":{},"body":{"components/CardComponent.html":{}}}],["this.computelistvalidators",{"_index":2446,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.computemultivalidators",{"_index":2612,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.computenowmoment(realnowmoment",{"_index":3306,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.computetextvalidators",{"_index":2859,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.conf",{"_index":3215,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.configloaded",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurl",{"_index":1527,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.confzoom",{"_index":3224,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.convert(auth",{"_index":797,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.createformgroup",{"_index":2835,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.currentpath",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.currenttimereference",{"_index":3101,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.currenttimereference.computenow(moment",{"_index":3085,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.dark",{"_index":2330,"title":{},"body":{"components/IconComponent.html":{}}}],["this.datetodisplay",{"_index":1228,"title":{},"body":{"components/CardComponent.html":{}}}],["this.datetodisplay=computeddate",{"_index":1216,"title":{},"body":{"components/CardComponent.html":{}}}],["this.datewithspacebeforemoment(moment(actualmoment",{"_index":3175,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.delegateurl",{"_index":729,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.delegateurl}&redirect_uri=${authenticationservice.computeredirecturi",{"_index":881,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.detail",{"_index":1650,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles",{"_index":1651,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles.foreach(style",{"_index":1653,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.details",{"_index":1264,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.changes.subscribe",{"_index":1730,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.filter((tab",{"_index":1732,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.push(...state.details",{"_index":1270,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.toarray().foreach(detail",{"_index":1741,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.dragend.emit(event",{"_index":1787,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragging",{"_index":1780,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragmove.emit(event",{"_index":1784,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragstart.emit(event",{"_index":1781,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.element.nativeelement.getelementsbytagname('button",{"_index":1683,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('script",{"_index":1680,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.expandedmenu=new",{"_index":2644,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedmenu[index]=!this.expandedmenu[index",{"_index":2649,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedusermenu=!this.expandedusermenu",{"_index":2652,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expireclaim",{"_index":735,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.extractparams(child",{"_index":1607,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extractparams(routerstate.root",{"_index":1601,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.fetchcardoperation(new",{"_index":1431,"title":{},"body":{"injectables/CardService.html":{}}}],["this.fetchi18njson(publisher",{"_index":3002,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.fetchthird(thirdname,version",{"_index":2914,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.form",{"_index":1106,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value,{emitevent:false",{"_index":2614,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value?value",{"_index":2451,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.form.valuechanges",{"_index":1119,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.formbuilder.group",{"_index":2849,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.funktion",{"_index":2008,"title":{},"body":{"classes/Filter.html":{}}}],["this.funktion(card,this.status",{"_index":2013,"title":{},"body":{"classes/Filter.html":{}}}],["this.getcurrentguid().tostring",{"_index":2079,"title":{},"body":{"classes/GuidService.html":{}}}],["this.getroutepe",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["this.guid",{"_index":2076,"title":{},"body":{"classes/GuidService.html":{}}}],["this.guidservice.getcurrentguid",{"_index":795,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.guidservice.getcurrentguidstring",{"_index":1413,"title":{},"body":{"injectables/CardService.html":{}}}],["this.handlebars.executetemplate(this.detail.templatename",{"_index":1671,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handledate(lightcard.enddate",{"_index":1224,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.lttd",{"_index":1218,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.publishdate",{"_index":1220,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.startdate",{"_index":1222,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handleerrorontokengeneration(errorresponse,'authenticate",{"_index":1001,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handleerrorontokengeneration(errorresponse,'code",{"_index":959,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handlenewtoken(this.httpclient.post(this.asktokenurl",{"_index":786,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.handlerejectedlogin('invalid",{"_index":1051,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.hide",{"_index":2515,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hrefsofcsslink.push(safecssurl",{"_index":1663,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.httpclient.get(`${this.cardsurl}/${id",{"_index":1418,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.configurl",{"_index":1529,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher",{"_index":2919,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/i18n",{"_index":2952,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/templates/${name",{"_index":2938,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/`).pipe",{"_index":2964,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.userdataurl}/${auth.identifier",{"_index":801,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.httpclient.get(`${this.usersurl}/users/${this.userid}/settings",{"_index":2787,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.patch(`${this.usersurl}/users/${this.userid}/settings",{"_index":2789,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.post",{"_index":1451,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.post(this.checktokenurl",{"_index":761,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.iconpath",{"_index":2324,"title":{},"body":{"components/IconComponent.html":{}}}],["this.initfilters",{"_index":2034,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.initformgroup",{"_index":1107,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.initializehandlebarstemplates",{"_index":1649,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initializehrefsofcsslink",{"_index":1648,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initrecipientfilter",{"_index":2056,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittagfilter",{"_index":2060,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittimefilter",{"_index":2058,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittypefilter",{"_index":2054,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.isauthenticated",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isequal(forma",{"_index":1123,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.isvirtualtimeundefine",{"_index":3315,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.lastcards",{"_index":3255,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.light",{"_index":2331,"title":{},"body":{"components/IconComponent.html":{}}}],["this.lightcard",{"_index":1214,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.publisher+'.'+this.lightcard.publisherversion",{"_index":1200,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcards",{"_index":1879,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.lightcards$.pipe(debouncetime(300",{"_index":3240,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.loadedi18n",{"_index":2996,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadedi18n.push(result.id",{"_index":3018,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadingi18n",{"_index":2994,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadingi18n.push(id",{"_index":2998,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.locales",{"_index":2736,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.loginclaim",{"_index":731,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.medium",{"_index":2328,"title":{},"body":{"components/IconComponent.html":{}}}],["this.mousewheelfunc(event",{"_index":2590,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.mousewheelup.emit(event",{"_index":2601,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.ngunsubscribe$.complete",{"_index":1133,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":1132,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.open=true",{"_index":1198,"title":{},"body":{"components/CardComponent.html":{}}}],["this.pattern",{"_index":2862,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.placeholder",{"_index":1126,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.preparedlist",{"_index":2435,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.map(e=>e.value).indexof(control.value",{"_index":2457,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.push",{"_index":2442,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.preparedlist.push({value",{"_index":2437,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.processes[card.process",{"_index":177,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["this.querytemplate(card.publisher,card.publisherversion,templatename).pipe",{"_index":2193,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.querythird(thirdmenuid,thirdmenuversion).pipe",{"_index":2923,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.referencetime",{"_index":3312,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.registerarrayatindex",{"_index":2186,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindexlength",{"_index":2189,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerbool",{"_index":2190,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registercardaction",{"_index":2181,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerdateformat",{"_index":2180,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registeri18n",{"_index":2183,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registermath",{"_index":2187,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernow",{"_index":2191,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernumberformat",{"_index":2179,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerpreservespace",{"_index":2178,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerslice",{"_index":2185,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersort",{"_index":2184,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersplit",{"_index":2188,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersvg",{"_index":2182,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.reinsertscripts",{"_index":1677,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.requiredfield",{"_index":2449,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.resetstate",{"_index":1012,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.retryconfigurationloading",{"_index":1514,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.retrydelay",{"_index":1513,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.router.navigate",{"_index":2550,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.router.navigate(['/'+this.currentpath,'cards',this.lightcard.id",{"_index":1197,"title":{},"body":{"components/CardComponent.html":{}}}],["this.router.navigate(['/login",{"_index":938,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":1674,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(cssurl",{"_index":1662,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(iframeurl",{"_index":2359,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.selectdetail(this.details.first",{"_index":1738,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selection",{"_index":1883,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.service.computethirdsmenu",{"_index":2537,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.fetchconfiguration",{"_index":1494,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.service.fetchtimereferences().pipe",{"_index":3087,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.fetchusersettings",{"_index":2745,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.service.getcardoperation",{"_index":1361,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.service.loadcard(action.payload.id",{"_index":1276,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.movetocodeflowloginpage",{"_index":2522,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.pulsate",{"_index":3082,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.querymenuentryurl(action.payload.menu_id",{"_index":2545,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.updatecardsubscriptionwithdates(af.payload.status.start,af.payload.status.end",{"_index":1379,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.setting",{"_index":1112,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.setting$.subscribe(next",{"_index":1115,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.size",{"_index":2333,"title":{},"body":{"components/IconComponent.html":{}}}],["this.small",{"_index":2329,"title":{},"body":{"components/IconComponent.html":{}}}],["this.speed",{"_index":3322,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.sprites='sprites",{"_index":2338,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites.svg",{"_index":2340,"title":{},"body":{"components/IconComponent.html":{}}}],["this.status",{"_index":2010,"title":{},"body":{"classes/Filter.html":{}}}],["this.store",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch",{"_index":2846,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.store.dispatch(new",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/BaseSettingComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.store.pipe",{"_index":1880,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(selectcurrenturl)).subscribe(url",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectexpirationtime",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectrouterstate",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector('feed.card.time.display",{"_index":1209,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(buildconfigselector('feed.timeline.hide",{"_index":1885,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('i10n.supported.time",{"_index":2739,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('i18n.supported.locales",{"_index":2737,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.mode",{"_index":2508,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.provider",{"_index":2513,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector(`settings.${this.settingpath",{"_index":1127,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.tag_filter",{"_index":2837,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.time_filter",{"_index":3111,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.type_filter",{"_index":3417,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale",{"_index":2278,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('timezone",{"_index":2279,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector('description",{"_index":2382,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector(this.settingpath",{"_index":1113,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(cardselectors.selectcardstateselected",{"_index":1259,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.store.select(feedselectors.selectlightcardselection",{"_index":1884,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(selectcardstateselectedid",{"_index":1204,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(selectcurrentdate",{"_index":2384,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(selectcurrenturl).subscribe(url",{"_index":1201,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.store.select(selectidentifier",{"_index":1128,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(selectidentifier).subscribe(id=>this.userid=id",{"_index":2786,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.store.select(selectmenustateselectediframeurl).subscribe",{"_index":2356,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.store.select(selectmessage).pipe(filter(m=>m!=null",{"_index":2510,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(selecttimereference).subscribe",{"_index":3100,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.store.select(selectusernameoridentifier",{"_index":2380,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(timelineselectors.selectlastcardsselection",{"_index":3256,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscribetoloadi18n(observable",{"_index":2980,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.subscription",{"_index":3239,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":3268,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.tagfilterform",{"_index":2834,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue",{"_index":2840,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue(next.active?next.status.tags",{"_index":2839,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.templatecache[key",{"_index":2200,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdcache.get(key",{"_index":2911,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirds.computethirdcssurl(publisher",{"_index":1655,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.thirds.fetchhbstemplate(publisher,version,name,locale).pipe",{"_index":2203,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdservice.loadi18nforlightcards(action.payload.lightcards",{"_index":2410,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.thirdsservice.querythird(this.card.publisher",{"_index":1266,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.thirdsurl",{"_index":2906,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.time.formatdatetime(timestamp",{"_index":1226,"title":{},"body":{"components/CardComponent.html":{}}}],["this.timefilterform",{"_index":3110,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(null",{"_index":3121,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(this.timeservice.asinputstring(next.status.end",{"_index":3120,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').value",{"_index":3123,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(null",{"_index":3116,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(this.timeservice.asinputstring(next.status.start",{"_index":3115,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').value",{"_index":3122,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.formattime(moment(values[0",{"_index":2386,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.timeservice.parsestring(form.end).valueof",{"_index":3129,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.start).valueof",{"_index":3128,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('end').value).valueof",{"_index":3117,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('start').value).valueof",{"_index":3112,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timezones",{"_index":2738,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.translate().currentlang",{"_index":3011,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().getlangs",{"_index":3003,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().settranslation(lang",{"_index":3014,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().use(currentlang",{"_index":3016,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().use(lang",{"_index":3015,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate.getbrowserlang",{"_index":2198,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this.translate.use(this._locale",{"_index":2286,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.translateservice.get(v.label.key",{"_index":2443,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.typefilterform",{"_index":3416,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(!next.active",{"_index":3420,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(true",{"_index":3427,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(!next.active",{"_index":3418,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(true",{"_index":3426,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(!next.active",{"_index":3424,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(true",{"_index":3429,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(!next.active",{"_index":3422,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(true",{"_index":3428,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.unsubscribe$.next",{"_index":1436,"title":{},"body":{"injectables/CardService.html":{}}}],["this.updateasync",{"_index":1729,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.updatevalue(next",{"_index":1116,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.urlcleaner",{"_index":2905,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlcleaner.encodevalue(`${this.thirdsurl}/${publisher}/css/${stylename",{"_index":2945,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.usecodeflow",{"_index":2507,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform",{"_index":2516,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('identifier').value",{"_index":2518,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('password').value",{"_index":2519,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.reset",{"_index":2521,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.valid",{"_index":2517,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usersurl",{"_index":2784,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.values",{"_index":2436,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.virtualtime",{"_index":3329,"title":{},"body":{"classes/TimeReference.html":{}}}],["those",{"_index":1285,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{}}}],["throw",{"_index":1109,"title":{},"body":{"components/BaseSettingComponent.html":{},"modules/ServicesModule.html":{}}}],["throwerror",{"_index":689,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{}}}],["throwerror('the",{"_index":774,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["throwerror(err",{"_index":2933,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror(error",{"_index":812,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["throwerror(new",{"_index":2930,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thrown",{"_index":747,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["thus",{"_index":129,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["tick",{"_index":1855,"title":{"classes/Tick.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"modules/FeedModule.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tick({currenttime",{"_index":3084,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["tick='[time",{"_index":1854,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["ticks",{"_index":3146,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["time",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["time:timeservice",{"_index":2177,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["time_filter",{"_index":2064,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["timeactions",{"_index":1867,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/typealiases.html":{}}}],["timeactiontypes",{"_index":1853,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timeactiontypes.failtoupdatetimereference",{"_index":1849,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["timeactiontypes.tick",{"_index":3076,"title":{},"body":{"classes/Tick.html":{}}}],["timeactiontypes.updatetimereference",{"_index":3453,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["timeeffects",{"_index":629,"title":{"injectables/TimeEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TimeEffects.html":{}}}],["timefiltercomponent",{"_index":445,"title":{"components/TimeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timefilterform",{"_index":3102,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["timeinitialstate",{"_index":3355,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timeline",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactions",{"_index":2403,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/typealiases.html":{}}}],["timelineactiontypes",{"_index":2398,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactiontypes.inittimeline",{"_index":2397,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelineactiontypes.setcarddatatimeline",{"_index":2401,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelinecomponent",{"_index":447,"title":{"components/TimeLineComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timelineinitialstate",{"_index":3362,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timelinereducer",{"_index":592,"title":{},"body":{"interfaces/AppState.html":{}}}],["timelinestate",{"_index":573,"title":{"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["timer",{"_index":1100,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timer(500",{"_index":1124,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timereducer",{"_index":605,"title":{},"body":{"interfaces/AppState.html":{}}}],["timeref",{"_index":3090,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["timereference",{"_index":1850,"title":{"classes/TimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["timereference(null,null,null,timespeed.x1",{"_index":3341,"title":{},"body":{"classes/TimeReference.html":{}}}],["timereference:neutraltimereference",{"_index":3356,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timescale",{"_index":3360,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timeservice",{"_index":1178,"title":{},"body":{"components/CardComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"index.html":{}}}],["timespan",{"_index":3342,"title":{"classes/TimeSpan.html":{}},"body":{"classes/TimeSpan.html":{}}}],["timespans",{"_index":3347,"title":{},"body":{"classes/TimeSpan.html":{}}}],["timespeed",{"_index":3278,"title":{},"body":{"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"miscellaneous/enumerations.html":{}}}],["timespeed.x1",{"_index":3314,"title":{},"body":{"classes/TimeReference.html":{}}}],["timespeed[value",{"_index":3299,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestamp",{"_index":1186,"title":{},"body":{"components/CardComponent.html":{}}}],["timestampnow",{"_index":3283,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestate",{"_index":572,"title":{"interfaces/TimeState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimeState.html":{}}}],["timezone",{"_index":1852,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/I18nService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"dependencies.html":{}}}],["timezones",{"_index":2730,"title":{},"body":{"components/SettingsComponent.html":{}}}],["title",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["titleposition",{"_index":1160,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["titlestyle",{"_index":1164,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["tlabel1",{"_index":3060,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tlabel2",{"_index":3068,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{entry.label",{"_index":2660,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.entries[0].label",{"_index":2661,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.label",{"_index":2658,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmp",{"_index":3243,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["todo",{"_index":548,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["toggle",{"_index":2852,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["togglemenu",{"_index":2622,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index",{"_index":2628,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index:number",{"_index":2648,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggleusermenu",{"_index":2623,"title":{},"body":{"components/NavbarComponent.html":{}}}],["token",{"_index":81,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["tokeninjector",{"_index":2716,"title":{"interceptors/TokenInjector.html":{}},"body":{"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["trace",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["trans",{"_index":3006,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["transform",{"_index":3464,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transform(value",{"_index":3465,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced",{"_index":3469,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced(value",{"_index":3470,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered",{"_index":3476,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered(value",{"_index":3477,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["translate",{"_index":1177,"title":{},"body":{"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translate.config",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["translate/core",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":3515,"title":{},"body":{"dependencies.html":{}}}],["translateconfig",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":2887,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translatemodule",{"_index":503,"title":{},"body":{"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["translatemodule.forroot(translateconfig",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translateservice,private",{"_index":2277,"title":{},"body":{"injectables/I18nService.html":{}}}],["translation",{"_index":3005,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translation',error",{"_index":3020,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translationelement",{"_index":3012,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["treatment",{"_index":3152,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tree",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tries",{"_index":2553,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["trigger",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardOperationEffects.html":{}}}],["triggered",{"_index":1563,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["triggered.\\naction",{"_index":1703,"title":{},"body":{"components/DetailComponent.html":{}}}],["triggers",{"_index":989,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["true",{"_index":817,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["try",{"_index":71,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["trying",{"_index":1110,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["trylogout",{"_index":948,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["trytologin",{"_index":20,"title":{"classes/TryToLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["trytologin({username",{"_index":2520,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytologout",{"_index":72,"title":{"classes/TryToLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":3534,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1975,"title":{},"body":{"classes/Filter.html":{}}}],["type",{"_index":33,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["type=timeactiontypes.tick",{"_index":1862,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["type=timeactiontypes.updatetimereference",{"_index":1865,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["type_filter",{"_index":2061,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["typeaheadmodule",{"_index":1956,"title":{},"body":{"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["typeaheadsettingscomponent",{"_index":449,"title":{"components/TypeAheadSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typealiases",{"_index":3569,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":1029,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["typefiltercomponent",{"_index":451,"title":{"components/TypeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typefilterform",{"_index":3409,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["typeof",{"_index":2253,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/ListSettingComponent.html":{},"classes/TimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["types/jwt",{"_index":3518,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":54,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["typically",{"_index":1562,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["u",{"_index":1794,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["u.firstname",{"_index":805,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["u.lastname",{"_index":807,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["u00a0",{"_index":2248,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["uid",{"_index":1159,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["unable",{"_index":1006,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unavailable",{"_index":1040,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["uncomment",{"_index":1788,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["undefined",{"_index":2327,"title":{},"body":{"components/IconComponent.html":{},"classes/TimeReference.html":{}}}],["undefined,undefined",{"_index":1988,"title":{},"body":{"classes/Filter.html":{}}}],["unexpected",{"_index":247,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["unique",{"_index":719,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["unselectedvalues",{"_index":212,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["unselection",{"_index":1790,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["unsubscribe",{"_index":1385,"title":{},"body":{"injectables/CardService.html":{}}}],["unsubscribecardoperation",{"_index":1388,"title":{},"body":{"injectables/CardService.html":{}}}],["unused",{"_index":1287,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{}}}],["up",{"_index":1161,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["upadate",{"_index":1857,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":10,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["updateasync",{"_index":1712,"title":{},"body":{"components/DetailsComponent.html":{}}}],["updatecardsubscriptionwithdates",{"_index":1389,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart",{"_index":1400,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart:number,rangeend:number):observable",{"_index":1450,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":1297,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["updatedsubscription",{"_index":243,"title":{"classes/UpdatedSubscription.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updateon",{"_index":2448,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["updatestate",{"_index":155,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatestatebeforeaction",{"_index":156,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatesubscription",{"_index":244,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatetimereference",{"_index":1864,"title":{"classes/UpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetimereference({timereference",{"_index":3089,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["updatetimereference='[time",{"_index":1856,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["updatevalue",{"_index":1068,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value",{"_index":1089,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value:any",{"_index":1134,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["upon",{"_index":1503,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/Filter.html":{}}}],["uri",{"_index":196,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["uribase",{"_index":883,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["uribase}${pathend",{"_index":888,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["url",{"_index":186,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/check_token",{"_index":3380,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/code",{"_index":3382,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/token",{"_index":3381,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.split",{"_index":2641,"title":{},"body":{"components/NavbarComponent.html":{}}}],["url.split('/')[1",{"_index":1203,"title":{},"body":{"components/CardComponent.html":{}}}],["urlcleaner",{"_index":2903,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["urlencoded",{"_index":758,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["urlsearchparams",{"_index":752,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["usable",{"_index":869,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["use",{"_index":1210,"title":{},"body":{"components/CardComponent.html":{},"classes/Filter.html":{},"interfaces/TimelineState.html":{}}}],["useclass",{"_index":525,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["usecodeflow",{"_index":2493,"title":{},"body":{"components/LoginComponent.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/StateModule.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["user",{"_index":66,"title":{"classes/User.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["userdataurl",{"_index":711,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["userform",{"_index":2494,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":2775,"title":{},"body":{"injectables/SettingsService.html":{}}}],["username",{"_index":109,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["username$|async}}{{time$|async",{"_index":2387,"title":{},"body":{"components/InfoComponent.html":{}}}],["usersurl",{"_index":2776,"title":{},"body":{"injectables/SettingsService.html":{}}}],["uses",{"_index":1004,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["using",{"_index":675,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["utc",{"_index":901,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["v",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/ListSettingComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["v.label",{"_index":2439,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["v.label.parameters",{"_index":2444,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["v.label|async",{"_index":2458,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["v.value",{"_index":2440,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["v1",{"_index":2207,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["v2",{"_index":2209,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["val",{"_index":2961,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["val.enddate",{"_index":3245,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.severity",{"_index":3247,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.startdate",{"_index":3246,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.summary.parameters.value",{"_index":3252,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["valid",{"_index":740,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/ListSettingComponent.html":{}}}],["validate",{"_index":87,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["validators",{"_index":1830,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validators.push(this.valueinlistvalidator",{"_index":2447,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["validators.push(validators.email",{"_index":1833,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["validators.push(validators.pattern(this.pattern",{"_index":2863,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["validators.push(validators.required",{"_index":2450,"title":{},"body":{"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validity",{"_index":979,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["value",{"_index":50,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListSettingComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["value.replace",{"_index":2246,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.setting",{"_index":1140,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["value.slice(from",{"_index":2226,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.split(splitvalue)[index",{"_index":2215,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.tostring",{"_index":3500,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["value[index",{"_index":2222,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index].length",{"_index":2212,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["valuechanges",{"_index":2842,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["valueinlist",{"_index":2432,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["valueinlistvalidator",{"_index":2424,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["values",{"_index":209,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["var",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["variant",{"_index":1237,"title":{},"body":{"components/CardComponent.html":{}}}],["variation",{"_index":926,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["verifyexpirationdate",{"_index":823,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["version",{"_index":189,"title":{},"body":{"classes/Action.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["version:string",{"_index":168,"title":{},"body":{"classes/Action.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["version:string):observable",{"_index":2909,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["versionparam",{"_index":2946,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["via",{"_index":22,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["virtual",{"_index":1844,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/UpdateTimeReference.html":{}}}],["virtualtime",{"_index":3275,"title":{},"body":{"classes/TimeReference.html":{}}}],["visible",{"_index":550,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["voir",{"_index":3210,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["w",{"_index":3176,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["wait",{"_index":1676,"title":{},"body":{"components/DetailComponent.html":{}}}],["warning",{"_index":1699,"title":{},"body":{"components/DetailComponent.html":{}}}],["way",{"_index":3096,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["weather",{"_index":1298,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["web",{"_index":676,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["week",{"_index":3160,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["went",{"_index":1842,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wheel",{"_index":2587,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive",{"_index":1950,"title":{},"body":{"modules/FeedModule.html":{}}}],["wheel.directive.ts",{"_index":2567,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:11",{"_index":2577,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:13",{"_index":2576,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:16",{"_index":2581,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:21",{"_index":2579,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:26",{"_index":2583,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:34",{"_index":2585,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["width",{"_index":1231,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["win",{"_index":113,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["window.event",{"_index":2595,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["window.location.href",{"_index":879,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["window.location.href.indexof('code",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["window.location.pathname",{"_index":1585,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["withlatestfrom",{"_index":1021,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/I18nService.html":{}}}],["withlatestfrom(this.store.select(buildconfigselector('settings.defaulttags",{"_index":1895,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(selectcardstateselectedid",{"_index":1348,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["withlatestfrom(this.store.select(selectcode",{"_index":953,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["withlatestfrom(this.store.select(selectconfigretry",{"_index":1516,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["without",{"_index":123,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/BaseSettingComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["word",{"_index":1235,"title":{},"body":{"components/CardComponent.html":{}}}],["work",{"_index":2991,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["works",{"_index":663,"title":{},"body":{"components/ArchivesComponent.html":{},"components/BaseSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NoSelectionComponent.html":{}}}],["wrong",{"_index":995,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["www",{"_index":757,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["x1",{"_index":3330,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x10",{"_index":3332,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x2",{"_index":3331,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x3600",{"_index":3336,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x60",{"_index":3334,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["xaxistickformat",{"_index":3463,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["xaxistickformatpipe",{"_index":1920,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["y",{"_index":3204,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["year",{"_index":3168,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["years",{"_index":3208,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["yes",{"_index":681,"title":{},"body":{"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/I18n.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/TimeSpan.html":{}}}],["yy",{"_index":3498,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["yyyy",{"_index":3486,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["zip",{"_index":1647,"title":{},"body":{"components/DetailComponent.html":{},"injectables/I18nService.html":{},"injectables/MenuEffects.html":{}}}],["zip(this.thirds.querythird(this.card.publisher,this.card.publisherversion",{"_index":1670,"title":{},"body":{"components/DetailComponent.html":{}}}],["zone.js",{"_index":3536,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":2740,"title":{},"body":{"components/SettingsComponent.html":{}}}],["zoom",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptLogIn.html":{"url":"classes/AcceptLogIn.html","title":"class - AcceptLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the authentication information\nEmitted by {AuthenticationEffects} in the following {Observable} @members:\n  * TryToLogIn\n  * CheckAuthentication via handleLogInAttempt @method\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\ncontaining the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: PayloadForSuccessfulAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        PayloadForSuccessfulAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PayloadForSuccessfulAuthentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOut.html":{"url":"classes/AcceptLogOut.html","title":"class - AcceptLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to removes authentication information of the system and thus logOut the user.\nEmitted by {AuthenticationEffect} in the following {Observable} @members:\n  * TryToLogOut\n  * RejectLogInAttempt\n  Consume by {AuthenticationEffect} in the AcceptLogOut {Observable} @member\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:128\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:128\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOutSuccess.html":{"url":"classes/AcceptLogOutSuccess.html","title":"class - AcceptLogOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store to remove authentication information\nEmitted by {AuthenticationEffect} in AcceptLogOut {Observable} @member.\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:144\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ActionType, label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockAction: boolean, lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, called: boolean, needsConfirm: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ActionType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                        Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        called\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLightCardFailure.html":{"url":"classes/AddLightCardFailure.html","title":"class - AddLightCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLightCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddLightCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:74\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configLoaded\n                            \n                            \n                                currentPath\n                            \n                            \n                                getRoutePE\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                maxedRetries\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, i18nService: I18nService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:33\n                            \n                        \n\n                \n                    \n                            NB: I18nService is injected to trigger its constructor at application startup\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                        I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:48\n                \n            \n\n\n            \n                \n                    On Init the app take trace of the current url and of the authentication status\nOnce the subscription done, send an Action to Check the current authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoutePE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OperatorFabric'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {InitAuthStatus} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl, selectRouterState} from '@ofSelectors/router.selectors';\nimport {selectExpirationTime} from '@ofSelectors/authentication.selectors';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {isInTheFuture} from \"@ofServices/authentication.service\";\nimport {LoadConfig} from \"@ofActions/config.actions\";\nimport {selectConfigLoaded, selectMaxedRetries} from \"@ofSelectors/config.selectors\";\nimport {I18nService} from \"@ofServices/i18n.service\";\n\n@Component({\n    selector: 'of-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    title = 'OperatorFabric';\n    getRoutePE: Observable;\n    currentPath: any;\n    isAuthenticated$: boolean = false;\n    configLoaded: boolean = false ;\n    private maxedRetries: boolean = false;\n\n    /**\n     * NB: I18nService is injected to trigger its constructor at application startup\n     * @param store\n     * @param i18nService\n     */\n    constructor(private store: Store,private i18nService:I18nService) {\n        this.getRoutePE = this.store.pipe(select(selectRouterState));\n    }\n\n    /**\n     * On Init the app take trace of the current url and of the authentication status\n     * Once the subscription done, send an Action to Check the current authentication status.\n     */\n    ngOnInit() {\n        console.log(`location: ${location.href}`)\n        let i = window.location.href.indexOf('code');\n        if(i != -1){\n            this.store.dispatch(new InitAuthStatus({code:window.location.href.substring(i + 5)}))\n        }\n        this.store.pipe(select(selectCurrentUrl)).subscribe(url => this.currentPath = url);\n        this.store.pipe(select(selectExpirationTime),\n            map(isInTheFuture)\n                        ).subscribe(isAUth => this.isAuthenticated$ = isAUth);\n        this.store\n            .select(selectConfigLoaded)\n            .subscribe(loaded => this.configLoaded = loaded);\n        this.store\n            .select(selectMaxedRetries)\n            .subscribe((maxedRetries=>this.maxedRetries=maxedRetries));\n        // First Action send by the application, is the user currently authenticated ?\n        this.store.dispatch(new LoadConfig());\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n        Application is loading ...\n    \n    \n        Application is not available yet, please reload later (F5)\n    \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n.button {margin-right: 8px;}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Application is loading ...                Application is not available yet, please reload later (F5)    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InfoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            StateModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {StateModule} from '@ofStore/state.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ServicesModule} from '@ofServices/services.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {IconComponent} from './components/icon/icon.component';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {translateConfig} from \"./translate.config\";\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport { InfoComponent } from './components/navbar/info/info.component';\n\nlibrary.add(faExternalLinkAlt);\nlibrary.add(faSignOutAlt)\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        StateModule.forRoot(),\n        ServicesModule.forRoot(),\n        NgbModule,\n        TranslateModule.forRoot(translateConfig),\n        FontAwesomeModule\n    ],\n    declarations: [AppComponent, NavbarComponent, LoginComponent, IconComponent, InfoComponent],\n    providers: [ { provide: LocationStrategy, useClass: HashLocationStrategy }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from '@ofServices/guard.service';\nimport {LoginComponent} from './components/login/login.component';\nimport {environment} from \"@env/environment\";\n\nconst routes: Routes = [\n    // {\n    //     path: 'login',\n    //     component: LoginComponent\n    // },\n    {\n        path: 'feed',\n        loadChildren: './modules/feed/feed.module#FeedModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'archives',\n        loadChildren: './modules/archives/archives.module#ArchivesModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'thirdparty',\n        loadChildren: './modules/thirdparty/thirdparty.module#ThirdpartyModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'settings',\n        loadChildren: './modules/settings/settings.module#SettingsModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'navbar',\n        component: LoginComponent\n    },\n    {path: '**', redirectTo: '/feed'}\n];\n// TODO manage visible path more gently\nexport const navigationRoutes: Routes = routes.slice(0, 2);\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes,{ enableTracing: false, preloadingStrategy: PreloadAllModules })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authentication\n                                \n                                \n                                        card\n                                \n                                \n                                        config\n                                \n                                \n                                        feed\n                                \n                                \n                                        menu\n                                \n                                \n                                        router\n                                \n                                \n                                        settings\n                                \n                                \n                                        time\n                                \n                                \n                                        timeline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                    \n                                \n                                \n                                    \n                                        authentication:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                    \n                                \n                                \n                                    \n                                        card:         CardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         ConfigState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         CardFeedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardFeedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         TimeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeline\n                                    \n                                \n                                \n                                    \n                                        timeline:         TimelineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimelineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport {RouterReducerState} from '@ngrx/router-store';\nimport {RouterStateUrl} from '@ofStore/states/router.state';\nimport {reducer as authenticationReducer} from '@ofStore/reducers/authentication.reducer';\nimport {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '@env/environment';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport {CardEffects} from '@ofEffects/card.effects';\nimport {CardOperationEffects} from '@ofEffects/card-operation.effects';\nimport {AuthenticationEffects} from '@ofEffects/authentication.effects';\nimport {RouterEffects} from 'ngrx-router';\nimport {CardFeedState} from '@ofStates/feed.state';\nimport {reducer as timelineReducer} from '@ofStore/reducers/timeline.reducer';\nimport {reducer as lightCardReducer} from '@ofStore/reducers/light-card.reducer';\nimport {reducer as cardReducer} from '@ofStore/reducers/card.reducer';\nimport {reducer as configReducer} from '@ofStore/reducers/config.reducer';\nimport {reducer as settingsReducer} from '@ofStore/reducers/settings.reducer';\nimport {reducer as menuReducer} from '@ofStore/reducers/menu.reducer';\nimport {reducer as timeReducer} from '@ofStore/reducers/time.reducer';\nimport {AuthState} from '@ofStates/authentication.state';\nimport {CardState} from \"@ofStates/card.state\";\nimport {CustomRouterEffects} from \"@ofEffects/custom-router.effects\";\nimport {MenuState} from \"@ofStates/menu.state\";\nimport {MenuEffects} from \"@ofEffects/menu.effects\";\nimport {LightCardEffects} from \"@ofEffects/light-card.effects\";\nimport {FeedFiltersEffects} from \"@ofEffects/feed-filters.effects\";\nimport {ConfigState} from \"@ofStates/config.state\";\nimport {ConfigEffects} from \"@ofEffects/config.effects\";\nimport {TimelineState} from \"@ofStates/timeline.state\";\nimport {SettingsState} from \"@ofStates/settings.state\";\nimport {SettingsEffects} from \"@ofEffects/settings.effects\";\nimport {TimeState} from \"@ofStates/time.state\";\nimport {TimeEffects} from \"@ofEffects/time.effects\";\n\nexport interface AppState {\n    router: RouterReducerState;\n    feed: CardFeedState;\n    timeline: TimelineState;\n    authentication: AuthState;\n    card: CardState;\n    menu: MenuState;\n    config: ConfigState;\n    settings: SettingsState;\n    time: TimeState;\n}\n\nexport const appEffects = [\n    CardEffects,\n    ConfigEffects,\n    SettingsEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects,\n    TimeEffects];\n\nexport const appReducer: ActionReducerMap = {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    timeline: timelineReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer,\n    settings: settingsReducer,\n    time: timeReducer\n};\n\nexport const appMetaReducers: MetaReducer[] = !environment.production\n    ? [storeFreeze]\n    : [];\n\nexport const storeConfig = {\n    metaReducers: appMetaReducers,\n    // initialState: {\n    //     router: routerInitialState,\n    // }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyFilter.html":{"url":"classes/ApplyFilter.html","title":"class - ApplyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ApplyFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchivesComponent.html":{"url":"components/ArchivesComponent.html","title":"component - ArchivesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchivesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/archives.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archives\n            \n\n            \n                styleUrls\n                ./archives.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archives.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/archives.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/archives.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-archives',\n  templateUrl: './archives.component.html',\n  styleUrls: ['./archives.component.scss']\n})\nexport class ArchivesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  archives works!\n\n\n    \n\n    \n                \n                    ./archives.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  archives works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchivesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesModule.html":{"url":"modules/ArchivesModule.html","title":"module - ArchivesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArchivesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArchivesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {ArchivesRoutingModule} from './archives-routing.module';\nimport {ArchivesComponent} from \"./archives.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ArchivesRoutingModule\n  ],\n  declarations: [ArchivesComponent]\n})\nexport class ArchivesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesRoutingModule.html":{"url":"modules/ArchivesRoutingModule.html","title":"module - ArchivesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {ArchivesComponent} from \"./archives.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ArchivesComponent,\n        // canActivate: [AuthenticationGuard]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArchivesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthObject.html":{"url":"classes/AuthObject.html","title":"class - AuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class used to try to login using the authentication web service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access_token\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, expires_in: number, clientId: Guid, identifier?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:288\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:291\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:293\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:292\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:294\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\nimport {User} from \"@ofModel/user.model\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError),\n            switchMap((auth)=>this.loadUserData(auth))\n        );\n    }\n\n    private loadUserData(auth:PayloadForSuccessfulAuthentication):Observable{\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(e=>of(auth))\n            );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate)\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        if(!this.delegateUrl)\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        else{\n            window.location.href = `${this.delegateUrl}&redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        }\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        code\n                                \n                                \n                                        expirationDate\n                                \n                                \n                                        firstName\n                                \n                                \n                                        identifier\n                                \n                                \n                                        lastName\n                                \n                                \n                                        message\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     Guid\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Guid\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                    \n                                \n                                \n                                    \n                                        expirationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface AuthState {\n    code: string;\n    identifier: string;\n    clientId: Guid;\n    token: string;\n    expirationDate: Date;\n    message: Message;\n    firstName: string;\n    lastName: string;\n}\n\nexport const authInitialState: AuthState = {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null,\n    firstName: null,\n    lastName: null\n};\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/authentication.effects.ts\n        \n\n            \n                Description\n            \n            \n                Management of the authentication of the current user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AcceptLogOut\n                            \n                            \n                                CheckAuthentication\n                            \n                            \n                                checkAuthenticationWhenReady\n                            \n                            \n                                RejectLogInAttempt\n                            \n                            \n                                TryToLogIn\n                            \n                            \n                                TryToLogOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleErrorOnTokenGeneration\n                            \n                            \n                                handleRejectedLogin\n                            \n                            \n                                    Private\n                                resetState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthenticationService, cardService: CardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/authentication.effects.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Store} state manager\n\n\n                                                        \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Action} {Observable} of Action of the Application\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice implementing the authentication business rules\n\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrouter service to redirect user accordingly to the user authentication status or variation of it.\n\nistanbul ignore next \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrorOnTokenGeneration\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrorOnTokenGeneration(errorResponse, category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRejectedLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRejectedLogin(errorMsg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthenticationActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AcceptLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:136\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\nIt tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\nThis {Effect} should be called as a consequence of a {TryLogOut} action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse,'code');\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:179\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\nIt extract the current authentication information if any and checks its validity, the expiration date.\n  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n  the {handleLogInAttempt} @method,\n  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\nThis {Effect} should be the first effect apply by the application to display the right page accordingly with the\ncurrent authentication state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthenticationWhenReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:61\n                            \n                        \n\n                \n                    \n                        Triggers Authentication Check when the application is ready\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RejectLogInAttempt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:155\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\nIt tells the {AuthenticationService} to clear authentication information from the system\nThis {Effect} should be called after a wrong login attempt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                            return this.handleErrorOnTokenGeneration(errorResponse,'authenticate');\n                            }\n                        ));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:83\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\nthe login payload to get an authentication token from the authentication service if the authentication is\nvalid and emit an {AcceptLogin} action with it.\nFor invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\nas paload\nThis effect should take action after the user has submitted login information in the login page by clicking\non the login button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap((action: TryToLogOut) => {\n                this.resetState();\n                return of(new EmptyLightCards(),new ClearCard(), new AcceptLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:110\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\nIt tells the {AuthenticationService} to clear the authentication information from the system and emit\nan {AcceptLogOut} Action.\nThis effect should take action after the Logout link/button has been clicked by the user.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable, of} from 'rxjs';\nimport {Action, Store} from '@ngrx/store';\nimport {\n    AcceptLogIn,\n    AcceptLogOut,\n    AcceptLogOutSuccess,\n    AuthenticationActions,\n    AuthenticationActionTypes,\n    CheckAuthenticationStatus,\n    RejectLogIn,\n    TryToLogIn,\n    TryToLogOut\n} from '@ofActions/authentication.actions';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {catchError, map, switchMap, tap, withLatestFrom} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {Router} from \"@angular/router\";\nimport {ConfigActionTypes} from \"@ofActions/config.actions\";\nimport {selectCode} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\nimport {CardService} from \"@ofServices/card.service\";\nimport {EmptyLightCards} from \"@ofActions/light-card.actions\";\nimport {ClearCard} from \"@ofActions/card.actions\";\n\n/**\n * Management of the authentication of the current user\n */\n@Injectable()\nexport class AuthenticationEffects {\n\n    /**\n     * @constructor\n     * @param store - {Store} state manager\n     * @param actions$ - {Action} {Observable} of Action of the Application\n     * @param authService - service implementing the authentication business rules\n     * @param router - router service to redirect user accordingly to the user authentication status or variation of it.\n     *\n     * istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private authService: AuthenticationService,\n                private cardService: CardService,\n                private router: Router) {\n    }\n\n    /**\n     * Triggers Authentication Check when the application is ready\n     */\n    @Effect()\n    checkAuthenticationWhenReady: Observable =\n        this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\n     * the login payload to get an authentication token from the authentication service if the authentication is\n     * valid and emit an {AcceptLogin} action with it.\n     * For invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\n     * as paload\n     *\n     * This effect should take action after the user has submitted login information in the login page by clicking\n     * on the login button.\n     *\n     * @member\n     * @name TryToLogin\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogIn: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                            return this.handleErrorOnTokenGeneration(errorResponse,'authenticate');\n                            }\n                        ));\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\n     * It tells the {AuthenticationService} to clear the authentication information from the system and emit\n     * an {AcceptLogOut} Action.\n     *\n     * This effect should take action after the Logout link/button has been clicked by the user.\n     *\n     * @member\n     * @name TryToLogOut\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap((action: TryToLogOut) => {\n                this.resetState();\n                return of(new EmptyLightCards(),new ClearCard(), new AcceptLogOut());\n            })\n        );\n\n    private resetState() {\n        AuthenticationService.clearAuthenticationInformation();\n        this.cardService.unsubscribeCardOperation();\n    }\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\n     * It tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\n     *\n     * This {Effect} should be called as a consequence of a {TryLogOut} action\n     *\n     * @member\n     * @name AcceptLogOut\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    AcceptLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        );\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\n     * It tells the {AuthenticationService} to clear authentication information from the system\n     *\n     * This {Effect} should be called after a wrong login attempt.\n\n     * @member\n     * @name RejectLogInAttempt\n     * @typedef {Observable}\n     */\n    @Effect()\n    RejectLogInAttempt: Observable =\n        this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()));\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\n     *It extract the current authentication information if any and checks its validity, the expiration date.\n     *  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n     *  the {handleLogInAttempt} @method,\n     *\n     *  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\n     *\n     * This {Effect} should be the first effect apply by the application to display the right page accordingly with the\n     * current authentication state.\n     *\n     * @member\n     * @name CheckAuthentication\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    CheckAuthentication: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse,'code');\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            );\n\n    handleErrorOnTokenGeneration(errorResponse,category:string) {\n        let message, key;\n        let params = new Map()\n        switch (errorResponse.status) {\n            case 401:\n                message = 'Unable to authenticate the user';\n                key = `login.error.${category}`;\n                break;\n            case 0:\n            case 500:\n                message = 'Authentication service currently unavailable';\n                key = 'login.error.unavailable';\n                break;\n            default:\n                message = 'Unexpected error';\n                key = 'login.error.unexpected';\n                params['error'] = errorResponse.message;\n        }\n        console.error(message, errorResponse);\n        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n    }\n\n    handleRejectedLogin(errorMsg: Message): AuthenticationActions {\n        AuthenticationService.clearAuthenticationInformation();\n        return new RejectLogIn({error: errorMsg});\n\n    }\n\n    // handleLogInAttempt(payload: CheckTokenResponse): AuthenticationActions {\n    //     if (payload) {\n    //         const authInfo = this.authService.extractIdentificationInformation();\n    //         return new AcceptLogIn(authInfo);\n    //\n    //     }\n    //     return this.handleRejectedLogin('invalid token');\n    // }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseSettingComponent.html":{"url":"components/BaseSettingComponent.html","title":"component - BaseSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/base-setting/base-setting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-base-setting\n            \n\n            \n                styleUrls\n                ./base-setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./base-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {PatchSettings} from \"@ofActions/settings.actions\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, filter, first, map, takeUntil} from \"rxjs/operators\";\nimport {FormGroup} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Component({\n    selector: 'of-base-setting',\n    templateUrl: './base-setting.component.html',\n    styleUrls: ['./base-setting.component.css']\n})\nexport class BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() public settingPath: string;\n    @Input() public messagePlaceOlder: string;\n    @Input() public requiredField: boolean;\n    private ngUnsubscribe$ = new Subject();\n    protected setting$;\n    protected placeholder$;\n    form: FormGroup;\n    private baseSettings = {};\n\n    constructor(protected store: Store) {\n\n    }\n\n    ngOnInit() {\n        this.form = this.initFormGroup();\n        if(!this.form){\n            throw 'Trying to instanciate component without form';\n        }\n        this.setting$ = this.store.select(buildSettingsSelector(this.settingPath))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n            this.setting$.subscribe(next => this.updateValue(next));\n        this.setting$\n            .pipe(first())\n            .subscribe(()=>\n                this.form.valueChanges\n                    .pipe(\n                        takeUntil(this.ngUnsubscribe$),\n                        filter(()=>this.form.valid),\n                        distinctUntilChanged((formA, formB) => this.isEqual(formA, formB)),\n                        debounce(() => timer(500))\n                    )\n                    .subscribe(next=>this.dispatch(this.convert(next)))\n            );\n        this.placeholder$ = this.store.select(buildConfigSelector(`settings.${this.settingPath}`))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n        this.store.select(selectIdentifier)\n            .pipe(\n                takeUntil(this.ngUnsubscribe$),\n                map(id=>{return {login:id}}))\n            .subscribe(next=>this.baseSettings = next);\n\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    protected updateValue(value:any){\n\n    }\n\n    protected initFormGroup():FormGroup{\n        return null\n    }\n\n    protected convert(value:any):any{\n        return value;\n    }\n\n\n    private dispatch(value:any) {\n        const settings = {...this.baseSettings};\n        settings[this.settingPath] = value.setting;\n        this.store.dispatch(new PatchSettings({settings: settings}));\n    }\n\n    protected isEqual(formA, formB):boolean{\n        return _.isEqual(formA, formB);\n    }\n\n    protected submitValue(){\n        alert('submitted');\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  base-setting works!\n\n\n    \n\n    \n                \n                    ./base-setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  base-setting works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, process?: string, processId?: string, state?: string, lttd?: number, title?: I18n, summary?: I18n, data?: any, details?: Detail[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                currentPath\n                            \n                            \n                                dateToDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeDisplayedDates\n                            \n                            \n                                handleDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCard\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, translate: TranslateService, time: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card/card.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCard\n                    \n                \n                \n                    \n                        Type :         LightCard\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeDisplayedDates\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeDisplayedDates(config: string, lightCard: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightCard\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDate\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDate(timeStamp: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStamp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:80\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Router} from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {map} from \"rxjs/operators\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as moment from \"moment\"\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Component({\n    selector: 'of-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit{\n\n    @Input() public open: boolean = false;\n    @Input() public lightCard: LightCard;\n    currentPath: any;\n    private _i18nPrefix: string;\n    dateToDisplay: string;\n\n    /* istanbul ignore next */\n    constructor(private router: Router,\n                private store: Store,\n                private translate: TranslateService,\n                private time: TimeService) {\n\n    }\n\n    public select() {\n        this.router.navigate(['/'+this.currentPath,'cards',this.lightCard.id]);\n        // this.open=true;\n    }\n\n    ngOnInit() {\n        this._i18nPrefix = this.lightCard.publisher+'.'+this.lightCard.publisherVersion+'.'\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/')[1];\n        });\n        // this.store.select(selectCardStateSelectedId)\n        //     .pipe(\n        //         map(id=>this.lightCard.id == id)\n        //     ).subscribe(open=>this.open = open)\n        // ;\n        // fetch configuration\n        this.store.select(buildConfigSelector('feed.card.time.display'))\n            // use configuration to compute date\n            .pipe(map(config => this.computeDisplayedDates(config, this.lightCard)))\n            .subscribe(computedDate => this.dateToDisplay=computedDate);\n    }\n\n    computeDisplayedDates(config:string,lightCard:LightCard):string{\n        switch (config) {\n            case 'NONE': return '';\n            case 'LTTD': return this.handleDate(lightCard.lttd);\n            case 'PUBLICATION': return this.handleDate(lightCard.publishDate);\n            case 'BUSINESS_START': return this.handleDate(lightCard.startDate);\n            default:return `${this.handleDate(lightCard.startDate)} - ${this.handleDate(lightCard.endDate)}`\n        }\n    }\n\n    handleDate(timeStamp:number):string{\n        return this.time.formatDateTime(timeStamp);\n    }\n\n\n    get i18nPrefix(): string {\n        return this._i18nPrefix;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n        \n        \n            {{i18nPrefix+lightCard.title.key}}\n            ({{this.dateToDisplay}})\n        \n    \n    \n        \n        \n            {{i18nPrefix+lightCard.summary.key}}\n        \n    \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.light-card-detail {\n  max-width: 400px;\n}\n\n.card {\n  margin-bottom: 5px;\n  word-break: break-all;\n}\n\n.card-title {\n  font-variant: small-caps;\n  font-size: larger;\n}\n\n.card-subtitle {\n  font-size: small;\n}\n\n.card-text {\n  font-size: small;\n}\n\n.badge-border {\n  width: 30px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{i18nPrefix+lightCard.title.key}}            ({{this.dateToDisplay}})                                            {{i18nPrefix+lightCard.summary.key}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card-details/card-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-details\n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card-details/card-details.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Detail[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport * as cardSelectors from '@ofStore/selectors/card.selectors';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\n\n@Component({\n    selector: 'of-card-details',\n    templateUrl: './card-details.component.html',\n})\nexport class CardDetailsComponent implements OnInit {\n\n    card: Card;\n    details: Detail[];\n\n    constructor(private store: Store, private thirdsService: ThirdsService) {\n\n    }\n\n    ngOnInit() {\n        this.store.select(cardSelectors.selectCardStateSelected)\n            .subscribe(card => {\n                this.card = card;\n                if(card) {\n                    if(card.details) {\n                        this.details = [...card.details];\n                    }else{\n                        this.details = [];\n                    }\n                    this.thirdsService.queryThird(this.card.publisher, this.card.publisherVersion)\n                        .subscribe(third => {\n                            const state = third.extractState(this.card)\n                            if (state != null)\n                                this.details.push(...state.details);\n                        });\n                }\n            });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardEffects.html":{"url":"injectables/CardEffects.html","title":"injectable - CardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => this.service.loadCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadCardFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {CardService} from '@ofServices/card.service';\nimport {AppState} from \"@ofStore/index\";\nimport {CardActionTypes, LoadCard, LoadCardFailure, LoadCardSuccess} from \"@ofActions/card.actions\";\nimport {Card} from \"@ofModel/card.model\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class CardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService\n    ) {\n    }\n\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => this.service.loadCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadCardFailure(err));\n                return caught;\n            })\n        );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFeedState.html":{"url":"interfaces/CardFeedState.html","title":"interface - CardFeedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardFeedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/feed.state.ts\n        \n\n            \n                Description\n            \n            \n                The Feed State consist of:\n  * EntityState of LightCard\n  * selectedCardId: the currently selected card id\n  * lastCards the last cards added / updated to the feed\n  * loading: weather there is an ongoing state modification\n  * message: last message during state processing\n  * filters: a collection of filter to apply to the rendered feed\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filters\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:         LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard, severityOrdinal} from '@ofModel/light-card.model';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n/**\n * The Feed State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * message: last message during state processing\n *  * filters: a collection of filter to apply to the rendered feed\n */\nexport interface CardFeedState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    filters: Map;\n}\n\nexport function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate\n}\n\nexport function compareBySeverity(card1: LightCard, card2: LightCard){\n    return severityOrdinal(card1.severity) - severityOrdinal(card2.severity);\n}\n\nexport function compareByLttd(card1: LightCard, card2: LightCard){\n    return card1.lttd - card2.lttd;\n}\n\nexport function compareByPublishDate(card1: LightCard, card2: LightCard){\n    return card1.publishDate - card2.publishDate;\n}\n\nexport function compareBySeverityLttdPublishDate(card1: LightCard, card2: LightCard){\n    let result = compareBySeverity(card1,card2);\n    if(result==0)\n        result = compareByLttd(card1,card2);\n    if(result == 0)\n        result = compareByPublishDate(card1,card2);\n    return result;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:compareBySeverityLttdPublishDate\n});\n\nexport const feedInitialState: CardFeedState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    });\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardListComponent.html":{"url":"components/CardListComponent.html","title":"component - CardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/card-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-list\n            \n\n\n\n\n            \n                templateUrl\n                ./card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/card-list.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :         LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'of-card-list',\n  templateUrl: './card-list.component.html',\n})\nexport class CardListComponent  {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n  \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardOperationEffects.html":{"url":"injectables/CardOperationEffects.html","title":"injectable - CardOperationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardOperationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card-operation.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshIfSelectedCard\n                            \n                            \n                                subscribe\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card-operation.effects.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshIfSelectedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a:LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter (card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map( lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        if (operation.type && operation.type.toString() === 'ADD') {\n                            const opCards = operation.cards;\n                            return new LoadLightCardsSuccess({lightCards: opCards});\n                        }\n                        return new AddLightCardFailure(\n                            {\n                                error:\n                                    new Error(`unhandled action type '${operation.type}'`)\n                            });\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af:ApplyFilter)=>af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af:ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start,af.payload.status.end)\n                .pipe(\n                    map(()=> {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:69\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, filter, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {\n    AddLightCardFailure,\n    HandleUnexpectedError,\n    LightCardActions, LightCardActionTypes,\n    LoadLightCardsSuccess,\n    UpdatedSubscription\n} from '@ofActions/light-card.actions';\nimport {AuthenticationActionTypes} from '@ofActions/authentication.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ApplyFilter, FeedActionTypes} from \"@ofActions/feed.actions\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {LoadCard} from \"@ofActions/card.actions\";\n\n@Injectable()\nexport class CardOperationEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    subscribe: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        if (operation.type && operation.type.toString() === 'ADD') {\n                            const opCards = operation.cards;\n                            return new LoadLightCardsSuccess({lightCards: opCards});\n                        }\n                        return new AddLightCardFailure(\n                            {\n                                error:\n                                    new Error(`unhandled action type '${operation.type}'`)\n                            });\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n\n    @Effect()\n    updateSubscription: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af:ApplyFilter)=>af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af:ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start,af.payload.status.end)\n                .pipe(\n                    map(()=> {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        );\n\n    @Effect()\n    refreshIfSelectedCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a:LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter (card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map( lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n    ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                cardOperationsUrl\n                            \n                            \n                                    Readonly\n                                cardsUrl\n                            \n                            \n                                    Readonly\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchCardOperation\n                            \n                            \n                                getCardOperation\n                            \n                            \n                                loadCard\n                            \n                            \n                                unsubscribeCardOperation\n                            \n                            \n                                    Public\n                                updateCardSubscriptionWithDates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authenticationService: AuthenticationService, guidService: GuidService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        guidService\n                                                  \n                                                        \n                                                                        GuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCardOperation(eventSource: EventSourcePolyfill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventSource\n                                    \n                                            EventSourcePolyfill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \ngetCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCardSubscriptionWithDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeEnd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardOperationsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {CardOperation} from '@ofModel/card-operation.model';\nimport {EventSourcePolyfill} from 'ng-event-source';\nimport {AuthenticationService} from './authentication.service';\nimport {Card} from \"@ofModel/card.model\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\n\n@Injectable()\nexport class CardService {\n    readonly unsubscribe$ = new Subject();\n    readonly cardOperationsUrl: string;\n    readonly cardsUrl: string;\n\n    constructor(private httpClient:HttpClient, private authenticationService: AuthenticationService,private guidService: GuidService) {\n        const clientId = this.guidService.getCurrentGuidString();\n        this.cardOperationsUrl = `${environment.urls.cards}/cardSubscription?clientId=${clientId}`;\n        this.cardsUrl = `${environment.urls.cards}/cards`;\n    }\n\n    loadCard(id: string): Observable {\n        return this.httpClient.get(`${this.cardsUrl}/${id}`);\n    }\n\n    getCardOperation(): Observable {\n        let minus2Hour = new Date(new Date().valueOf()-2*60*60*1000);\n        let plus48Hours = new Date(minus2Hour.valueOf()+48*60*60*1000);\n        //security header needed here as SSE request are not intercepted by our header interceptor\n        return this.fetchCardOperation(new EventSourcePolyfill(\n            `${this.cardOperationsUrl}&notification=true&rangeStart=${minus2Hour.valueOf()}&rangeEnd=${plus48Hours.valueOf()}`\n            , {headers: AuthenticationService.getSecurityHeader(),\n                heartbeatTimeout: 600000}));\n    }\n\n    unsubscribeCardOperation(){\n        this.unsubscribe$.next();\n    }\n\n    fetchCardOperation(eventSource: EventSourcePolyfill): Observable {\n        return Observable.create(observer => {\n            try {\n                eventSource.onmessage = message => {\n                    if (!message) {\n                        return observer.error(message);\n                    }\n                    return observer.next(JSON.parse(message.data));\n                };\n                eventSource.onerror = error => {\n                    console.error(`error occurred from ES: ${error.toString()}`)\n                }\n\n            } catch (error) {\n                return observer.error(error);\n            }\n            return () => {\n                if (eventSource && eventSource.readyState !== eventSource.CLOSED) {\n                    eventSource.close();\n                }\n            };\n        })\n    }\n\n    public updateCardSubscriptionWithDates(rangeStart:number,rangeEnd:number):Observable{\n        return this.httpClient.post(\n            `${this.cardOperationsUrl}`,\n            {rangeStart:rangeStart,rangeEnd: rangeEnd});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardState.html":{"url":"interfaces/CardState.html","title":"interface - CardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/card.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\n\nexport interface CardState{\n    selected: Card,\n    loading: boolean,\n    error: string\n}\n\nexport const cardInitialState: CardState = {\n    selected: null,\n    loading: false,\n    error: null\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/cards/cards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HandlebarsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/cards.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from \"./components/card/card.component\";\nimport {CardDetailsComponent} from \"./components/card-details/card-details.component\";\nimport {DetailsComponent} from \"./components/details/details.component\";\nimport {DetailComponent} from \"./components/detail/detail.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ThirdsService} from \"../../services/thirds.service\";\nimport {HandlebarsService} from \"./services/handlebars.service\";\n\n@NgModule({\n  declarations: [CardComponent, CardDetailsComponent, DetailsComponent, DetailComponent],\n  imports: [\n    CommonModule,\n      TranslateModule\n  ],\n    exports: [CardComponent, CardDetailsComponent, DetailsComponent, DetailComponent],\n    providers: [HandlebarsService]\n})\nexport class CardsModule {\n    static forRoot(): ModuleWithProviders{\n        return {\n            ngModule: CardsModule,\n            providers: [ThirdsService]\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckAuthenticationStatus.html":{"url":"classes/CheckAuthenticationStatus.html","title":"class - CheckAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckTokenResponse.html":{"url":"classes/CheckTokenResponse.html","title":"class - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class corresponding to the response of the web service checking jwt token when this token is a valid one.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Optional\n                                exp\n                            \n                            \n                                    Public\n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sub?: string, exp?: number, clientId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:303\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sub\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:307\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:306\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:305\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\nimport {User} from \"@ofModel/user.model\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError),\n            switchMap((auth)=>this.loadUserData(auth))\n        );\n    }\n\n    private loadUserData(auth:PayloadForSuccessfulAuthentication):Observable{\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(e=>of(auth))\n            );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate)\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        if(!this.delegateUrl)\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        else{\n            window.location.href = `${this.delegateUrl}&redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        }\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCard.html":{"url":"classes/ClearCard.html","title":"class - ClearCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.ClearCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearLightCardSelection.html":{"url":"classes/ClearLightCardSelection.html","title":"class - ClearLightCardSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearLightCardSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:68\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ClearLightCardSelection\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/config.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConfiguration\n                            \n                            \n                                retryConfigurationLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ConfigService, retryDelay: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/config.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryDelay\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:54\n                            \n                        \n\n                \n                    \n                        Manages configuration load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retryConfigurationLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:71\n                            \n                        \n\n                \n                    \n                        Manages load retry upon message\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, delay, filter, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {ConfigService} from '@ofServices/config.service';\nimport {AppState} from \"@ofStore/index\";\nimport {ConfigActionTypes, LoadConfig, LoadConfigFailure, LoadConfigSuccess} from \"@ofActions/config.actions\";\nimport {selectConfigRetry} from \"@ofSelectors/config.selectors\";\nimport {CONFIG_LOAD_MAX_RETRIES} from \"@ofStates/config.state\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class ConfigEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ConfigService,\n                @Inject('configRetryDelay')\n                private retryDelay: number = 5000,\n    ) {\n\n        if (this.retryDelay > 0)\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig()),\n                    delay(this.retryDelay)\n                );\n        else\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig())\n                );\n    }\n\n    /**\n     * Manages configuration load -> service request -> success/message\n     */\n    @Effect()\n    loadConfiguration: Observable = this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * Manages load retry upon message\n     */\n    @Effect()\n    retryConfigurationLoading: Observable;\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nfetchConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/config.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Injectable()\nexport class ConfigService {\n    private configUrl: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.configUrl = `${environment.urls.config}`;\n    }\n\n    fetchConfiguration(): Observable {\n        return this.httpClient.get(`${this.configUrl}`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigState.html":{"url":"interfaces/ConfigState.html","title":"interface - ConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/config.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        retry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retry\n                                    \n                                \n                                \n                                    \n                                        retry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\n\nexport const CONFIG_LOAD_MAX_RETRIES = 5;\n\nexport interface ConfigState{\n    config:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string,\n    retry: number\n}\n\nexport const configInitialState: ConfigState = {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomRouterEffects.html":{"url":"injectables/CustomRouterEffects.html","title":"injectable - CustomRouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomRouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/custom-router.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAwayFromFeed\n                            \n                            \n                                navigateToCard\n                            \n                            \n                                navigateToMenuURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/custom-router.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateAwayFromFeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToMenuURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:50\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\nThis will typically be triggered when clicking on a third-party menu link.\nIt then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {ROUTER_NAVIGATION, ROUTER_REQUEST, RouterNavigationAction, RouterRequestAction} from \"@ngrx/router-store\";\nimport {filter, map, switchMap, tap} from \"rxjs/operators\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {ClearLightCardSelection, SelectLightCard} from \"@ofActions/light-card.actions\";\nimport {SelectMenuLink} from \"@ofActions/menu.actions\";\nimport {AuthenticationActionTypes, TryToLogOut} from \"@ofActions/authentication.actions\";\n\n@Injectable()\nexport class CustomRouterEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions\n    ) {}\n\n    @Effect()\n    navigateToCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    /**\n     * This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\n     * This will typically be triggered when clicking on a third-party menu link.\n     * It then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n     * @name navigateToMenuURL\n     */\n    @Effect()\n    navigateToMenuURL: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateAwayFromFeed: Observable = this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractParams\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractParams(state: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Params\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titlePosition: TitlePosition, title: I18n, titleStyle: string, templateName: string, styles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titlePosition\n                                                  \n                                                        \n                                                                        TitlePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _htmlContent\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Readonly\n                                hrefsOfCssLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAction\n                            \n                            \n                                bindActions\n                            \n                            \n                                    Private\n                                initializeHandlebarsTemplates\n                            \n                            \n                                    Private\n                                initializeHrefsOfCssLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reinsertScripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                detail\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    htmlContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, thirds: ThirdsService, handlebars: HandlebarsService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/detail/detail.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handlebars\n                                                  \n                                                        \n                                                                        HandlebarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        detail\n                    \n                \n                \n                    \n                        Type :         Detail\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachAction\n                        \n                        \n                    \n                \n            \n            \n                \nattachAction(button: HTMLButtonElement, action: Action, actionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            HTMLButtonElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindActions\n                        \n                        \n                    \n                \n            \n            \n                \nbindActions(third: Third)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    third\n                                    \n                                                Third\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHandlebarsTemplates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHandlebarsTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHrefsOfCssLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHrefsOfCssLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reinsertScripts\n                        \n                        \n                    \n                \n            \n            \n                \nreinsertScripts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hrefsOfCssLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n\n                \n                    \n                        gethtmlContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:69\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {ThirdsService} from \"../../../../services/thirds.service\";\nimport {HandlebarsService} from \"../../services/handlebars.service\";\nimport {DomSanitizer, SafeHtml, SafeResourceUrl} from \"@angular/platform-browser\";\nimport {Action, Third} from \"@ofModel/thirds.model\";\nimport {zip} from \"rxjs\";\n\n@Component({\n    selector: 'of-detail',\n    templateUrl: './detail.component.html',\n})\nexport class DetailComponent implements OnInit {\n    public active = false;\n    @Input() detail: Detail;\n    @Input() card: Card;\n    readonly hrefsOfCssLink = new Array();\n    private _htmlContent: SafeHtml;\n\n    constructor(private element: ElementRef,\n                private thirds: ThirdsService,\n                private handlebars: HandlebarsService,\n                private sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit() {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n    }\n\n    private initializeHrefsOfCssLink() {\n        if (this.detail && this.detail.styles) {\n            const publisher = this.card.publisher;\n            const publisherVersion = this.card.publisherVersion;\n            this.detail.styles.forEach(style => {\n                const cssUrl = this.thirds.computeThirdCssUrl(publisher, style, publisherVersion);\n                //needed to instantiate href of link for css in component rendering\n                const safeCssUrl = this.sanitizer.bypassSecurityTrustResourceUrl(cssUrl);\n                this.hrefsOfCssLink.push(safeCssUrl);\n\n                console.log(`this is the safe resource Url for css '${safeCssUrl.toString()}' and with local version '${safeCssUrl.toLocaleString()}'`)\n            });\n        }\n    }\n\n    private initializeHandlebarsTemplates() {\n\n        zip(this.thirds.queryThird(this.card.publisher,this.card.publisherVersion),\n        this.handlebars.executeTemplate(this.detail.templateName, this.card))\n            .subscribe(\n                ([third,html]) => {\n                this._htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n                setTimeout(() => { // wait for DOM rendering\n                    this.reinsertScripts();\n                    this.bindActions(third);\n                });\n            }\n        );\n    }\n\n\n    get htmlContent() {\n        return this._htmlContent;\n    }\n\n    reinsertScripts(): void {\n        const scripts = this.element.nativeElement.getElementsByTagName('script');\n        const scriptsInitialLength = scripts.length;\n        for (let i = 0; i this.element.nativeElement.getElementsByTagName('button');\n\n        for (let button of buttons) {\n            if (button.attributes['action-id']) {\n                const actionId = button.attributes['action-id'].nodeValue;\n                if (actionId) {\n                    const state = third.extractState(this.card);\n                    if(!!state && !!state.actions[actionId])\n                        this.attachAction(button, state.actions[actionId], actionId);\n                }\n            }\n        }\n    }\n\n    attachAction(button: HTMLButtonElement, action: Action, actionId: string) {\n        button.classList.add('btn');\n        if (action.buttonStyle) {\n            for (let c of action.buttonStyle.split(' ')) {\n                button.classList.add(c);\n            }\n        } else {\n            button.classList.add('btn-light');\n        }\n        if (action.contentStyle) {\n            for (let c of action.contentStyle.split(' ')) {\n                button.children[0].classList.add(c);\n            }\n        } else {\n            button.children[0].classList.add('fa', 'fa-warning', 'text-dark');\n        }\n        button.addEventListener('click', (event: Event) => {\n            alert(`${actionId} was triggered.\\nAction handling is not yet implemented`);\n        });\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/details/details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-details\n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectDetail\n                            \n                            \n                                    Private\n                                updateAsync\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectDetail\n                        \n                        \n                    \n                \n            \n            \n                \nselectDetail(detail: DetailComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detail\n                                    \n                                                DetailComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DetailComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, Input, OnChanges, QueryList, SimpleChanges} from '@angular/core';\nimport {DetailComponent} from \"../detail/detail.component\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Component({\n    selector: 'of-details',\n    templateUrl: './details.component.html',\n})\nexport class DetailsComponent implements AfterViewInit, OnChanges {\n\n    @ContentChildren(DetailComponent) details: QueryList;\n    @Input() card: Card;\n    private _i18nPrefix: string;\n\n    constructor() {\n    }\n\n    ngAfterViewInit(): void {\n        this.updateAsync();\n        this.details.changes.subscribe(\n            () => {\n                this.updateAsync();\n            }\n        );\n    }\n\n    private updateAsync() {\n        setTimeout(() => {\n            let activeDetail = this.details.filter((tab) => tab.active)\n            // if there is no active tab set, activate the first\n            if (activeDetail.length === 0) {\n                this.selectDetail(this.details.first);\n            }\n        });\n    }\n\n    selectDetail(detail: DetailComponent) {\n        // deactivate all tabs\n        this.details.toArray().forEach(detail => detail.active = false);\n\n        // activate the tab the user has clicked on.\n        if (detail)\n            detail.active = true;\n    }\n\n    public get i18nPrefix(){\n        return this._i18nPrefix;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(changes['card'].currentValue)\n            this._i18nPrefix = changes['card'].currentValue.publisher+'.'+changes['card'].currentValue.publisherVersion+'.';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    {{i18nPrefix+detailC.detail.title.key}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{i18nPrefix+detailC.detail.title.key}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/app-draggable.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDraggable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dragging\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragEnd\n                            \n                            \n                                dragMove\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                pointerdown\n                            \n                            \n                                pointermove\n                            \n                            \n                                pointerup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragMove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:7\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            pointerdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerdown(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:18\n                \n            \n\n\n            \n                \n                    if drag is true emit drag start event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointermove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointermove(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:28\n                \n            \n\n\n            \n                \n                    if drag is true emit drag move event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointerup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerup(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:40\n                \n            \n\n\n            \n                \n                    if drag is true emit drag end event\n\n\n                \n            \n        \n    \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[appDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter();\n  @Output() dragMove = new EventEmitter();\n  @Output() dragEnd = new EventEmitter();\n\n  private dragging = false;\n\n  /**\n   * if drag is true emit drag start event\n   * @param event\n   */\n  @HostListener('pointerdown', ['$event'])\n  onPointerDown(event: PointerEvent): void {\n    this.dragging = true;\n    this.dragStart.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag move event\n   * @param event\n   */\n  @HostListener('pointermove', ['$event'])\n  onPointerMove(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragMove.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag end event\n   * @param event\n   */\n  @HostListener('pointerup', ['$event'])\n  onPointerUp(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragging = false;\n    this.dragEnd.emit(event);\n  }\n\n  // Uncomment if you delete the unselection set inside css,\n  // this code will block the movement when u select some text\n  // !!! a little movement still appear !!!\n  /* @HostListener('document:dragstart', ['$event'])\n   onDragEnd(event: DragEvent): void {\n     if (!this.dragging) {\n       return;\n     }\n     this.dragging = false;\n   }*/\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailSettingComponent.html":{"url":"components/EmailSettingComponent.html","title":"component - EmailSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/email-setting/email-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                TextSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-email-setting\n            \n\n            \n                styleUrls\n                ./email-setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./email-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeTextValidators\n                            \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pattern\n                            \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:22\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {TextSettingComponent} from \"../text-setting/text-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-email-setting',\n  templateUrl: './email-setting.component.html',\n  styleUrls: ['./email-setting.component.css']\n})\nexport class EmailSettingComponent extends TextSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    computeTextValidators(){\n      let validators = super.computeTextValidators();\n      validators.push(Validators.email);\n      return validators;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    Incorrect submission\n  \n\n\n    \n\n    \n                \n                    ./email-setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyLightCards.html":{"url":"classes/EmptyLightCards.html","title":"class - EmptyLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.EmptyLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FailToUpdateTimeReference.html":{"url":"classes/FailToUpdateTimeReference.html","title":"class - FailToUpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FailToUpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Notify thate something went wrong while changing the virtual time.\nNothing has been done and an error is reported\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.FailToUpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to upadate the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:{currentTime:moment.Moment}){}\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify thate something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-cards\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTimeLine\n                            \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/feed.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTimeLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport {catchError} from \"rxjs/operators\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\n\n@Component({\n    selector: 'of-cards',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, AfterViewInit {\n\n    lightCards$: Observable;\n    selection$: Observable;\n    hideTimeLine: boolean;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFilteredFeed),\n            catchError(err => of([]))\n        );\n        this.selection$ = this.store.select(feedSelectors.selectLightCardSelection);\n        this.store.select(buildConfigSelector('feed.timeline.hide'))\n            .subscribe(v=>this.hideTimeLine = v);\n    }\n\n\n    ngAfterViewInit() {\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedFiltersEffects.html":{"url":"injectables/FeedFiltersEffects.html","title":"injectable - FeedFiltersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedFiltersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/feed-filters.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initTagFilterOnLoadedSettings\n                            \n                            \n                                loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/feed-filters.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTagFilterOnLoadedSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable} from 'rxjs';\nimport {filter, map, tap, withLatestFrom} from 'rxjs/operators';\nimport {AuthenticationActionTypes} from '@ofActions/authentication.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FilterService, FilterType} from \"@ofServices/filter.service\";\nimport {ApplyFilter, InitFilters} from \"@ofActions/feed.actions\";\nimport {LoadSettingsSuccess, SettingsActionTypes} from \"@ofActions/settings.actions\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\n\n@Injectable()\nexport class FeedFiltersEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: FilterService) {\n    }\n\n    @Effect()\n    loadFeedFilterOnAuthenticationSuccess: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }));\n\n    @Effect()\n    initTagFilterOnLoadedSettings: Observable = this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\n\nCardListComponent\n\nCardListComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardListComponent\n                        \n                        \n                            CustomTimelineChartComponent\n                        \n                        \n                            DraggableDirective\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InitChartComponent\n                        \n                        \n                            MouseWheelDirective\n                        \n                        \n                            NoSelectionComponent\n                        \n                        \n                            TagsFilterComponent\n                        \n                        \n                            TimeFilterComponent\n                        \n                        \n                            TimeLineComponent\n                        \n                        \n                            TypeFilterComponent\n                        \n                        \n                            XAxisTickFormatPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            FeedRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardListComponent} from './components/card-list/card-list.component';\nimport {FeedComponent} from './feed.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FeedRoutingModule} from \"./feed-routing.module\";\nimport {NoSelectionComponent} from './components/no-selection/no-selection.component';\nimport {TimeLineComponent} from './components/time-line/time-line.component';\nimport {CardsModule} from \"../cards/cards.module\";\nimport {FiltersComponent} from './components/card-list/filters/filters.component';\nimport {TypeFilterComponent} from './components/card-list/filters/type-filter/type-filter.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TimeFilterComponent} from './components/card-list/filters/time-filter/time-filter.component';\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons\";\nimport {ChartCommonModule, NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CustomTimelineChartComponent} from \"./components/custom-timeline-chart/custom-timeline-chart.component\";\nimport {XAxisTickFormatPipe} from \"./components/time-line/x-axis-tick-format.pipe\";\nimport {MouseWheelDirective} from \"./components/time-line/mouse-wheel.directive\";\nimport {DraggableDirective} from \"./components/time-line/app-draggable\";\nimport {InitChartComponent} from \"./components/init-chart/init-chart.component\";\nimport {TagsFilterComponent } from './components/card-list/filters/tags-filter/tags-filter.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\nimport {TimeService} from \"@ofServices/time.service\";\n\nlibrary.add(faClock);\n\n@NgModule({\n    imports: [\n        TypeaheadModule,\n        CommonModule,\n        FormsModule,\n        NgxChartsModule,\n        ChartCommonModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgbModule.forRoot(),\n        CardsModule,\n        FeedRoutingModule,\n        FontAwesomeModule,\n    ],\n    declarations: [CardListComponent, FeedComponent, NoSelectionComponent, TimeLineComponent, FiltersComponent, TypeFilterComponent, TimeFilterComponent,\n        InitChartComponent,\n        CustomTimelineChartComponent,\n        DraggableDirective,\n        MouseWheelDirective,\n        XAxisTickFormatPipe,\n        TagsFilterComponent],\n    exports: [FeedComponent],\n    providers: [ {provide: TimeService, useClass: TimeService}]\n})\nexport class FeedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {FeedComponent} from \"./feed.component\";\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedComponent,\n        // canActivate: [AuthenticationGuard],\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n            ]\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/feed-filter.model.ts\n        \n\n            \n                Description\n            \n            \n                A Filter gather both the feed filtering behaviour and the filter status for\nfiltering parametrization and component state\nThe function property funktion takes two arguments :\n  * card: the card for which to evaluate filter\n  * status: the status of the current filter\nBeware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\nin Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\nfunktion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                chainFilter\n                            \n                            \n                                    Static\n                                chainFilter\n                            \n                            \n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(funktion: (undefined,undefined) => void, active: boolean, status: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/feed-filter.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        funktion\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:43\n                \n            \n\n\n            \n                \n                    apply the filter to the card, returns true if the card passes the filter, false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \nchainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:56\n                \n            \n\n\n            \n                \n                    Apply this filter to a card, then a chain of filter recursively.\nThe recursion stops when the card is filtered out\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:67\n                \n            \n\n\n            \n                \n                    Sequentially applies a chain of filters to a card\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Filter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\n/**\n * A Filter gather both the feed filtering behaviour and the filter status for\n * filtering parametrization and component state\n *\n * The function property funktion takes two arguments :\n *  * card: the card for which to evaluate filter\n *  * status: the status of the current filter\n *\n * Beware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\n * in Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\n * funktion\n */\nexport class Filter {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly funktion: (LightCard,any) => boolean,\n        public active:boolean,\n        public status: any\n    ) {\n    }\n\n    clone():Filter {\n        return new Filter(\n            this.funktion,\n            this.active,\n            this.status);\n    }\n\n    /**\n     * apply the filter to the card, returns true if the card passes the filter, false otherwise\n     * @param card\n     */\n    applyFilter(card: LightCard):boolean{\n        if(this.active){\n            return this.funktion(card,this.status);\n        }\n        return true;\n    }\n\n    /**\n     * Apply this filter to a card, then a chain of filter recursively.\n     * The recursion stops when the card is filtered out\n     * @param card\n     * @param next\n     */\n    chainFilter(card: LightCard, next: Filter[]){\n        if(this.applyFilter(card))\n            return !next || next.length == 0 || next[0].chainFilter(card,next.slice(1));\n        return false\n    }\n\n    /**\n     * Sequentially applies a chain of filters to a card\n     * @param card\n     * @param next\n     */\n    static chainFilter(card: LightCard, next: Filter[]){\n        return !next||next.length == 0 || next[0].chainFilter(card,next.slice(1));\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _defaultFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultFilters\n                            \n                            \n                                    Private\n                                initFilters\n                            \n                            \n                                    Private\n                                initRecipientFilter\n                            \n                            \n                                    Private\n                                initTagFilter\n                            \n                            \n                                    Private\n                                initTimeFilter\n                            \n                            \n                                    Private\n                                initTypeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initRecipientFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initRecipientFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTagFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTagFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTimeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTimeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTypeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTypeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {LightCard, Severity} from \"@ofModel/light-card.model\";\nimport * as _ from \"lodash\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterService {\n\n    private _defaultFilters = new Map();\n\n    constructor() {\n        this._defaultFilters = this.initFilters();\n    }\n\n    public defaultFilters(): Map {\n        return this._defaultFilters;\n    }\n\n\n    private initTypeFilter() {\n        const alarm = Severity.ALARM;\n        const action = Severity.ACTION;\n        const question = Severity.QUESTION;\n        const notification = Severity.NOTIFICATION;\n        return new Filter(\n            (card, status) => {\n                const result =\n                    status.alarm && card.severity == alarm ||\n                    status.action && card.severity == action ||\n                    status.question && card.severity == question ||\n                    status.notification && card.severity == notification;\n                return result;\n            },\n            true,\n            {\n                alarm: true,\n                action: true,\n                question: true,\n                notification: false\n            }\n        );\n    }\n\n    private initTagFilter() {\n        return new Filter(\n            (card, status) => _.intersection(card.tags,status.tags).length > 0,\n            false,\n            {tags:[]}\n        );\n    }\n\n    private initRecipientFilter() {\n        return new Filter(\n            (card, status) => false,\n            false,\n            {}\n        );\n    }\n\n    private initTimeFilter() {\n        return new Filter(\n            (card:LightCard, status) => {\n                if (!!status.start && !!status.end) {\n                    if (!card.endDate)\n                        return card.startDate  {\n        const filters = new Map();\n        filters.set(FilterType.TYPE_FILTER, this.initTypeFilter());\n        // filters.set(FilterType.RECIPIENT_FILTER, this.initRecipientFilter());\n        filters.set(FilterType.TIME_FILTER, this.initTimeFilter());\n        filters.set(FilterType.TAG_FILTER, this.initTagFilter());\n        return filters;\n    }\n}\n\nexport enum FilterType {\n    TYPE_FILTER,\n    RECIPIENT_FILTER,\n    TAG_FILTER,\n    TIME_FILTER,\n    TEST_FILTER\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidService.html":{"url":"classes/GuidService.html","title":"class - GuidService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guid.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                guid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentGuid\n                            \n                            \n                                getCurrentGuidString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            guid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Guid\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuidString\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuidString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject} from \"@angular/core\";\nimport {Guid} from \"guid-typescript\";\n\n@Inject({\n    providedIn: 'root'\n})\nexport class GuidService {\n\n    private readonly guid: Guid;\n\n    constructor() {\n        this.guid = Guid.create();\n    }\n\n    getCurrentGuid(): Guid {\n        return this.guid;\n    }\n\n    getCurrentGuidString():string{\n        return this.getCurrentGuid().toString();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError.html":{"url":"classes/HandleUnexpectedError.html","title":"class - HandleUnexpectedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-1.html":{"url":"classes/HandleUnexpectedError-1.html","title":"class - HandleUnexpectedError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-2.html":{"url":"classes/HandleUnexpectedError-2.html","title":"class - HandleUnexpectedError-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:91\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:91\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-3.html":{"url":"classes/HandleUnexpectedError-3.html","title":"class - HandleUnexpectedError-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-4.html":{"url":"classes/HandleUnexpectedError-4.html","title":"class - HandleUnexpectedError-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarsService.html":{"url":"injectables/HandlebarsService.html","title":"injectable - HandlebarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/cards/services/handlebars.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                templateCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                executeTemplate\n                            \n                            \n                                    Private\n                                queryTemplate\n                            \n                            \n                                    Private\n                                registerArrayAtIndex\n                            \n                            \n                                    Private\n                                registerArrayAtIndexLength\n                            \n                            \n                                    Private\n                                registerBool\n                            \n                            \n                                    Private\n                                registerCardAction\n                            \n                            \n                                    Private\n                                registerDateFormat\n                            \n                            \n                                    Private\n                                registerI18n\n                            \n                            \n                                    Private\n                                registerMath\n                            \n                            \n                                    Private\n                                registerNow\n                            \n                            \n                                    Private\n                                registerNumberFormat\n                            \n                            \n                                    Private\n                                registerPreserveSpace\n                            \n                            \n                                    Private\n                                registerSlice\n                            \n                            \n                                    Private\n                                registerSort\n                            \n                            \n                                    Private\n                                registerSplit\n                            \n                            \n                                    Private\n                                registerSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: TimeService, translate: TranslateService, thirds: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/services/handlebars.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            executeTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeTemplate(templateName: string, card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            queryTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    queryTemplate(publisher: string, version: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndexLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndexLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerBool\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerBool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerCardAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCardAction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerDateFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerDateFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerI18n()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerMath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerMath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNumberFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNumberFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerPreserveSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerPreserveSpace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSlice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSlice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSplit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSplit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSvg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSvg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Card} from \"@ofModel/card.model\";\nimport * as Handlebars from \"handlebars/dist/handlebars.js\"\nimport {TimeService} from \"@ofServices/time.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport * as moment from 'moment';\nimport {Map} from \"@ofModel/map\";\nimport {Observable, of} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport {ThirdsService} from \"../../../services/thirds.service\";\nimport {Guid} from \"guid-typescript\";\n\n@Injectable()\nexport class HandlebarsService {\n\n    private templateCache:Map = new Map();\n\n    constructor(private time:TimeService,\n                private translate: TranslateService,\n                private thirds: ThirdsService){\n        this.registerPreserveSpace();\n        this.registerNumberFormat();\n        this.registerDateFormat();\n        this.registerCardAction();\n        this.registerSvg();\n        this.registerI18n();\n        this.registerSort();\n        this.registerSlice();\n        this.registerArrayAtIndex();\n        this.registerMath();\n        this.registerSplit();\n        this.registerArrayAtIndexLength();\n        this.registerBool();\n        this.registerNow();\n    }\n\n    public executeTemplate(templateName: string, card: Card):Observable {\n        return this.queryTemplate(card.publisher,card.publisherVersion,templateName).pipe(\n            map(t=>t(card)));\n    }\n\n    private queryTemplate(publisher:string, version:string, name: string):Observable {\n        const locale = this.translate.getBrowserLang();\n        const key = `${publisher}.${version}.${name}.${locale}`;\n        let template = this.templateCache[key];\n        if(template){\n           return of(template);\n        }\n        return this.thirds.fetchHbsTemplate(publisher,version,name,locale).pipe(\n            map(s=>Handlebars.compile(s)),\n            tap(t=>this.templateCache[key]=t)\n        );\n    }\n\n    private registerBool() {\n        Handlebars.registerHelper('bool', function (v1, operator, v2, options) {\n            switch (operator) {\n                case '==':\n                    return (v1 == v2);\n                case '===':\n                    return (v1 === v2);\n                case '!=':\n                    return (v1 != v2);\n                case '!==':\n                    return (v1 !== v2);\n                case '':\n                    return (v1 > v2);\n                case '>=':\n                    return (v1 >= v2);\n                case '&&':\n                    return (v1 && v2);\n                case '||':\n                    return (v1 || v2);\n                default:\n                    return true;\n            }\n        });\n    }\n\n    private registerArrayAtIndexLength() {\n        Handlebars.registerHelper('arrayAtIndexLength', function (value, index, options) {\n            return value[index].length;\n        });\n    }\n\n    private registerSplit() {\n        Handlebars.registerHelper('split', function (value, splitValue, index, options) {\n            return value.split(splitValue)[index];\n        });\n    }\n\n    private registerMath(){\n        Handlebars.registerHelper(\"math\", function(lvalue, operator, rvalue, options) {\n            let result;\n            switch(operator) {\n                case \"+\": result = lvalue + rvalue; break;\n                case \"-\": result = lvalue - rvalue; break;\n                case \"*\": result = lvalue * rvalue; break;\n                case \"/\": result = lvalue / rvalue; break;\n                case \"%\": result = lvalue % rvalue; break;\n            }\n            return result;\n        });\n    }\n\n    private registerArrayAtIndex() {\n        Handlebars.registerHelper('arrayAtIndex', function (value, index, options) {\n            return value[index];\n        });\n    }\n\n    private registerSlice() {\n        Handlebars.registerHelper('slice', function () {\n            let args = [];\n            for (let index = 0; index =3) {\n                to = args[2];\n                return value.slice(from, to);\n            }\n            return value.slice(from);\n        });\n    }\n\n    private registerSort() {\n        Handlebars.registerHelper('sort', function () {\n            let args = [];\n            for (let index = 0; index  {\n            let args = [],\n                options = fctArgs[fctArgs.length - 1];\n            for (let i = 0; i \n                    document.getElementById('${svgUid}').addEventListener('load', function(){\n                            svgPanZoom(document.getElementById('${svgUid}'));});\n                    `\n        });\n    }\n\n    private registerCardAction() {\n        Handlebars.registerHelper('action', function () {\n            let args = [];\n            for (let i = 0; i `\n        });\n    }\n\n    private registerDateFormat() {\n        Handlebars.registerHelper('dateFormat', (value, options) => {\n            const m = moment(new Date(value));\n            m.locale(this.translate.getBrowserLang());\n            return m.format(options.hash.format);\n        });\n    }\n\n    private registerNumberFormat() {\n        Handlebars.registerHelper('numberFormat', (value, options) => {\n            const formatter = new Intl.NumberFormat(this.translate.getBrowserLang(), options.hash);\n            return formatter.format(value);\n        });\n    }\n\n    private registerNow() {\n        const that = this;\n        Handlebars.registerHelper('now', function (options) {\n            return that.time.currentTime().valueOf();\n        })\n    }\n\n    private registerPreserveSpace() {\n        Handlebars.registerHelper(\"preserveSpace\", function (value, options) {\n            return value.replace(/ /g, '\\u00A0')\n        });\n    }\n}\n\nfunction sortOnKey(key){\n    return function(a,b){\n        if(typeof  a[key] == 'string' && typeof b[key] == 'string'){\n            if(a[key]b[key])\n                return 1\n            return 0;\n        }else if(typeof  a[key] == 'number' && typeof b[key] == 'number'){\n            return a[key]-b[key];\n        }\n        return 0;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/I18n.html":{"url":"classes/I18n.html","title":"class - I18n","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/i18n.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, parameters?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/i18n.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport class I18n {\n    /* istanbul ignore next */\n    constructor(\n        readonly key: string,\n        readonly parameters?: Map) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18nService.html":{"url":"injectables/I18nService.html","title":"injectable - I18nService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18nService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                _timeZone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    locale\n                                \n                                \n                                    timeZone\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string, timeZone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18n.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeZone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timeZone\n                    \n                \n\n                \n                    \n                        gettimeZone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as moment from 'moment-timezone';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {withLatestFrom} from \"rxjs/operators\";\nimport {combineLatest, zip} from \"rxjs\";\n\n@Injectable()\nexport class I18nService {\n\n    private _locale:string;\n    private _timeZone:string;\n\n    constructor(private translate: TranslateService,private store: Store) {\n        combineLatest(\n        this.store.select(buildSettingsOrConfigSelector('locale')),\n        this.store.select(buildSettingsOrConfigSelector('timeZone' )))\n\n            .subscribe(([locale,timeZone]) =>this.changeLocale(locale, timeZone));\n    }\n\n    public changeLocale(locale:string, timeZone: string){\n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = this.translate.getBrowserLang();\n        }\n        moment.locale(this._locale);\n        this.translate.use(this._locale);\n        if(timeZone) {\n            this._timeZone = timeZone;\n        }else{\n            timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        moment.tz.setDefault(timeZone);\n    }\n\n    public get locale(){\n        return this._locale;\n    }\n\n    public get timeZone(){\n        return this._timeZone;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/icon/icon.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconPath\n                            \n                            \n                                size\n                            \n                            \n                                sprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                big\n                            \n                            \n                                dark\n                            \n                            \n                                icon\n                            \n                            \n                                light\n                            \n                            \n                                medium\n                            \n                            \n                                small\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        big\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dark\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        light\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        medium\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        small\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/icon/icon.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sprites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {PlatformLocation} from \"@angular/common\";\n\n@Component({\n  selector: 'of-icon',\n  templateUrl:'icon.component.html',\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon:string;\n  @Input() small:boolean;\n  @Input() medium:boolean;\n  @Input() big:boolean;\n  @Input() dark:boolean;\n  @Input() light:boolean;\n  size:string;\n  sprites:string;\n  iconPath:string;\n  constructor(platformLocation:PlatformLocation) {\n      let baseHref = platformLocation.getBaseHrefFromDOM();\n      this.iconPath = (baseHref?baseHref:'/')+'assets/images/icons/'\n  }\n\n  ngOnInit() {\n    this.big = this.big != undefined;\n    this.medium = this.medium != undefined && !this.big;\n    this.small = this.small != undefined && !this.medium;\n    this.dark = this.dark != undefined;\n    this.light = this.light != undefined && ! this.dark;\n    let size = this.big?'big':this.medium?'medium':'small'\n    switch (size) {\n        case 'big':\n          this.size = '64px';\n          break;\n        case 'medium':\n          this.size = '32px';\n          break;\n         default:\n          this.size = '16px';\n    }\n    if(this.dark||this.light){\n      this.sprites='sprites-mono.svg'\n    }else{\n      this.sprites='sprites.svg'\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n    \n                \n                    icon.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n.dark{\n  fill: $dark;\n}\n.light{\n  fill: $light;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IframeDisplayComponent.html":{"url":"components/IframeDisplayComponent.html","title":"component - IframeDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IframeDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/thirdparty/iframedisplay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-iframedisplay\n            \n\n            \n                styleUrls\n                ./iframedisplay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./iframedisplay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _selectedIframeURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedIframeURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframedisplay.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedIframeURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeUrl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIframeURL\n                    \n                \n\n                \n                    \n                        getselectedIframeURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {\n  selectMenuStateSelectedIframeURL,\n} from \"@ofSelectors/menu.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'of-iframedisplay',\n  templateUrl: './iframedisplay.component.html',\n  styleUrls: ['./iframedisplay.component.scss']\n})\nexport class IframeDisplayComponent implements OnInit {\n\n  private _selectedIframeURL: SafeUrl;\n\n  constructor(private store: Store,\n              private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n\n    this.store.select(selectMenuStateSelectedIframeURL).subscribe( iframeURL => {\n      this._selectedIframeURL = this.sanitizer.bypassSecurityTrustResourceUrl(iframeURL);\n    })\n\n  }\n\n  get selectedIframeURL(): SafeUrl {\n    return this._selectedIframeURL;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n    \n\n\n    \n\n    \n                \n                    ./iframedisplay.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IframeDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/info/info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-info\n            \n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _description$\n                            \n                            \n                                    Private\n                                _time$\n                            \n                            \n                                    Private\n                                _userName$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName$\n                                \n                                \n                                    description$\n                                \n                                \n                                    time$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/info/info.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _time$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _userName$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName$\n                    \n                \n\n                \n                    \n                        getuserName$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description$\n                    \n                \n\n                \n                    \n                        getdescription$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        time$\n                    \n                \n\n                \n                    \n                        gettime$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {selectUserNameOrIdentifier} from \"@ofSelectors/authentication.selectors\";\nimport {combineLatest, Observable, of} from \"rxjs\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {map} from \"rxjs/operators\";\nimport * as moment from \"moment\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {selectCurrentDate} from \"@ofSelectors/time.selectors\";\n\n@Component({\n    selector: 'of-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n    private _userName$: Observable;\n    private _description$: Observable;\n    private _time$: Observable\n\n    constructor(private store: Store, private timeService: TimeService) {\n    }\n\n    ngOnInit() {\n        this._userName$ = this.store.select(selectUserNameOrIdentifier);\n        this._description$ = this.store.select(buildSettingsSelector('description'));\n        this._time$ = combineLatest(\n        this.store.select(selectCurrentDate),\n            this.store.select(buildSettingsOrConfigSelector('locale')),\n            this.store.select(buildSettingsOrConfigSelector('timeZone'))\n        ).pipe(\n            map(values => this.timeService.formatTime(moment(values[0])))\n        );\n    }\n    get userName$() {\n        return this._userName$;\n    }\n\n    get description$() {\n        return this._description$;\n    }\n\n    get time$() {\n        return this._time$;\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    {{userName$|async}}{{time$|async}}\n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                .navbar-info-block {\n  display: inline-block;\n  > .user-name {\n\n  }\n\n  > .time {\nfont-size: small;\n  }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName$|async}}{{time$|async}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAuthStatus.html":{"url":"classes/InitAuthStatus.html","title":"class - InitAuthStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAuthStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.InitAuthStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitFilters.html":{"url":"classes/InitFilters.html","title":"class - InitFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.InitFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitTimeline.html":{"url":"classes/InitTimeline.html","title":"class - InitTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.InitTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Input.html":{"url":"classes/Input.html","title":"class - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: InputType, name: string, label: I18n, value: string, mandatory: boolean, maxLength: number, rows: number, values: ParameterListItem[], selectedValues: string[], unSelectedValues: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        InputType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mandatory\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                        ParameterListItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unSelectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightCardEffects.html":{"url":"injectables/LightCardEffects.html","title":"injectable - LightCardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightCardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/light-card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/light-card.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            switchMap((action:LoadLightCardsSuccess)=>\n                    this.thirdService.loadI18nForLightCards(action.payload.lightCards)\n                        .pipe(\n                            tap(test=>console.log(`loaded lightCards:${test}`)),\n                            catchError((err,caught)=>{\n                                console.error(`i18 loading failed for card publishers`);\n                                console.error(err);\n                                return of(false);\n                            })\n                        )),\n            map(\n                ()=>{\n                    return new LoadLightCardsExtendedData();\n                }\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {LightCardActionTypes, LoadLightCardsExtendedData, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {tap} from \"rxjs/internal/operators/tap\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class LightCardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            switchMap((action:LoadLightCardsSuccess)=>\n                    this.thirdService.loadI18nForLightCards(action.payload.lightCards)\n                        .pipe(\n                            tap(test=>console.log(`loaded lightCards:${test}`)),\n                            catchError((err,caught)=>{\n                                console.error(`i18 loading failed for card publishers`);\n                                console.error(err);\n                                return of(false);\n                            })\n                        )),\n            map(\n                ()=>{\n                    return new LoadLightCardsExtendedData();\n                }\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSettingComponent.html":{"url":"components/ListSettingComponent.html","title":"component - ListSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/list-setting/list-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-list-setting\n            \n\n            \n                styleUrls\n                ./list-setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeListValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Private\n                                valueInListValidator\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                values\n                            \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeListValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeListValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            valueInListValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueInListValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (control: any) => { valueInList: { valid: boolean; }; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Observable, of} from \"rxjs\";\n\n@Component({\n    selector: 'of-list-setting',\n    templateUrl: './list-setting.component.html',\n    styleUrls: ['./list-setting.component.css']\n})\nexport class ListSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n    preparedList: { value: string, label: Observable }[];\n\n    constructor(protected store: Store, private translateService: TranslateService) {\n        super(store);\n    }\n\n    ngOnInit() {\n        this.preparedList = [];\n        if (this.values) {\n            for (let v of this.values) {\n                if (typeof v == 'string') {\n                    this.preparedList.push({value: v, label: of(v)});\n                } else if (typeof v.label == 'string') {\n                    this.preparedList.push({value: v.value, label: of(v.label)});\n                } else {\n                    this.preparedList.push({\n                        value: v.value,\n                        label: this.translateService.get(v.label.key, v.label.parameters)\n                    });\n                }\n            }\n        }\n        super.ngOnInit();\n    }\n\n    initFormGroup() {\n        let validators = this.computeListValidators();\n        validators.push(this.valueInListValidator());\n        return new FormGroup({\n            setting: new FormControl('', validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeListValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n// ngOnInit() {\n    // }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value?value:'', {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('TextSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n    private valueInListValidator(){\n        return (control: AbstractControl)=>{\n            if(!!control.value && this.preparedList.map(e=>e.value).indexOf(control.value)\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n      \n      {{v.label|async}}\n    \n    Incorrect submission\n  \n\n\n    \n\n    \n                \n                    ./list-setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}                {{v.label|async}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCard.html":{"url":"classes/LoadCard.html","title":"class - LoadCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardFailure.html":{"url":"classes/LoadCardFailure.html","title":"class - LoadCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardSuccess.html":{"url":"classes/LoadCardSuccess.html","title":"class - LoadCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfig.html":{"url":"classes/LoadConfig.html","title":"class - LoadConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfig\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigFailure.html":{"url":"classes/LoadConfigFailure.html","title":"class - LoadConfigFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigSuccess.html":{"url":"classes/LoadConfigSuccess.html","title":"class - LoadConfigSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCards.html":{"url":"classes/LoadLightCards.html","title":"class - LoadLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsExtendedData.html":{"url":"classes/LoadLightCardsExtendedData.html","title":"class - LoadLightCardsExtendedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsExtendedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:43\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsExtendedData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsFailure.html":{"url":"classes/LoadLightCardsFailure.html","title":"class - LoadLightCardsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsSuccess.html":{"url":"classes/LoadLightCardsSuccess.html","title":"class - LoadLightCardsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenu.html":{"url":"classes/LoadMenu.html","title":"class - LoadMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuFailure.html":{"url":"classes/LoadMenuFailure.html","title":"class - LoadMenuFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuSuccess.html":{"url":"classes/LoadMenuSuccess.html","title":"class - LoadMenuSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettings.html":{"url":"classes/LoadSettings.html","title":"class - LoadSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsFailure.html":{"url":"classes/LoadSettingsFailure.html","title":"class - LoadSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsSuccess.html":{"url":"classes/LoadSettingsSuccess.html","title":"class - LoadSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-login\n            \n\n\n            \n                styles\n                .btn-primary {margin-right: 8px;}\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeProvider\n                            \n                            \n                                hide\n                            \n                            \n                                loginMessage\n                            \n                            \n                                useCodeFlow$\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeFlow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, service: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            codeFlow\n                        \n                        \n                    \n                \n            \n            \n                \ncodeFlow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useCodeFlow$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {TryToLogIn} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {filter, map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {selectMessage} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\n\n@Component({\n    selector: 'of-login',\n    templateUrl: './login.component.html',\n    styles: ['.btn-primary {margin-right: 8px;}']\n})\nexport class LoginComponent implements OnInit {\n\n    hide: boolean;\n    userForm: FormGroup;\n    useCodeFlow$: Observable;\n    loginMessage: Message;\n    // codeProvider$: Observable;\n    codeProvider: any;\n    /* istanbul ignore next */\n    constructor( private store: Store, private service: AuthenticationService) {}\n\n    ngOnInit() {\n        this.useCodeFlow$ = this.store.select(buildConfigSelector('security.oauth2.flow.mode'))\n            .pipe(map(flowMode=>flowMode === 'CODE'));\n        this.store.select(selectMessage).pipe(filter(m=>m!=null && m.level==MessageLevel.ERROR))\n            .subscribe(m=>this.loginMessage=m);\n        this.store.select(buildConfigSelector('security.oauth2.flow.provider'))\n            .subscribe(provider=>this.codeProvider={name:provider});\n        this.hide = true;\n        this.userForm = new FormGroup({\n                identifier: new FormControl(''),\n                password: new FormControl('')\n            }\n        );\n    }\n\n    onSubmit(): void {\n        if (this.userForm.valid) {\n            const username = this.userForm.get('identifier').value;\n            const password = this.userForm.get('password').value;\n            this.store.dispatch(new TryToLogIn({username: username, password: password}));\n        }\n    }\n\n    resetForm(): void {\n        this.userForm.reset();\n    }\n\n    codeFlow(): void{\n        this.service.moveToCodeFlowLoginPage();\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n                    login.login\n                    \n                    \n                        login.password\n                        \n                    \n                    \n                        login.submit.password\n                        login.reset\n                    \n                \n                \n                    \n                    login.submit.code\n                    \n                \n            \n            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}\n        \n    \n\n\n    \n\n    \n            .btn-primary {margin-right: 8px;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            login.login                                                                login.password                                                                                        login.submit.password                        login.reset                                                                                            login.submit.code                                                            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/map.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/model/map.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class Map {\n    [key: string]: T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuEffects.html":{"url":"injectables/MenuEffects.html","title":"injectable - MenuEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/menu.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                resolveThirdPartyLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/menu.effects.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            switchMap(menu=>zip(of(menu),this.service.loadI18nForMenuEntries(menu)\n                .pipe(\n                    catchError((err,caught)=>{\n                        console.error(err);\n                        return of(false);\n                    })\n                ))),\n            map(array =>\n                new LoadMenuSuccess({menu: array[0]})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveThirdPartyLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:67\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\nIt then tries to get the corresponding menu link from the {ThirdsService}.\nIf successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\nIf not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of, zip} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {\n    LoadMenu,\n    LoadMenuFailure,\n    LoadMenuSuccess,\n    MenuActionTypes,\n    SelectMenuLink, SelectMenuLinkFailure,\n    SelectMenuLinkSuccess\n} from \"@ofActions/menu.actions\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class MenuEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ThirdsService,\n                private router: Router\n    ) {\n    }\n\n    @Effect()\n    load: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            switchMap(menu=>zip(of(menu),this.service.loadI18nForMenuEntries(menu)\n                .pipe(\n                    catchError((err,caught)=>{\n                        console.error(err);\n                        return of(false);\n                    })\n                ))),\n            map(array =>\n                new LoadMenuSuccess({menu: array[0]})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\n     * It then tries to get the corresponding menu link from the {ThirdsService}.\n     * If successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\n     * If not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n     *\n     * @name resolveThirdPartyLink\n     */\n    @Effect()\n    resolveThirdPartyLink: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuState.html":{"url":"interfaces/MenuState.html","title":"interface - MenuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        menu\n                                \n                                \n                                        selected_iframe_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     ThirdMenu[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThirdMenu[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_iframe_url\n                                    \n                                \n                                \n                                    \n                                        selected_iframe_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport interface MenuState{\n    menu: ThirdMenu[],\n    loading: boolean,\n    error:string,\n    selected_iframe_url: string\n}\n\nexport const menuInitialState: MenuState = {\n    menu:[],\n    loading: false,\n    error:null,\n    selected_iframe_url: null\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/message.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level, i18n?: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/message.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport class Message {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly message: string,\n        readonly level = MessageLevel.DEBUG,\n        readonly i18n?: I18n,\n    ){}\n}\n\nexport enum MessageLevel {\n    ERROR, INFO, DEBUG\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MouseWheelDirective.html":{"url":"directives/MouseWheelDirective.html","title":"directive - MouseWheelDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MouseWheelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/mouse-wheel.directive.ts\n        \n\n            \n                Description\n            \n            \n                Mousewheel directive\nhttps://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMouseWheel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelFunc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelDown\n                            \n                            \n                                mouseWheelUp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                DOMMouseScroll\n                            \n                            \n                                mousewheel\n                            \n                            \n                                onmousewheel\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseWheelDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseWheelUp\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:11\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            DOMMouseScroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nDOMMouseScroll(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:21\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:16\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onmousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nonmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:26\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseWheelFunc\n                        \n                        \n                    \n                \n            \n            \n                \nmouseWheelFunc(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:34\n                \n            \n\n\n            \n                \n                    emit mouse wheel up or down event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n * @export\n */\n@Directive({ selector: '[appMouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  /**\n   * emit mouse wheel up or down event\n   * @param event\n   */\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    let delta = 0;\n    delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n    if (delta > 0) {\n      this.mouseWheelUp.emit(event);\n    } else if (delta \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiSettingsComponent.html":{"url":"components/MultiSettingsComponent.html","title":"component - MultiSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-settings\n            \n\n            \n                styleUrls\n                ./multi-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./multi-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-multi-settings',\n  templateUrl: './multi-settings.component.html',\n  styleUrls: ['./multi-settings.component.css']\n})\nexport class MultiSettingsComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n      super(store)\n    }\n\n    initFormGroup(){\n        let validators = this.computeMultiValidators();\n        return new FormGroup({\n            setting: new FormControl([],validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeMultiValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  multi-settings works!\n\n\n    \n\n    \n                \n                    ./multi-settings.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  multi-settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _thirdMenus\n                            \n                            \n                                currentPath\n                            \n                            \n                                expandedMenu\n                            \n                            \n                                expandedUserMenu\n                            \n                            \n                                navbarCollapsed\n                            \n                            \n                                navigationRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thirdMenus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleUserMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _thirdMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedUserMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : navigationRoutes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thirdMenus\n                    \n                \n\n                \n                    \n                        getthirdMenus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/navbar.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {navigationRoutes} from '../../app-routing.module';\nimport {Store} from '@ngrx/store';\nimport {TryToLogOut} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl} from '@ofSelectors/router.selectors';\nimport {LoadMenu} from \"@ofActions/menu.actions\";\nimport {selectMenuStateMenu} from \"@ofSelectors/menu.selectors\";\nimport {Observable} from \"rxjs\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'of-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n    navbarCollapsed = true;\n    navigationRoutes = navigationRoutes;\n    currentPath: string[];\n    private _thirdMenus: Observable;\n    expandedMenu:boolean[]=[];\n    expandedUserMenu=false;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/');\n        });\n        this._thirdMenus=this.store.select(selectMenuStateMenu)\n            .pipe(tap(menus=>{\n                this.expandedMenu=new Array(menus.length);\n                _.fill(this.expandedMenu,false);\n            }));\n        this.store.dispatch(new LoadMenu());\n    }\n\n\n    logOut(){\n        this.store.dispatch(new TryToLogOut());\n    }\n\n    get thirdMenus(){\n        return this._thirdMenus;\n    }\n\n    toggleMenu(index:number){\n        this.expandedMenu[index]=!this.expandedMenu[index];\n        if(this.expandedMenu[index])\n            setTimeout(()=>this.expandedMenu[index]=false,5000);\n    }\n\n    toggleUserMenu(){\n        this.expandedUserMenu=!this.expandedUserMenu;\n        if(this.expandedUserMenu)\n            setTimeout(()=>this.expandedUserMenu=false,5000);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n  \n  \n    \n  \n  \n    \n      \n      \n        {{'menu.'+link.path}}\n      \n      \n      1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">\n        \n        1\"\n                translate\n        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}\n        1\"\n             [ngbCollapse]=\"!expandedMenu[index]\">\n          \n            \n              {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}\n            \n              \n            \n          \n        \n        \n        \n          {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}\n          \n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            menu.settings\n          \n          \n            \n              \n                menu.logout&nbsp;\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.dropdown-item > .dropdown-item-external-link{\n  color:inherit;\n  padding-left: 0.5rem;\n}\n\n.single-third-menu-entry {\n\n  > .dropdown-item-internal-link{\n    color: inherit;\n    text-decoration: none;\n  }\n\n  > .dropdown-item-external-link{\n    color: inherit;\n    text-decoration: none;\n    padding-left: 0.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{\\'menu.\\'+link.path}}                  1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">                1\"                translate        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}        1\"             [ngbCollapse]=\"!expandedMenu[index]\">                                    {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}                                                                                  {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}                                                                                                  menu.settings                                                              menu.logout                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoSelectionComponent.html":{"url":"components/NoSelectionComponent.html","title":"component - NoSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/no-selection/no-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-no-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./no-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-no-selection',\n  templateUrl: './no-selection.component.html',\n})\nexport class NoSelectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  no-selection works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  no-selection works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterListItem.html":{"url":"classes/ParameterListItem.html","title":"class - ParameterListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, value: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettings.html":{"url":"classes/PatchSettings.html","title":"class - PatchSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsFailure.html":{"url":"classes/PatchSettingsFailure.html","title":"class - PatchSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsSuccess.html":{"url":"classes/PatchSettingsSuccess.html","title":"class - PatchSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadForSuccessfulAuthentication.html":{"url":"classes/PayloadForSuccessfulAuthentication.html","title":"class - PayloadForSuccessfulAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadForSuccessfulAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Authentication success payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expirationDate\n                            \n                            \n                                    Public\n                                    Optional\n                                firstName\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                    Optional\n                                lastName\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, clientId: Guid, token: string, expirationDate: Date, firstName?: string, lastName?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Process.html":{"url":"classes/Process.html","title":"class - Process","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Process\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(states?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectLogIn.html":{"url":"classes/RejectLogIn.html","title":"class - RejectLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store that the authentication is not possible.\nEmmited by {AuthenticationEffect} in the following {Observable} @members:\n  * TryToLogin;\n  *  CheckAuthentication\n  and in the handleRejectedLogin @method called by the ChecAuthentication {Observable}\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information and containing a message about login rejection\nby filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:111\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.RejectLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:111\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouterStateUrl.html":{"url":"classes/RouterStateUrl.html","title":"class - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n            \n                Description\n            \n            \n                The RouterStateSerializer takes the current RouterStateSnapshot\nand returns any pertinent information needed. The snapshot contains\nall information about the state of the router at the given point in time.\nThe entire snapshot is complex and not always needed. In this case, you only\nneed the URL and query parameters from the snapshot in the store. Other items could be\nreturned such as route parameters and static route data.\nsource: https://github.com/briebug/ngrx-complex-forms\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, params: Params, queryParams: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/states/router.state.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectLightCard.html":{"url":"classes/SelectLightCard.html","title":"class - SelectLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.SelectLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:60\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLink.html":{"url":"classes/SelectMenuLink.html","title":"class - SelectMenuLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\nPayload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\nEmitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLink\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkFailure.html":{"url":"classes/SelectMenuLinkFailure.html","title":"class - SelectMenuLinkFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the error\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:81\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkSuccess.html":{"url":"classes/SelectMenuLinkSuccess.html","title":"class - SelectMenuLinkSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the computed url\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CardService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            FilterService\n                        \n                        \n                            I18nService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            ThirdsService\n                        \n                        \n                            TimeService\n                        \n                        \n                            TokenInjector\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/services.module.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthenticationService} from './authentication.service';\nimport {TokenInjector} from './interceptors.service';\nimport {CardService} from './card.service';\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {FilterService} from \"@ofServices/filter.service\";\nimport {ConfigService} from \"@ofServices/config.service\";\nimport {I18nService} from \"@ofServices/i18n.service\";\nimport {SettingsService} from \"@ofServices/settings.service\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ConfigService,\n        SettingsService,\n        CardService,\n        AuthenticationService,\n        TimeService,\n        ThirdsService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInjector,\n            multi: true\n        }   ,\n        GuidService,\n        FilterService,\n        I18nService\n\n    ]\n})\nexport class ServicesModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ServicesModule\n        };\n    }\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n            parentModule: ServicesModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ServicesModule is already loaded. Import it in the AppModule only'\n            );\n        }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCardDataTimeline.html":{"url":"classes/SetCardDataTimeline.html","title":"class - SetCardDataTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCardDataTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.SetCardDataTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-settings\n            \n\n            \n                styleUrls\n                ./settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                locales$\n                            \n                            \n                                timeZones$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/settings.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/settings.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locales$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeZones$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  locales$:Observable;\n  timeZones$: Observable;\n\n  constructor(private store:Store) { }\n\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./settings.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/settings.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadSettings\n                            \n                            \n                                loadSettingsOnLogin\n                            \n                            \n                                patchSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/settings.effects.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:39\n                            \n                        \n\n                \n                    \n                        Manages settings load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettingsOnLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n      ofType(AuthenticationActionTypes.AcceptLogIn),\n      map(a=>new LoadSettings())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patchSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:57\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    LoadSettings,\n    LoadSettingsFailure,\n    LoadSettingsSuccess, PatchSettings, PatchSettingsFailure,\n    PatchSettingsSuccess,\n    SettingsActionTypes\n} from \"@ofActions/settings.actions\";\nimport {AcceptLogIn, AuthenticationActionTypes} from \"@ofActions/authentication.actions\";\nimport {SettingsService} from \"@ofServices/settings.service\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class SettingsEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: SettingsService\n    ) {}\n\n\n    /**\n     * Manages settings load -> service request -> success/message\n     */\n    @Effect()\n    loadSettings: Observable = this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        );\n\n\n    @Effect()\n    loadSettingsOnLogin: Observable = this.actions$.pipe(\n      ofType(AuthenticationActionTypes.AcceptLogIn),\n      map(a=>new LoadSettings())\n    );\n\n    @Effect()\n    patchSettings: Observable = this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BaseSettingComponent\n                        \n                        \n                            EmailSettingComponent\n                        \n                        \n                            ListSettingComponent\n                        \n                        \n                            MultiSettingsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TextSettingComponent\n                        \n                        \n                            TypeAheadSettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsRoutingModule} from \"./settings-routing.module\";\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { BaseSettingComponent } from './components/settings/base-setting/base-setting.component';\nimport { TextSettingComponent } from './components/settings/text-setting/text-setting.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport { EmailSettingComponent } from './components/settings/email-setting/email-setting.component';\nimport {ListSettingComponent} from \"./components/settings/list-setting/list-setting.component\";\nimport { MultiSettingsComponent } from './components/settings/multi-settings/multi-settings.component';\nimport { TypeAheadSettingsComponent } from './components/settings/type-ahead-settings/type-ahead-settings.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\n\n@NgModule({\n    declarations: [SettingsComponent, BaseSettingComponent, TextSettingComponent, EmailSettingComponent, ListSettingComponent, MultiSettingsComponent, TypeAheadSettingsComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TypeaheadModule,\n        SettingsRoutingModule,\n        TranslateModule,\n    ]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./components/settings/settings.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsComponent,\n        // canActivate: [AuthenticationGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                usersUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserSettings\n                            \n                            \n                                patchUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \npatchUserSettings(settings: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Injectable()\nexport class SettingsService {\n    private usersUrl: string;\n    private userId: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.usersUrl = `${environment.urls.users}`;\n        this.store.select(selectIdentifier).subscribe(id=>this.userId=id);\n    }\n\n    fetchUserSettings(): Observable {\n        return this.httpClient.get(`${this.usersUrl}/users/${this.userId}/settings`);\n    }\n\n    patchUserSettings(settings:any): Observable {\n        return this.httpClient.patch(`${this.usersUrl}/users/${this.userId}/settings`, settings);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/settings.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState{\n    settings:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string\n}\n\nexport const settingsInitialState: SettingsState = {\n    settings:{},\n    loading: false,\n    loaded: false,\n    error: null\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(details?: Detail[], actions?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateModule.html":{"url":"modules/StateModule.html","title":"module - StateModule","body":"\n                   \n\n\n\n\n    Modules\n    StateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\n\n!environment\n\n!environment\n\n\n\nStateModule\n\nStateModule\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/store/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/state.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {appEffects, appReducer, storeConfig} from './index';\nimport {environment} from '@env/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {NavigationActionTiming, RouterStateSerializer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {CustomRouterStateSerializer} from '@ofStore/states/router.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducer, storeConfig),\n    StoreRouterConnectingModule.forRoot({\n        navigationActionTiming: NavigationActionTiming.PostActivation,\n        serializer: CustomRouterStateSerializer\n    }),\n    EffectsModule.forRoot(appEffects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  declarations: [],\n    providers:[{provide:'configRetryDelay',useValue:5000}]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule\n      ,\n      providers: [\n        /**\n         * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n         * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n         * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n         */\n        {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsFilterComponent.html":{"url":"components/TagsFilterComponent.html","title":"component - TagsFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagsFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-tags-filter\n            \n\n            \n                styleUrls\n                ./tags-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tags-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                tagFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\n\n@Component({\n    selector: 'of-tags-filter',\n    templateUrl: './tags-filter.component.html',\n    styleUrls: ['./tags-filter.component.scss']\n})\nexport class TagsFilterComponent implements OnInit, OnDestroy {\n\n    tagFilterForm: FormGroup;\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    constructor(private formBuilder: FormBuilder,private store: Store) {\n        this.tagFilterForm = this.createFormGroup()\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TAG_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.tagFilterForm.get('tags').setValue(next.active?next.status.tags:[]);\n            } else {\n                this.tagFilterForm.get('tags').setValue([]);\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.tagFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.difference(formA.tags,formB.tags).length===0 && _.difference(formB.tags,formA.tags).length===0;\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TAG_FILTER,\n                        active: form.tags.length>0,\n                        status: form\n                    }))\n                );\n        });\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    private createFormGroup() {\n        return this.formBuilder.group({\n                tags: []\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n    \n\n    \n                \n                    ./tags-filter.component.scss\n                \n                .tags-field {\n  /deep/ .dropdown-toggle {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagsFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSettingComponent.html":{"url":"components/TextSettingComponent.html","title":"component - TextSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/text-setting/text-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-text-setting\n            \n\n            \n                styleUrls\n                ./text-setting.component.css\n            \n\n\n\n            \n                templateUrl\n                ./text-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pattern\n                            \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'of-text-setting',\n    templateUrl: './text-setting.component.html',\n    styleUrls: ['./text-setting.component.css']\n})\nexport class TextSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() pattern:string;\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    initFormGroup(){\n        let validators = this.computeTextValidators();\n        return new FormGroup({\n            setting: new FormControl(null,validators)\n        }, {updateOn: 'submit'});\n    }\n\n    protected computeTextValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        if (this.pattern)\n            validators.push(Validators.pattern(this.pattern));\n        return validators;\n    }\n\n// ngOnInit() {\n    // }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n    protected isEqual(formA, formB):boolean{\n        console.log('TextSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    Incorrect submission\n  \n\n\n    \n\n    \n                \n                    ./text-setting.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Third.html":{"url":"classes/Third.html","title":"class - Third","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Third\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, version: string, i18nLabelKey: string, templates?: string[], csses?: string[], locales?: string[], menuEntries?: ThirdMenuEntry[], processes?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nLabelKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templates\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        csses\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        locales\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuEntries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processes\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractState(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/thirds.model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenu.html":{"url":"classes/ThirdMenu.html","title":"class - ThirdMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, version: string, label: string, entries: ThirdMenuEntry[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenuEntry.html":{"url":"classes/ThirdMenuEntry.html","title":"class - ThirdMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, label: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyModule.html":{"url":"modules/ThirdpartyModule.html","title":"module - ThirdpartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IframeDisplayComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThirdpartyRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IframeDisplayComponent } from './iframedisplay.component';\nimport {ThirdpartyRoutingModule} from \"./thirdparty-routing.module\";\n\n@NgModule({\n  declarations: [IframeDisplayComponent],\n  imports: [\n    CommonModule,\n    ThirdpartyRoutingModule\n  ]\n})\nexport class ThirdpartyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyRoutingModule.html":{"url":"modules/ThirdpartyRoutingModule.html","title":"module - ThirdpartyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {IframeDisplayComponent} from \"./iframedisplay.component\";\n\nconst routes: Routes = [\n    {\n        path: ':menu_id/:menu_version/:menu_entry_id',\n        component: IframeDisplayComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThirdpartyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsI18nLoader.html":{"url":"classes/ThirdsI18nLoader.html","title":"class - ThirdsI18nLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsI18nLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:214\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {EMPTY, from, merge, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader, TranslateService} from \"@ngx-translate/core\";\nimport {catchError, filter, map, mergeMap, reduce, switchMap, take, tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../store/index\";\nimport {LightCard} from \"../model/light-card.model\";\nimport {Third, ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private loadedI18n: string[] = [];\n    private loadingI18n: string[] = [];\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n                private authenticationService: AuthenticationService,\n                private store: Store,\n                private $injector: Injector,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThird(thirdName:string, version:string):Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if(third){\n            return of(third);\n        }\n        return this.fetchThird(thirdName,version)\n            .pipe(\n                tap(t=>Object.setPrototypeOf(t,Third.prototype)),\n                tap(t=>this.thirdCache.set(key,t))\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`,{\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId,thirdMenuVersion).pipe(\n            //filter((third :Third)=>!(!third.menuEntries)),\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if(entry.length==1){\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map( menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`,{\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string){\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version',version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    fetchI18nJson(publisher: string, version: string, locales: string[]): Observable {\n        let previous: Observable;\n        for (let locale of locales) {\n            const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n            const httpCall = this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {\n                params\n            }).pipe(\n                map(r => {\n                        const object = {};\n                        object[locale] = {};\n                        object[locale][publisher] = {};\n                        object[locale][publisher][version] = r;\n                        return object;\n                    }\n                ));\n            if (previous) {\n                previous = merge(previous, httpCall);\n            } else {\n                previous = httpCall;\n            }\n        }\n        if (previous == null) {\n            return EMPTY;\n        }\n        const result = previous.pipe(\n            reduce((acc, val) => _.merge(acc,val))\n        );\n\n        return result;\n    }\n\n    computeThirdsMenu(): Observable{\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts=>from(ts)),\n            filter((t:Third)=>!(!t.menuEntries)),\n            map(t=>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus:ThirdMenu[],menu:ThirdMenu)=>{\n                menus.push(menu);\n                return menus;\n            },[])\n        );\n    }\n\n    loadI18nForLightCards(cards:LightCard[]){\n        let observable = from(cards).pipe(\n            map(card=> card.publisher + '###' + card.publisherVersion));\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    loadI18nForMenuEntries(menus:ThirdMenu[]){\n        const observable = from(menus).pipe(\n            map(menu=> menu.id + '###' + menu.version)\n        );\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    private subscribeToLoadI18n(observable) {\n        return observable\n            .pipe(\n                reduce((ids: string[], id: string) => {\n                    ids.push(id);\n                    return ids;\n                }, []),\n                switchMap((ids:string[]) => {\n                    let work = _.uniq(ids);\n                    work = _.difference(work, this.loadingI18n)\n                    return from(_.difference(work, this.loadedI18n))\n                }),\n                mergeMap((id: string) => {\n                    this.loadingI18n.push(id);\n                    const input = id.split('###');\n\n                    let publisher = input[0];\n                    let version = input[1];\n                    return this.fetchI18nJson(publisher, version, this.translate().getLangs())\n                        .pipe(map(trans => {\n                                return {id: id, translation: trans};\n                            }),\n                            catchError(err => {\n                                _.remove(this.loadingI18n, id);\n                                return throwError(err);\n                            })\n                        );\n                }),\n                reduce((acc, val) => _.merge(acc,val)),\n                map(\n                    (result:any) => {\n                        const langs = this.translate().getLangs();\n                        const currentLang = this.translate().currentLang;\n                        for (let lang of langs) {\n                            let translationElement = result.translation[lang];\n                            if (translationElement) {\n                                this.translate().setTranslation(lang, translationElement, true);\n                                // needed otherwise only one translation apply\n                                this.translate().use(lang);\n                            }\n                        }\n                        this.translate().use(currentLang);\n                        _.remove(this.loadingI18n, result.id);\n                        this.loadedI18n.push(result.id);\n                        return true;\n                    }\n                ),\n                catchError((error,caught )=>{\n                    console.error('something went wrong during translation',error);\n                    return caught;\n                })\n            )\n    }\n\n    private translate(): TranslateService {\n        return this.$injector.get(TranslateService);\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {}\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdsService.html":{"url":"injectables/ThirdsService.html","title":"injectable - ThirdsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadedI18n\n                            \n                            \n                                    Private\n                                loadingI18n\n                            \n                            \n                                    Private\n                                thirdCache\n                            \n                            \n                                    Readonly\n                                thirdsUrl\n                            \n                            \n                                    Private\n                                urlCleaner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdCssUrl\n                            \n                            \n                                computeThirdsMenu\n                            \n                            \n                                fetchHbsTemplate\n                            \n                            \n                                fetchI18nJson\n                            \n                            \n                                    Private\n                                fetchThird\n                            \n                            \n                                loadI18nForLightCards\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                            \n                                queryMenuEntryURL\n                            \n                            \n                                queryThird\n                            \n                            \n                                    Private\n                                subscribeToLoadI18n\n                            \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authenticationService: AuthenticationService, store: Store, $injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        $injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdCssUrl\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdCssUrl(publisher: string, styleName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    styleName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchHbsTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nfetchHbsTemplate(publisher: string, version: string, name: string, locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchI18nJson\n                        \n                        \n                    \n                \n            \n            \n                \nfetchI18nJson(publisher: string, version: string, locales: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locales\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchThird\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchThird(publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForLightCards\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForLightCards(cards: LightCard[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                                LightCard[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries(menus: ThirdMenu[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                            ThirdMenu[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryMenuEntryURL\n                        \n                        \n                    \n                \n            \n            \n                \nqueryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdMenuId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuEntryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThird\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThird(thirdName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribeToLoadI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToLoadI18n(observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            translate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    translate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TranslateService\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadedI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            thirdCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thirdsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlCleaner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpUrlEncodingCodec\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {EMPTY, from, merge, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader, TranslateService} from \"@ngx-translate/core\";\nimport {catchError, filter, map, mergeMap, reduce, switchMap, take, tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../store/index\";\nimport {LightCard} from \"../model/light-card.model\";\nimport {Third, ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private loadedI18n: string[] = [];\n    private loadingI18n: string[] = [];\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n                private authenticationService: AuthenticationService,\n                private store: Store,\n                private $injector: Injector,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThird(thirdName:string, version:string):Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if(third){\n            return of(third);\n        }\n        return this.fetchThird(thirdName,version)\n            .pipe(\n                tap(t=>Object.setPrototypeOf(t,Third.prototype)),\n                tap(t=>this.thirdCache.set(key,t))\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`,{\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId,thirdMenuVersion).pipe(\n            //filter((third :Third)=>!(!third.menuEntries)),\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if(entry.length==1){\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map( menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`,{\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string){\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version',version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    fetchI18nJson(publisher: string, version: string, locales: string[]): Observable {\n        let previous: Observable;\n        for (let locale of locales) {\n            const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n            const httpCall = this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {\n                params\n            }).pipe(\n                map(r => {\n                        const object = {};\n                        object[locale] = {};\n                        object[locale][publisher] = {};\n                        object[locale][publisher][version] = r;\n                        return object;\n                    }\n                ));\n            if (previous) {\n                previous = merge(previous, httpCall);\n            } else {\n                previous = httpCall;\n            }\n        }\n        if (previous == null) {\n            return EMPTY;\n        }\n        const result = previous.pipe(\n            reduce((acc, val) => _.merge(acc,val))\n        );\n\n        return result;\n    }\n\n    computeThirdsMenu(): Observable{\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts=>from(ts)),\n            filter((t:Third)=>!(!t.menuEntries)),\n            map(t=>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus:ThirdMenu[],menu:ThirdMenu)=>{\n                menus.push(menu);\n                return menus;\n            },[])\n        );\n    }\n\n    loadI18nForLightCards(cards:LightCard[]){\n        let observable = from(cards).pipe(\n            map(card=> card.publisher + '###' + card.publisherVersion));\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    loadI18nForMenuEntries(menus:ThirdMenu[]){\n        const observable = from(menus).pipe(\n            map(menu=> menu.id + '###' + menu.version)\n        );\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    private subscribeToLoadI18n(observable) {\n        return observable\n            .pipe(\n                reduce((ids: string[], id: string) => {\n                    ids.push(id);\n                    return ids;\n                }, []),\n                switchMap((ids:string[]) => {\n                    let work = _.uniq(ids);\n                    work = _.difference(work, this.loadingI18n)\n                    return from(_.difference(work, this.loadedI18n))\n                }),\n                mergeMap((id: string) => {\n                    this.loadingI18n.push(id);\n                    const input = id.split('###');\n\n                    let publisher = input[0];\n                    let version = input[1];\n                    return this.fetchI18nJson(publisher, version, this.translate().getLangs())\n                        .pipe(map(trans => {\n                                return {id: id, translation: trans};\n                            }),\n                            catchError(err => {\n                                _.remove(this.loadingI18n, id);\n                                return throwError(err);\n                            })\n                        );\n                }),\n                reduce((acc, val) => _.merge(acc,val)),\n                map(\n                    (result:any) => {\n                        const langs = this.translate().getLangs();\n                        const currentLang = this.translate().currentLang;\n                        for (let lang of langs) {\n                            let translationElement = result.translation[lang];\n                            if (translationElement) {\n                                this.translate().setTranslation(lang, translationElement, true);\n                                // needed otherwise only one translation apply\n                                this.translate().use(lang);\n                            }\n                        }\n                        this.translate().use(currentLang);\n                        _.remove(this.loadingI18n, result.id);\n                        this.loadedI18n.push(result.id);\n                        return true;\n                    }\n                ),\n                catchError((error,caught )=>{\n                    console.error('something went wrong during translation',error);\n                    return caught;\n                })\n            )\n    }\n\n    private translate(): TranslateService {\n        return this.$injector.get(TranslateService);\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {}\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsServiceMock.html":{"url":"classes/ThirdsServiceMock.html","title":"class - ThirdsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/mocks/thirds.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdsMenu\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\nexport class ThirdsServiceMock {\n    computeThirdsMenu(): Observable{\n        return of([new ThirdMenu('t1', '1', 'tLabel1', [\n            new ThirdMenuEntry('id1', 'label1', 'link1'),\n            new ThirdMenuEntry('id2', 'label2', 'link2'),\n        ]),\n            new ThirdMenu('t2', '1', 'tLabel2', [\n                new ThirdMenuEntry('id3', 'label3', 'link3'),\n            ])])\n    }\n    loadI18nForMenuEntries(){return of(true)}\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tick.html":{"url":"classes/Tick.html","title":"class - Tick","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tick\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Heart beat of the application change current date\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.Tick\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to upadate the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:{currentTime:moment.Moment}){}\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify thate something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeEffects.html":{"url":"injectables/TimeEffects.html","title":"injectable - TimeEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/time.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTimeReference\n                            \n                            \n                                heartBeat\n                            \n                            \n                                stickToVirtualTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/time.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTimeReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeReference\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartBeat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(() => {\n                        return new Tick({currentTime: this.currentTimeReference.computeNow(moment())});\n                    })\n                ))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:37\n                            \n                        \n\n                \n                    \n                        This Observable send a tick corresponding to the heart beat of the application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stickToVirtualTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:51\n                            \n                        \n\n                \n                    \n                        This Observable update the way time is managed in the application.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {AppState} from \"@ofStore/index\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of, throwError} from \"rxjs\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {AuthenticationActionTypes} from \"@ofActions/authentication.actions\";\nimport {catchError, map, switchMap} from \"rxjs/operators\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {FailToUpdateTimeReference, Tick, UpdateTimeReference} from \"@ofActions/time.actions\";\nimport * as moment from 'moment-timezone';\nimport {selectTimeReference} from \"@ofSelectors/time.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\" ;\n\n@Injectable()\nexport class TimeEffects {\n\n    private currentTimeReference: TimeReference;\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: TimeService\n    ) {\n        this.store.select(selectTimeReference).subscribe(\n            timeRef => this.currentTimeReference = timeRef\n        );\n    }\n\n    /**\n     *This Observable send a tick corresponding to the heart beat of the application.\n     *\n     */\n\n    @Effect()\n    heartBeat: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(() => {\n                        return new Tick({currentTime: this.currentTimeReference.computeNow(moment())});\n                    })\n                ))\n        );\n    /**\n     *This Observable update the way time is managed in the application.\n     *\n     */\n    @Effect()\n    stickToVirtualTime: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeFilterComponent.html":{"url":"components/TimeFilterComponent.html","title":"component - TimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./time-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                timeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Component({\n    selector: 'of-time-filter',\n    templateUrl: './time-filter.component.html'\n})\nexport class TimeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    get filter$(): Observable {\n        return this._filter$;\n    }\n\n    timeFilterForm: FormGroup;\n\n    constructor(private store: Store,\n                private timeService: TimeService) {\n        this.timeFilterForm = this.createFormGroup();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TIME_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                if (this.timeService.parseString(this.timeFilterForm.get('start').value).valueOf() != next.status.start) {\n                    if(!!next.status.start)\n                        this.timeFilterForm.get('start').setValue(this.timeService.asInputString(next.status.start));\n                    else\n                        this.timeFilterForm.get('start').setValue(null);\n                }\n                if (this.timeService.parseString(this.timeFilterForm.get('end').value).valueOf() != next.status.end) {\n                    if(!!next.status.end)\n                        this.timeFilterForm.get('end').setValue(this.timeService.asInputString(next.status.end));\n                    else\n                        this.timeFilterForm.get('end').setValue(null);\n                }\n            } else {\n                if (!!this.timeFilterForm.get('start').value)\n                    this.timeFilterForm.get('start').setValue(null);\n                if (!!this.timeFilterForm.get('end').value)\n                    this.timeFilterForm.get('end').setValue(null);\n            }\n        });\n        this._filter$.pipe(first(), takeUntil(this.ngUnsubscribe$)).subscribe(() => {\n            this.timeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB) => {\n                        return _.isEqual(formA, formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TIME_FILTER,\n                        active: !!form.start || !!form.end,\n                        status: {\n                            start: form.start ? this.timeService.parseString(form.start).valueOf() : null,\n                            end: form.end ? this.timeService.parseString(form.end).valueOf() : null\n                        }\n                    }))\n                );\n        });\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            start: new FormControl(),\n            end: new FormControl()\n        }, {updateOn: 'change'});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        feed.filters.time.start.label\n        \n      \n      \n        feed.filters.time.end.label\n        \n      \n    \n  \n  feed.filters.time.title\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    feed.filters.time.start.label                            feed.filters.time.end.label                      feed.filters.time.title        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeLineComponent.html":{"url":"components/TimeLineComponent.html","title":"component - TimeLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/time-line/time-line.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-line\n            \n\n\n\n\n            \n                templateUrl\n                ./time-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conf\n                            \n                            \n                                    Public\n                                confZoom\n                            \n                            \n                                lightCards$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateWithSpaceBeforeMoment\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dateWithSpaceBeforeMoment\n                        \n                        \n                    \n                \n            \n            \n                \ndateWithSpaceBeforeMoment(date, clusterLevel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:190\n                \n            \n\n\n            \n                \n                    make start of domain begin 4 ticks before actual date (moment())\neach cluster level had a different treatment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confZoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Observable, of, Subscription} from 'rxjs';\nimport { LightCard } from '@ofModel/light-card.model';\nimport { select, Store } from '@ngrx/store';\nimport {catchError, debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { AppState } from '@ofStore/index';\nimport {InitTimeline, SetCardDataTimeline} from '@ofActions/timeline.actions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\n\n@Component({\n  selector: 'of-time-line',\n  templateUrl: './time-line.component.html',\n})\nexport class TimeLineComponent implements OnInit, OnDestroy {\n    lightCards$: Observable;\n    subscription: Subscription;\n\n    public conf: any;\n    public confZoom: any;\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        // set start of Week to saturday on moment locale used\n        moment.updateLocale('en', { week: {\n                dow: 6, // First day of week is Saturday\n                doy: 12 // First week of year must contain 1 January (7 + 6 - 1)\n            }});\n\n        const actualMoment = moment();\n\n        // conf 1 === end of the actual week + next week\n        /*const startDomain = moment();\n        startDomain.hours(0).minutes(0).seconds(0).millisecond(0);*/\n        const startDomain = this.dateWithSpaceBeforeMoment(moment(actualMoment), 'W');\n        const endDomain = _.cloneDeep(startDomain);\n        endDomain.add(1, 'week');\n        endDomain.startOf('week');\n        endDomain.hours(0).minutes(0).seconds(0).millisecond(0);\n        endDomain.add(7, 'days');\n        // endDomain.add(5, 'days'); // example\n\n        // conf 4 === end of the actual day + 7 days\n        /*const startDomain4 = moment();\n        startDomain4.hours(0).minutes(0).seconds(0).millisecond(0);*/\n        const startDomain4 = this.dateWithSpaceBeforeMoment(moment(actualMoment), 'W');\n        const endDomain4 = _.cloneDeep(startDomain4);\n        endDomain4.hours(0).minutes(0).seconds(0).millisecond(0);\n        endDomain4.add(8, 'days');\n        // endDomain.add(5, 'days'); // example\n\n        // conf 2 === actual month + next month\n        /*const startDomain2 = moment();\n        startDomain2.hours(0).minutes(0).seconds(0).millisecond(0);*/\n        const startDomain2 = this.dateWithSpaceBeforeMoment(moment(actualMoment), 'M');\n        const endDomain2 = _.cloneDeep(startDomain2);\n        endDomain2.startOf('month');\n        endDomain2.add(2, 'months');\n        // endDomain2.add(1, 'months'); // example\n        // endDomain2.date(15); // example\n\n        // conf 3 === from start of actual month to end of the year + 1 year\n        /*const startDomain3 = moment();\n        startDomain3.startOf('month');\n        startDomain3.hours(0);*/\n        const startDomain3 = this.dateWithSpaceBeforeMoment(moment(actualMoment), 'Y');\n        const endDomain3 = _.cloneDeep(startDomain3);\n        endDomain3.add(2, 'years');\n        endDomain3.startOf('year'); // Voir avec Guillaume\n        // endDomain3.add(1, 'years'); // example\n        // endDomain3.month(10); // example\n        this.conf = {\n            enableDrag: false,\n            enableZoom: true,\n            autoScale: false,\n            animations: false,\n            showGridLines: true,\n            realTimeBar: true,\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n        };\n        this.confZoom = [{\n            startDomain: startDomain.valueOf(),\n            endDomain: endDomain.valueOf(),\n            forwardLevel: 'W',\n            followCloackTick: false,\n        },\n        {\n            startDomain: startDomain4.valueOf(),\n            endDomain: endDomain4.valueOf(),\n            forwardLevel: '7D',\n            followCloackTick: true,\n        },\n        {\n            startDomain: startDomain2.valueOf(),\n            endDomain: endDomain2.valueOf(),\n            forwardLevel: 'M',\n            followCloackTick: false,\n        },\n        {\n            startDomain: startDomain3.valueOf(),\n            endDomain: endDomain3.valueOf(),\n            forwardLevel: 'Y',\n            followCloackTick: false,\n        }];\n\n        // timeline state is same than feed state (not filtered Feed)\n        // select all the feed\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFeed),\n            catchError(err => of([]))\n        );\n\n        // init timeline state\n        this.store.dispatch(new InitTimeline({\n            data: [],\n        }));\n\n        // add a card data to the timeline state for each new card received\n        this.subscription = this.lightCards$.pipe(debounceTime(300), distinctUntilChanged())\n            .subscribe(value => {\n            // console.log('timeline subscribe');\n            const tmp = _.cloneDeep(value);\n            this.store.dispatch(new InitTimeline({\n                data: [],\n            }));\n            /*for (const val of tmp) {\n                // val.endDate val.startDate val.severity\n                const myCardTimeline = {\n                    startDate: val.startDate,\n                    endDate: val.endDate,\n                    severity: val.severity\n                };\n                this.store.dispatch(new AddCardDataTimeline({\n\n                    cardTimeline: myCardTimeline,\n                }));\n                // console.log('timeline subscribe');\n            }*/\n            const myCardsTimeline = [];\n            for (const val of tmp) {\n                // val.endDate val.startDate val.severity\n                const myCardTimeline = {\n                    startDate: val.startDate,\n                    endDate: val.endDate,\n                    severity: val.severity,\n                    summary: val.summary.parameters.value\n                };\n                myCardsTimeline.push(myCardTimeline);\n            }\n            this.store.dispatch(new SetCardDataTimeline({\n                cardsTimeline: myCardsTimeline,\n            }));\n        });\n\n        // this.lastCards$ = this.store.select(timelineSelectors.selectLastCardsSelection);\n        /* // TRY ON TIMELINE\n         this.lightCards$ = this.store.pipe(\n             select(timelineSelectors.selectFeed),\n             catchError(err => of([]))\n         );*/\n        /* // TRY ON FEED\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFeed),\n            catchError(err => of([]))\n        );*/\n\n        /*\n        // TRY selectUnFilteredFeed\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectUnFilteredFeed),\n            catchError(err => of([]))\n        );*/\n    }\n\n    /**\n     * make start of domain begin 4 ticks before actual date (moment())\n     * each cluster level had a different treatment\n     * @param clusterLevel\n     */\n    dateWithSpaceBeforeMoment(date, clusterLevel) {\n        date.minutes(0).seconds(0).millisecond(0);\n        switch (clusterLevel) {\n            case 'W' : case '7D': {\n                for (let i = 0; i = 16) {\n                    date.startOf('month');\n                    date.subtract(1, 'months');\n                } else {\n                    // start at middle of month (16th)\n                    date.date(16);\n                    date.subtract(2, 'months');\n                }\n                return date;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeReference.html":{"url":"classes/TimeReference.html","title":"class - TimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/time.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                    Private\n                                computeNowMoment\n                            \n                            \n                                    Static\n                                convertSpeedIntoEnum\n                            \n                            \n                                    Private\n                                isVirtualTimeUndefine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(referenceTime: number, virtualTime: number, computedNow: number, speed: TimeSpeed)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/time.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        referenceTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        computedNow\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        speed\n                                                  \n                                                        \n                                                                        TimeSpeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(timeStampNow: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStampNow\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(momentNow: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    momentNow\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(realNow: number | moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNow\n                                    \n                                            number | moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            computeNowMoment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeNowMoment(realNowMoment: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNowMoment\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertSpeedIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertSpeedIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVirtualTimeUndefine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVirtualTimeUndefine()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment-timezone';\nimport {isMoment} from \"moment\";\n\nexport class TimeReference {\n    constructor(readonly referenceTime: number,\n                readonly  virtualTime: number,\n                readonly  computedNow: number,\n                readonly speed: TimeSpeed) {\n    }\n\n    static convertSpeedIntoEnum(key: string, value: string) {\n        if (key === 'speed') {\n            return TimeSpeed[value]\n        }\n        return value;\n    }\n\n\n    computeNow(timeStampNow:number):moment.Moment;\n    computeNow(momentNow:moment.Moment):moment.Moment;\n    computeNow(realNow:number|moment.Moment):moment.Moment{\n\n        let realNowMoment = null;\n        if(isMoment(realNow)){\n            realNowMoment=realNow\n        }else{\n            realNowMoment=moment(realNow);\n        }\n        return this.computeNowMoment(realNowMoment);\n\n    }\n\n    private computeNowMoment(realNowMoment: moment.Moment) {\n        /**\n         *   no computation for real time at normal speed with no virtualTime\n         *   or if the referenceTime doesn't exist\n         */\n\n        if (typeof this.referenceTime === 'undefined' || this.referenceTime == null) {\n                return realNowMoment;\n        }else if(this.speed === TimeSpeed.X1 && this.isVirtualTimeUndefine()){\n            return realNowMoment;\n        }\n        const ref = moment(this.referenceTime);\n        const duration = moment.duration(realNowMoment.diff(ref));\n        const computedOffsetInMilliseconds = duration.asMilliseconds() * this.speed;\n        const computedOffsetDuration = moment.duration(computedOffsetInMilliseconds)\n        let baseMoment=moment(this.virtualTime);\n        if(this.isVirtualTimeUndefine()) {\n            baseMoment=ref;\n        }\n        const result = baseMoment.add(computedOffsetDuration);\n        return result;\n    }\n\n    private isVirtualTimeUndefine(){\n        return typeof this.virtualTime === 'undefined' || this.virtualTime == null;\n    }\n}\n\n\nexport enum TimeSpeed {\n    X1 = 1,\n    X2 = 2,\n    X10 = 10,\n    X60 = 60,\n    X3600 = 3600,\n    HALF = 0.5\n}\n\nexport const neutralTimeReference:TimeReference=new TimeReference(null,null,null,TimeSpeed.X1);\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSpan.html":{"url":"classes/TimeSpan.html","title":"class - TimeSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(startDate: number, endDate?: number, display)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        display\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport interface LightCard {\n    readonly uid: string;\n    readonly id: string;\n    readonly publisher: string;\n    readonly publisherVersion: string;\n    readonly mainRecipient: string;\n    readonly publishDate: number;\n    readonly startDate: number;\n    readonly endDate: number;\n    readonly severity: Severity;\n    readonly processId?: string;\n    readonly lttd?: number;\n    readonly title?: I18n;\n    readonly summary?: I18n;\n    readonly tags?: string[];\n    readonly timeSpans?: TimeSpan[];\n\n}\n\nexport class LightCard implements LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[]\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", NOTIFICATION = \"NOTIFICATION\", QUESTION = \"QUESTION\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.QUESTION:\n            result = 2;\n            break;\n        case Severity.NOTIFICATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    NOTIFICATION, QUESTION\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly startDate: number,\n        readonly endDate?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeState.html":{"url":"interfaces/TimeState.html","title":"interface - TimeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/time.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentDate\n                                \n                                \n                                        error\n                                \n                                \n                                        timeReference\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentDate\n                                    \n                                \n                                \n                                    \n                                        currentDate:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeReference\n                                    \n                                \n                                \n                                    \n                                        timeReference:         TimeReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment-timezone'\nimport {neutralTimeReference, TimeReference, TimeSpeed} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface TimeState {\n\n    timeReference: TimeReference;\n    currentDate: moment.Moment;\n    error: Message;\n}\n\nexport const timeInitialState: TimeState = {\n    timeReference:neutralTimeReference,\n    currentDate: moment(),\n    error: null\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimelineState.html":{"url":"interfaces/TimelineState.html","title":"interface - TimelineState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimelineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/timeline.state.ts\n        \n\n            \n                Description\n            \n            \n                The Timeline State consist of:\n  * EntityState of LightCard\n  * selectedCardId: the currently selected card id\n  * lastCards the last cards added / updated to the feed\n  * loading: weather there is an ongoing state modification\n  * error: last message during state processing before error\n  * data: an array of data Card (less information than lightCard)\n   which are use for display on the chart the number of card on timescale\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:         LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {LightCardAdapter} from \"@ofStates/feed.state\";\n\n\n/**\n * The Timeline State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * error: last message during state processing before error\n *  * data: an array of data Card (less information than lightCard)\n *   which are use for display on the chart the number of card on timescale\n */\nexport interface TimelineState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    data: any[];\n}\n\n/*export function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:compareByStartDate\n});*/\n\nexport const timelineInitialState: TimelineState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        data: []\n    });\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInjector.html":{"url":"interceptors/TokenInjector.html","title":"interceptor - TokenInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeadersIfNecessary\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAuthHeadersIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \naddAuthHeadersIfNecessary(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from './authentication.service';\n\n@Injectable()\nexport class TokenInjector implements HttpInterceptor {\n    /* istanbul ignore next */\n    constructor(private authenticationService: AuthenticationService) {\n    }\n\n    /* istanbul ignore next */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(this.addAuthHeadersIfNecessary(request));\n    }\n\n\n    addAuthHeadersIfNecessary(request: HttpRequest): HttpRequest {\n        const url = request.url;\n\n        const notCheckTokenRequest = !(url.endsWith('/auth/check_token') || url.endsWith('/auth/token') || url.endsWith('/auth/code'));\n        if (notCheckTokenRequest) {\n            const update = {setHeaders: AuthenticationService.getSecurityHeader()};\n            request = request.clone(update);\n        }\n        return request;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogIn.html":{"url":"classes/TryToLogIn.html","title":"class - TryToLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to push login/password pair to the authentication service\nEmitted by {LoginComponent} in the onSubmit @method which is called\nwhen the user click on the Login button of the login page form.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogOut.html":{"url":"classes/TryToLogOut.html","title":"class - TryToLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used when the user logout\nEmitted by {NavbarComponent} win the logOut @method which is called\nwhen the user click on the logOut button of the navbar\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:94\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeAheadSettingsComponent.html":{"url":"components/TypeAheadSettingsComponent.html","title":"component - TypeAheadSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeAheadSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                MultiSettingsComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-ahead-settings\n            \n\n            \n                styleUrls\n                ./type-ahead-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-ahead-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                            \n                                messagePlaceOlder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceOlder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MultiSettingsComponent} from \"../multi-settings/multi-settings.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-type-ahead-settings',\n  templateUrl: './type-ahead-settings.component.html',\n  styleUrls: ['./type-ahead-settings.component.scss']\n})\nexport class TypeAheadSettingsComponent extends MultiSettingsComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store)\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        settings.{{settingPath}}\n        \n    \n\n\n    \n\n    \n                \n                    ./type-ahead-settings.component.scss\n                \n                .tags-field {\n    /deep/ .dropdown-toggle {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings.{{settingPath}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeAheadSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeFilterComponent.html":{"url":"components/TypeFilterComponent.html","title":"component - TypeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-filter\n            \n\n            \n                styleUrls\n                ./type-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                typeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport * as _ from 'lodash';\nimport {FilterType} from \"@ofServices/filter.service\";\n\n\n@Component({\n    selector: 'of-type-filter',\n    templateUrl: './type-filter.component.html',\n    styleUrls: ['./type-filter.component.scss']\n})\nexport class TypeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    typeFilterForm: FormGroup;\n\n    private _filter$: Observable;\n\n    get filter$(): Observable{\n        return this._filter$;\n    }\n\n    // set filter$(filter: Observable) {\n    //     this._filter$ = filter;\n    // }\n\n    constructor(private store: Store) {\n        this.typeFilterForm = this.createFormGroup();\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            alarm: new FormControl(),\n            action: new FormControl(),\n            question: new FormControl(),\n            notification: new FormControl()\n        },{updateOn: 'change'});\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TYPE_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.typeFilterForm.get('alarm').setValue(!next.active || next.status.alarm);\n                this.typeFilterForm.get('action').setValue(!next.active || next.status.action);\n                this.typeFilterForm.get('question').setValue(!next.active || next.status.question);\n                this.typeFilterForm.get('notification').setValue(!next.active || next.status.notification);\n            } else {\n                this.typeFilterForm.get('alarm').setValue(true);\n                this.typeFilterForm.get('action').setValue(true);\n                this.typeFilterForm.get('question').setValue(true);\n                this.typeFilterForm.get('notification').setValue(true);\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.typeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.isEqual(formA,formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TYPE_FILTER,\n                        active: !(form.alarm && form.action && form.question && form.notification),\n                        status: form\n                    }))\n                );\n        });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n        \n            \n                \n                feed.filters.type.alarm.label\n            \n            \n                \n                feed.filters.type.action.label\n            \n            \n                \n                feed.filters.type.question.label\n            \n            \n                \n                feed.filters.type.notification.label\n            \n        \n    \n    feed.filters.type.title\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./type-filter.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n$cell-width: 10;\n\n.type-selections {\n  display: table;\n  width: $cell-width * 2px;\n  height: $cell-width * 2px;\n}\n\n.type-row {\n  display: table-row;\n}\n\n.type-cell {\n  display: table-cell;\n}\n\n/deep/ .popover {\n  background-color: $dark;\n  .popover-header {\n    color: $light;\n    background-color: $dark;\n  }\n  .popover-body {\n    color: $light;\n  }\n  .arrow::after{\n    border-right-color: $dark;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        feed.filters.type.alarm.label                                                        feed.filters.type.action.label                                                        feed.filters.type.question.label                                                        feed.filters.type.notification.label                            feed.filters.type.title                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTimeReference.html":{"url":"classes/UpdateTimeReference.html","title":"class - UpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action dispatch to update the current virtual time of the application\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.UpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to upadate the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:{currentTime:moment.Moment}){}\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify thate something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedSubscription.html":{"url":"classes/UpdatedSubscription.html","title":"class - UpdatedSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:82\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdatedSubscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(login: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n    public constructor(\n    readonly login:string,\n    readonly firstName:string,\n    readonly lastName:string\n){}\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/XAxisTickFormatPipe.html":{"url":"pipes/XAxisTickFormatPipe.html","title":"pipe - XAxisTickFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  XAxisTickFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        xAxisTickFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts:53\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformAdvanced\n                        \n                        \n                    \n                \n            \n            \n                \ntransformAdvanced(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts:38\n                \n            \n\n\n            \n                \n                    special format function used for week ticks formatting, display only hours for each ticks\nif cluster level is W return a string formatted from value\nelse return a empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformHovered\n                        \n                        \n                    \n                \n            \n            \n                \ntransformHovered(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts:13\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({\n  name: 'xAxisTickFormat'\n})\nexport class XAxisTickFormatPipe implements PipeTransform {\n  /**\n   * return a string formatted from value by the according cluster level\n   * @param value\n   * @param clusterLevel\n   */\n  transformHovered(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    const date = moment(value);\n    switch (clusterLevel) {\n      case 'W': case '7D': {\n        return date.format('ddd DD MMM HH') + 'h';\n      }\n      case 'M': case 'Y': {\n        return date.format('ddd DD MMM YYYY');\n      }\n      default: {\n        return value;\n      }\n    }\n  }\n\n  /**\n   * special format function used for week ticks formatting, display only hours for each ticks\n   * if cluster level is W return a string formatted from value\n   * else return a empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transformAdvanced(value: any, clusterLevel: string): string {\n    if (clusterLevel) {\n      const date = moment(value);\n      if (date) {\n        return date.format('HH') + 'h';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * return a string formatted from value by the according cluster level\n   * @param value\n   * @param clusterLevel\n   */\n  transform(value: any, clusterLevel: string): string {\n    // if (languageTag) {\n    /*if (value instanceof moment) {*/\n    // const datePipe = moment.locale(languageTag);\n    if (typeof value === 'string') {\n      return value;\n    }\n    const date = moment(value);\n    const startYear = moment(date).startOf('year');\n    switch (clusterLevel) {\n      case 'W' : case '7D': {\n        if (date.valueOf() === startYear.valueOf()) {\n          return date.format('ddd DD MMM YYYY');\n        }\n        if (date.hours() === 0) {\n          return date.format('ddd DD MMM');\n        } else {\n          return date.format('HH');\n        }\n      }\n      case 'M': {\n        if (date.valueOf() === startYear.valueOf()) {\n          return date.format('DD MMM YY');\n        }\n        return date.format('ddd DD MMM');\n      }\n      case 'Y': {\n        if (date.valueOf() === startYear.valueOf()) {\n          return date.format('D MMM YY');\n        }\n        return date.format('D MMM');\n      }\n      default: {\n        return value;\n      }\n    }\n        // else {\n        // return value.toString();\n        // }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.2\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.2\n        \n            @angular/compiler : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.17\n        \n            @fortawesome/free-solid-svg-icons : ^5.8.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.0\n        \n            @ngrx/effects : ^7.1.0\n        \n            @ngrx/entity : ^7.1.0\n        \n            @ngrx/router-store : ^7.1.0\n        \n            @ngrx/store : ^7.1.0\n        \n            @ngrx/store-devtools : ^7.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-charts : ^10.1.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.6.3\n        \n            guid-typescript : ^1.0.9\n        \n            handlebars : ^4.0.14\n        \n            jwt-decode : ^2.2.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.25\n        \n            ng-event-source : ^1.0.14\n        \n            ngrx-router : ^2.0.1\n        \n            ngx-type-ahead : ^2.0.1\n        \n            rxjs : ^6.3.3\n        \n            svg-pan-zoom : ^3.6.0\n        \n            tslib : ^1.9.3\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../thirds.model.ts)\n                        \n                        \n                            AuthenticationActionTypes   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActionTypes   (src/.../card.actions.ts)\n                        \n                        \n                            CardOperationType   (src/.../card-operation.model.ts)\n                        \n                        \n                            ConfigActionTypes   (src/.../config.actions.ts)\n                        \n                        \n                            Display   (src/.../light-card.model.ts)\n                        \n                        \n                            FeedActionTypes   (src/.../feed.actions.ts)\n                        \n                        \n                            FilterType   (src/.../filter.service.ts)\n                        \n                        \n                            InputType   (src/.../thirds.model.ts)\n                        \n                        \n                            LightCardActionTypes   (src/.../light-card.actions.ts)\n                        \n                        \n                            LocalStorageAuthContent   (src/.../authentication.service.ts)\n                        \n                        \n                            MenuActionTypes   (src/.../menu.actions.ts)\n                        \n                        \n                            MessageLevel   (src/.../message.model.ts)\n                        \n                        \n                            SettingsActionTypes   (src/.../settings.actions.ts)\n                        \n                        \n                            Severity   (src/.../light-card.model.ts)\n                        \n                        \n                            Sound   (src/.../light-card.model.ts)\n                        \n                        \n                            TimeActionTypes   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActionTypes   (src/.../timeline.actions.ts)\n                        \n                        \n                            TimeSpeed   (src/.../time.model.ts)\n                        \n                        \n                            TitlePosition   (src/.../card.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/thirds.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                 JNLP\n                            \n                        \n                        \n                            \n                                 URI\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InputType\n                    \n                \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                 LIST_RADIO\n                            \n                        \n                        \n                            \n                                 SWITCH_LIST\n                            \n                        \n                        \n                            \n                                 LONGTEXT\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n            \n        \n\n    src/app/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 InitAuthStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Init Authentication Status\n                            \n                        \n                        \n                            \n                                 CheckAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status\n                            \n                        \n                        \n                            \n                                 AcceptLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log in attempt\n                            \n                        \n                        \n                            \n                                 RejectLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Reject the user log in attempt\n                            \n                        \n                        \n                            \n                                 TryToLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user in\n                            \n                        \n                        \n                            \n                                 TryToLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user out\n                            \n                        \n                        \n                            \n                                 AcceptLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 AcceptLogOutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Success Accept the user log out attempt\n                            \n                        \n            \n        \n\n    src/app/store/actions/card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CardActionTypes\n                    \n                \n                        \n                            \n                                 ClearCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Clear\n                            \n                        \n                        \n                            \n                                 LoadCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card\n                            \n                        \n                        \n                            \n                                 LoadCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Success\n                            \n                        \n                        \n                            \n                                 LoadCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Card] Handle unexpected error related to card issue\n                            \n                        \n            \n        \n\n    src/app/model/card-operation.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardOperationType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                Value : ADD\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/store/actions/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActionTypes\n                    \n                \n                        \n                            \n                                 LoadConfig\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config\n                            \n                        \n                        \n                            \n                                 LoadConfigSuccess\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Success\n                            \n                        \n                        \n                            \n                                 LoadConfigFailure\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Config] Handle unexpected error related to configuration issue\n                            \n                        \n            \n        \n\n    src/app/model/light-card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Display\n                    \n                \n                        \n                            \n                                 BUBBLE\n                            \n                        \n                        \n                            \n                                 LINE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                        \n                            \n                                 ALARM\n                            \n                        \n                        \n                            \n                                Value : ALARM\n                            \n                        \n                        \n                            \n                                 ACTION\n                            \n                        \n                        \n                            \n                                Value : ACTION\n                            \n                        \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n                        \n                            \n                                Value : QUESTION\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n            \n        \n\n    src/app/store/actions/feed.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeedActionTypes\n                    \n                \n                        \n                            \n                                 ApplyFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change filter Status\n                            \n                        \n                        \n                            \n                                 InitFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Init filter\n                            \n                        \n            \n        \n\n    src/app/services/filter.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterType\n                    \n                \n                        \n                            \n                                 TYPE_FILTER\n                            \n                        \n                        \n                            \n                                 RECIPIENT_FILTER\n                            \n                        \n                        \n                            \n                                 TAG_FILTER\n                            \n                        \n                        \n                            \n                                 TIME_FILTER\n                            \n                        \n                        \n                            \n                                 TEST_FILTER\n                            \n                        \n            \n        \n\n    src/app/store/actions/light-card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LightCardActionTypes\n                    \n                \n                        \n                            \n                                 LoadLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load\n                            \n                        \n                        \n                            \n                                 EmptyLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Empty\n                            \n                        \n                        \n                            \n                                 LoadLightCardsSuccess\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Success\n                            \n                        \n                        \n                            \n                                 LoadLightCardsExtendedData\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Extended Data\n                            \n                        \n                        \n                            \n                                 LoadLightCardsFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Fail\n                            \n                        \n                        \n                            \n                                 SelectLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Select One\n                            \n                        \n                        \n                            \n                                 ClearLightCardSelection\n                            \n                        \n                        \n                            \n                                Value : [LCard] Clear Light Card Selection\n                            \n                        \n                        \n                            \n                                 AddLightCardFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Add Light Card Fail\n                            \n                        \n                        \n                            \n                                 UpdatedSubscription\n                            \n                        \n                        \n                            \n                                Value : [LCard] UpdateSubscription\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [LCard] Handle unexpected error related to authentication issue\n                            \n                        \n            \n        \n\n    src/app/services/authentication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageAuthContent\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 expirationDate\n                            \n                        \n                        \n                            \n                                Value : expirationDate\n                            \n                        \n                        \n                            \n                                 identifier\n                            \n                        \n                        \n                            \n                                Value : identifier\n                            \n                        \n                        \n                            \n                                 clientId\n                            \n                        \n                        \n                            \n                                Value : clientId\n                            \n                        \n            \n        \n\n    src/app/store/actions/menu.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuActionTypes\n                    \n                \n                        \n                            \n                                 LoadMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu\n                            \n                        \n                        \n                            \n                                 LoadMenuSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Success\n                            \n                        \n                        \n                            \n                                 LoadMenuFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Menu] Handle unexpected error\n                            \n                        \n                        \n                            \n                                 SelectMenuLink\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Success\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Failure\n                            \n                        \n            \n        \n\n    src/app/model/message.model.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageLevel\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n    src/app/store/actions/settings.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SettingsActionTypes\n                    \n                \n                        \n                            \n                                 LoadSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings\n                            \n                        \n                        \n                            \n                                 LoadSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Success\n                            \n                        \n                        \n                            \n                                 LoadSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Fail\n                            \n                        \n                        \n                            \n                                 PatchSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings\n                            \n                        \n                        \n                            \n                                 PatchSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Success\n                            \n                        \n                        \n                            \n                                 PatchSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Settings] Handle unexpected error related to user settings issue\n                            \n                        \n            \n        \n\n    src/app/store/actions/time.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeActionTypes\n                    \n                \n                        \n                            \n                                 Tick\n                            \n                        \n                        \n                            \n                                Value : [Time] tick\n                            \n                        \n                        \n                            \n                                 UpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] try to upadate the time reference\n                            \n                        \n                        \n                            \n                                 FailToUpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] fail to update the time reference\n                            \n                        \n            \n        \n\n    src/app/store/actions/timeline.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimelineActionTypes\n                    \n                \n                        \n                            \n                                 InitTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Init timeline\n                            \n                        \n                        \n                            \n                                 SetCardDataTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Set Card Data\n                            \n                        \n            \n        \n\n    src/app/model/time.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeSpeed\n                    \n                \n                        \n                            \n                                 X1\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X2\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 X10\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 X60\n                            \n                        \n                        \n                            \n                                Value : 60\n                            \n                        \n                        \n                            \n                                 X3600\n                            \n                        \n                        \n                            \n                                Value : 3600\n                            \n                        \n                        \n                            \n                                 HALF\n                            \n                        \n                        \n                            \n                                Value : 0.5\n                            \n                        \n            \n        \n\n    src/app/model/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TitlePosition\n                    \n                \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\nCardListComponent\n\nCardListComponent\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n!environment\n\n!environment\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    28 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    73 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationActions   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActions   (src/.../card.actions.ts)\n                        \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActions   (src/.../feed.actions.ts)\n                        \n                        \n                            LightCardActions   (src/.../light-card.actions.ts)\n                        \n                        \n                            MenuActions   (src/.../menu.actions.ts)\n                        \n                        \n                            SettingsActions   (src/.../settings.actions.ts)\n                        \n                        \n                            TimeActions   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActions   (src/.../timeline.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/authentication.actions.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationActions\n                \n            \n            \n                \n                        InitAuthStatus | AcceptLogIn | RejectLogIn | TryToLogIn | TryToLogOut | CheckAuthenticationStatus | AcceptLogOut | AcceptLogOutSuccess\n\n                \n            \n        \n    \n    src/app/store/actions/card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    CardActions\n                \n            \n            \n                \n                        ClearCard | LoadCard | LoadCardSuccess | LoadCardFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/config.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigActions\n                \n            \n            \n                \n                        LoadConfig | LoadConfigSuccess | LoadConfigFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/feed.actions.ts\n    \n    \n        \n            \n                \n                    \n                    FeedActions\n                \n            \n            \n                \n                        InitFilters | ApplyFilter\n\n                \n            \n        \n    \n    src/app/store/actions/light-card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    LightCardActions\n                \n            \n            \n                \n                        LoadLightCards | LoadLightCardsSuccess | LoadLightCardsFailure | SelectLightCard | ClearLightCardSelection | AddLightCardFailure | UpdatedSubscription | HandleUnexpectedError | EmptyLightCards\n\n                \n            \n        \n    \n    src/app/store/actions/menu.actions.ts\n    \n    \n        \n            \n                \n                    \n                    MenuActions\n                \n            \n            \n                \n                        LoadMenu | LoadMenuSuccess | LoadMenuFailure | HandleUnexpectedError | SelectMenuLink | SelectMenuLinkSuccess | SelectMenuLinkFailure\n\n                \n            \n        \n    \n    src/app/store/actions/settings.actions.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsActions\n                \n            \n            \n                \n                        LoadSettings | LoadSettingsSuccess | LoadSettingsFailure | PatchSettings | PatchSettingsSuccess | PatchSettingsFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/time.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimeActions\n                \n            \n            \n                \n                        Tick | UpdateTimeReference | FailToUpdateTimeReference\n\n                \n            \n        \n    \n    src/app/store/actions/timeline.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimelineActions\n                \n            \n            \n                \n                        InitTimeline | SetCardDataTimeline\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
