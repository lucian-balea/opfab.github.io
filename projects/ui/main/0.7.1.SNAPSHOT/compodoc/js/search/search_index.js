var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AcceptLogIn.html",[0,0.257,1,2.485]],["body/classes/AcceptLogIn.html",[0,0.463,1,3.671,2,0.504,3,0.025,4,0.025,5,0.062,6,2.043,7,1.439,8,1.337,9,4.493,10,2.232,11,2.87,12,3.629,13,4.257,14,3.798,15,2.944,16,3.155,17,2,18,4.302,19,4.113,20,3.75,21,3.254,22,3.141,23,4.16,24,3.229,25,4.152,26,4.302,27,3.892,28,1.752,29,3.75,30,4.017,31,4.302,32,0.241,33,1.029,34,0.172,35,0.398,36,0.98,37,1.65,38,1.271,39,0.281,40,1.016,41,4.16,42,0.238,43,5.336,44,0.274,45,0.006,46,0.255,47,0.274,48,3.587,49,0.478,50,0.384,51,0.094,52,0.369,53,3.225,54,1.816,55,2.503,56,1.682,57,0.073,58,0.606,59,1.816,60,3.411,61,1.016,62,2.386,63,3.411,64,1.867,65,3.75,66,3.367,67,4.652,68,4.017,69,3.411,70,2.112,71,2.564,72,3.671,73,2.785,74,4.038,75,3.411,76,1.438,77,1.673,78,1.867,79,0.919,80,1.867,81,1.816,82,1.921,83,1.604,84,2.188,85,2.188,86,3.254,87,3.254,88,2.442,89,3.141,90,2.188,91,1.285,92,1.285,93,1.16,94,2.188,95,2.112,96,2.188,97,2.188,98,2.043,99,1.568,100,1.034,101,2.112,102,2.785,103,3.254,104,3.141,105,2.944,106,2.043,107,0.967,108,2.112,109,2.043,110,1.979,111,4.017,112,1.051,113,2.188,114,1.979,115,2.112,116,2.857,117,1.223,118,2.188,119,2.188,120,4.302,121,2.112,122,2.188,123,3.038,124,2.188,125,3.141,126,0.636,127,2.188,128,2.112,129,2.188,130,2.112,131,2.188,132,2.564,133,3.141,134,1.568,135,2.188,136,2.043,137,0.002,138,0.003,139,0.002]],["title/classes/AcceptLogOut.html",[0,0.257,74,2.557]],["body/classes/AcceptLogOut.html",[0,0.466,1,3.365,2,0.517,3,0.026,4,0.026,5,0.059,6,2.095,7,1.476,8,1.342,9,4.455,10,1.539,11,2.594,12,3.628,13,4.178,14,3.834,15,2.03,16,3.194,17,2.07,18,4.355,19,3.966,20,3.2,21,2.244,22,2.166,23,3.941,24,2.96,25,3.806,26,3.943,27,3.568,28,1.606,29,3.2,30,3.682,31,3.316,32,0.237,33,1.035,34,0.176,35,0.405,36,0.912,37,1.44,38,1.278,39,0.341,41,3,42,0.203,45,0.006,49,0.49,50,0.394,51,0.096,52,0.379,53,3.274,54,1.863,55,2.541,56,1.725,57,0.074,58,0.621,59,1.863,60,3.463,61,1.043,62,2.431,63,3.463,64,1.915,65,3.806,66,3.436,67,4.695,68,4.067,69,3.463,70,2.166,71,2.613,72,3.966,73,2.827,74,4.419,75,3.463,76,1.466,77,1.691,78,1.915,79,0.929,80,1.915,81,1.863,82,1.971,83,1.646,84,2.244,85,2.244,86,3.316,87,3.316,88,2.489,89,3.2,90,2.244,91,1.295,92,1.295,93,1.169,94,2.244,95,2.166,96,2.244,97,2.244,98,2.095,99,1.609,100,1.06,101,2.166,102,2.827,103,3.316,104,3.188,105,3,106,2.095,107,0.992,108,2.166,109,2.095,110,2.03,111,4.339,112,1.078,113,2.244,114,2.03,115,2.166,116,2.912,117,1.246,118,2.244,119,2.244,120,4.864,121,2.166,122,2.244,123,3.096,124,2.244,125,3.2,126,0.652,127,3.316,128,3.2,129,3.316,130,3.2,131,3.316,132,3.108,133,3.806,134,1.609,135,2.244,136,2.095,137,0.002,138,0.003,139,0.002,140,5.437]],["title/classes/AcceptLogOutSuccess.html",[0,0.257,75,2.557]],["body/classes/AcceptLogOutSuccess.html",[0,0.466,1,3.363,2,0.516,3,0.026,4,0.026,5,0.063,6,2.093,7,1.474,8,1.342,9,4.517,10,1.538,11,2.767,12,3.639,13,4.288,14,3.832,15,2.028,16,2.89,17,2.016,18,3.941,19,3.964,20,3.198,21,2.242,22,2.164,23,3.939,24,3.268,25,4.202,26,4.353,27,3.939,28,1.773,29,3.198,30,4.065,31,3.313,32,0.239,33,1.035,34,0.176,35,0.405,36,0.912,37,1.439,38,1.278,39,0.194,41,2.998,42,0.137,45,0.006,49,0.49,50,0.393,51,0.096,52,0.378,53,3.272,54,1.861,55,2.539,56,1.724,57,0.074,58,0.621,59,1.861,60,3.461,61,1.042,62,2.43,63,3.461,64,1.913,65,3.804,66,3.387,67,4.694,68,4.065,69,3.461,70,2.164,71,2.611,72,3.715,73,2.825,74,4.27,75,3.823,76,1.465,77,1.691,78,1.913,79,0.929,80,1.913,81,1.861,82,1.969,83,1.644,84,2.242,85,2.242,86,3.313,87,3.313,88,2.487,89,3.198,90,2.242,91,1.294,92,1.294,93,1.169,94,2.242,95,2.164,96,2.242,97,2.242,98,2.093,99,1.607,100,1.059,101,2.164,102,2.825,103,3.313,104,3.187,105,2.998,106,2.093,107,0.991,108,2.164,109,2.093,110,2.028,111,4.065,112,1.077,113,2.242,114,2.028,115,2.164,116,3.461,117,1.481,118,2.242,119,2.242,120,4.645,121,2.164,122,2.242,123,3.68,124,2.242,125,3.198,126,0.652,127,2.242,128,2.164,129,2.242,130,2.164,131,2.242,132,3.106,133,3.804,134,2.375,135,3.313,136,2.093,137,0.002,138,0.003,139,0.002,141,3.676]],["title/classes/Action.html",[0,0.257,8,0.682]],["body/classes/Action.html",[0,0.483,2,0.64,3,0.032,4,0.032,5,0.038,8,0.905,11,1.655,32,0.203,36,0.545,38,1.467,39,0.48,42,0.17,44,0.348,45,0.006,46,0.45,47,0.348,50,0.678,51,0.108,57,0.076,58,1.07,79,1.18,91,1.371,92,1.371,93,1.238,102,3.186,137,0.003,138,0.004,139,0.003,142,2.778,143,4.064,144,4.804,145,5.176,146,3.924,147,4.149,148,3.149,149,4.615,150,4.615,151,3.049,152,3.295,153,4.615,154,4.615,155,4.615,156,4.615,157,4.615,158,4.556,159,0.708,160,2.307,161,1.866,162,2.247,163,1.27,164,2.885,165,2.514,166,1.992,167,2.885,168,2.778,169,2.885,170,2.885,171,2.885,172,2.885,173,2.885,174,2.885,175,2.885,176,2.885,177,4.014,178,1.27,179,3.497,180,2.885,181,4.014,182,1.319,183,1.755,184,3.731,185,2.885,186,2.441,187,1.992,188,1.482,189,2.086,190,2.885,191,2.885,192,2.885,193,2.885,194,2.682,195,2.778,196,3.019,197,3.865,198,1.335,199,1.382,200,2.778,201,2.778,202,2.778,203,2.086,204,2.885,205,2.885,206,2.441,207,2.885,208,2.514,209,3.865,210,2.885,211,2.885]],["title/classes/AddLightCardFailure.html",[0,0.257,212,2.418]],["body/classes/AddLightCardFailure.html",[0,0.499,2,0.619,3,0.031,4,0.031,5,0.036,8,1.346,12,1.665,32,0.25,33,1.119,34,0.211,35,0.462,36,0.742,37,1.823,38,1.369,39,0.409,40,1.25,42,0.267,44,0.336,45,0.006,46,0.313,47,0.336,49,0.588,50,0.472,51,0.092,52,0.454,57,0.078,58,0.744,76,1.189,77,1.883,79,0.538,91,1.416,92,1.416,93,1.278,126,1.545,134,1.928,137,0.003,138,0.004,139,0.003,159,1.113,212,3.932,213,4.159,214,2.362,215,2.029,216,6.195,217,4.41,218,3.527,219,2.127,220,1.572,221,1.487,222,2.019,223,3.727,224,5.11,225,2.315,226,3.626,227,2.174,228,3.531,229,3.224,230,2.433,231,1.845,232,3.727,233,1.815,234,3.626,235,1.602,236,1.15,237,3.626,238,1.845,239,2.591,240,2.12,241,2.295,242,3.626,243,2.362,244,1.779,245,1.271,246,1.25,247,1.434,248,1.434,249,3.626,250,1.271,251,1.315,252,1.409,253,2.511,254,2.511,255,2.511,256,2.019,257,2.511,258,2.511,259,2.511,260,2.174,261,2.511,262,2.511,263,2.511,264,2.511,265,2.019,266,2.362]],["title/components/AppComponent.html",[267,0.932,268,1.64]],["body/components/AppComponent.html",[0,0.203,3,0.026,4,0.038,5,0.046,8,0.937,12,2.728,17,1.603,32,0.224,33,0.663,34,0.181,35,0.412,36,0.451,39,0.345,42,0.318,44,0.288,45,0.006,46,0.513,47,0.288,49,0.963,50,0.773,51,0.134,52,0.388,57,0.031,60,2.019,61,1.858,62,3.231,64,2.88,66,1.452,79,0.46,88,3.308,100,1.086,105,2.08,107,1.016,112,1.105,117,1.844,137,0.002,138,0.003,139,0.002,148,2.571,159,0.86,163,1.05,186,2.525,196,2.763,198,1.105,199,1.678,235,1.369,236,0.983,267,1.281,268,2.481,269,1.833,270,1.343,271,1.726,272,1.369,273,1.369,274,3.77,275,2.476,276,1.271,277,3.411,278,4.543,279,2.729,280,6.558,281,2.01,282,5.534,283,6.558,284,5.383,285,6.558,286,6.558,287,1.768,288,6.558,289,4.757,290,1.397,291,2.728,292,1.319,293,6.187,294,5.534,295,5.534,296,5.534,297,4.543,298,5.071,299,5.534,300,3.77,301,5.383,302,5.383,303,5.534,304,4.937,305,4.937,306,4.014,307,4.153,308,0.936,309,1.183,310,3.77,311,3.77,312,3.77,313,3.77,314,5.534,315,3.77,316,0.679,317,1.086,318,1.369,319,2.219,320,1.068,321,1.143,322,3.094,323,3.77,324,3.362,325,3.77,326,2.487,327,3.77,328,2.894,329,3.375,330,3.094,331,3.77,332,3.77,333,2.08,334,3.362,335,3.375,336,1.183,337,3.77,338,3.77,339,3.77,340,3.77,341,3.77,342,3.77,343,3.77,344,3.77,345,2.146,346,3.054,347,3.77,348,3.094,349,3.77,350,3.094,351,3.77,352,3.77,353,3.77,354,3.77,355,3.77,356,5.534,357,3.77,358,3.77,359,3.77,360,2.894,361,3.77,362,3.77,363,2.299,364,2.734,365,3.77,366,3.375,367,4.543,368,5.534,369,5.534,370,5.534,371,5.534,372,1.481,373,1.452,374,1.481,375,1.481,376,1.481,377,1.481,378,1.319,379,1.183,380,1.481,381,1.481,382,1.481,383,1.396,384,1.481,385,1.452,386,1.481,387,1.481,388,1.481,389,1.481,390,3.094,391,2.894,392,3.362,393,2.601,394,2.487,395,3.094,396,3.77,397,2.601,398,3.77,399,3.362,400,3.77,401,3.362,402,1.143,403,2.01,404,1.972,405,1.204,406,2.625,407,1.369,408,1.369,409,1.294,410,1.768,411,2.01,412,1.294,413,2.01,414,1.271,415,1.369,416,1.294,417,2.01,418,2.625,419,1.294,420,2.625,421,1.294,422,1.369,423,1.248,424,2.01,425,1.294,426,1.319,427,1.343,428,1.226,429,2.01,430,1.248,431,1.369,432,1.294,433,1.294,434,1.369,435,1.271,436,1.369,437,1.294,438,1.294,439,1.369,440,1.271,441,1.369,442,1.294,443,1.369,444,1.319,445,1.294,446,1.294,447,1.369,448,1.294,449,1.343,450,2.382,451,1.369,452,1.294,453,1.369,454,1.271,455,1.294,456,1.319,457,1.294,458,1.294,459,1.568,460,1.294,461,1.369,462,1.294,463,1.294,464,1.294,465,0.999,466,1.271,467,1.271,468,1.369,469,1.271,470,1.369,471,1.271,472,1.343,473,1.369]],["title/modules/AppModule.html",[474,1.956,475,3.464]],["body/modules/AppModule.html",[0,0.28,3,0.036,4,0.048,5,0.057,36,0.622,45,0.006,51,0.147,57,0.043,73,2.27,100,2.569,107,1.4,112,2.613,137,0.003,138,0.004,139,0.003,236,1.355,268,3.298,301,4.263,316,0.936,372,2.041,373,2,374,2.041,375,2.041,376,2.041,377,2.041,378,1.817,379,1.631,380,2.041,381,2.041,382,2.041,383,1.923,384,2.041,385,2,386,2.041,387,2.041,388,2.041,389,2.041,402,1.575,438,3.061,442,3.061,474,2.127,475,7.233,476,2.496,477,2.866,478,4.59,479,4.737,480,4.079,481,2.63,482,4.633,483,4.633,484,4.633,485,4.633,486,6.467,487,6.286,488,6.286,489,5.882,490,3.945,491,3.057,492,5.194,493,3.606,494,6.929,495,5.32,496,3.767,497,3.606,498,6.929,499,5.194,500,6.929,501,3.057,502,4.225,503,6.929,504,6.929,505,2.957,506,5.32,507,5.32,508,2.561,509,5.194,510,6.181,511,3.987,512,4.263,513,5.194,514,3.584,515,5.194,516,5.194,517,4.633,518,5.194,519,3.767,520,2.781,521,2.781,522,5.194,523,5.194,524,6.181,525,4.263,526,4.263,527,4.633,528,4.263,529,5.32,530,4.263,531,5.194,532,5.194,533,4.263,534,4.263,535,4.263,536,5.194,537,5.194,538,5.194,539,5.194,540,5.194,541,5.194,542,5.194,543,3.987,544,3.987]],["title/modules/AppRoutingModule.html",[474,1.956,486,3.464]],["body/modules/AppRoutingModule.html",[0,0.326,3,0.042,4,0.053,5,0.063,36,0.725,45,0.006,51,0.131,57,0.063,100,2.42,104,2.987,107,1.633,114,3.343,137,0.004,138,0.005,139,0.004,178,2.134,196,2.08,236,1.58,267,1.495,316,1.091,372,2.38,373,2.333,374,2.38,375,2.38,376,2.38,377,2.38,378,2.119,379,1.902,380,2.38,381,2.38,382,2.38,383,2.243,384,2.38,385,2.333,386,2.38,387,2.38,388,2.38,389,2.38,476,2.912,481,3.067,486,5.555,493,3.153,497,3.985,517,5.404,545,6.058,546,4.394,547,7.658,548,5.555,549,5.588,550,3.45,551,6.987,552,4.973,553,6.927,554,4.226,555,8.823,556,6.058,557,6.774,558,4.973,559,6.058,560,4.973,561,6.058,562,2.841,563,6.058,564,4.973,565,4.394,566,4.973,567,6.058,568,6.058,569,6.058,570,5.404,571,6.058,572,4.18,573,6.058,574,6.058,575,6.058]],["title/interfaces/AppState.html",[320,1.353,576,2.087]],["body/interfaces/AppState.html",[3,0.033,4,0.033,5,0.04,12,3.186,15,3.627,25,5.423,32,0.24,34,0.23,35,0.49,45,0.006,51,0.149,52,0.494,57,0.07,117,1.717,137,0.003,138,0.004,139,0.003,159,1.311,178,2.245,251,1.96,320,1.863,410,2.696,428,2.744,459,2.391,554,4.656,562,3.957,576,2.1,577,2.735,578,4.804,579,4.805,580,4.272,581,5.649,582,6.614,583,6.614,584,6.614,585,6.614,586,6.614,587,6.614,588,8.057,589,6.614,590,6.614,591,6.614,592,4.804,593,4.536,594,3.688,595,4.285,596,6.573,597,4.804,598,6.573,599,6.573,600,2.828,601,3.169,602,6.573,603,4.804,604,5.396,605,4.804,606,5.396,607,4.804,608,4.804,609,4.804,610,6.573,611,4.285,612,6.573,613,4.804,614,6.573,615,4.804,616,4.804,617,6.573,618,4.804,619,6.573,620,4.804,621,6.573,622,4.804,623,6.573,624,4.804,625,6.573,626,4.804,627,6.573,628,4.804,629,4.804,630,4.804,631,3.869,632,4.804,633,4.804,634,4.804,635,5.396,636,4.804,637,5.396,638,4.804,639,4.804,640,5.396,641,4.804,642,4.804,643,4.285,644,5.396,645,4.804,646,4.804,647,4.804,648,5.396,649,4.804,650,4.804,651,5.396,652,4.804,653,4.804,654,5.396,655,4.804,656,4.285,657,4.285,658,4.804,659,6.573,660,4.285,661,4.285,662,4.804,663,3.943,664,4.804]],["title/classes/ApplyFilter.html",[0,0.257,665,2.719]],["body/classes/ApplyFilter.html",[0,0.423,2,0.885,3,0.044,4,0.044,5,0.052,8,1.279,32,0.252,33,1.024,34,0.302,35,0.585,36,0.94,37,1.724,38,1.301,39,0.332,40,1.787,42,0.319,44,0.481,45,0.006,46,0.448,47,0.481,49,0.84,50,0.674,51,0.127,52,0.649,57,0.074,58,1.064,61,1.787,62,3.512,77,1.743,91,1.2,92,1.2,93,1.084,137,0.004,138,0.005,139,0.004,148,2.015,163,1.757,215,2.423,465,2.268,554,4.333,665,5.097,666,4.841,667,7.853,668,6.305,669,7.005,670,4.16,671,4.16,672,4.622,673,3.845,674,4.841,675,3.479,676,5.176,677,5.624,678,3.845,679,5.419,680,5.624,681,5.624,682,5.176]],["title/injectables/ArchiveEffects.html",[654,3.92,683,1.448]],["body/injectables/ArchiveEffects.html",[0,0.318,3,0.041,4,0.041,5,0.049,8,0.843,17,2.028,28,1.871,32,0.194,34,0.283,35,0.561,39,0.311,42,0.281,44,0.45,45,0.006,46,0.419,47,0.45,49,0.787,50,0.631,51,0.142,52,0.607,57,0.049,91,0.902,92,0.902,93,0.815,99,3.627,117,2.116,126,1.335,137,0.004,138,0.005,139,0.004,163,1.645,182,1.82,219,2.849,220,2.104,221,1.991,244,1.467,256,3.449,287,2.031,292,2.065,316,1.064,317,1.701,318,2.144,320,1.673,321,1.79,336,1.854,346,4.157,654,6.185,683,2.285,684,2.703,685,5.904,686,8.297,687,5.178,688,5.535,689,5.904,690,4.435,691,3.085,692,7.534,693,6.72,694,4.884,695,7.534,696,7.534,697,7.534,698,6.72,699,5.33,700,6.72,701,3.258,702,4.725,703,5.904,704,3.362,705,3.162,706,4.533,707,2.911,708,3.073,709,3.6,710,3.895,711,3.6,712,4.533]],["title/components/ArchiveFiltersComponent.html",[267,0.932,409,1.64]],["body/components/ArchiveFiltersComponent.html",[0,0.238,3,0.031,4,0.043,5,0.051,17,1.901,32,0.225,33,0.743,34,0.212,35,0.463,36,0.53,39,0.233,42,0.325,44,0.338,45,0.006,46,0.552,47,0.338,50,0.473,51,0.132,52,0.455,57,0.036,61,1.254,93,0.857,100,1.275,107,1.193,112,1.297,117,1.783,137,0.003,138,0.004,139,0.003,146,2.026,159,0.965,163,1.731,198,1.297,199,1.883,236,1.154,267,1.401,268,1.52,269,2.056,270,1.577,271,2.026,272,1.607,273,1.607,275,2.709,276,1.492,277,3.447,279,3.062,281,2.256,290,1.568,291,2.937,292,1.548,308,1.543,309,2.253,316,0.797,317,1.275,320,1.254,321,1.342,333,2.442,336,1.39,346,2.442,372,1.739,373,1.704,374,1.739,375,1.739,376,1.739,377,1.739,378,1.548,379,1.39,380,1.739,381,1.739,382,1.739,383,1.639,384,1.739,385,1.704,386,1.739,387,1.739,388,1.739,389,1.739,402,1.342,403,2.256,404,2.213,405,1.414,406,2.825,407,1.607,408,1.607,409,2.671,410,2.891,411,2.256,412,1.52,413,2.256,414,1.492,415,1.607,416,1.52,417,2.256,418,2.825,419,1.52,420,2.825,421,1.52,422,1.607,423,1.465,424,2.256,425,1.52,426,1.548,427,1.577,428,1.439,429,2.256,430,1.465,431,1.607,432,1.52,433,1.52,434,1.607,435,1.492,436,1.607,437,1.52,438,1.52,439,1.607,440,1.492,441,1.607,442,1.52,443,1.607,444,1.548,445,1.52,446,1.52,447,1.607,448,1.52,449,1.577,450,2.606,451,1.607,452,1.52,453,1.607,454,1.492,455,1.52,456,2.51,457,1.52,458,1.52,459,1.76,460,1.52,461,1.607,462,1.52,463,1.52,464,1.52,465,1.173,466,1.492,467,1.492,468,1.607,469,1.492,470,1.607,471,1.492,472,1.577,473,1.607,565,3.21,694,2.605,712,3.398,713,6.835,714,7.941,715,4.426,716,5.405,717,7.175,718,5.54,719,5.54,720,5.54,721,7.779,722,6.21,723,4.426,724,4.426,725,4.426,726,4.426,727,4.426,728,2.605,729,4.426,730,3.633,731,2.442,732,3.21,733,4.426,734,4.426,735,4.426,736,4.426,737,4.426,738,4.426,739,3.948,740,4.426,741,4.426,742,3.948,743,4.426,744,4.426,745,4.426,746,4.426,747,4.426,748,4.426,749,4.426,750,6.21,751,4.426,752,6.21]],["title/components/ArchiveListComponent.html",[267,0.932,412,1.64]],["body/components/ArchiveListComponent.html",[0,0.265,3,0.034,4,0.046,5,0.055,17,1.853,32,0.209,34,0.236,36,0.907,39,0.399,42,0.283,45,0.006,46,0.538,51,0.112,57,0.04,61,1.392,100,1.415,107,1.324,112,1.44,137,0.003,138,0.004,139,0.003,147,2.797,151,2.792,152,3.171,159,1.037,198,1.44,199,2.466,219,2.603,220,1.751,221,1.656,236,1.281,240,3.643,256,3.47,267,1.48,268,1.687,269,2.21,270,1.751,271,2.249,272,1.784,273,1.784,276,1.656,277,3.468,279,3.291,281,2.424,316,0.885,317,1.415,372,1.93,373,1.892,374,1.93,375,1.93,376,1.93,377,1.93,378,1.718,379,1.542,380,1.93,381,1.93,382,1.93,383,1.819,384,1.93,385,1.892,386,1.93,387,1.93,388,1.93,389,1.93,393,4.605,394,4.403,395,4.032,402,1.49,403,2.424,404,2.378,405,1.569,406,2.954,407,1.784,408,1.784,409,1.687,410,2.958,411,2.424,412,2.792,413,2.424,414,1.656,415,1.784,416,1.687,417,2.424,418,2.954,419,1.687,420,2.954,421,1.687,422,1.784,423,1.626,424,2.424,425,1.687,426,1.718,427,1.751,428,1.598,429,2.424,430,1.626,431,1.784,432,1.687,433,1.687,434,1.784,435,1.656,436,1.784,437,1.687,438,1.687,439,1.784,440,1.656,441,1.784,442,1.687,443,1.784,444,1.718,445,1.687,446,1.687,447,1.784,448,1.687,449,1.751,450,2.753,451,1.784,452,1.687,453,1.784,454,1.656,455,1.687,456,1.718,457,1.687,458,1.687,459,1.891,460,1.687,461,1.784,462,1.687,463,1.687,464,1.687,465,1.302,466,1.656,467,1.656,468,1.784,469,1.656,470,1.784,471,1.656,472,1.751,473,1.784,554,3.682,713,6.244,753,7.254,754,4.381,755,6.762,756,5.953,757,5.953,758,4.381,759,3.771,760,5.124,761,3.771,762,3.771,763,4.032]],["title/classes/ArchiveQuerySuccess.html",[0,0.257,711,2.912]],["body/classes/ArchiveQuerySuccess.html",[0,0.473,2,0.761,3,0.038,4,0.038,5,0.045,8,1.314,10,2.268,32,0.25,33,1.08,34,0.26,35,0.531,36,0.853,37,1.772,38,1.336,39,0.286,40,1.536,42,0.297,44,0.414,45,0.006,46,0.385,47,0.414,49,0.723,50,0.58,51,0.118,52,0.558,57,0.076,58,0.915,77,1.951,79,0.869,91,1.406,92,1.406,93,1.269,126,1.412,137,0.003,138,0.004,139,0.003,159,1.108,163,1.511,215,2.257,219,2.448,220,1.932,221,1.828,222,2.482,235,1.969,236,1.414,239,2.268,244,1.978,245,1.562,246,1.536,247,1.763,248,1.763,260,2.673,307,3.433,410,2.809,465,1.437,694,4.689,710,3.577,711,5.16,764,3.577,765,7.129,766,5.421,767,5.171,768,3.306,769,3.306,770,4.857,771,4.515,772,3.577,773,3.71,774,4.857,775,3.932,776,3.932,777,3.741,778,3.932,779,3.932,780,3.932,781,3.932,782,3.932,783,3.741]],["title/interfaces/ArchiveState.html",[576,2.087,582,3.92]],["body/interfaces/ArchiveState.html",[3,0.047,4,0.047,5,0.056,27,3.76,28,1.693,32,0.242,34,0.327,35,0.614,45,0.006,51,0.101,57,0.068,79,1.079,137,0.004,138,0.005,139,0.004,148,2.828,163,2.562,178,1.899,183,2.624,196,2.34,219,3.157,220,2.429,221,2.298,231,2.851,256,4.31,366,5.741,565,4.943,576,2.979,577,3.88,582,7.266,716,6.211,784,6.815,785,7.228,786,6.815,787,6.815,788,6.815]],["title/components/ArchivesComponent.html",[267,0.932,414,1.61]],["body/components/ArchivesComponent.html",[0,0.258,3,0.033,4,0.046,5,0.054,17,2.061,32,0.217,33,0.786,34,0.23,35,0.489,36,0.574,39,0.253,42,0.3,44,0.366,45,0.006,46,0.572,47,0.366,51,0.134,52,0.494,57,0.04,61,1.359,100,1.382,107,1.293,112,1.406,117,1.996,137,0.003,138,0.004,139,0.003,159,1.021,198,1.406,199,1.992,219,1.647,220,1.71,221,1.618,235,1.743,236,1.251,240,3.599,256,3.428,267,1.462,268,1.647,269,2.175,270,1.71,271,2.196,272,1.743,273,1.743,275,2.827,276,1.618,277,3.464,279,3.238,281,2.385,290,1.658,291,3.04,292,1.678,308,1.192,309,1.506,316,0.864,317,1.382,318,1.743,320,1.359,321,1.455,336,1.506,372,1.885,373,1.848,374,1.885,375,1.885,376,1.885,377,1.885,378,1.678,379,1.506,380,1.885,381,1.885,382,1.885,383,1.776,384,1.885,385,1.848,386,1.885,387,1.885,388,1.885,389,1.885,402,1.455,403,2.385,404,2.341,405,1.533,406,2.925,407,1.743,408,1.743,409,1.647,410,2.098,411,2.385,412,1.647,413,2.385,414,2.715,415,1.743,416,1.647,417,2.385,418,2.925,419,1.647,420,2.925,421,1.647,422,1.743,423,1.589,424,2.385,425,1.647,426,1.678,427,1.71,428,1.56,429,2.385,430,1.589,431,1.743,432,1.647,433,1.647,434,1.743,435,1.618,436,1.743,437,1.647,438,1.647,439,1.743,440,1.618,441,1.743,442,1.647,443,1.743,444,1.678,445,1.647,446,1.647,447,1.743,448,1.647,449,1.71,450,2.72,451,1.743,452,1.647,453,1.743,454,1.618,455,1.647,456,1.678,457,1.647,458,1.647,459,1.861,460,1.647,461,1.743,462,1.647,463,1.647,464,1.647,465,1.272,466,1.618,467,1.618,468,1.743,469,1.618,470,1.743,471,1.618,472,1.71,473,1.743,558,5.391,707,2.366,730,3.938,789,4.798,790,7.488,791,6.568,792,6.568,793,4.798,794,4.798,795,3.938,796,3.165,797,4.798,798,4.798,799,3.938,800,3.938,801,4.798,802,3.31,803,4.28,804,4.798]],["title/modules/ArchivesModule.html",[474,1.956,805,3.666]],["body/modules/ArchivesModule.html",[0,0.312,3,0.04,4,0.052,5,0.061,36,0.694,45,0.006,51,0.144,57,0.048,73,2.533,107,1.562,137,0.004,138,0.005,139,0.004,236,1.511,316,1.044,372,2.276,373,2.231,374,2.276,375,2.276,376,2.276,377,2.276,378,2.026,379,1.819,380,2.276,381,2.276,382,2.276,383,2.145,384,2.276,385,2.231,386,2.276,387,2.276,388,2.276,389,2.276,402,1.757,409,3.155,412,3.082,414,3.027,416,3.155,445,3.155,474,2.373,476,2.785,477,3.197,478,4.841,479,3.299,480,3.41,481,2.933,490,4.238,491,3.41,493,3.873,497,3.873,502,4.539,505,3.299,506,5.715,507,5.715,508,2.857,514,3.998,519,5.399,520,3.102,521,3.102,558,4.756,714,5.168,753,5.168,805,7.651,806,5.168,807,5.168,808,5.168,809,6.664,810,6.339,811,5.794,812,5.168,813,8.679,814,5.168,815,5.168,816,5.168,817,4.756,818,6.11,819,5.168,820,5.168,821,5.794,822,5.794]],["title/modules/ArchivesRoutingModule.html",[474,1.956,809,3.464]],["body/modules/ArchivesRoutingModule.html",[0,0.335,3,0.043,4,0.054,5,0.064,36,0.743,45,0.006,51,0.138,57,0.051,107,1.674,137,0.004,138,0.005,139,0.004,178,1.731,236,1.62,265,3.561,267,1.738,316,1.119,372,2.44,373,2.392,374,2.44,375,2.44,376,2.44,377,2.44,378,2.172,379,1.95,380,2.44,381,2.44,382,2.44,383,2.299,384,2.44,385,2.392,386,2.44,387,2.44,388,2.44,389,2.44,414,2.623,423,2.812,430,2.576,476,2.985,481,3.144,493,3.232,497,4.048,546,4.505,548,5.642,549,5.379,550,3.536,551,5.972,552,5.098,553,6.784,557,4.768,564,5.098,809,5.642,812,5.54,823,6.21,824,5.54,825,4.768,826,5.098,827,5.54,828,7.576,829,5.54,830,5.54,831,5.54,832,5.54,833,4.768]],["title/classes/AuthObject.html",[0,0.257,834,3.92]],["body/classes/AuthObject.html",[0,0.374,2,0.366,3,0.018,4,0.018,5,0.021,7,1.044,9,2.109,12,3.309,13,2.109,17,1.781,23,2.872,24,1.192,27,1.437,28,2.031,32,0.206,34,0.125,35,0.31,36,1.068,37,0.84,39,0.313,41,4.021,42,0.243,44,0.199,45,0.006,46,0.185,47,0.397,51,0.127,52,0.268,53,3.514,54,1.318,55,1.637,57,0.057,58,0.439,64,2.167,66,1.604,71,2.502,78,3.94,79,1.128,80,4.461,81,4.661,82,3.902,83,2.66,98,3.387,99,3.413,104,2.933,107,1.403,110,3.283,117,1.59,126,0.462,137,0.002,138,0.003,139,0.002,148,1.663,163,0.725,178,2.388,182,1.957,183,2.291,186,2.005,188,1.355,196,1.788,203,3.665,206,3.083,231,1.089,236,1.552,238,1.089,251,0.776,287,2.245,298,1.588,309,0.817,316,0.469,317,0.75,318,0.946,319,1.533,320,0.738,321,0.79,333,1.437,335,4.883,336,0.817,378,2.081,393,2.874,459,1.844,501,1.533,600,1.533,601,1.718,683,1.263,691,1.066,707,1.284,708,1.355,709,1.588,728,1.533,834,5.341,835,2.137,836,3.715,837,6.191,838,5.307,839,5.804,840,2.604,841,2.604,842,1.482,843,2.604,844,2.604,845,2.604,846,2.604,847,3.925,848,2.322,849,1.999,850,4.105,851,1.999,852,2.322,853,6.835,854,2.137,855,1.437,856,1.394,857,2.322,858,2.137,859,3.715,860,2.322,861,1.533,862,2.322,863,2.322,864,4.644,865,2.322,866,2.322,867,2.322,868,2.322,869,2.322,870,2.322,871,2.322,872,2.322,873,2.322,874,2.322,875,2.322,876,2.322,877,2.322,878,2.322,879,2.322,880,6.191,881,5.804,882,3.715,883,5.804,884,2.322,885,2.322,886,2.322,887,3.715,888,2.322,889,3.715,890,3.715,891,3.715,892,2.322,893,3.715,894,2.322,895,2.137,896,3.021,897,2.322,898,3.419,899,2.137,900,1.318,901,2.322,902,2.322,903,4.105,904,2.322,905,3.715,906,2.322,907,4.644,908,2.322,909,6.214,910,4.644,911,4.644,912,4.644,913,4.644,914,4.644,915,4.273,916,2.322,917,2.322,918,2.322,919,2.322,920,3.715,921,2.137,922,2.964,923,3.715,924,3.715,925,3.715,926,2.322,927,2.322,928,2.322,929,4.644,930,3.174,931,3.715,932,2.638,933,2.322,934,3.715,935,2.322,936,3.419,937,3.715,938,3.715,939,2.322,940,2.322,941,3.715,942,3.715,943,2.322,944,2.322,945,2.322,946,2.322,947,2.322,948,2.322,949,2.322,950,2.322,951,2.322,952,2.322,953,2.322,954,2.322,955,2.322,956,2.322,957,2.322,958,2.322,959,2.322,960,2.322,961,2.322,962,2.322,963,2.322,964,2.322,965,2.137,966,2.322,967,3.419,968,5.804,969,2.322,970,3.715,971,2.709,972,4.884,973,4.273,974,2.322,975,2.137,976,2.322,977,2.322,978,2.452,979,2.322,980,3.715,981,2.322,982,3.715,983,2.322,984,2.322,985,2.322,986,2.322,987,2.322,988,2.322,989,2.322,990,2.322,991,2.874,992,2.322,993,2.322,994,2.322,995,2.322,996,2.322,997,2.322,998,2.322,999,2.322,1000,2.322,1001,2.322,1002,2.322,1003,2.322,1004,2.322,1005,2.322,1006,2.322,1007,2.322,1008,2.322,1009,4.644,1010,3.715,1011,2.322,1012,2.322,1013,3.715,1014,3.715,1015,2.322,1016,1.164,1017,2.322,1018,2.322,1019,2.322,1020,2.322,1021,2.137,1022,2.322,1023,2.322,1024,2.322,1025,1.999,1026,2.322,1027,2.322,1028,2.322,1029,2.322,1030,2.322,1031,2.322,1032,2.322,1033,3.715,1034,2.322,1035,2.322,1036,2.322,1037,2.322,1038,2.322,1039,2.322,1040,2.322,1041,2.322,1042,2.322,1043,2.322,1044,2.322,1045,2.137,1046,3.997,1047,2.322,1048,2.322,1049,1.999,1050,2.322,1051,2.322,1052,3.715,1053,3.715,1054,1.953,1055,2.322,1056,2.322,1057,2.137,1058,2.322]],["title/interfaces/AuthState.html",[576,2.087,583,3.92]],["body/interfaces/AuthState.html",[3,0.044,4,0.044,5,0.052,28,1.572,32,0.248,34,0.303,35,0.586,45,0.006,51,0.117,53,4.667,54,3.203,55,3.816,56,2.967,57,0.065,78,4.797,79,1.216,80,4.797,81,4.667,82,4.936,83,3.83,137,0.004,138,0.005,139,0.004,178,1.763,183,3.67,378,3.224,576,2.766,577,3.603,583,7.031,1059,6.327,1060,7.077,1061,7.077,1062,6.327,1063,6.327]],["title/injectables/AuthenticationEffects.html",[15,2.635,683,1.448]],["body/injectables/AuthenticationEffects.html",[0,0.121,1,3.139,3,0.016,4,0.016,5,0.019,7,1.484,8,1.284,11,1.983,12,3.431,13,3.626,14,1.778,15,2.042,17,2.269,19,3.568,20,3.213,22,2.178,23,3.012,28,2.279,32,0.225,34,0.108,35,0.276,37,1.496,39,0.195,42,0.285,44,0.523,45,0.006,46,0.509,47,0.36,49,0.914,50,0.694,51,0.127,52,0.231,55,3.001,56,1.055,57,0.019,59,1.139,62,1.655,63,2.523,64,2.841,66,3.134,68,2.107,69,2.523,72,3.568,74,4.358,75,2.523,79,0.451,81,3.963,83,1.655,88,2.97,91,0.566,92,0.566,93,0.511,95,2.178,99,3.243,102,2.386,104,3.941,105,2.042,106,3.694,108,2.178,111,2.107,115,2.178,117,1.7,121,3.213,125,2.178,126,0.399,128,3.213,130,3.213,132,2.9,133,2.178,136,4.707,137,0.003,138,0.002,139,0.001,146,1.03,162,1.109,163,1.91,165,1.242,178,1.91,182,1.918,226,1.139,238,2.284,246,0.638,287,1.848,290,0.934,292,0.787,298,3.956,302,4.481,308,1.171,309,0.706,316,0.405,317,0.648,318,0.817,319,1.324,320,0.638,321,0.682,326,1.484,330,1.847,335,3.329,336,0.706,363,2.256,364,1.632,378,1.909,391,2.841,550,1.281,581,5.062,683,1.122,684,1.03,687,3.952,688,4.342,690,3.819,691,2.933,693,4.87,699,2.256,701,3.579,702,5.175,704,1.281,705,1.205,706,1.727,707,1.109,708,2.452,709,2.874,768,1.372,769,1.372,861,4.215,895,3.037,896,2.684,899,5.325,903,2.553,921,3.037,932,2.343,967,3.037,972,3.037,973,5.325,1016,1.006,1049,1.727,1064,2.25,1065,3.7,1066,4.712,1067,3.7,1068,5.459,1069,5.459,1070,2.25,1071,3.7,1072,3.7,1073,3.7,1074,3.7,1075,3.3,1076,3.96,1077,3.7,1078,2.25,1079,3.7,1080,2.25,1081,3.7,1082,3.7,1083,2.25,1084,3.7,1085,2.25,1086,4.481,1087,3.7,1088,3.3,1089,3.7,1090,2.25,1091,5.879,1092,6.487,1093,3.7,1094,4.981,1095,3.7,1096,3.7,1097,3.7,1098,3.7,1099,3.7,1100,3.7,1101,3.7,1102,3.7,1103,3.7,1104,5.459,1105,5.459,1106,5.459,1107,3.7,1108,6.487,1109,5.459,1110,6.116,1111,3.7,1112,3.7,1113,4.712,1114,3.7,1115,3.7,1116,3.7,1117,3.7,1118,4.632,1119,4.712,1120,3.7,1121,3.7,1122,2.441,1123,3.037,1124,3.7,1125,3.7,1126,3.7,1127,3.7,1128,2.25,1129,3.7,1130,3.7,1131,3.037,1132,3.7,1133,4.87,1134,3.7,1135,2.553,1136,2.343,1137,3.7,1138,2.25,1139,3.7,1140,3.7,1141,3.7,1142,5.459,1143,3.7,1144,2.25,1145,2.343,1146,3.7,1147,3.7,1148,3.7,1149,3.7,1150,3.7,1151,2.25,1152,3.7,1153,3.7,1154,3.7,1155,4.712,1156,4.712,1157,3.7,1158,3.7,1159,2.256,1160,3.7,1161,3.7,1162,3.7,1163,2.6,1164,2.25,1165,3.7,1166,2.178,1167,2.25,1168,1.727,1169,1.484,1170,2.25,1171,1.632,1172,1.727,1173,6.033,1174,2.25,1175,2.25,1176,3.213,1177,1.425,1178,2.25,1179,2.774,1180,2.25,1181,2.25,1182,2.684,1183,2.25,1184,2.25,1185,2.25,1186,2.25,1187,2.25,1188,2.25,1189,2.25,1190,3.7,1191,2.25,1192,2.25,1193,2.25,1194,2.25,1195,2.25]],["title/components/BaseFilterComponent.html",[267,0.932,416,1.64]],["body/components/BaseFilterComponent.html",[0,0.193,3,0.025,4,0.025,5,0.03,28,1.324,32,0.225,33,0.638,34,0.172,35,0.397,36,0.762,39,0.189,42,0.347,44,0.575,45,0.006,46,0.597,47,0.575,49,0.711,50,0.845,51,0.129,52,0.369,57,0.03,61,1.015,79,0.86,89,2.11,100,1.033,107,1.901,112,1.05,117,1.81,123,2.041,137,0.002,138,0.003,139,0.002,148,2.034,151,2.23,152,2.95,159,0.829,163,0.999,182,1.325,183,1.38,198,1.05,199,1.617,267,1.377,268,1.231,269,1.765,270,1.277,272,1.302,273,1.302,275,2.404,276,1.208,277,3.398,281,1.936,287,2.129,290,1.346,291,2.662,292,1.254,308,2.088,309,2.366,316,0.646,317,1.033,318,1.302,320,1.015,321,1.087,333,1.978,346,1.978,363,2.185,379,1.999,402,1.087,403,1.936,404,1.9,405,1.145,406,2.561,407,1.302,408,1.302,409,1.231,410,1.704,411,1.936,412,1.231,413,1.936,414,1.208,415,1.302,416,2.421,417,3.053,418,2.561,419,1.231,420,2.561,421,1.231,422,1.302,423,1.187,424,1.936,425,1.231,426,1.254,427,1.277,428,1.166,429,1.936,430,1.187,431,1.302,432,1.231,433,1.231,434,1.302,435,1.208,436,1.302,437,1.231,438,1.231,439,1.302,440,1.208,441,1.302,442,1.231,443,1.302,444,1.254,445,1.231,446,1.231,447,1.302,448,1.231,449,1.277,450,2.312,451,1.302,452,1.231,453,1.302,454,1.208,455,1.231,456,1.254,457,1.231,458,1.231,459,1.511,460,1.231,461,1.302,462,1.231,463,1.231,464,1.231,465,2.278,466,1.208,467,1.208,468,1.302,469,1.208,470,1.302,471,1.208,472,1.277,473,1.302,508,1.767,565,2.6,579,2.041,691,1.468,712,2.752,713,7.185,728,2.11,730,2.942,770,2.185,777,2.473,816,8.348,817,7.682,855,1.978,856,1.919,978,3.138,1196,2.6,1197,3.625,1198,3.867,1199,6.043,1200,3.625,1201,4.032,1202,2.942,1203,4.032,1204,3.377,1205,3.891,1206,4.465,1207,3.377,1208,5.679,1209,4.032,1210,4.032,1211,4.756,1212,3.197,1213,3.197,1214,2.752,1215,2.27,1216,3.584,1217,2.27,1218,3.584,1219,3.584,1220,3.891,1221,3.377,1222,4.292,1223,3.584,1224,2.27,1225,3.584,1226,3.584,1227,3.584,1228,2.27,1229,3.584,1230,2.942,1231,2.942,1232,3.197,1233,2.6,1234,3.867,1235,2.473,1236,2.473,1237,3.584,1238,2.27,1239,3.197,1240,3.197,1241,3.197,1242,2.942,1243,3.197,1244,3.197,1245,5.332,1246,3.584,1247,4.756,1248,3.584,1249,3.197,1250,3.197,1251,2.752,1252,3.197,1253,2.6,1254,3.197,1255,2.6,1256,3.197,1257,2.6,1258,3.197,1259,3.197,1260,3.584,1261,3.584,1262,2.6,1263,2.6,1264,3.197,1265,3.197,1266,3.197,1267,3.197,1268,3.584,1269,3.584,1270,3.584,1271,2.942,1272,2.942,1273,3.197,1274,4.093]],["title/components/BaseSettingComponent.html",[267,0.932,419,1.64]],["body/components/BaseSettingComponent.html",[0,0.191,3,0.025,4,0.025,5,0.029,28,1.313,32,0.228,33,0.633,34,0.17,35,0.394,36,0.757,39,0.187,42,0.348,44,0.572,45,0.006,46,0.595,47,0.572,49,0.705,50,0.841,51,0.131,52,0.364,57,0.029,61,1.004,79,0.855,93,0.489,100,1.021,107,1.89,112,1.038,117,1.803,123,2.017,137,0.002,138,0.003,139,0.002,148,2.02,151,2.211,152,2.933,159,0.822,163,0.987,178,0.987,182,1.316,183,1.364,198,1.038,199,1.603,267,1.369,268,1.217,269,1.75,270,1.263,272,1.287,273,1.287,275,2.387,276,1.194,277,3.396,281,1.92,287,2.308,290,1.335,291,2.647,292,1.239,308,2.081,309,2.355,316,0.638,317,1.021,318,1.287,320,1.004,321,1.074,326,2.337,333,1.955,346,1.955,363,2.16,379,1.985,402,1.074,403,1.92,404,1.884,405,1.132,406,2.546,407,1.287,408,1.287,409,1.217,410,1.689,411,1.92,412,1.217,413,1.92,414,1.194,415,1.287,416,1.217,417,3.043,418,2.546,419,2.407,420,2.546,421,1.217,422,1.287,423,1.173,424,1.92,425,1.217,426,1.239,427,1.263,428,1.152,429,1.92,430,1.173,431,1.287,432,1.217,433,1.217,434,1.287,435,1.194,436,1.287,437,1.217,438,1.217,439,1.287,440,1.194,441,1.287,442,1.217,443,1.287,444,1.239,445,1.217,446,1.217,447,1.287,448,1.217,449,1.263,450,2.297,451,1.287,452,1.217,453,1.287,454,1.194,455,1.217,456,1.239,457,1.217,458,1.217,459,1.498,460,1.217,461,1.287,462,1.217,463,1.217,464,1.217,465,1.402,466,1.194,467,1.194,468,1.287,469,1.194,470,1.287,471,1.194,472,1.263,473,1.287,508,1.747,562,2.479,691,2.165,728,2.085,855,1.955,856,1.897,978,3.112,1197,3.6,1199,6.034,1200,3.6,1201,4.005,1202,2.917,1203,4.005,1204,3.348,1205,3.868,1206,4.44,1207,3.348,1209,4.005,1210,4.005,1215,2.244,1217,2.244,1220,3.868,1221,3.348,1222,4.271,1224,2.244,1228,2.244,1233,2.57,1234,3.834,1235,2.445,1236,2.445,1238,2.244,1239,3.16,1240,3.16,1241,3.16,1242,2.908,1243,3.16,1244,3.16,1247,4.715,1249,3.16,1250,3.16,1251,2.72,1252,3.16,1253,3.834,1254,3.16,1255,2.57,1256,3.16,1257,2.57,1258,3.16,1259,3.16,1262,2.57,1263,2.57,1264,3.16,1265,3.16,1266,3.16,1267,3.16,1271,2.908,1272,2.908,1273,3.16,1274,4.058,1275,9.395,1276,6.815,1277,2.72,1278,5.624,1279,4.058,1280,4.363,1281,4.363,1282,5.286,1283,3.16,1284,3.543,1285,3.543,1286,3.543,1287,3.543,1288,3.543,1289,3.543,1290,3.543,1291,3.543,1292,3.543,1293,3.543,1294,2.244,1295,3.543,1296,3.543,1297,3.543,1298,3.16,1299,1.955,1300,2.908,1301,3.16,1302,3.16,1303,3.16,1304,5.286,1305,3.543,1306,3.543,1307,3.543,1308,3.543,1309,3.543,1310,3.543,1311,3.543,1312,3.543,1313,3.543,1314,3.543,1315,3.543]],["title/directives/CalcHeightDirective.html",[405,1.526,467,1.61]],["body/directives/CalcHeightDirective.html",[0,0.261,3,0.034,4,0.034,5,0.04,28,1.206,32,0.225,33,0.792,34,0.233,35,0.493,39,0.256,42,0.34,44,0.505,45,0.006,46,0.47,47,0.505,50,0.519,51,0.112,57,0.04,79,1.126,93,0.67,137,0.003,138,0.004,139,0.003,151,2.769,152,3.385,178,2.099,182,1.568,236,1.266,275,2.844,276,1.637,277,2.273,287,2.356,290,1.671,291,3.055,308,1.644,309,2.365,316,0.875,317,1.399,318,1.763,336,1.524,367,5.434,379,2.541,393,3.349,394,5.902,404,2.359,405,2.407,466,1.637,467,2.728,760,3.727,1016,2.171,1133,4.33,1135,3.349,1316,9.233,1317,4.854,1318,7.534,1319,6.62,1320,8.945,1321,8.945,1322,8.469,1323,5.434,1324,7.534,1325,4.854,1326,7.219,1327,6.62,1328,6.62,1329,4.854,1330,4.854,1331,4.854,1332,4.854,1333,6.62,1334,4.854,1335,4.854,1336,3.985,1337,4.33,1338,4.854,1339,4.854,1340,4.854,1341,4.854,1342,4.854,1343,4.854,1344,4.854,1345,6.62,1346,4.854,1347,4.854,1348,7.534,1349,6.62,1350,4.854,1351,4.33,1352,4.854,1353,4.854,1354,4.854,1355,4.854,1356,6.62,1357,4.854,1358,8.469,1359,4.854,1360,4.854,1361,4.854,1362,7.534,1363,4.854,1364,4.854,1365,4.854,1366,6.62,1367,4.854,1368,4.854,1369,3.985,1370,4.33,1371,4.854,1372,4.854,1373,4.854,1374,6.62,1375,4.854,1376,4.854,1377,4.854,1378,6.62,1379,4.854,1380,4.854,1381,6.62,1382,7.534,1383,4.854,1384,4.854,1385,4.854,1386,6.62,1387,4.854,1388,4.854,1389,4.854,1390,4.854,1391,4.854,1392,6.62,1393,6.62,1394,4.854,1395,4.854,1396,4.854,1397,4.854,1398,4.854]],["title/classes/Card.html",[0,0.257,159,0.742]],["body/classes/Card.html",[0,0.391,2,0.784,3,0.039,4,0.039,5,0.046,11,2.935,32,0.144,38,1.455,39,0.426,42,0.208,44,0.426,45,0.006,46,0.397,47,0.426,51,0.108,57,0.067,58,0.943,79,1.229,91,1.111,92,1.111,93,1.003,137,0.003,138,0.005,139,0.003,146,4.3,159,1.13,160,4.333,162,2.754,179,4.459,188,2.628,206,3.739,220,1.99,221,1.883,231,3.38,271,2.556,289,6.208,397,3.853,842,5.348,1399,4.584,1400,5.584,1401,5.331,1402,6.204,1403,6.204,1404,6.204,1405,6.204,1406,6.392,1407,6.633,1408,6.633,1409,6.204,1410,6.204,1411,5.861,1412,5.584,1413,5.967,1414,6.633,1415,4.287,1416,3.684,1417,4.981,1418,4.584]],["title/components/CardComponent.html",[267,0.932,421,1.64]],["body/components/CardComponent.html",[0,0.195,3,0.025,4,0.037,5,0.044,32,0.226,33,0.643,34,0.174,35,0.4,36,0.949,39,0.191,42,0.332,44,0.489,45,0.006,46,0.563,47,0.489,49,0.483,50,0.387,51,0.13,52,0.373,57,0.03,61,1.026,79,1.05,83,1.62,91,0.554,92,0.554,93,0.5,100,1.044,107,0.976,112,1.062,117,1.881,137,0.002,138,0.003,139,0.002,148,1.717,151,2.248,152,2.68,159,1.339,160,1.834,163,1.009,182,1.651,188,1.178,196,1.845,198,1.878,199,1.63,206,2.07,219,3.01,220,1.291,221,1.221,235,2.574,236,0.945,239,1.515,267,1.251,268,1.244,269,1.779,270,1.291,271,1.658,272,1.316,273,1.316,275,2.419,276,1.221,277,3.401,279,2.65,281,1.952,284,5.259,287,2.138,289,2.627,290,1.357,291,2.676,308,1.761,309,1.687,316,0.653,318,1.316,320,1.026,321,1.099,322,2.974,333,1.999,336,1.137,350,2.974,372,1.423,373,1.395,374,1.423,375,1.423,376,1.423,377,1.423,378,1.267,379,1.137,380,1.423,381,1.423,382,1.423,383,1.341,384,1.423,385,1.395,386,1.423,387,1.423,388,1.423,389,1.423,390,2.974,402,1.099,403,1.952,404,1.915,405,1.157,406,2.574,407,1.316,408,1.316,409,1.244,410,1.717,411,1.952,412,1.244,413,1.952,414,1.221,415,1.316,416,1.244,417,1.952,418,2.574,419,1.244,420,2.574,421,2.434,422,1.316,423,1.199,424,1.952,425,1.244,426,1.267,427,1.291,428,1.178,429,1.952,430,1.199,431,1.316,432,1.244,433,1.244,434,1.316,435,1.221,436,1.316,437,1.244,438,1.244,439,1.316,440,1.221,441,1.316,442,1.244,443,1.316,444,1.267,445,1.244,446,1.244,447,1.316,448,1.244,449,1.291,450,2.327,451,1.316,452,1.244,453,1.316,454,1.221,455,1.244,456,1.267,457,1.244,458,1.244,459,2.145,460,1.244,461,1.316,462,1.244,463,1.244,464,1.244,465,0.96,466,1.221,467,1.221,468,1.316,469,1.221,470,1.316,471,1.221,472,1.291,473,1.316,520,1.94,521,1.94,550,2.063,579,3.06,581,5.023,691,1.483,728,2.132,1177,2.294,1179,4.172,1182,3.898,1409,2.781,1416,2.39,1419,3.622,1420,6.407,1421,5.374,1422,5.715,1423,6.407,1424,5.374,1425,5.374,1426,7.088,1427,3.277,1428,5.715,1429,3.622,1430,4.421,1431,4.676,1432,4.322,1433,5.374,1434,3.622,1435,3.622,1436,3.622,1437,3.622,1438,3.622,1439,3.622,1440,3.622,1441,3.622,1442,3.622,1443,3.622,1444,3.622,1445,3.231,1446,3.622,1447,3.622,1448,2.294,1449,3.622,1450,3.622,1451,4.794,1452,3.622,1453,3.231,1454,3.231,1455,3.622,1456,3.622,1457,3.622,1458,3.622,1459,3.622,1460,3.546,1461,3.622,1462,2.974,1463,3.622,1464,3.622,1465,3.622,1466,3.622,1467,3.622,1468,3.622,1469,3.622,1470,3.622,1471,3.622,1472,3.622,1473,3.622,1474,5.374,1475,3.622,1476,3.622,1477,3.622,1478,3.622,1479,5.374,1480,5.374,1481,5.374,1482,3.622,1483,4.794,1484,3.622,1485,3.622,1486,3.622,1487,3.622,1488,6.323,1489,3.622,1490,5.259,1491,3.622,1492,5.259,1493,3.622,1494,3.622,1495,3.622,1496,3.231,1497,3.622,1498,3.231,1499,3.622]],["title/components/CardDetailsComponent.html",[267,0.932,423,1.581]],["body/components/CardDetailsComponent.html",[0,0.258,3,0.033,4,0.033,5,0.039,11,2.381,32,0.217,33,0.785,34,0.229,35,0.489,39,0.252,42,0.3,44,0.365,45,0.006,46,0.571,47,0.365,51,0.129,52,0.492,57,0.039,61,1.356,100,1.379,112,1.402,117,1.994,137,0.003,138,0.004,139,0.003,159,1.483,160,3.786,161,1.96,178,1.333,183,1.843,198,1.402,199,1.988,267,1.46,268,1.643,269,2.171,270,1.705,272,1.738,273,1.738,275,2.823,276,1.613,277,3.463,281,2.381,287,1.29,290,1.655,291,3.037,292,1.674,308,1.189,309,1.502,316,0.862,320,1.356,321,1.451,336,1.502,402,1.451,403,2.381,404,2.336,405,1.529,406,2.922,407,1.738,408,1.738,409,1.643,410,2.095,411,2.381,412,1.643,413,2.381,414,1.613,415,1.738,416,1.643,417,2.381,418,2.922,419,1.643,420,2.922,421,1.643,422,1.738,423,2.664,424,2.381,425,1.643,426,1.674,427,1.705,428,1.556,429,2.381,430,1.584,431,1.738,432,1.643,433,1.643,434,1.738,435,1.613,436,1.738,437,1.643,438,1.643,439,1.738,440,1.613,441,1.738,442,1.643,443,1.738,444,1.674,445,1.643,446,1.643,447,1.738,448,1.643,449,1.705,450,2.716,451,1.738,452,1.643,453,1.738,454,1.613,455,1.643,456,1.674,457,1.643,458,1.643,459,1.858,460,1.643,461,1.738,462,1.643,463,1.643,464,1.643,465,1.269,466,1.613,467,1.613,468,1.738,469,1.613,470,1.738,471,1.613,472,1.705,473,1.738,731,4.917,732,3.471,825,6.47,1411,6.112,1500,8.427,1501,4.785,1502,5.848,1503,6.556,1504,4.785,1505,4.785,1506,4.785,1507,4.785,1508,4.785,1509,4.785,1510,4.785,1511,4.785,1512,4.785,1513,6.556,1514,4.785,1515,4.785,1516,4.268,1517,4.785,1518,4.268,1519,4.785]],["title/injectables/CardEffects.html",[604,3.92,683,1.448]],["body/injectables/CardEffects.html",[0,0.285,3,0.037,4,0.037,5,0.044,8,0.757,17,2.132,28,2.083,32,0.203,34,0.254,35,0.523,39,0.279,42,0.294,44,0.404,45,0.006,46,0.376,47,0.404,49,0.936,50,0.751,51,0.139,52,0.545,57,0.044,91,0.81,92,0.81,93,0.731,99,3.442,117,2.055,137,0.003,138,0.004,139,0.003,159,1.461,161,2.169,163,1.476,182,1.933,287,1.893,292,1.853,316,0.954,317,1.526,318,1.924,320,1.501,321,1.606,336,1.663,346,4.627,604,5.763,683,2.129,684,2.425,687,5.047,688,5.31,690,4.936,691,3.434,699,5.663,701,3.874,702,4.967,704,3.016,705,2.837,706,4.067,707,2.612,708,2.757,1054,2.484,1122,5.532,1172,4.067,1520,5.297,1521,7.875,1522,7.025,1523,5.297,1524,7.021,1525,6.082,1526,7.021,1527,8.385,1528,7.021,1529,7.021,1530,5.297,1531,7.021,1532,7.021,1533,7.021,1534,7.021,1535,5.297,1536,3.118,1537,2.757,1538,2.923,1539,2.923,1540,2.682,1541,2.923,1542,2.923,1543,4.067,1544,4.067,1545,4.067]],["title/interfaces/CardFeedState.html",[576,2.087,586,3.92]],["body/interfaces/CardFeedState.html",[3,0.036,4,0.036,5,0.042,7,2.06,11,3.228,24,3.953,28,1.276,32,0.222,34,0.246,35,0.513,45,0.006,51,0.123,55,3.254,57,0.076,79,1.083,126,1.531,137,0.005,138,0.004,139,0.003,148,2.478,159,1.069,163,2.308,178,1.916,182,1.798,183,1.978,188,2.237,196,1.764,219,3.358,220,1.83,221,1.732,265,3.148,364,4.989,366,5.535,465,2.056,554,4.904,576,2.245,577,2.925,586,6.365,670,3.389,671,3.389,672,3.023,673,3.132,716,5.988,785,6.968,1016,2.297,1135,4.746,1369,5.646,1546,5.136,1547,6.135,1548,7.702,1549,5.28,1550,8.096,1551,7.388,1552,5.646,1553,6.878,1554,6.135,1555,6.135,1556,4.989,1557,6.135,1558,6.878,1559,6.878,1560,4.356,1561,6.135,1562,6.135,1563,4.216,1564,5.136,1565,4.582,1566,7.702,1567,4.582,1568,4.582,1569,5.136,1570,5.136,1571,5.136,1572,5.136,1573,5.136,1574,5.136,1575,5.136,1576,5.136,1577,5.136,1578,5.136,1579,5.136,1580,5.136,1581,5.136,1582,5.136,1583,5.136,1584,4.582,1585,5.136,1586,5.136,1587,4.582]],["title/components/CardListComponent.html",[267,0.932,425,1.64]],["body/components/CardListComponent.html",[0,0.265,3,0.034,4,0.046,5,0.055,17,1.853,32,0.209,34,0.236,36,0.907,39,0.399,42,0.283,45,0.006,46,0.538,51,0.112,57,0.04,61,1.392,100,1.415,107,1.324,112,1.44,137,0.003,138,0.004,139,0.003,147,2.797,151,2.792,152,3.171,159,1.439,198,1.44,199,2.466,219,2.603,220,1.751,221,1.656,236,1.281,240,3.643,256,3.47,267,1.48,268,1.687,269,2.21,270,1.751,271,2.249,272,1.784,273,1.784,276,1.656,277,3.468,279,3.291,281,2.424,316,0.885,317,1.415,372,1.93,373,1.892,374,1.93,375,1.93,376,1.93,377,1.93,378,1.718,379,1.542,380,1.93,381,1.93,382,1.93,383,1.819,384,1.93,385,1.892,386,1.93,387,1.93,388,1.93,389,1.93,393,4.605,394,4.403,395,4.032,402,1.49,403,2.424,404,2.378,405,1.569,406,2.954,407,1.784,408,1.784,409,1.687,410,2.132,411,2.424,412,1.687,413,2.424,414,1.656,415,1.784,416,1.687,417,2.424,418,2.954,419,1.687,420,2.954,421,1.687,422,1.784,423,1.626,424,2.424,425,2.792,426,1.718,427,1.751,428,1.598,429,2.424,430,1.626,431,1.784,432,1.687,433,1.687,434,1.784,435,1.656,436,1.784,437,1.687,438,1.687,439,1.784,440,1.656,441,1.784,442,1.687,443,1.784,444,1.718,445,1.687,446,1.687,447,1.784,448,1.687,449,1.751,450,2.753,451,1.784,452,1.687,453,1.784,454,1.656,455,1.687,456,1.718,457,1.687,458,1.687,459,1.891,460,1.687,461,1.784,462,1.687,463,1.687,464,1.687,465,1.302,466,1.656,467,1.656,468,1.784,469,1.656,470,1.784,471,1.656,472,1.751,473,1.784,554,3.682,754,4.381,755,6.762,756,5.953,757,5.953,758,4.381,759,3.771,760,5.124,761,3.771,762,3.771,763,4.032,1588,5.899,1589,7.254]],["title/classes/CardOperation.html",[0,0.257,1590,3.92]],["body/classes/CardOperation.html",[0,0.338,2,0.882,3,0.044,4,0.044,5,0.052,10,2.629,32,0.242,33,0.938,34,0.301,38,1.337,39,0.413,42,0.292,44,0.598,45,0.006,46,0.556,47,0.598,50,0.913,51,0.093,57,0.065,58,1.061,79,1.16,91,0.96,92,0.96,93,0.867,137,0.004,138,0.005,139,0.004,182,1.631,203,3.909,206,3.704,219,3.07,221,2.119,239,2.629,241,3.27,265,3.909,290,1.978,308,1.561,842,4.462,1176,3.699,1590,7.339,1591,7.617,1592,5.605,1593,7.836,1594,6.284,1595,8.539,1596,7.339,1597,8.539,1598,6.284,1599,6.284,1600,6.284,1601,6.284,1602,6.284,1603,6.284,1604,6.284,1605,5.158]],["title/injectables/CardOperationEffects.html",[606,3.92,683,1.448]],["body/injectables/CardOperationEffects.html",[0,0.21,3,0.027,4,0.027,5,0.032,8,1.114,12,2.771,17,2.053,28,2.269,32,0.21,34,0.187,35,0.422,37,1.143,39,0.205,42,0.274,44,0.297,45,0.006,46,0.277,47,0.297,49,1.17,50,0.715,51,0.138,52,0.401,57,0.032,59,1.973,66,2.827,88,2.595,91,0.596,92,0.596,93,0.538,99,2.922,117,1.865,126,1.526,137,0.002,138,0.005,139,0.002,159,1.338,163,1.862,179,3.128,182,1.935,188,1.844,199,1.719,212,3.384,222,1.784,228,3.296,239,2.372,242,3.384,243,3.579,244,0.968,249,1.973,256,2.595,265,2.595,266,2.086,287,1.528,292,1.363,297,4.654,316,0.702,317,1.123,318,1.415,319,2.293,320,1.104,321,1.182,336,1.223,346,4.491,364,4.112,465,1.033,606,4.654,665,4.441,672,2.293,673,2.376,674,2.991,683,1.719,684,1.784,687,4.636,688,4.649,690,4.791,691,3.652,698,7.261,699,5.57,700,6.548,701,3.688,702,4.784,704,2.218,705,2.086,706,2.991,707,1.921,708,3.478,768,2.376,769,2.376,785,4.353,1016,2.535,1131,6.026,1168,2.991,1172,2.991,1177,3.591,1179,4.321,1236,2.688,1251,5.132,1540,3.384,1549,5.636,1552,4.654,1596,3.198,1606,7.8,1607,3.896,1608,6.684,1609,3.896,1610,5.057,1611,5.67,1612,5.67,1613,7.34,1614,5.67,1615,5.67,1616,5.67,1617,5.67,1618,5.67,1619,5.67,1620,5.057,1621,5.67,1622,5.67,1623,5.67,1624,3.896,1625,6.548,1626,6.548,1627,4.353,1628,5.67,1629,5.67,1630,5.67,1631,7.34,1632,5.67,1633,5.67,1634,5.67,1635,5.67,1636,5.67,1637,5.67,1638,5.67,1639,5.67,1640,3.896,1641,5.67,1642,5.67,1643,5.67,1644,4.654,1645,5.67,1646,5.67,1647,5.67,1648,3.896,1649,2.826,1650,3.896,1651,3.896,1652,3.475,1653,3.475]],["title/injectables/CardService.html",[683,1.448,688,3.024]],["body/injectables/CardService.html",[0,0.232,3,0.03,4,0.042,5,0.035,17,2.253,28,2.014,32,0.232,34,0.206,35,0.454,36,0.846,38,1.352,39,0.227,42,0.347,44,0.642,45,0.006,46,0.598,47,0.642,49,0.573,50,0.651,51,0.136,55,2.392,57,0.035,71,2.068,79,1.135,80,2.239,126,1.079,137,0.003,138,0.004,139,0.003,159,0.669,161,1.762,163,1.696,178,1.199,182,1.897,188,1.98,206,2.958,219,1.477,220,1.533,221,1.451,250,1.24,287,1.16,290,1.537,308,2.149,309,1.351,316,0.775,317,1.24,336,1.351,379,2.218,501,2.533,511,3.303,600,2.533,601,2.839,683,1.846,684,1.97,688,3.856,716,2.839,847,5.068,850,5.971,851,3.303,861,4.954,909,3.532,932,4.475,1025,4.674,1045,3.532,1176,2.533,1537,3.168,1540,3.082,1590,3.532,1652,3.838,1653,3.838,1654,4.303,1655,7.066,1656,7.066,1657,7.066,1658,7.066,1659,6.088,1660,6.088,1661,7.682,1662,7.682,1663,6.088,1664,3.303,1665,6.088,1666,6.088,1667,4.303,1668,6.088,1669,8.107,1670,4.303,1671,6.088,1672,4.303,1673,6.088,1674,4.303,1675,6.088,1676,4.303,1677,4.303,1678,4.303,1679,7.066,1680,4.303,1681,4.303,1682,4.303,1683,4.303,1684,4.303,1685,3.121,1686,3.532,1687,4.998,1688,4.303,1689,4.303,1690,4.303,1691,4.303,1692,4.303,1693,6.088,1694,4.303,1695,4.303,1696,4.303,1697,4.303,1698,4.303,1699,4.303,1700,4.303,1701,4.303,1702,4.303,1703,4.303,1704,4.303,1705,4.303,1706,4.303,1707,4.303,1708,4.303,1709,4.674,1710,4.303,1711,3.838,1712,4.303,1713,4.303,1714,3.838,1715,4.303,1716,4.303,1717,4.303,1718,4.303,1719,4.303,1720,4.303,1721,4.303,1722,4.303,1723,4.303,1724,4.303,1725,4.303,1726,4.303,1727,4.303,1728,4.303,1729,4.303,1730,4.303,1731,4.303,1732,4.303,1733,4.303,1734,4.303,1735,4.303,1736,4.303,1737,4.303,1738,4.303,1739,4.303,1740,4.303]],["title/interfaces/CardState.html",[576,2.087,584,3.92]],["body/interfaces/CardState.html",[3,0.049,4,0.049,5,0.058,32,0.231,34,0.339,35,0.627,45,0.006,51,0.105,57,0.069,79,1.096,126,1.685,137,0.004,138,0.005,139,0.004,148,2.872,159,1.446,161,2.892,178,1.968,183,3.24,196,2.425,366,5.797,576,3.087,577,4.021,584,7.377,1549,7.298,1741,7.061,1742,7.061]],["title/modules/CardsModule.html",[474,1.956,810,3.295]],["body/modules/CardsModule.html",[0,0.296,3,0.038,4,0.05,5,0.059,36,0.658,42,0.205,45,0.006,51,0.141,57,0.045,73,2.401,107,1.481,137,0.003,138,0.004,139,0.003,182,1.144,203,3.292,236,1.433,290,1.387,308,1.365,316,0.99,372,2.159,373,2.115,374,2.159,375,2.159,376,2.159,377,2.159,378,1.921,379,1.725,380,2.159,381,2.159,382,2.159,383,2.034,384,2.159,385,2.115,386,2.159,387,2.159,388,2.159,389,2.159,402,1.666,421,3.326,423,3.207,430,3.207,432,3.326,474,2.25,476,2.64,477,3.031,478,4.719,479,3.128,480,5.006,481,4.059,489,5.975,490,4.095,491,3.234,493,3.742,497,4.172,502,4.385,505,3.128,519,5.216,520,2.942,521,2.942,731,3.968,810,6.887,825,4.218,826,4.509,1743,4.9,1744,4.9,1745,5.493,1746,4.9,1747,4.9,1748,6.569,1749,5.493,1750,6.581,1751,5.493,1752,6.581,1753,5.493,1754,4.9,1755,5.493,1756,5.493,1757,4.509,1758,4.9,1759,4.9]],["title/classes/CheckAuthenticationStatus.html",[0,0.257,63,2.557]],["body/classes/CheckAuthenticationStatus.html",[0,0.468,1,3.405,2,0.527,3,0.026,4,0.026,5,0.059,6,2.138,7,1.506,8,1.338,9,4.402,10,1.571,11,2.619,12,3.636,13,4.068,14,3.693,15,2.072,16,2.926,17,1.964,18,3.99,19,3.999,20,3.248,21,2.289,22,2.21,23,3.979,24,2.995,25,3.851,26,3.99,27,3.61,28,1.625,29,3.248,30,3.725,31,3.365,32,0.238,33,1.041,34,0.18,35,0.411,36,0.92,37,1.454,38,1.284,39,0.198,41,3.045,42,0.14,45,0.006,49,0.5,50,0.402,51,0.097,52,0.386,53,3.312,54,1.901,55,2.571,56,1.76,57,0.074,58,0.634,59,1.901,60,3.504,61,1.064,62,2.468,63,3.862,64,1.954,65,3.851,66,3.404,67,4.729,68,4.106,69,3.504,70,2.21,71,2.652,72,3.753,73,2.86,74,4.115,75,3.504,76,1.487,77,1.705,78,1.954,79,0.937,80,1.954,81,1.901,82,2.01,83,1.679,84,2.289,85,2.289,86,3.99,87,3.99,88,2.995,89,3.851,90,2.289,91,1.302,92,1.302,93,1.176,94,2.289,95,3.248,96,2.289,97,2.289,98,2.138,99,1.641,100,1.082,101,2.21,102,2.86,103,3.365,104,3.226,105,3.045,106,2.138,107,1.012,108,2.21,109,2.138,110,2.072,111,4.106,112,1.1,113,2.289,114,2.072,115,2.21,116,2.955,117,1.265,118,2.289,119,2.289,120,4.398,121,2.21,122,2.289,123,3.142,124,2.289,125,3.248,126,0.666,127,2.289,128,2.21,129,2.289,130,2.21,131,2.289,132,2.652,133,3.248,134,1.641,135,2.289,136,2.138,137,0.002,138,0.003,139,0.002,1760,3.754]],["title/classes/CheckTokenResponse.html",[0,0.257,1049,3.666]],["body/classes/CheckTokenResponse.html",[0,0.374,2,0.367,3,0.018,4,0.018,5,0.022,7,1.047,9,1.322,12,3.277,13,2.114,17,1.783,23,2.878,24,1.195,27,1.441,28,2.033,32,0.201,34,0.125,35,0.311,36,1.05,37,0.842,39,0.314,41,4.025,42,0.222,44,0.199,45,0.006,46,0.185,47,0.557,51,0.127,52,0.269,53,2.641,54,1.322,55,1.64,57,0.057,58,0.441,64,2.172,66,1.608,71,2.006,78,3.101,79,1.128,80,4.464,81,4.707,82,3.906,83,2.665,98,3.393,99,3.416,104,2.572,107,1.406,110,3.288,117,1.592,126,0.463,137,0.002,138,0.003,139,0.002,148,1.667,163,0.728,178,2.39,182,1.958,183,2.295,186,2.008,188,1.358,196,1.791,203,3.668,206,3.086,231,1.092,236,1.699,238,1.092,251,0.778,287,2.246,298,1.592,309,0.82,316,0.47,317,0.752,318,0.948,319,1.537,320,0.74,321,0.792,333,1.441,335,4.887,336,0.82,378,2.084,393,2.88,459,1.846,501,1.537,600,1.537,601,1.723,683,1.266,691,1.069,707,1.287,708,1.359,709,1.592,728,1.537,834,4.891,835,2.143,836,2.329,837,6.198,838,2.329,839,2.329,842,2.97,847,3.931,848,2.329,849,2.004,850,4.112,851,2.004,852,2.329,853,6.947,854,2.143,855,1.441,856,1.398,857,2.329,858,2.143,859,3.724,860,2.329,861,1.537,862,2.329,863,2.329,864,4.652,865,2.329,866,2.329,867,2.329,868,2.329,869,2.329,870,2.329,871,2.329,872,2.329,873,2.329,874,2.329,875,2.329,876,2.329,877,2.329,878,2.329,879,2.329,880,6.198,881,5.812,882,3.724,883,5.812,884,2.329,885,2.329,886,2.329,887,3.724,888,2.329,889,3.724,890,5.812,891,3.724,892,2.329,893,6.198,894,2.329,895,2.143,896,3.783,897,2.329,898,3.427,899,2.143,900,1.322,901,2.329,902,2.329,903,4.112,904,2.329,905,3.724,906,2.329,907,4.652,908,2.329,909,6.221,910,4.652,911,4.652,912,4.652,913,4.652,914,4.652,915,4.281,916,2.329,917,2.329,918,2.329,919,2.329,920,3.724,921,2.143,922,2.97,923,3.724,924,3.724,925,3.724,926,2.329,927,2.329,928,2.329,929,4.652,930,3.18,931,3.724,932,2.644,933,2.329,934,3.724,935,2.329,936,3.427,937,3.724,938,3.724,939,2.329,940,2.329,941,3.724,942,3.724,943,2.329,944,2.329,945,2.329,946,2.329,947,2.329,948,2.329,949,2.329,950,2.329,951,2.329,952,2.329,953,2.329,954,2.329,955,2.329,956,2.329,957,2.329,958,2.329,959,2.329,960,2.329,961,2.329,962,2.329,963,2.329,964,2.329,965,2.143,966,2.329,967,3.427,968,5.812,969,2.329,970,3.724,971,2.714,972,4.891,973,4.281,974,2.329,975,2.143,976,2.329,977,2.329,978,2.457,979,2.329,980,3.724,981,2.329,982,3.724,983,2.329,984,2.329,985,2.329,986,2.329,987,2.329,988,2.329,989,2.329,990,2.329,991,2.88,992,2.329,993,2.329,994,2.329,995,2.329,996,2.329,997,2.329,998,2.329,999,2.329,1000,2.329,1001,2.329,1002,2.329,1003,2.329,1004,2.329,1005,2.329,1006,2.329,1007,2.329,1008,2.329,1009,4.652,1010,3.724,1011,2.329,1012,2.329,1013,3.724,1014,3.724,1015,2.329,1016,1.168,1017,2.329,1018,2.329,1019,2.329,1020,2.329,1021,2.143,1022,2.329,1023,2.329,1024,2.329,1025,2.004,1026,2.329,1027,2.329,1028,2.329,1029,2.329,1030,2.329,1031,2.329,1032,2.329,1033,3.724,1034,2.329,1035,2.329,1036,2.329,1037,2.329,1038,2.329,1039,2.329,1040,2.329,1041,2.329,1042,2.329,1043,2.329,1044,2.329,1045,2.143,1046,4.575,1047,3.724,1048,3.724,1049,3.205,1050,2.329,1051,2.329,1052,3.724,1053,3.724,1054,1.957,1055,2.329,1056,2.329,1057,2.143,1058,2.329,1761,2.611,1762,2.611,1763,2.611,1764,2.611,1765,2.611]],["title/classes/ClearCard.html",[0,0.257,1163,2.635]],["body/classes/ClearCard.html",[0,0.493,2,0.695,3,0.034,4,0.034,5,0.041,8,1.339,32,0.244,33,1.11,34,0.237,35,0.5,37,1.813,38,1.362,42,0.185,45,0.006,49,0.66,50,0.53,51,0.099,52,0.509,57,0.077,58,0.836,76,1.809,77,1.996,79,0.818,91,1.398,92,1.398,93,1.262,126,1.594,137,0.003,138,0.004,139,0.003,159,1.533,161,2.028,188,2.182,225,2.621,233,1.966,238,2.071,244,1.891,245,1.427,246,1.403,247,1.61,248,1.61,250,1.427,251,1.476,252,1.582,773,3.961,1163,4.502,1536,2.914,1537,3.961,1538,4.2,1539,4.2,1540,3.854,1541,4.2,1542,4.2,1766,2.914,1767,4.249,1768,4.951,1769,3.136,1770,3.136,1771,3.136,1772,3.136,1773,3.136,1774,3.136,1775,3.136,1776,3.019]],["title/classes/ClearLightCardSelection.html",[0,0.257,237,2.418]],["body/classes/ClearLightCardSelection.html",[0,0.501,2,0.635,3,0.031,4,0.031,5,0.037,8,1.351,12,1.708,32,0.245,33,1.124,34,0.217,35,0.47,37,1.724,38,1.374,39,0.435,42,0.235,45,0.006,49,0.603,50,0.484,51,0.093,52,0.465,57,0.078,58,0.763,76,1.219,77,1.898,79,0.551,91,1.422,92,1.422,93,1.284,126,1.556,134,1.977,137,0.003,138,0.004,139,0.003,159,1.128,212,3.675,213,3.887,214,2.422,218,2.575,219,2.165,220,1.612,221,1.525,222,2.07,223,3.778,224,5.135,225,2.341,226,3.675,227,2.23,228,3.579,229,3.281,230,2.496,231,1.892,232,3.778,233,1.848,234,3.675,235,1.643,236,1.18,237,3.976,238,1.892,239,2.638,240,2.174,241,2.354,242,3.675,243,2.422,244,1.803,245,1.303,246,1.282,247,1.471,248,1.471,249,3.675,250,1.303,251,1.348,252,1.445,253,2.575,254,2.575,255,2.575,256,2.07,257,2.575,258,2.575,259,2.575,260,2.23,261,3.59,262,2.575,263,2.575,264,2.575,265,2.07,266,2.422,1777,6.305]],["title/injectables/ConfigEffects.html",[644,3.92,683,1.448]],["body/injectables/ConfigEffects.html",[0,0.278,3,0.036,4,0.036,5,0.043,8,0.738,17,2.114,28,2.062,32,0.2,34,0.248,35,0.514,39,0.272,42,0.29,44,0.394,45,0.006,46,0.367,47,0.394,49,0.688,50,0.552,51,0.14,52,0.531,55,2.713,57,0.043,91,0.789,92,0.789,93,0.713,99,3.781,117,2.04,137,0.003,138,0.004,139,0.003,163,1.439,182,1.728,206,2.994,225,2.474,287,2.096,292,1.807,316,0.93,317,1.488,318,1.876,320,1.463,321,1.566,329,4.742,330,4.24,333,2.85,336,1.622,346,3.809,465,1.369,579,3.931,643,4.607,644,5.667,683,2.094,684,2.364,687,5.015,690,4.886,691,3.399,699,5.062,701,3.809,702,4.926,704,2.941,705,2.766,707,2.547,708,2.688,1016,2.31,1054,2.422,1122,4.555,1168,3.965,1169,3.408,1460,4.555,1525,5.007,1543,3.965,1544,3.965,1545,3.965,1709,5.3,1778,5.165,1779,7.776,1780,7.776,1781,6.021,1782,7.776,1783,5.165,1784,6.903,1785,6.903,1786,6.903,1787,6.903,1788,6.903,1789,5.165,1790,7.404,1791,6.158,1792,5.165,1793,7.94,1794,6.158,1795,4.607,1796,5.165,1797,4.607,1798,3.271,1799,3.271,1800,5.165,1801,4.607,1802,5.165,1803,5.165,1804,5.165,1805,6.903,1806,6.903,1807,6.903,1808,6.903,1809,5.165]],["title/injectables/ConfigService.html",[683,1.448,1781,3.464]],["body/injectables/ConfigService.html",[0,0.359,3,0.046,4,0.046,5,0.055,17,2.141,32,0.209,34,0.319,35,0.605,39,0.351,42,0.327,44,0.508,45,0.006,46,0.473,47,0.508,51,0.141,52,0.685,57,0.055,79,0.99,117,2.207,137,0.004,138,0.005,139,0.004,182,1.386,287,2.459,290,2.05,308,1.653,316,1.199,317,1.918,320,1.886,321,2.018,336,2.09,501,3.918,600,3.918,601,4.391,683,2.462,684,3.047,847,6.276,1664,5.11,1781,5.889,1810,6.656,1811,8.761,1812,9.122,1813,8.119,1814,6.656,1815,6.656,1816,6.656,1817,6.656]],["title/interfaces/ConfigState.html",[576,2.087,585,3.92]],["body/interfaces/ConfigState.html",[3,0.047,4,0.047,5,0.056,32,0.242,34,0.326,35,0.613,45,0.006,57,0.073,79,1.078,126,1.668,137,0.004,138,0.005,139,0.004,148,3.055,178,2.292,183,2.619,196,2.825,206,3.406,348,5.584,360,7.224,366,5.738,576,2.973,577,3.873,579,5.232,585,7.26,1016,3.042,1793,8.393,1801,6.068,1818,6.802,1819,6.802,1820,6.802]],["title/injectables/CustomRouterEffects.html",[631,2.811,683,1.448]],["body/injectables/CustomRouterEffects.html",[0,0.229,3,0.03,4,0.03,5,0.035,8,1.002,17,2.247,28,2.306,29,4.494,30,3.433,32,0.222,34,0.43,35,0.449,37,1.216,39,0.224,42,0.301,44,0.535,45,0.006,46,0.428,47,0.324,49,1.018,50,0.817,51,0.136,52,0.437,57,0.035,117,1.975,137,0.003,138,0.004,139,0.003,163,1.182,166,3.337,178,2.335,182,1.963,186,2.322,234,2.149,237,3.55,287,1.144,292,1.484,316,0.765,317,1.223,318,1.541,320,1.202,321,1.287,336,1.332,465,1.125,560,4.949,580,3.865,593,2.928,631,3.549,683,1.828,684,1.943,687,4.944,701,4.213,702,5.102,704,2.416,705,2.272,708,2.208,712,3.258,768,2.588,769,2.588,774,2.588,1086,7.23,1091,4.949,1159,3.676,1166,3.549,1172,3.258,1525,6.077,1537,2.208,1540,2.149,1620,5.378,1821,8.379,1822,4.244,1823,7.012,1824,7.012,1825,7.012,1826,4.835,1827,4.244,1828,6.029,1829,8.808,1830,7.012,1831,6.029,1832,6.029,1833,4.244,1834,8.379,1835,8.619,1836,6.029,1837,8.379,1838,8.379,1839,6.029,1840,8.808,1841,6.029,1842,4.244,1843,6.029,1844,6.029,1845,4.244,1846,6.029,1847,6.029,1848,6.029,1849,3.818,1850,6.029,1851,6.029,1852,4.244,1853,7.012,1854,6.029,1855,6.029,1856,3.818,1857,4.835,1858,3.327,1859,5.378,1860,3.869,1861,3.549,1862,3.818,1863,3.433,1864,4.244,1865,4.244,1866,3.484]],["title/classes/CustomRouterStateSerializer.html",[0,0.257,1867,3.666]],["body/classes/CustomRouterStateSerializer.html",[0,0.392,2,0.786,3,0.039,4,0.051,5,0.046,11,2.939,13,3.687,28,1.391,32,0.188,33,0.872,34,0.269,38,1.176,39,0.295,42,0.272,44,0.654,45,0.006,46,0.517,47,0.556,51,0.108,57,0.067,79,0.683,88,2.564,91,0.856,92,0.856,93,0.773,117,1.669,137,0.003,138,0.005,139,0.003,178,2.388,182,1.516,186,3.3,203,2.564,231,2.343,250,2.098,287,2.181,290,1.839,308,2.01,459,1.587,550,3.189,581,3.547,593,3.865,594,6.213,663,4.598,771,3.547,900,2.836,922,3.189,932,6.21,991,3.865,1016,2.505,1179,3.297,1861,4.287,1867,5.591,1868,4.996,1869,7.034,1870,7.283,1871,7.283,1872,6.496,1873,7.644,1874,5.601,1875,6.496,1876,7.292,1877,5.601,1878,6.496,1879,4.996,1880,7.644,1881,4.996,1882,4.598,1883,4.996,1884,6.643,1885,4.996,1886,4.996,1887,5.978,1888,4.996,1889,4.996,1890,4.996,1891,4.996,1892,4.996,1893,4.996,1894,4.996,1895,4.996,1896,4.996,1897,4.996,1898,4.996,1899,4.996,1900,4.996]],["title/classes/Detail.html",[0,0.257,160,2.418]],["body/classes/Detail.html",[0,0.413,2,0.853,3,0.042,4,0.042,5,0.05,11,2.208,32,0.157,38,1.465,39,0.443,42,0.227,44,0.464,45,0.006,46,0.432,47,0.464,51,0.114,57,0.069,58,1.026,79,1.218,91,1.173,92,1.173,93,1.059,137,0.004,138,0.005,139,0.004,146,4.258,159,0.945,160,4.258,162,2.997,179,3.354,188,1.977,206,3.402,220,2.166,221,2.049,231,2.543,271,3.85,289,6.408,397,4.194,1399,4.989,1401,4.01,1402,4.667,1403,4.667,1404,4.667,1405,4.667,1406,5.803,1407,4.989,1408,4.989,1409,4.667,1410,4.667,1411,4.409,1413,4.989,1414,7.636,1415,4.667,1416,4.01,1417,7.502,1418,6.904,1901,6.078,1902,6.078]],["title/components/DetailComponent.html",[267,0.932,430,1.581]],["body/components/DetailComponent.html",[0,0.184,3,0.024,4,0.024,5,0.028,8,1.149,11,1.238,28,1.708,32,0.218,33,0.615,34,0.163,35,0.383,36,0.74,38,0.898,39,0.18,42,0.339,44,0.471,45,0.006,46,0.551,47,0.471,49,0.685,50,0.549,51,0.132,52,0.351,57,0.028,61,0.966,79,0.753,100,0.982,105,2.834,112,0.999,117,1.844,137,0.002,138,0.003,139,0.002,151,2.149,152,2.585,159,1.287,160,4.193,161,1.396,166,3.006,178,2.308,182,0.71,186,1.313,188,1.109,189,1.561,196,1.764,198,1.505,199,1.558,239,1.426,250,0.982,267,1.343,268,1.171,269,1.701,270,1.215,272,1.865,273,1.238,275,2.333,276,1.15,277,3.386,281,1.865,287,2.486,290,1.297,291,2.597,308,1.926,309,2.527,316,0.614,317,0.982,320,0.966,321,1.034,326,2.249,336,1.07,373,1.978,402,1.034,403,1.865,404,2.451,405,1.089,406,2.498,407,1.238,408,1.238,409,1.171,410,1.641,411,1.865,412,1.171,413,1.865,414,1.15,415,1.238,416,1.171,417,1.865,418,2.498,419,1.171,420,2.498,421,1.171,422,1.238,423,1.129,424,1.865,425,1.171,426,1.193,427,1.215,428,1.109,429,1.865,430,2.277,431,1.238,432,1.171,433,1.171,434,1.238,435,1.15,436,1.238,437,1.171,438,1.171,439,1.238,440,1.15,441,1.238,442,1.171,443,1.238,444,1.193,445,1.171,446,1.171,447,1.238,448,1.171,449,1.215,450,2.244,451,1.238,452,1.171,453,1.238,454,1.15,455,1.171,456,1.193,457,1.171,458,1.171,459,1.455,460,1.171,461,1.238,462,1.171,463,1.171,464,1.171,465,0.904,466,1.15,467,1.15,468,1.238,469,1.15,470,1.238,471,1.15,472,1.215,473,1.238,495,2.618,496,2.473,678,3.768,731,3.795,1016,1.525,1251,2.618,1326,6.135,1401,2.249,1402,3.943,1427,3.132,1516,3.041,1518,3.041,1685,3.725,1748,4.989,1757,2.799,1758,3.041,1858,1.881,1903,3.409,1904,5.136,1905,6.179,1906,6.179,1907,6.178,1908,5.136,1909,5.136,1910,6.878,1911,6.878,1912,6.878,1913,6.179,1914,3.409,1915,5.512,1916,5.073,1917,5.512,1918,6.135,1919,5.136,1920,3.409,1921,3.409,1922,5.136,1923,6.179,1924,7.754,1925,3.409,1926,3.409,1927,3.409,1928,3.409,1929,3.409,1930,3.409,1931,3.409,1932,6.179,1933,3.409,1934,3.409,1935,3.943,1936,3.409,1937,3.409,1938,3.409,1939,3.409,1940,1.826,1941,3.041,1942,2.618,1943,3.041,1944,4.216,1945,3.409,1946,3.041,1947,3.409,1948,3.409,1949,3.409,1950,3.409,1951,3.409,1952,3.409,1953,3.409,1954,3.409,1955,3.409,1956,3.409,1957,3.409,1958,3.409,1959,3.409,1960,3.409,1961,3.409,1962,3.409,1963,3.409,1964,3.409,1965,4.582,1966,5.136,1967,3.409,1968,3.409,1969,3.409,1970,3.409,1971,3.409,1972,3.409,1973,3.409,1974,3.409,1975,3.409,1976,3.409,1977,3.409,1978,3.409,1979,3.409,1980,5.136,1981,3.409,1982,3.041,1983,3.409,1984,3.409,1985,3.409,1986,3.409,1987,3.409,1988,3.409,1989,3.409,1990,3.409,1991,3.409,1992,5.136,1993,3.409,1994,3.409,1995,5.136,1996,3.409,1997,5.136,1998,3.409,1999,3.409,2000,3.409,2001,3.409,2002,3.409,2003,3.409,2004,3.409,2005,3.409,2006,3.409,2007,2.799,2008,3.409,2009,3.409,2010,3.409,2011,3.409,2012,3.409]],["title/classes/DetailContext.html",[0,0.257,1942,3.666]],["body/classes/DetailContext.html",[0,0.392,2,1.023,3,0.051,4,0.051,5,0.06,32,0.188,38,1.058,39,0.384,42,0.272,44,0.556,45,0.006,46,0.517,47,0.556,51,0.127,57,0.06,137,0.005,138,0.005,139,0.005,159,1.461,161,2.982,1907,7.528,1942,6.579,1944,5.978,1946,6.496,2013,8.569,2014,6.496,2015,7.283,2016,7.283,2017,6.496,2018,7.283]],["title/components/DetailsComponent.html",[267,0.932,432,1.64]],["body/components/DetailsComponent.html",[0,0.224,3,0.029,4,0.041,5,0.049,32,0.221,33,0.712,34,0.2,35,0.443,36,0.712,39,0.366,42,0.333,44,0.454,45,0.006,46,0.568,47,0.454,51,0.103,57,0.034,61,1.179,66,1.603,79,0.725,100,1.199,107,1.122,112,1.22,137,0.003,138,0.004,139,0.003,147,2.37,151,2.488,152,2.488,159,1.362,160,3.011,161,1.705,182,0.867,196,1.429,198,1.22,199,1.803,236,1.086,267,1.355,268,1.429,269,1.969,270,1.484,271,1.906,272,1.512,273,1.512,276,1.403,277,3.434,279,2.932,281,2.16,287,2.244,290,1.501,308,1.88,309,2.614,316,0.75,363,2.538,372,1.636,373,1.603,374,1.636,375,1.636,376,1.636,377,1.636,378,1.456,379,1.307,380,1.636,381,1.636,382,1.636,383,1.541,384,1.636,385,1.603,386,1.636,387,1.636,388,1.636,389,1.636,394,2.746,402,1.262,403,2.16,404,2.119,405,1.33,406,2.749,407,1.512,408,1.512,409,1.429,410,1.9,411,2.16,412,1.429,413,2.16,414,1.403,415,1.512,416,1.429,417,2.16,418,2.749,419,1.429,420,2.749,421,1.429,422,1.512,423,1.378,424,2.16,425,1.429,426,1.456,427,1.484,428,1.354,429,2.16,430,2.651,431,1.512,432,2.599,433,1.429,434,1.512,435,1.403,436,1.512,437,1.429,438,1.429,439,1.512,440,1.403,441,1.512,442,1.429,443,1.512,444,1.456,445,1.429,446,1.429,447,1.512,448,1.429,449,1.484,450,2.52,451,1.512,452,1.429,453,1.512,454,1.403,455,1.429,456,1.456,457,1.429,458,1.429,459,1.685,460,1.429,461,1.512,462,1.429,463,1.429,464,1.429,465,1.104,466,1.403,467,1.403,468,1.512,469,1.403,470,1.512,471,1.403,472,1.484,473,1.512,678,2.538,701,2.297,759,3.196,760,4.566,761,3.196,762,3.196,763,3.417,971,2.166,1016,1.862,1166,2.45,1411,6.039,1422,6.189,1427,3.626,1428,6.189,1445,3.713,1451,5.305,1502,5.305,1982,3.713,2019,4.163,2020,6.189,2021,6.938,2022,6.938,2023,6.751,2024,5.947,2025,5.947,2026,7.569,2027,5.947,2028,4.163,2029,4.163,2030,5.947,2031,7.569,2032,4.163,2033,4.163,2034,5.947,2035,4.163,2036,4.163,2037,6.938,2038,5.947,2039,4.163,2040,4.163,2041,4.163,2042,4.163,2043,5.947,2044,4.163,2045,4.163,2046,4.163,2047,4.163,2048,5.947,2049,2.636,2050,5.947,2051,4.163,2052,4.163,2053,4.163,2054,4.163,2055,4.163,2056,5.947,2057,4.163,2058,4.163,2059,5.947]],["title/directives/DraggableDirective.html",[405,1.526,469,1.61]],["body/directives/DraggableDirective.html",[0,0.277,3,0.036,4,0.036,5,0.042,28,1.927,32,0.2,34,0.247,35,0.513,42,0.339,45,0.006,49,0.685,50,0.55,51,0.076,57,0.042,137,0.003,138,0.004,139,0.003,182,1.615,196,2.845,198,1.507,235,1.868,276,1.734,277,2.364,287,2.092,309,2.602,316,0.927,335,4.732,378,1.799,405,2.2,466,1.734,469,2.321,971,4.725,975,4.222,1094,6.826,1323,5.651,1336,4.222,1605,4.222,1685,7.095,1965,4.588,2049,3.257,2060,7.084,2061,8.23,2062,5.143,2063,6.884,2064,7.76,2065,6.141,2066,7.76,2067,7.76,2068,7.76,2069,6.884,2070,6.884,2071,6.884,2072,8.099,2073,5.143,2074,5.143,2075,5.143,2076,6.37,2077,5.143,2078,8.89,2079,5.143,2080,9.589,2081,4.993,2082,5.143,2083,5.143,2084,6.884,2085,5.143,2086,5.143,2087,4.993,2088,5.143,2089,7.392,2090,5.143,2091,5.143,2092,8.89,2093,5.143,2094,5.143,2095,5.143,2096,5.143,2097,5.143,2098,5.143,2099,5.143,2100,5.143,2101,5.143,2102,5.143,2103,4.588,2104,6.141,2105,5.143,2106,5.143,2107,5.143,2108,5.143,2109,5.143,2110,5.143]],["title/components/EmailSettingComponent.html",[267,0.932,433,1.64]],["body/components/EmailSettingComponent.html",[0,0.202,3,0.026,4,0.026,5,0.031,28,0.932,32,0.234,33,0.66,34,0.18,35,0.411,39,0.198,42,0.36,44,0.633,45,0.006,46,0.628,47,0.633,49,0.735,50,0.859,51,0.114,52,0.386,57,0.031,61,1.063,79,0.797,100,1.081,107,1.486,112,1.099,117,1.84,137,0.002,138,0.003,139,0.002,148,2.089,151,2.307,159,0.857,182,0.781,198,1.616,199,1.672,267,1.277,268,1.288,269,1.826,270,1.337,272,1.362,273,1.362,275,2.469,276,1.264,277,3.41,281,2.003,287,2.165,290,1.392,291,2.469,292,1.312,308,2.274,309,2.521,316,0.676,320,1.063,321,1.137,379,1.178,402,1.137,403,2.003,404,1.965,405,1.198,406,2.618,407,1.362,408,1.362,409,1.288,410,1.762,411,2.003,412,1.288,413,2.003,414,1.264,415,1.362,416,1.288,417,2.003,418,2.618,419,3.236,420,2.618,421,1.288,422,1.362,423,1.242,424,2.003,425,1.288,426,1.312,427,1.337,428,1.22,429,2.003,430,1.242,431,1.362,432,1.288,433,2.475,434,2.79,435,1.264,436,1.362,437,1.288,438,1.288,439,1.362,440,1.264,441,1.362,442,1.288,443,1.362,444,1.312,445,1.288,446,1.288,447,1.362,448,1.288,449,1.337,450,2.375,451,1.362,452,1.288,453,1.362,454,1.264,455,1.288,456,1.312,457,2.985,458,1.288,459,1.562,460,1.288,461,1.362,462,1.288,463,1.288,464,1.288,465,0.994,466,1.264,467,1.264,468,1.362,469,1.264,470,1.362,471,1.264,472,1.337,473,1.362,508,1.849,978,3.246,1197,3.723,1199,5.999,1200,3.14,1201,3.492,1202,3.042,1203,5.086,1204,4.565,1205,3.608,1206,4.141,1207,4.565,1209,3.492,1210,3.492,1215,2.375,1217,2.375,1220,3.042,1221,3.492,1222,4.104,1224,3.492,1228,3.492,1238,2.375,1277,2.879,1278,4.974,1279,4.233,1280,3.805,1281,3.805,1294,2.375,1560,3.492,2111,6.539,2112,5.833,2113,7.405,2114,4.918,2115,3.751,2116,6.621,2117,3.751,2118,2.72,2119,2.72,2120,2.72,2121,3.346,2122,3.751,2123,3.751,2124,3.751,2125,3.751,2126,2.72,2127,2.72,2128,2.72,2129,2.72,2130,2.72,2131,2.72,2132,2.72,2133,2.72,2134,2.72,2135,2.72,2136,2.72,2137,2.72,2138,2.72,2139,3.079,2140,2.72,2141,4.743,2142,2.588,2143,3.751,2144,3.751,2145,4.233,2146,4.233,2147,4.233]],["title/classes/EmptyLightCards.html",[0,0.257,226,2.418]],["body/classes/EmptyLightCards.html",[0,0.502,2,0.639,3,0.032,4,0.032,5,0.038,8,1.353,12,1.718,32,0.245,33,1.125,34,0.218,35,0.472,37,1.728,38,1.376,39,0.384,42,0.17,45,0.006,49,0.606,50,0.487,51,0.094,52,0.468,57,0.078,58,0.768,76,1.227,77,1.902,79,0.555,91,1.424,92,1.424,93,1.286,126,1.558,134,1.989,137,0.003,138,0.004,139,0.003,159,1.132,212,3.687,213,3.391,214,2.437,218,2.591,219,2.174,220,1.622,221,1.534,222,2.083,223,3.79,224,5.141,225,2.347,226,3.986,227,2.244,228,3.591,229,3.295,230,2.511,231,1.904,232,3.79,233,1.856,234,3.687,235,1.653,236,1.187,237,3.687,238,1.904,239,2.649,240,2.187,241,2.368,242,3.687,243,2.437,244,1.809,245,1.311,246,1.289,247,1.48,248,1.48,249,3.687,250,1.311,251,1.357,252,1.454,253,2.591,254,3.606,255,2.591,256,2.083,257,2.591,258,2.591,259,2.591,260,2.244,261,2.591,262,2.591,263,2.591,264,2.591,265,2.083,266,2.437,2148,4.551]],["title/classes/FailToUpdateTimeReference.html",[0,0.257,2149,3.024]],["body/classes/FailToUpdateTimeReference.html",[0,0.46,2,0.778,3,0.039,4,0.039,5,0.046,7,2.223,8,1.297,10,3.368,16,2.479,32,0.244,33,1.022,34,0.266,35,0.539,36,0.964,37,1.785,38,1.286,39,0.292,40,1.57,42,0.3,44,0.423,45,0.006,46,0.394,47,0.423,49,0.739,50,0.593,51,0.126,52,0.57,55,2.842,56,2.599,57,0.075,58,0.936,71,2.664,77,1.894,83,2.479,88,3.311,116,3.873,126,1.427,137,0.003,138,0.005,139,0.003,206,2.134,215,2.281,233,1.624,269,1.835,298,4.411,306,5.246,459,2.572,675,3.058,900,2.806,1054,3.392,1076,4.02,1145,4.581,1202,3.058,2149,5.099,2150,3.825,2151,4.991,2152,4.772,2153,5.553,2154,6.552,2155,5.553,2156,5.553,2157,7.233,2158,5.543,2159,5.553,2160,3.51,2161,3.825,2162,3.51,2163,3.825,2164,4.255,2165,4.859,2166,4.255,2167,4.991,2168,4.255,2169,5.84,2170,5.84,2171,4.255,2172,3.825,2173,5.553,2174,4.02,2175,3.825,2176,4.255,2177,4.255,2178,4.02,2179,4.255,2180,3.657,2181,4.02,2182,4.581,2183,4.255,2184,4.255,2185,4.02]],["title/components/FeedComponent.html",[267,0.932,435,1.61]],["body/components/FeedComponent.html",[0,0.25,3,0.032,4,0.045,5,0.053,17,2.037,32,0.222,33,0.769,34,0.223,35,0.478,36,0.556,39,0.245,42,0.322,44,0.354,45,0.006,46,0.564,47,0.354,51,0.133,52,0.477,57,0.038,61,1.315,100,1.337,107,1.251,112,1.36,117,1.976,137,0.003,138,0.004,139,0.003,148,2.051,159,0.998,198,1.36,199,1.947,219,1.594,220,1.654,221,1.565,235,1.686,236,1.211,240,3.537,256,3.369,265,2.939,267,1.437,268,1.594,269,2.126,270,1.654,271,2.125,272,1.686,273,1.686,275,2.779,276,1.565,277,3.457,279,3.166,281,2.332,290,1.621,291,2.998,292,1.624,308,1.595,309,2.016,316,0.836,317,1.337,318,1.686,320,1.315,321,1.408,333,2.561,336,1.457,372,1.824,373,1.787,374,1.824,375,1.824,376,1.824,377,1.824,378,1.624,379,1.457,380,1.824,381,1.824,382,1.824,383,2.377,384,1.824,385,1.787,386,1.824,387,1.824,388,1.824,389,1.824,402,1.408,403,2.332,404,2.288,405,1.483,406,2.884,407,1.686,408,1.686,409,1.594,410,2.051,411,2.332,412,1.594,413,2.332,414,1.565,415,1.686,416,1.594,417,2.332,418,2.884,419,1.594,420,2.884,421,1.594,422,1.686,423,1.537,424,2.332,425,1.594,426,1.624,427,1.654,428,1.51,429,2.332,430,1.537,431,1.686,432,1.594,433,1.594,434,1.686,435,2.677,436,1.686,437,1.594,438,1.594,439,1.686,440,1.565,441,1.686,442,1.594,443,1.686,444,1.624,445,1.594,446,1.594,447,1.686,448,1.594,449,1.654,450,2.673,451,1.686,452,1.594,453,1.686,454,1.565,455,1.594,456,1.624,457,1.594,458,1.594,459,1.819,460,1.594,461,1.686,462,1.594,463,1.594,464,1.594,465,1.231,466,1.565,467,1.565,468,1.686,469,1.565,470,1.686,471,1.565,472,1.654,473,1.686,707,2.289,728,2.732,795,3.81,796,3.062,799,3.81,800,3.81,802,3.203,803,4.14,2020,6.565,2023,7.083,2186,4.642,2187,7.36,2188,6.42,2189,7.36,2190,6.42,2191,4.642,2192,4.642,2193,4.642,2194,4.642,2195,4.642,2196,4.642,2197,4.642,2198,4.642]],["title/injectables/FeedFiltersEffects.html",[640,3.92,683,1.448]],["body/injectables/FeedFiltersEffects.html",[0,0.19,3,0.024,4,0.024,5,0.029,8,1.162,9,1.784,12,1.987,17,1.988,28,1.737,32,0.202,34,0.169,35,0.392,39,0.186,42,0.303,44,0.269,45,0.006,46,0.447,47,0.269,49,1.115,50,0.84,51,0.134,52,0.362,57,0.029,59,1.784,62,2.354,66,2.027,91,0.538,92,0.538,93,0.486,99,2.755,117,1.799,137,0.002,138,0.003,139,0.002,159,0.818,163,1.756,178,2.187,182,1.901,183,3.352,196,1.807,206,2.027,208,2.904,227,2.595,267,0.688,287,2.382,292,1.232,304,3.142,316,0.635,317,1.015,318,1.279,319,2.074,320,0.998,321,1.068,333,1.944,336,1.106,383,3.314,397,2.431,459,2.224,465,1.984,579,2.997,640,4.321,665,3.588,672,2.074,673,2.148,678,4.263,679,2.431,683,1.596,684,1.613,687,4.489,690,4.621,691,3.215,701,3.477,702,4.762,704,2.006,705,1.886,728,2.074,761,2.705,796,2.324,971,3.279,1016,3.126,1088,4.695,1094,4.041,1131,4.321,1168,2.705,1300,2.892,1625,4.695,1626,4.695,1627,4.041,1644,4.321,1649,2.555,1935,5.368,2049,2.231,2081,6.491,2087,6.066,2151,3.632,2163,2.431,2165,3.588,2174,4.571,2181,5.071,2199,8.364,2200,3.523,2201,6.302,2202,5.173,2203,6.302,2204,6.302,2205,6.302,2206,6.991,2207,5.071,2208,5.264,2209,3.523,2210,3.523,2211,8.706,2212,5.264,2213,5.264,2214,5.264,2215,5.264,2216,5.264,2217,5.264,2218,5.264,2219,6.991,2220,5.264,2221,6.991,2222,5.264,2223,5.264,2224,4.321,2225,5.264,2226,5.264,2227,3.523,2228,5.264,2229,5.264,2230,3.523,2231,5.264,2232,5.264,2233,6.302,2234,5.264,2235,8.364,2236,5.264,2237,5.264,2238,6.991,2239,7.85,2240,5.264,2241,5.264,2242,5.264,2243,5.264,2244,5.264,2245,5.264,2246,6.991,2247,5.264,2248,7.85,2249,7.85,2250,5.264,2251,5.264,2252,5.264,2253,3.523,2254,1.944,2255,2.074,2256,3.142,2257,2.705,2258,3.523,2259,3.523,2260,3.142,2261,3.523,2262,3.523,2263,3.523,2264,3.523,2265,3.523,2266,3.523]],["title/modules/FeedModule.html",[474,1.956,2267,3.666]],["body/modules/FeedModule.html",[0,0.245,3,0.032,4,0.044,5,0.052,32,0.117,36,0.545,45,0.006,51,0.147,57,0.038,73,1.992,107,1.228,137,0.003,138,0.004,139,0.003,236,1.188,316,0.821,372,1.79,373,1.755,374,1.79,375,1.79,376,1.79,377,1.79,378,1.594,379,1.43,380,1.79,381,1.79,382,1.79,383,1.687,384,1.79,385,1.755,386,1.79,387,1.79,388,1.79,389,1.79,402,1.382,425,2.943,426,2.998,428,2.061,435,3.169,437,2.943,444,2.998,452,2.943,455,2.943,458,2.943,460,2.943,463,1.564,464,2.943,469,2.89,471,2.89,474,1.866,476,2.19,477,2.514,478,4.29,479,3.609,480,3.731,481,3.69,489,5.656,490,3.609,491,2.682,493,3.298,497,3.298,502,3.865,505,2.594,506,4.866,507,4.866,508,2.247,510,4.064,511,3.498,512,3.74,514,3.144,519,4.597,520,3.394,521,2.44,524,5.653,525,3.74,526,3.74,527,4.064,528,3.74,529,4.866,530,3.74,533,3.74,534,3.74,535,3.74,543,3.498,544,3.498,554,2.514,810,5.915,814,4.064,815,4.064,818,5.982,1432,4.444,1448,2.885,1589,4.064,1754,7.386,1759,4.064,2061,4.064,2165,2.594,2267,7.722,2268,4.064,2269,4.064,2270,4.064,2271,4.064,2272,6.581,2273,6.218,2274,4.556,2275,4.064,2276,4.556,2277,4.064,2278,4.556,2279,7.878,2280,4.064,2281,4.556,2282,4.556,2283,4.064,2284,4.064,2285,4.064,2286,4.064,2287,4.556,2288,6.338,2289,6.338,2290,4.064,2291,4.064,2292,4.556,2293,4.556,2294,6.338,2295,4.064,2296,4.064,2297,4.556,2298,4.064,2299,4.556,2300,4.556,2301,4.556,2302,4.556,2303,4.064,2304,4.064,2305,5.653,2306,4.556,2307,4.556]],["title/modules/FeedRoutingModule.html",[474,1.956,2273,3.464]],["body/modules/FeedRoutingModule.html",[0,0.335,3,0.043,4,0.054,5,0.064,36,0.743,45,0.006,51,0.138,57,0.051,107,1.674,137,0.004,138,0.005,139,0.004,178,1.731,236,1.62,265,3.561,267,1.738,316,1.119,372,2.44,373,2.392,374,2.44,375,2.44,376,2.44,377,2.44,378,2.172,379,1.95,380,2.44,381,2.44,382,2.44,383,2.299,384,2.44,385,2.392,386,2.44,387,2.44,388,2.44,389,2.44,423,2.812,430,2.576,435,2.623,476,2.985,481,3.144,493,3.232,497,4.048,546,4.505,548,5.642,549,5.379,550,3.536,551,5.972,552,5.098,553,6.784,557,4.768,564,5.098,824,5.54,825,4.768,826,5.098,827,5.54,828,7.576,829,5.54,830,5.54,831,5.54,832,5.54,833,4.768,2273,5.642,2275,5.54,2308,6.21]],["title/classes/Filter.html",[0,0.257,465,1.266]],["body/classes/Filter.html",[0,0.234,2,0.611,3,0.03,4,0.03,5,0.036,7,1.746,11,2.805,24,3.255,28,1.081,30,4.397,32,0.218,34,0.209,35,0.457,36,1.011,38,0.632,39,0.407,42,0.324,44,0.589,45,0.006,46,0.548,47,0.589,51,0.064,57,0.036,62,4.204,73,2.683,88,2.81,91,0.665,92,0.665,93,1.261,117,1.407,137,0.003,138,0.004,139,0.003,148,2.602,159,1.512,182,1.759,196,2.442,203,3.255,219,3.095,220,1.551,221,1.468,267,1.199,290,1.55,302,5.039,308,2.099,309,1.367,335,4.965,385,2.364,465,2.637,554,3.387,665,3.495,678,4.709,716,5.095,903,4.236,936,5.039,971,3.7,1016,2.745,1135,5.328,1462,5.039,1794,5.476,1882,5.039,2076,5.039,2224,5.039,2260,5.476,2309,8.866,2310,4.353,2311,6.139,2312,6.139,2313,6.139,2314,6.139,2315,8.866,2316,5.476,2317,6.139,2318,6.139,2319,6.139,2320,6.139,2321,6.139,2322,6.139,2323,6.139,2324,6.139,2325,6.139,2326,7.722,2327,7.111,2328,4.353,2329,4.353,2330,4.353,2331,4.353,2332,4.353,2333,6.139,2334,4.353,2335,6.139,2336,7.722,2337,4.353,2338,7.722,2339,6.139,2340,6.139,2341,6.139,2342,4.353,2343,6.139,2344,6.139,2345,4.353,2346,4.353,2347,4.353,2348,4.353,2349,4.353,2350,4.353,2351,4.353,2352,4.353,2353,4.353,2354,4.353,2355,4.353,2356,4.353,2357,6.139,2358,4.353]],["title/injectables/FilterService.html",[683,1.448,2207,3.464]],["body/injectables/FilterService.html",[0,0.271,3,0.035,4,0.035,5,0.041,8,1.096,28,2.243,34,0.241,35,0.505,36,0.919,39,0.404,42,0.342,45,0.006,49,0.671,50,0.538,51,0.122,57,0.056,58,0.849,62,3.673,137,0.005,138,0.004,139,0.003,159,1.193,163,2.462,178,2.462,182,1.911,196,2.635,219,1.728,220,1.793,221,1.696,278,4.13,287,2.639,290,1.713,308,2.194,316,0.907,456,1.76,465,2.274,670,3.32,671,3.32,672,2.962,679,5.295,683,2.057,684,2.303,716,4.476,855,2.776,856,2.695,971,4.462,1016,2.25,1406,3.472,2207,4.92,2359,4.488,2360,7.674,2361,8.213,2362,8.213,2363,8.213,2364,8.213,2365,8.213,2366,6.784,2367,5.032,2368,5.032,2369,5.032,2370,5.032,2371,5.032,2372,5.032,2373,4.488,2374,6.784,2375,5.032,2376,5.892,2377,4.488,2378,4.488,2379,5.892,2380,4.488,2381,5.892,2382,4.488,2383,5.032,2384,8.213,2385,5.032,2386,5.032,2387,5.032,2388,5.032,2389,5.032,2390,5.032,2391,5.032,2392,5.032,2393,5.032,2394,5.032,2395,5.032,2396,5.032,2397,5.032,2398,5.032,2399,5.032,2400,5.032,2401,5.032,2402,4.488,2403,4.488,2404,4.488,2405,4.488,2406,4.488]],["title/components/FiltersComponent.html",[267,0.932,437,1.64]],["body/components/FiltersComponent.html",[0,0.295,3,0.038,4,0.038,5,0.045,32,0.185,33,0.86,34,0.263,39,0.422,42,0.268,45,0.006,46,0.569,51,0.081,57,0.045,61,1.554,100,1.581,112,1.608,137,0.003,138,0.004,139,0.003,159,1.117,198,1.608,199,2.179,267,1.564,268,1.884,269,2.379,270,1.955,272,1.992,273,1.992,275,3.024,276,1.849,277,3.489,281,2.609,290,1.814,291,3.209,308,1.363,309,1.722,316,0.988,402,1.663,403,2.609,404,2.56,405,1.753,406,3.087,407,1.992,408,1.992,409,1.884,410,2.295,411,2.609,412,1.884,413,2.609,414,1.849,415,1.992,416,1.884,417,2.609,418,3.087,419,1.884,420,3.087,421,1.884,422,1.992,423,1.816,424,2.609,425,1.884,426,1.919,427,1.955,428,1.784,429,2.609,430,1.816,431,1.992,432,1.884,433,1.884,434,1.992,435,1.849,436,1.992,437,2.919,438,1.884,439,1.992,440,1.849,441,1.992,442,1.884,443,1.992,444,1.919,445,1.884,446,1.884,447,1.992,448,1.884,449,1.955,450,2.91,451,1.992,452,1.884,453,1.992,454,1.849,455,1.884,456,1.919,457,1.884,458,1.884,459,2.036,460,1.884,461,1.992,462,1.884,463,1.884,464,1.884,465,1.454,466,1.849,467,1.849,468,1.992,469,1.849,470,1.992,471,1.849,472,1.955,473,1.992,716,4.74,718,6.408,1588,5.811,2407,5.485,2408,5.485,2409,5.485]],["title/classes/GuidService.html",[0,0.257,850,3.295]],["body/classes/GuidService.html",[0,0.365,2,0.952,3,0.047,4,0.047,5,0.056,32,0.175,34,0.325,35,0.612,38,1.283,39,0.465,42,0.342,45,0.006,51,0.122,53,4.973,54,3.431,57,0.056,79,0.826,137,0.004,138,0.005,139,0.004,182,1.709,278,5.563,287,2.38,290,2.072,308,2.039,316,1.221,850,5.664,1795,7.322,2373,6.045,2410,6.777,2411,9.178,2412,8.83,2413,8.209,2414,6.777,2415,6.777,2416,8.209,2417,6.777,2418,6.777,2419,6.777]],["title/classes/HandleUnexpectedError.html",[0,0.257,244,1.186]],["body/classes/HandleUnexpectedError.html",[0,0.473,2,0.761,3,0.038,4,0.038,5,0.045,8,1.314,10,2.268,32,0.25,33,1.08,34,0.26,35,0.531,36,0.853,37,1.772,38,1.336,39,0.286,40,1.536,42,0.297,44,0.414,45,0.006,46,0.385,47,0.414,49,0.723,50,0.58,51,0.118,52,0.558,57,0.076,58,0.915,77,1.951,79,0.869,91,1.406,92,1.406,93,1.269,126,1.412,137,0.003,138,0.004,139,0.003,159,1.108,163,1.511,215,2.257,219,2.448,220,1.932,221,1.828,222,2.482,235,1.969,236,1.414,239,2.268,244,2.102,245,1.562,246,1.536,247,1.763,248,1.763,260,2.673,307,3.433,410,2.809,465,1.437,694,4.689,710,3.577,711,4.857,764,3.577,767,3.932,768,3.306,769,3.306,770,4.857,771,4.515,772,3.577,773,3.71,774,4.857,775,3.932,776,3.932,777,3.741,778,3.932,779,3.932,780,5.171,781,3.932,782,3.932,783,3.741,2420,7.129,2421,5.421]],["title/classes/HandleUnexpectedError-1.html",[0,0.214,244,0.987,345,2.263]],["body/classes/HandleUnexpectedError-1.html",[0,0.489,2,0.674,3,0.033,4,0.033,5,0.04,8,1.331,32,0.25,33,1.103,34,0.23,35,0.489,36,0.786,37,1.879,38,1.354,39,0.253,40,1.359,42,0.279,44,0.366,45,0.006,46,0.341,47,0.366,49,0.639,50,0.513,51,0.097,52,0.494,57,0.077,58,0.81,76,1.77,77,1.979,79,0.801,91,1.388,92,1.388,93,1.253,126,1.581,137,0.003,138,0.004,139,0.003,159,1.528,161,1.965,188,2.136,215,2.122,225,2.596,233,1.925,238,2.007,244,2,245,1.382,246,1.359,247,1.56,248,1.56,250,1.382,251,1.43,252,1.533,773,3.897,1163,4.132,1536,2.824,1537,3.897,1538,4.132,1539,4.132,1540,3.791,1541,4.132,1542,4.132,1766,2.824,1767,3.038,1769,3.038,1770,3.038,1771,3.038,1772,3.038,1773,3.038,1774,3.038,1775,4.159,1776,2.926,2422,6.568,2423,4.798]],["title/classes/HandleUnexpectedError-2.html",[0,0.214,244,0.987,572,2.742]],["body/classes/HandleUnexpectedError-2.html",[0,0.465,2,0.803,3,0.04,4,0.04,5,0.047,8,1.308,32,0.251,33,1.07,34,0.274,35,0.55,36,0.884,37,1.846,38,1.33,39,0.301,40,1.621,42,0.305,44,0.437,45,0.006,46,0.406,47,0.437,49,0.763,50,0.612,51,0.085,52,0.589,57,0.075,58,0.966,76,1.542,77,1.814,91,1.32,92,1.32,93,1.192,126,1.585,137,0.004,138,0.005,139,0.004,215,2.317,225,2.437,233,1.677,244,2.146,245,1.649,246,1.621,247,1.861,248,1.861,250,1.649,251,1.706,252,1.828,329,4.985,579,5.375,1169,3.775,1460,3.775,1798,5.178,1799,5.178,2424,3.948,2425,7.384,2426,5.722,2427,5.669,2428,4.393,2429,4.393,2430,4.393,2431,4.15]],["title/classes/HandleUnexpectedError-3.html",[0,0.214,244,0.987,2432,3.051]],["body/classes/HandleUnexpectedError-3.html",[0,0.499,2,0.619,3,0.031,4,0.031,5,0.036,8,1.346,12,1.665,32,0.25,33,1.119,34,0.211,35,0.462,36,0.742,37,1.823,38,1.369,39,0.409,40,1.25,42,0.267,44,0.336,45,0.006,46,0.313,47,0.336,49,0.588,50,0.472,51,0.092,52,0.454,57,0.078,58,0.744,76,1.189,77,1.883,79,0.538,91,1.416,92,1.416,93,1.278,126,1.545,134,1.928,137,0.003,138,0.004,139,0.003,159,1.113,212,3.626,213,4.159,214,2.362,215,2.029,218,2.511,219,2.127,220,1.572,221,1.487,222,2.019,223,3.727,224,5.11,225,2.315,226,3.626,227,2.174,228,3.531,229,3.224,230,2.433,231,1.845,232,3.727,233,1.815,234,3.626,235,1.602,236,1.15,237,3.626,238,1.845,239,2.591,240,2.12,241,2.295,242,3.626,243,2.362,244,1.929,245,1.271,246,1.25,247,1.434,248,1.434,249,3.626,250,1.271,251,1.315,252,1.409,253,2.511,254,2.511,255,2.511,256,2.019,257,2.511,258,2.511,259,2.511,260,2.174,261,2.511,262,2.511,263,3.527,264,2.511,265,2.019,266,2.362,2433,6.195,2434,4.41]],["title/classes/HandleUnexpectedError-4.html",[0,0.214,244,0.987,2435,3.262]],["body/classes/HandleUnexpectedError-4.html",[0,0.473,2,0.634,3,0.031,4,0.031,5,0.037,8,1.341,14,2.171,16,2.02,17,1.104,32,0.247,33,1.071,34,0.217,35,0.469,36,0.754,37,1.893,38,1.321,39,0.332,40,1.28,42,0.271,44,0.599,45,0.006,46,0.321,47,0.345,49,0.602,50,0.483,51,0.093,52,0.465,57,0.075,58,0.763,76,1.698,77,1.897,79,0.957,91,1.341,92,1.341,93,1.211,126,1.586,132,2.171,137,0.003,138,0.004,139,0.003,166,1.975,186,2.426,187,2.754,188,2.049,189,2.068,215,2.055,225,2.162,233,1.324,235,2.635,244,1.95,245,1.302,246,1.28,250,1.302,251,1.347,252,1.443,580,4.961,631,2.659,900,3.673,922,3.587,930,2.755,1159,2.755,1166,2.659,1826,2.861,1849,4.594,1856,4.594,1857,2.861,1858,4.555,1860,4.003,1861,2.659,1862,2.861,1863,4.131,1940,2.419,2436,2.755,2437,6.3,2438,4.517,2439,4.157,2440,2.755,2441,4.003,2442,4.131,2443,4.131,2444,4.131,2445,4.131,2446,2.861,2447,2.98,2448,2.98,2449,2.98,2450,2.98,2451,2.98,2452,2.861,2453,2.861,2454,4.786,2455,4.786,2456,4.157,2457,2.98,2458,2.98,2459,2.98,2460,2.98,2461,2.861]],["title/classes/HandleUnexpectedError-5.html",[0,0.214,244,0.987,348,3.262]],["body/classes/HandleUnexpectedError-5.html",[0,0.487,2,0.71,3,0.035,4,0.035,5,0.042,8,1.33,32,0.25,33,1.1,34,0.243,35,0.507,36,0.815,37,1.878,38,1.353,39,0.267,40,1.433,42,0.287,44,0.386,45,0.006,46,0.359,47,0.386,49,0.674,50,0.541,51,0.075,52,0.52,57,0.077,58,0.854,66,1.948,76,1.835,77,1.964,91,1.352,92,1.352,93,1.221,126,1.603,137,0.003,138,0.004,139,0.003,215,2.18,225,2.294,233,1.995,244,2.045,245,1.458,246,1.433,247,1.645,248,1.645,250,1.458,251,1.508,252,1.617,562,4.577,1299,4.246,2254,4.246,2255,2.978,2462,3.085,2463,6.808,2464,5.059,2465,4.492,2466,4.382,2467,4.382,2468,4.874,2469,4.382,2470,4.382,2471,3.338,2472,3.338,2473,3.338,2474,3.338,2475,3.204,2476,3.338,2477,3.338,2478,3.204]],["title/injectables/HandlebarsService.html",[683,1.448,1748,3.464]],["body/injectables/HandlebarsService.html",[0,0.174,3,0.022,4,0.022,5,0.027,17,1.459,24,3.961,28,1.483,32,0.172,34,0.378,35,0.367,36,0.715,39,0.17,42,0.345,44,0.456,45,0.006,46,0.539,47,0.456,49,0.656,50,0.812,51,0.13,53,2.492,54,1.632,57,0.027,79,1.055,137,0.005,138,0.003,139,0.002,159,0.501,161,1.32,163,2.006,165,1.778,168,1.965,178,2.006,182,2.007,189,2.253,206,1.895,270,1.149,287,2.681,290,1.243,308,2.269,309,2.819,316,0.581,317,0.929,318,1.171,336,1.012,345,2.802,459,0.913,520,1.726,521,1.726,683,1.493,684,1.475,709,1.965,731,3.687,971,1.677,1016,3.393,1054,2.308,1176,1.897,1177,2.041,1179,5.229,1182,5.221,1401,2.126,1418,2.646,1430,4.12,1431,4.409,1432,3.641,1448,2.041,1748,3.57,1757,2.646,1915,5.326,1916,2.646,1942,4.584,1943,2.875,1944,2.646,2432,3.779,2435,2.646,2479,3.223,2480,4.922,2481,4.922,2482,4.922,2483,6.683,2484,6.683,2485,6.683,2486,6.683,2487,6.683,2488,5.971,2489,6.683,2490,6.683,2491,6.683,2492,6.683,2493,6.683,2494,6.683,2495,6.683,2496,5.971,2497,3.223,2498,4.922,2499,4.922,2500,5.971,2501,3.223,2502,3.223,2503,3.223,2504,3.223,2505,3.223,2506,3.223,2507,3.223,2508,3.223,2509,3.223,2510,3.223,2511,3.223,2512,3.223,2513,3.223,2514,3.223,2515,3.223,2516,3.223,2517,3.223,2518,3.223,2519,3.223,2520,3.223,2521,3.223,2522,3.223,2523,3.223,2524,3.223,2525,3.223,2526,3.223,2527,3.223,2528,3.223,2529,3.223,2530,3.223,2531,3.223,2532,3.223,2533,3.223,2534,3.223,2535,3.223,2536,3.223,2537,3.223,2538,3.223,2539,3.223,2540,2.338,2541,2.875,2542,3.223,2543,3.223,2544,3.223,2545,3.223,2546,3.223,2547,3.223,2548,3.223,2549,3.223,2550,8.341,2551,5.971,2552,8.341,2553,8.341,2554,3.223,2555,3.223,2556,3.223,2557,7.198,2558,4.922,2559,3.223,2560,3.223,2561,3.223,2562,3.223,2563,7.588,2564,3.223,2565,7.198,2566,3.223,2567,3.223,2568,3.223,2569,3.223,2570,4.922,2571,3.223,2572,3.223,2573,3.223,2574,3.223,2575,3.223,2576,3.223,2577,2.875,2578,3.223,2579,3.223,2580,3.223,2581,3.223,2582,3.223,2583,3.223,2584,3.223,2585,3.223,2586,3.223,2587,3.223,2588,3.223,2589,3.223,2590,3.223,2591,3.223,2592,3.223,2593,3.223,2594,3.223,2595,4.922,2596,5.971,2597,3.57,2598,5.971,2599,3.223]],["title/classes/I18n.html",[0,0.257,146,2.186]],["body/classes/I18n.html",[0,0.388,2,1.013,3,0.05,4,0.05,5,0.059,32,0.186,38,1.238,39,0.449,42,0.269,44,0.715,45,0.006,46,0.512,47,0.55,51,0.107,57,0.059,79,1.105,91,1.102,92,1.102,93,0.995,137,0.004,138,0.005,139,0.004,146,3.9,163,2.611,165,3.979,842,4.106,1176,5.015,2600,7.212,2601,7.212,2602,7.212]],["title/injectables/I18nService.html",[293,3.464,683,1.448]],["body/injectables/I18nService.html",[0,0.316,3,0.041,4,0.041,5,0.048,32,0.225,34,0.281,35,0.559,36,1.079,39,0.309,42,0.344,44,0.572,45,0.006,46,0.533,47,0.572,51,0.139,52,0.604,57,0.048,79,1.142,117,2.147,137,0.004,138,0.005,139,0.004,182,1.562,287,2.485,290,1.894,293,5.443,308,1.457,309,1.842,316,1.057,317,1.691,320,1.662,321,1.779,336,1.842,520,3.142,521,3.142,683,2.275,684,2.686,1054,3.518,1427,4.576,1430,5.178,1431,5.458,2162,6.117,2540,6.537,2541,5.233,2603,5.867,2604,7.504,2605,7.504,2606,7.504,2607,5.867,2608,7.504,2609,5.867,2610,5.867,2611,5.867,2612,5.867,2613,5.867,2614,5.867,2615,5.867,2616,5.233,2617,5.233,2618,6.693,2619,5.867,2620,5.867,2621,5.867,2622,5.233,2623,5.233,2624,5.867,2625,5.867,2626,5.867,2627,5.867,2628,8.273,2629,5.867,2630,5.867,2631,5.867,2632,7.504,2633,5.867,2634,5.867]],["title/components/IconComponent.html",[267,0.932,438,1.64]],["body/components/IconComponent.html",[0,0.228,3,0.029,4,0.042,5,0.05,32,0.239,33,0.72,34,0.203,35,0.448,36,0.506,39,0.223,42,0.343,44,0.323,45,0.006,46,0.541,47,0.323,49,0.564,51,0.104,57,0.035,61,1.198,79,0.929,100,1.219,107,1.14,112,1.239,137,0.003,138,0.004,139,0.003,148,2.573,151,2.516,152,3.602,159,0.935,198,1.239,199,1.824,236,1.103,239,3.189,267,1.367,268,1.452,269,1.991,270,1.507,271,1.936,272,1.536,273,1.536,275,2.642,276,1.426,277,3.438,279,2.965,281,1.536,290,1.518,291,2.878,308,1.05,309,1.328,316,0.762,372,1.662,373,1.629,374,1.662,375,1.662,376,1.662,377,1.662,378,1.479,379,1.328,380,1.662,381,1.662,382,1.662,383,1.566,384,1.662,385,1.629,386,1.662,387,1.662,388,1.662,389,1.662,402,1.283,403,2.184,404,2.143,405,1.351,406,2.769,407,1.536,408,1.536,409,1.452,410,1.922,411,2.184,412,1.452,413,2.184,414,1.426,415,1.536,416,1.452,417,2.184,418,2.769,419,1.452,420,2.769,421,1.452,422,1.536,423,1.4,424,2.184,425,1.452,426,1.479,427,1.507,428,1.375,429,2.184,430,1.4,431,1.536,432,1.452,433,1.452,434,1.536,435,1.426,436,1.536,437,1.452,438,2.617,439,1.536,440,1.426,441,1.536,442,1.452,443,1.536,444,1.479,445,1.452,446,1.452,447,1.536,448,1.452,449,1.507,450,2.542,451,1.536,452,1.452,453,1.536,454,1.426,455,1.452,456,1.479,457,1.452,458,1.452,459,1.704,460,1.452,461,1.536,462,1.452,463,1.452,464,1.452,465,1.121,466,1.426,467,1.426,468,1.536,469,1.426,470,1.536,471,1.426,472,1.507,473,1.536,505,2.408,1177,2.678,1179,3.54,1182,4.362,1490,4.937,1492,6.258,2007,6.258,2635,4.229,2636,7.623,2637,6.999,2638,4.229,2639,6.014,2640,6.014,2641,6.999,2642,6.999,2643,4.229,2644,7.623,2645,6.014,2646,4.229,2647,4.229,2648,4.229,2649,4.229,2650,4.229,2651,4.229,2652,4.229,2653,4.229,2654,4.229,2655,4.229,2656,4.229,2657,4.229,2658,4.229,2659,4.229,2660,4.229,2661,4.229,2662,4.229,2663,4.229,2664,4.229,2665,4.229,2666,4.229,2667,4.229,2668,4.229,2669,4.229,2670,6.999,2671,7.184,2672,6.999,2673,6.014,2674,6.999,2675,6.014,2676,4.229,2677,6.999,2678,4.229,2679,4.229,2680,4.229,2681,4.229,2682,4.229,2683,4.229,2684,4.229,2685,3.772,2686,6.014]],["title/components/IframeDisplayComponent.html",[267,0.932,440,1.61]],["body/components/IframeDisplayComponent.html",[0,0.258,3,0.033,4,0.046,5,0.054,32,0.207,33,0.785,34,0.229,35,0.489,36,0.573,39,0.252,42,0.3,44,0.365,45,0.006,46,0.571,47,0.365,51,0.125,52,0.492,57,0.039,61,1.356,100,1.379,107,1.29,112,1.402,117,1.994,137,0.003,138,0.004,139,0.003,159,1.019,182,0.996,198,1.402,199,1.988,236,1.248,267,1.46,268,1.643,269,2.171,270,1.705,271,2.191,272,1.738,273,1.738,275,2.823,276,1.613,277,3.463,279,3.233,281,2.381,287,2.168,290,1.655,291,3.037,292,1.674,308,1.189,309,1.502,316,0.862,320,1.356,321,1.451,336,1.502,372,1.88,373,1.843,374,1.88,375,1.88,376,1.88,377,1.88,378,1.674,379,1.502,380,1.88,381,1.88,382,1.88,383,1.772,384,1.88,385,1.843,386,1.88,387,1.88,388,1.88,389,1.88,402,1.451,403,2.381,404,2.336,405,1.529,406,2.922,407,1.738,408,1.738,409,1.643,410,2.095,411,2.381,412,1.643,413,2.381,414,1.613,415,1.738,416,1.643,417,2.381,418,2.922,419,1.643,420,2.922,421,1.643,422,1.738,423,1.584,424,2.381,425,1.643,426,1.674,427,1.705,428,1.556,429,2.381,430,1.584,431,1.738,432,1.643,433,1.643,434,1.738,435,1.613,436,1.738,437,1.643,438,1.643,439,1.738,440,2.712,441,1.738,442,1.643,443,1.738,444,1.674,445,1.643,446,1.643,447,1.738,448,1.643,449,1.705,450,2.716,451,1.738,452,1.643,453,1.738,454,1.613,455,1.643,456,1.674,457,1.643,458,1.643,459,1.858,460,1.643,461,1.738,462,1.643,463,1.643,464,1.643,465,1.269,466,1.613,467,1.613,468,1.738,469,1.613,470,1.738,471,1.613,472,1.705,473,1.738,495,3.674,496,3.471,1427,3.998,1917,6.671,1918,7.176,2687,4.785,2688,6.556,2689,7.478,2690,6.556,2691,7.478,2692,7.478,2693,6.556,2694,4.785,2695,8.044,2696,4.785,2697,4.785,2698,4.785,2699,4.268,2700,4.785,2701,4.785,2702,6.556,2703,4.785]],["title/components/InfoComponent.html",[267,0.932,442,1.64]],["body/components/InfoComponent.html",[0,0.236,3,0.054,4,0.03,5,0.036,7,3.107,17,2.126,32,0.218,33,0.738,34,0.21,35,0.46,39,0.231,42,0.331,44,0.334,45,0.006,46,0.55,47,0.334,51,0.137,52,0.451,57,0.036,61,1.242,66,1.688,100,1.263,109,4.064,112,1.285,114,2.419,117,1.941,137,0.003,138,0.004,139,0.003,159,0.959,163,1.222,182,1.486,198,1.285,199,1.871,267,1.394,268,1.505,269,2.043,270,1.562,271,2.007,272,1.592,273,1.592,275,2.695,276,1.478,277,3.445,279,3.042,281,2.241,287,2.466,290,1.557,291,2.925,292,1.533,308,1.089,309,1.376,316,0.79,317,1.263,318,1.592,320,1.242,321,1.329,326,2.892,336,1.376,394,2.892,402,1.329,403,2.241,404,2.199,405,1.401,406,2.813,407,1.592,408,1.592,409,1.505,410,1.971,411,2.241,412,1.505,413,2.241,414,1.478,415,1.592,416,1.505,417,2.241,418,2.813,419,1.505,420,2.813,421,1.505,422,1.592,423,1.452,424,2.241,425,1.505,426,1.533,427,1.562,428,1.426,429,2.241,430,1.452,431,1.592,432,1.505,433,1.505,434,1.592,435,1.478,436,1.592,437,1.505,438,1.505,439,1.592,440,1.478,441,1.592,442,2.66,443,1.592,444,1.533,445,1.505,446,1.505,447,1.592,448,1.505,449,1.562,450,2.593,451,1.592,452,1.505,453,1.592,454,1.478,455,1.505,456,1.533,457,1.505,458,1.505,459,2.399,460,1.505,461,1.592,462,1.505,463,1.505,464,1.505,465,1.162,466,1.478,467,1.478,468,1.592,469,1.478,470,1.592,471,1.478,472,1.562,473,1.592,691,1.795,1054,2.893,1136,2.776,1301,3.911,1302,3.911,1427,3.762,1432,5.305,1448,2.776,1488,5.503,1490,5.064,1492,5.064,2103,5.503,2616,3.911,2617,3.911,2618,5.503,2622,3.911,2623,3.911,2704,4.384,2705,7.138,2706,6.169,2707,7.138,2708,7.138,2709,7.138,2710,6.169,2711,4.384,2712,4.384,2713,4.384,2714,4.384,2715,4.384,2716,4.384,2717,4.384,2718,4.384,2719,4.384,2720,4.384,2721,4.384,2722,3.911,2723,6.169,2724,4.384,2725,6.169,2726,4.384,2727,6.169,2728,4.384,2729,4.384,2730,4.384,2731,6.169,2732,6.169,2733,6.169,2734,4.384,2735,3.18,2736,4.384]],["title/classes/InitAuthStatus.html",[0,0.257,60,2.557]],["body/classes/InitAuthStatus.html",[0,0.465,1,3.357,2,0.515,3,0.025,4,0.025,5,0.059,6,2.087,7,1.47,8,1.333,9,4.375,10,1.533,11,2.589,12,3.626,13,4.033,14,3.657,15,2.022,16,2.885,17,1.947,18,3.934,19,3.959,20,3.191,21,2.235,22,2.158,23,3.934,24,2.953,25,3.798,26,3.934,27,3.56,28,1.603,29,3.191,30,3.673,31,3.306,32,0.244,33,1.034,34,0.176,35,0.404,36,0.987,37,1.662,38,1.277,39,0.286,40,1.039,41,2.991,42,0.241,44,0.28,45,0.006,46,0.26,47,0.28,49,0.489,50,0.392,51,0.096,52,0.377,53,3.266,54,1.856,55,2.535,56,1.719,57,0.073,58,0.619,59,1.856,60,3.818,61,1.039,62,2.424,63,3.455,64,1.907,65,3.798,66,3.385,67,4.689,68,4.059,69,3.455,70,2.158,71,2.606,72,3.71,73,2.82,74,4.074,75,3.455,76,1.461,77,1.689,78,1.907,79,0.928,80,1.907,81,1.856,82,1.963,83,1.639,84,2.235,85,2.235,86,3.934,87,3.934,88,2.953,89,3.798,90,3.306,91,1.293,92,1.293,93,1.168,94,2.235,95,2.158,96,2.235,97,2.235,98,2.087,99,1.602,100,1.056,101,2.158,102,2.82,103,3.306,104,3.181,105,2.991,106,2.087,107,0.988,108,2.158,109,2.087,110,2.022,111,4.059,112,1.074,113,2.235,114,2.022,115,2.158,116,2.903,117,1.242,118,2.235,119,2.235,120,4.347,121,2.158,122,2.235,123,3.087,124,2.235,125,3.191,126,0.65,127,2.235,128,2.158,129,2.235,130,2.158,131,2.235,132,2.606,133,3.191,134,1.602,135,2.235,136,2.087,137,0.002,138,0.003,139,0.002,215,1.828,2737,5.421,2738,3.665]],["title/classes/InitFilters.html",[0,0.257,679,3.295]],["body/classes/InitFilters.html",[0,0.423,2,0.885,3,0.044,4,0.044,5,0.052,8,1.279,32,0.252,33,1.024,34,0.302,35,0.585,36,0.94,37,1.724,38,1.301,39,0.332,40,1.787,42,0.319,44,0.481,45,0.006,46,0.448,47,0.481,49,0.84,50,0.674,51,0.127,52,0.649,57,0.074,58,1.064,61,1.787,62,3.512,77,1.743,91,1.2,92,1.2,93,1.084,137,0.004,138,0.005,139,0.004,148,2.015,163,1.757,215,2.423,465,2.268,554,4.333,665,4.87,666,4.841,669,5.624,670,4.16,671,4.16,672,4.622,673,3.845,674,4.841,675,3.479,676,5.176,677,5.624,678,3.845,679,5.901,680,7.005,681,5.624,682,5.176,2739,7.853,2740,6.305]],["title/classes/InitTimeline.html",[0,0.257,2741,3.295]],["body/classes/InitTimeline.html",[0,0.433,2,0.92,3,0.046,4,0.046,5,0.054,8,1.296,32,0.253,33,1.041,34,0.314,35,0.599,36,0.962,37,1.754,38,1.318,39,0.345,40,1.856,42,0.325,44,0.5,45,0.006,46,0.465,47,0.5,49,0.873,50,0.701,51,0.097,52,0.674,57,0.075,58,1.106,61,1.856,77,1.784,137,0.004,138,0.005,139,0.004,159,1.018,215,2.465,231,2.74,428,2.829,2049,4.148,2741,6.259,2742,5.029,2743,8.04,2744,6.55,2745,7.172,2746,5.377,2747,6.003,2748,5.843,2749,5.843,2750,5.843,2751,5.377]],["title/classes/Input.html",[0,0.257,152,1.998]],["body/classes/Input.html",[0,0.484,2,0.646,3,0.032,4,0.032,5,0.038,8,0.657,11,1.671,32,0.204,36,0.551,38,1.468,39,0.481,42,0.172,44,0.351,45,0.006,46,0.562,47,0.351,50,0.846,51,0.108,57,0.076,58,1.077,79,1.197,91,1.374,92,1.374,93,1.241,102,2.011,137,0.003,138,0.004,139,0.003,142,2.806,143,4.104,144,3.891,145,5.19,146,3.936,147,2.62,148,2.983,149,2.914,150,2.914,151,1.925,152,3.065,153,2.914,154,2.914,155,2.914,156,2.914,157,2.914,159,0.715,160,2.33,161,1.884,162,2.269,163,1.282,164,2.914,165,2.539,166,2.011,167,2.914,168,2.806,169,2.914,170,2.914,171,2.914,172,2.914,173,2.914,174,2.914,175,2.914,176,2.914,177,4.041,178,1.282,179,3.521,180,2.914,181,4.041,182,1.328,183,1.772,184,3.756,185,2.914,186,2.457,187,2.011,188,1.497,189,2.106,190,2.914,191,2.914,192,2.914,193,2.914,194,2.709,195,2.806,196,3.028,197,4.824,198,1.348,199,1.395,200,2.806,201,2.806,202,2.806,203,2.106,204,4.639,205,4.639,206,3.311,207,4.639,208,4.042,209,4.824,210,4.639,211,4.639,2752,4.601]],["title/injectables/LightCardEffects.html",[637,3.92,683,1.448]],["body/injectables/LightCardEffects.html",[0,0.315,3,0.041,4,0.041,5,0.048,8,0.834,17,2.017,28,1.858,32,0.193,34,0.28,35,0.557,39,0.308,42,0.279,44,0.445,45,0.006,46,0.415,47,0.445,49,0.778,50,0.625,51,0.142,52,0.601,57,0.048,91,0.892,92,0.892,93,0.806,117,2.11,137,0.004,138,0.005,139,0.004,159,1.163,163,2.3,182,1.812,222,2.673,228,2.879,229,4.296,287,2.016,292,2.042,316,1.052,317,1.683,318,2.121,320,1.654,321,1.771,336,1.833,366,4.562,637,6.141,683,2.269,684,2.673,687,5.165,690,4.403,691,3.565,701,3.222,702,4.7,704,3.325,705,3.127,707,2.879,708,3.039,709,3.561,720,6.673,731,4.803,732,4.235,768,3.561,769,3.561,1054,2.738,1123,6.141,1522,7.363,1543,4.483,1544,4.483,1545,4.483,1610,6.673,2753,8.254,2754,5.839,2755,8.254,2756,5.839,2757,7.481,2758,7.481,2759,7.481,2760,7.481,2761,6.673,2762,7.481,2763,7.481,2764,6.673,2765,5.839,2766,5.839]],["title/components/ListFilterComponent.html",[267,0.932,445,1.64]],["body/components/ListFilterComponent.html",[0,0.173,3,0.022,4,0.022,5,0.026,17,1.2,28,1.481,32,0.231,33,0.588,34,0.154,35,0.366,39,0.169,42,0.355,44,0.602,45,0.006,46,0.604,47,0.602,49,0.428,50,0.87,51,0.12,52,0.331,57,0.026,61,0.911,79,1.016,100,0.926,102,1.405,107,1.324,112,0.942,117,1.737,137,0.002,138,0.003,139,0.002,145,4.232,146,2.249,148,2.297,151,2.055,152,2.055,159,0.763,162,1.585,182,1.389,196,1.104,198,0.942,199,2.528,208,3.289,215,1.392,267,1.164,268,1.104,269,1.626,270,1.146,271,1.472,272,1.168,273,1.168,275,2.251,276,1.084,277,3.37,279,2.422,281,1.784,287,2.192,290,1.24,291,2.977,292,1.124,308,2.229,309,2.476,316,0.579,317,0.926,320,0.911,321,0.975,379,1.009,383,2.207,402,0.975,403,1.784,404,1.751,405,1.027,406,2.424,407,1.168,408,1.168,409,1.104,410,1.569,411,1.784,412,1.104,413,1.784,414,1.084,415,1.168,416,3.197,417,2.165,418,2.424,419,1.104,420,2.424,421,1.104,422,1.168,423,1.064,424,1.784,425,1.104,426,1.124,427,1.146,428,1.046,429,1.784,430,1.064,431,1.168,432,1.104,433,1.104,434,1.168,435,1.084,436,1.168,437,1.104,438,1.104,439,1.168,440,1.084,441,1.168,442,1.104,443,1.168,444,1.124,445,2.292,446,1.104,447,1.168,448,1.104,449,1.146,450,2.165,451,1.168,452,1.104,453,1.168,454,1.084,455,1.104,456,1.124,457,1.104,458,1.104,459,1.392,460,1.104,461,1.168,462,1.104,463,1.104,464,1.104,465,2.01,466,1.084,467,1.084,468,1.168,469,1.084,470,1.168,471,1.084,472,1.146,473,1.168,508,1.585,520,1.721,521,1.721,675,1.774,713,6.529,817,2.639,818,2.639,819,7.586,820,7.586,896,2.332,978,2.891,1196,2.332,1198,3.563,1199,5.928,1200,2.797,1201,3.111,1202,2.71,1203,4.994,1204,4.227,1205,3.289,1206,3.775,1207,4.227,1208,4.381,1209,3.111,1210,3.111,1211,2.867,1212,4.381,1215,2.036,1217,2.036,1220,3.682,1221,3.775,1222,4.094,1224,3.111,1228,3.775,1238,2.036,1431,5.203,1560,3.111,2116,6.249,2141,5.215,2142,2.218,2146,3.771,2147,3.771,2597,3.563,2767,4.893,2768,5.317,2769,5.953,2770,5.953,2771,3.215,2772,3.215,2773,3.215,2774,3.215,2775,3.215,2776,3.215,2777,3.215,2778,3.215,2779,3.215,2780,4.381,2781,2.867,2782,3.215,2783,3.215,2784,3.215,2785,3.215,2786,3.215,2787,3.215,2788,3.215,2789,3.215,2790,3.215,2791,3.215,2792,3.215,2793,3.215,2794,4.381,2795,3.241,2796,2.867,2797,4.381,2798,4.381,2799,2.867,2800,2.867,2801,4.381,2802,2.867,2803,2.867,2804,2.867,2805,2.867,2806,2.867,2807,2.867,2808,2.867,2809,2.218,2810,2.468,2811,2.468,2812,3.215,2813,2.332,2814,3.215,2815,3.215,2816,3.215,2817,2.867,2818,2.867,2819,4.912,2820,4.381]],["title/components/ListSettingComponent.html",[267,0.932,446,1.64]],["body/components/ListSettingComponent.html",[0,0.173,3,0.022,4,0.022,5,0.027,17,1.201,28,1.481,32,0.233,33,0.588,34,0.154,35,0.366,39,0.17,42,0.356,44,0.602,45,0.006,46,0.604,47,0.602,49,0.655,50,0.892,51,0.12,52,0.331,57,0.027,61,0.912,79,1.016,100,0.927,102,1.406,107,1.325,112,0.943,117,1.738,137,0.002,138,0.003,139,0.002,145,4.234,146,2.25,148,2.298,151,2.056,152,2.056,159,0.764,162,1.586,182,1.39,196,1.105,198,0.943,199,2.3,208,3.291,215,1.393,267,1.165,268,1.105,269,1.627,270,1.147,272,1.169,273,1.169,275,2.252,276,1.085,277,3.37,281,1.785,287,2.293,290,1.241,291,2.978,292,1.125,308,2.229,309,2.477,316,0.58,317,0.927,320,0.912,321,0.976,379,1.01,383,2.208,402,0.976,403,1.785,404,1.752,405,1.028,406,2.425,407,1.169,408,1.169,409,1.105,410,1.571,411,1.785,412,1.105,413,1.785,414,1.085,415,1.169,416,1.105,417,2.166,418,2.425,419,3.214,420,2.425,421,1.105,422,1.169,423,1.065,424,1.785,425,1.105,426,1.125,427,1.147,428,1.046,429,1.785,430,1.065,431,1.169,432,1.105,433,1.105,434,1.169,435,1.085,436,1.169,437,1.105,438,1.105,439,1.169,440,1.085,441,1.169,442,1.105,443,1.169,444,1.125,445,1.105,446,2.293,447,1.169,448,1.105,449,1.147,450,2.166,451,1.169,452,1.105,453,1.169,454,1.085,455,1.105,456,1.125,457,1.105,458,1.105,459,1.393,460,1.105,461,1.169,462,1.105,463,1.105,464,1.105,465,0.853,466,1.085,467,1.085,468,1.169,469,1.085,470,1.169,471,1.085,472,1.147,473,1.169,508,1.586,520,1.723,521,1.723,675,1.775,896,2.334,978,2.893,1197,3.396,1199,5.928,1200,2.799,1201,3.113,1202,2.712,1203,4.996,1204,4.228,1205,3.291,1206,3.777,1207,4.228,1209,3.113,1210,3.113,1215,2.038,1217,2.038,1220,3.684,1221,3.777,1222,4.095,1224,3.113,1228,3.777,1238,2.038,1276,2.334,1277,2.47,1278,4.963,1279,3.774,1280,3.392,1281,3.392,1294,2.038,1298,2.87,1431,5.205,1560,3.113,2116,6.301,2118,2.334,2119,2.334,2120,2.334,2121,4.384,2126,2.334,2127,2.334,2128,2.334,2129,2.334,2130,2.334,2131,2.334,2132,2.334,2133,2.334,2134,2.334,2135,2.334,2136,2.334,2137,2.334,2138,2.334,2140,2.334,2141,5.217,2142,2.22,2145,3.774,2146,3.774,2147,3.774,2597,3.565,2768,5.32,2769,5.956,2770,5.956,2780,4.384,2781,2.87,2794,4.384,2795,3.243,2796,2.87,2797,4.384,2798,4.384,2799,2.87,2800,2.87,2801,4.384,2802,2.87,2803,2.87,2804,2.87,2805,2.87,2806,2.87,2807,2.87,2808,2.87,2809,2.22,2810,2.47,2811,2.47,2813,2.334,2817,2.87,2818,2.87,2820,4.384,2821,8.506,2822,7.587,2823,3.217,2824,3.217,2825,3.217,2826,3.217,2827,3.217,2828,3.217,2829,3.217,2830,3.217,2831,2.87,2832,2.87]],["title/classes/LoadArchivedCard.html",[0,0.257,1537,2.485]],["body/classes/LoadArchivedCard.html",[0,0.489,2,0.674,3,0.033,4,0.033,5,0.04,8,1.331,32,0.25,33,1.103,34,0.23,35,0.489,36,0.786,37,1.879,38,1.354,39,0.253,40,1.359,42,0.279,44,0.366,45,0.006,46,0.341,47,0.366,49,0.639,50,0.513,51,0.097,52,0.494,57,0.077,58,0.81,76,1.77,77,1.979,79,0.801,91,1.388,92,1.388,93,1.253,126,1.581,137,0.003,138,0.004,139,0.003,159,1.528,161,1.965,188,2.136,215,2.122,225,2.596,233,1.925,238,2.007,244,1.86,245,1.382,246,1.359,247,1.56,248,1.56,250,1.382,251,1.43,252,1.533,773,3.897,1163,4.132,1536,2.824,1537,4.191,1538,4.132,1539,4.132,1540,3.791,1541,4.132,1542,4.132,1766,2.824,1767,3.038,1769,3.038,1770,3.038,1771,3.038,1772,4.159,1773,3.038,1774,3.038,1775,3.038,1776,2.926,2833,6.568,2834,4.798]],["title/classes/LoadArchivedCardFailure.html",[0,0.257,1538,2.635]],["body/classes/LoadArchivedCardFailure.html",[0,0.489,2,0.674,3,0.033,4,0.033,5,0.04,8,1.331,32,0.25,33,1.103,34,0.23,35,0.489,36,0.786,37,1.879,38,1.354,39,0.253,40,1.359,42,0.279,44,0.366,45,0.006,46,0.341,47,0.366,49,0.639,50,0.513,51,0.097,52,0.494,57,0.077,58,0.81,76,1.77,77,1.979,79,0.801,91,1.388,92,1.388,93,1.253,126,1.581,137,0.003,138,0.004,139,0.003,159,1.528,161,1.965,188,2.136,215,2.122,225,2.596,233,1.925,238,2.007,244,1.86,245,1.382,246,1.359,247,1.56,248,1.56,250,1.382,251,1.43,252,1.533,773,3.897,1163,4.132,1536,2.824,1537,3.897,1538,4.443,1539,4.132,1540,3.791,1541,4.132,1542,4.132,1766,2.824,1767,3.038,1769,3.038,1770,3.038,1771,3.038,1772,3.038,1773,4.159,1774,3.038,1775,3.038,1776,2.926,2835,6.568,2836,4.798]],["title/classes/LoadArchivedCardSuccess.html",[0,0.257,1539,2.635]],["body/classes/LoadArchivedCardSuccess.html",[0,0.489,2,0.674,3,0.033,4,0.033,5,0.04,8,1.331,32,0.25,33,1.103,34,0.23,35,0.489,36,0.786,37,1.879,38,1.354,39,0.253,40,1.359,42,0.279,44,0.366,45,0.006,46,0.341,47,0.366,49,0.639,50,0.513,51,0.097,52,0.494,57,0.077,58,0.81,76,1.77,77,1.979,79,0.801,91,1.388,92,1.388,93,1.253,126,1.581,137,0.003,138,0.004,139,0.003,159,1.528,161,1.965,188,2.136,215,2.122,225,2.596,233,1.925,238,2.007,244,1.86,245,1.382,246,1.359,247,1.56,248,1.56,250,1.382,251,1.43,252,1.533,773,3.897,1163,4.132,1536,2.824,1537,3.897,1538,4.132,1539,4.443,1540,3.791,1541,4.132,1542,4.132,1766,2.824,1767,3.038,1769,3.038,1770,3.038,1771,3.038,1772,3.038,1773,3.038,1774,4.159,1775,3.038,1776,2.926,2837,6.568,2838,4.798]],["title/classes/LoadCard.html",[0,0.257,1540,2.418]],["body/classes/LoadCard.html",[0,0.489,2,0.674,3,0.033,4,0.033,5,0.04,8,1.331,32,0.25,33,1.103,34,0.23,35,0.489,36,0.786,37,1.879,38,1.354,39,0.253,40,1.359,42,0.279,44,0.366,45,0.006,46,0.341,47,0.366,49,0.639,50,0.513,51,0.097,52,0.494,57,0.077,58,0.81,76,1.77,77,1.979,79,0.801,91,1.388,92,1.388,93,1.253,126,1.581,137,0.003,138,0.004,139,0.003,159,1.528,161,1.965,188,2.136,215,2.122,225,2.596,233,1.925,238,2.007,244,1.86,245,1.382,246,1.359,247,1.56,248,1.56,250,1.382,251,1.43,252,1.533,773,3.897,1163,4.132,1536,2.824,1537,3.897,1538,4.132,1539,4.132,1540,4.077,1541,4.132,1542,4.132,1766,2.824,1767,3.038,1769,4.159,1770,3.038,1771,3.038,1772,3.038,1773,3.038,1774,3.038,1775,3.038,1776,2.926,2839,6.568,2840,4.798]],["title/classes/LoadCardFailure.html",[0,0.257,1541,2.635]],["body/classes/LoadCardFailure.html",[0,0.489,2,0.674,3,0.033,4,0.033,5,0.04,8,1.331,32,0.25,33,1.103,34,0.23,35,0.489,36,0.786,37,1.879,38,1.354,39,0.253,40,1.359,42,0.279,44,0.366,45,0.006,46,0.341,47,0.366,49,0.639,50,0.513,51,0.097,52,0.494,57,0.077,58,0.81,76,1.77,77,1.979,79,0.801,91,1.388,92,1.388,93,1.253,126,1.581,137,0.003,138,0.004,139,0.003,159,1.528,161,1.965,188,2.136,215,2.122,225,2.596,233,1.925,238,2.007,244,1.86,245,1.382,246,1.359,247,1.56,248,1.56,250,1.382,251,1.43,252,1.533,773,3.897,1163,4.132,1536,2.824,1537,3.897,1538,4.132,1539,4.132,1540,3.791,1541,4.443,1542,4.132,1766,2.824,1767,3.038,1769,3.038,1770,4.159,1771,3.038,1772,3.038,1773,3.038,1774,3.038,1775,3.038,1776,2.926,2841,6.568,2842,4.798]],["title/classes/LoadCardSuccess.html",[0,0.257,1542,2.635]],["body/classes/LoadCardSuccess.html",[0,0.489,2,0.674,3,0.033,4,0.033,5,0.04,8,1.331,32,0.25,33,1.103,34,0.23,35,0.489,36,0.786,37,1.879,38,1.354,39,0.253,40,1.359,42,0.279,44,0.366,45,0.006,46,0.341,47,0.366,49,0.639,50,0.513,51,0.097,52,0.494,57,0.077,58,0.81,76,1.77,77,1.979,79,0.801,91,1.388,92,1.388,93,1.253,126,1.581,137,0.003,138,0.004,139,0.003,159,1.528,161,1.965,188,2.136,215,2.122,225,2.596,233,1.925,238,2.007,244,1.86,245,1.382,246,1.359,247,1.56,248,1.56,250,1.382,251,1.43,252,1.533,773,3.897,1163,4.132,1536,2.824,1537,3.897,1538,4.132,1539,4.132,1540,3.791,1541,4.132,1542,4.443,1766,2.824,1767,3.038,1769,3.038,1770,3.038,1771,4.159,1772,3.038,1773,3.038,1774,3.038,1775,3.038,1776,2.926,2843,6.568,2844,4.798]],["title/classes/LoadConfig.html",[0,0.257,329,2.912]],["body/classes/LoadConfig.html",[0,0.472,2,0.834,3,0.041,4,0.041,5,0.049,8,1.321,32,0.242,33,1.083,34,0.285,35,0.564,37,1.678,38,1.344,42,0.222,45,0.006,49,0.792,50,0.636,51,0.088,52,0.611,57,0.076,58,1.003,76,1.602,77,1.847,91,1.339,92,1.339,93,1.209,126,1.604,137,0.004,138,0.005,139,0.004,225,2.481,233,1.741,244,2.067,245,1.712,246,1.684,247,1.933,248,1.933,250,1.712,251,1.771,252,1.899,329,5.342,579,5.417,1169,3.92,1460,3.92,1798,5.271,1799,5.271,2424,4.1,2427,4.562,2428,5.808,2429,4.562,2430,4.562,2431,4.31,2845,5.942]],["title/classes/LoadConfigFailure.html",[0,0.257,1798,3.024]],["body/classes/LoadConfigFailure.html",[0,0.465,2,0.803,3,0.04,4,0.04,5,0.047,8,1.308,32,0.251,33,1.07,34,0.274,35,0.55,36,0.884,37,1.846,38,1.33,39,0.301,40,1.621,42,0.305,44,0.437,45,0.006,46,0.406,47,0.437,49,0.763,50,0.612,51,0.085,52,0.589,57,0.075,58,0.966,76,1.542,77,1.814,91,1.32,92,1.32,93,1.192,126,1.585,137,0.004,138,0.005,139,0.004,215,2.317,225,2.437,233,1.677,244,2.031,245,1.649,246,1.621,247,1.861,248,1.861,250,1.649,251,1.706,252,1.828,329,4.985,579,5.375,1169,3.775,1460,3.775,1798,5.471,1799,5.178,2424,3.948,2427,4.393,2428,4.393,2429,5.669,2430,4.393,2431,4.15,2846,7.384,2847,5.722]],["title/classes/LoadConfigSuccess.html",[0,0.257,1799,3.024]],["body/classes/LoadConfigSuccess.html",[0,0.465,2,0.803,3,0.04,4,0.04,5,0.047,8,1.308,32,0.251,33,1.07,34,0.274,35,0.55,36,0.884,37,1.846,38,1.33,39,0.301,40,1.621,42,0.305,44,0.437,45,0.006,46,0.406,47,0.437,49,0.763,50,0.612,51,0.085,52,0.589,57,0.075,58,0.966,76,1.542,77,1.814,91,1.32,92,1.32,93,1.192,126,1.585,137,0.004,138,0.005,139,0.004,215,2.317,225,2.437,233,1.677,244,2.031,245,1.649,246,1.621,247,1.861,248,1.861,250,1.649,251,1.706,252,1.828,329,4.985,579,5.375,1169,3.775,1460,3.775,1798,5.178,1799,5.471,2424,3.948,2427,4.393,2428,4.393,2429,4.393,2430,5.669,2431,4.15,2848,7.384,2849,5.722]],["title/classes/LoadLightCards.html",[0,0.257,223,2.485]],["body/classes/LoadLightCards.html",[0,0.502,2,0.639,3,0.032,4,0.032,5,0.038,8,1.353,12,1.718,32,0.245,33,1.125,34,0.218,35,0.472,37,1.728,38,1.376,39,0.384,42,0.17,45,0.006,49,0.606,50,0.487,51,0.094,52,0.468,57,0.078,58,0.768,76,1.227,77,1.902,79,0.555,91,1.424,92,1.424,93,1.286,126,1.558,134,1.989,137,0.003,138,0.004,139,0.003,159,1.132,212,3.687,213,3.391,214,2.437,218,2.591,219,2.174,220,1.622,221,1.534,222,2.083,223,4.097,224,5.141,225,2.347,226,3.687,227,2.244,228,3.591,229,3.295,230,2.511,231,1.904,232,3.79,233,1.856,234,3.687,235,1.653,236,1.187,237,3.687,238,1.904,239,2.649,240,2.187,241,2.368,242,3.687,243,2.437,244,1.809,245,1.311,246,1.289,247,1.48,248,1.48,249,3.687,250,1.311,251,1.357,252,1.454,253,3.606,254,2.591,255,2.591,256,2.083,257,2.591,258,2.591,259,2.591,260,2.244,261,2.591,262,2.591,263,2.591,264,2.591,265,2.083,266,2.437,2850,4.551]],["title/classes/LoadLightCardsExtendedData.html",[0,0.257,229,2.485]],["body/classes/LoadLightCardsExtendedData.html",[0,0.501,2,0.635,3,0.031,4,0.031,5,0.037,8,1.351,12,1.708,32,0.245,33,1.124,34,0.217,35,0.47,37,1.724,38,1.374,39,0.435,42,0.235,45,0.006,49,0.603,50,0.484,51,0.093,52,0.465,57,0.078,58,0.763,76,1.219,77,1.898,79,0.551,91,1.422,92,1.422,93,1.284,126,1.556,134,1.977,137,0.003,138,0.004,139,0.003,159,1.128,212,3.675,213,3.887,214,2.422,218,2.575,219,2.165,220,1.612,221,1.525,222,2.07,223,3.778,224,5.135,225,2.341,226,3.675,227,2.23,228,3.579,229,3.778,230,2.496,231,1.892,232,3.778,233,1.848,234,3.675,235,1.643,236,1.18,237,3.675,238,1.892,239,2.638,240,2.174,241,2.354,242,3.675,243,2.422,244,1.803,245,1.303,246,1.282,247,1.471,248,1.471,249,3.675,250,1.303,251,1.348,252,1.445,253,2.575,254,2.575,255,2.575,256,2.07,257,3.59,258,2.575,259,2.575,260,2.23,261,2.575,262,2.575,263,2.575,264,2.575,265,2.07,266,2.422,2851,6.305]],["title/classes/LoadLightCardsFailure.html",[0,0.257,232,2.485]],["body/classes/LoadLightCardsFailure.html",[0,0.499,2,0.619,3,0.031,4,0.031,5,0.036,8,1.346,12,1.665,32,0.25,33,1.119,34,0.211,35,0.462,36,0.742,37,1.823,38,1.369,39,0.409,40,1.25,42,0.267,44,0.336,45,0.006,46,0.313,47,0.336,49,0.588,50,0.472,51,0.092,52,0.454,57,0.078,58,0.744,76,1.189,77,1.883,79,0.538,91,1.416,92,1.416,93,1.278,126,1.545,134,1.928,137,0.003,138,0.004,139,0.003,159,1.113,212,3.626,213,4.159,214,2.362,215,2.029,218,2.511,219,2.127,220,1.572,221,1.487,222,2.019,223,3.727,224,5.11,225,2.315,226,3.626,227,2.174,228,3.531,229,3.224,230,2.433,231,1.845,232,4.042,233,1.815,234,3.626,235,1.602,236,1.15,237,3.626,238,1.845,239,2.591,240,2.12,241,2.295,242,3.626,243,2.362,244,1.779,245,1.271,246,1.25,247,1.434,248,1.434,249,3.626,250,1.271,251,1.315,252,1.409,253,2.511,254,2.511,255,2.511,256,2.019,257,2.511,258,3.527,259,2.511,260,2.174,261,2.511,262,2.511,263,2.511,264,2.511,265,2.019,266,2.362,2852,6.195,2853,4.41]],["title/classes/LoadLightCardsSuccess.html",[0,0.257,228,2.355]],["body/classes/LoadLightCardsSuccess.html",[0,0.499,2,0.619,3,0.031,4,0.031,5,0.036,8,1.346,12,1.665,32,0.25,33,1.119,34,0.211,35,0.462,36,0.742,37,1.823,38,1.369,39,0.409,40,1.25,42,0.267,44,0.336,45,0.006,46,0.313,47,0.336,49,0.588,50,0.472,51,0.092,52,0.454,57,0.078,58,0.744,76,1.189,77,1.883,79,0.538,91,1.416,92,1.416,93,1.278,126,1.545,134,1.928,137,0.003,138,0.004,139,0.003,159,1.113,212,3.626,213,4.159,214,2.362,215,2.029,218,2.511,219,2.127,220,1.572,221,1.487,222,2.019,223,3.727,224,5.11,225,2.315,226,3.626,227,2.174,228,3.83,229,3.224,230,2.433,231,1.845,232,3.727,233,1.815,234,3.626,235,1.602,236,1.15,237,3.626,238,1.845,239,2.591,240,2.12,241,2.295,242,3.626,243,2.362,244,1.779,245,1.271,246,1.25,247,1.434,248,1.434,249,3.626,250,1.271,251,1.315,252,1.409,253,2.511,254,2.511,255,3.527,256,2.019,257,2.511,258,2.511,259,2.511,260,2.174,261,2.511,262,2.511,263,2.511,264,2.511,265,2.019,266,2.362,2854,6.195,2855,4.41]],["title/classes/LoadMenu.html",[0,0.257,2441,2.635]],["body/classes/LoadMenu.html",[0,0.476,2,0.65,3,0.032,4,0.032,5,0.038,8,1.346,14,2.225,16,2.071,17,1.132,32,0.238,33,1.078,34,0.222,35,0.478,37,1.843,38,1.328,39,0.387,42,0.239,44,0.561,45,0.006,49,0.617,50,0.495,51,0.095,52,0.476,57,0.075,58,0.782,76,1.727,77,1.912,79,0.967,91,1.35,92,1.35,93,1.219,126,1.596,132,2.225,137,0.003,138,0.004,139,0.003,166,2.024,186,2.468,187,2.801,188,2.084,189,2.119,225,2.191,233,1.357,235,2.67,244,1.826,245,1.334,246,1.312,250,1.334,251,1.38,252,1.479,580,4.973,631,2.725,900,3.721,922,3.649,930,2.823,1159,2.823,1166,2.725,1826,2.932,1849,4.655,1856,4.655,1857,2.932,1858,4.595,1860,4.056,1861,2.725,1862,2.932,1863,4.185,1940,2.479,2436,2.823,2439,3.055,2440,2.823,2441,4.377,2442,4.185,2443,4.185,2444,4.185,2445,4.185,2446,2.932,2447,4.228,2448,3.055,2449,3.055,2450,3.055,2451,3.055,2452,2.932,2453,2.932,2454,4.849,2455,4.849,2456,4.228,2457,3.055,2458,3.055,2459,3.055,2460,3.055,2461,2.932,2856,6.409]],["title/classes/LoadMenuFailure.html",[0,0.257,2443,2.719]],["body/classes/LoadMenuFailure.html",[0,0.473,2,0.634,3,0.031,4,0.031,5,0.037,8,1.341,14,2.171,16,2.02,17,1.104,32,0.247,33,1.071,34,0.217,35,0.469,36,0.754,37,1.893,38,1.321,39,0.332,40,1.28,42,0.271,44,0.599,45,0.006,46,0.321,47,0.345,49,0.602,50,0.483,51,0.093,52,0.465,57,0.075,58,0.763,76,1.698,77,1.897,79,0.957,91,1.341,92,1.341,93,1.211,126,1.586,132,2.171,137,0.003,138,0.004,139,0.003,166,1.975,186,2.426,187,2.754,188,2.049,189,2.068,215,2.055,225,2.162,233,1.324,235,2.635,244,1.802,245,1.302,246,1.28,250,1.302,251,1.347,252,1.443,580,4.961,631,2.659,900,3.673,922,3.587,930,2.755,1159,2.755,1166,2.659,1826,2.861,1849,4.594,1856,4.594,1857,2.861,1858,4.555,1860,4.003,1861,2.659,1862,2.861,1863,4.131,1940,2.419,2436,2.755,2439,2.98,2440,2.755,2441,4.003,2442,4.131,2443,4.469,2444,4.131,2445,4.131,2446,2.861,2447,2.98,2448,4.157,2449,2.98,2450,2.98,2451,2.98,2452,2.861,2453,2.861,2454,4.786,2455,4.786,2456,4.157,2457,2.98,2458,2.98,2459,2.98,2460,2.98,2461,2.861,2857,6.3,2858,4.517]],["title/classes/LoadMenuSuccess.html",[0,0.257,2442,2.719]],["body/classes/LoadMenuSuccess.html",[0,0.473,2,0.634,3,0.031,4,0.031,5,0.037,8,1.341,14,2.171,16,2.02,17,1.104,32,0.247,33,1.071,34,0.217,35,0.469,36,0.754,37,1.893,38,1.321,39,0.332,40,1.28,42,0.271,44,0.599,45,0.006,46,0.321,47,0.345,49,0.602,50,0.483,51,0.093,52,0.465,57,0.075,58,0.763,76,1.698,77,1.897,79,0.957,91,1.341,92,1.341,93,1.211,126,1.586,132,2.171,137,0.003,138,0.004,139,0.003,166,1.975,186,2.426,187,2.754,188,2.049,189,2.068,215,2.055,225,2.162,233,1.324,235,2.635,244,1.802,245,1.302,246,1.28,250,1.302,251,1.347,252,1.443,580,4.961,631,2.659,900,3.673,922,3.587,930,2.755,1159,2.755,1166,2.659,1826,2.861,1849,4.594,1856,4.594,1857,2.861,1858,4.555,1860,4.003,1861,2.659,1862,2.861,1863,4.131,1940,2.419,2436,2.755,2439,2.98,2440,2.755,2441,4.003,2442,4.469,2443,4.131,2444,4.131,2445,4.131,2446,2.861,2447,2.98,2448,2.98,2449,4.157,2450,2.98,2451,2.98,2452,2.861,2453,2.861,2454,4.786,2455,4.786,2456,4.157,2457,2.98,2458,2.98,2459,2.98,2460,2.98,2461,2.861,2859,6.3,2860,4.517]],["title/classes/LoadSettings.html",[0,0.257,2466,2.719]],["body/classes/LoadSettings.html",[0,0.491,2,0.734,3,0.036,4,0.036,5,0.043,8,1.339,32,0.244,33,1.109,34,0.251,35,0.519,37,1.801,38,1.362,42,0.195,45,0.006,49,0.697,50,0.559,51,0.077,52,0.538,57,0.077,58,0.883,66,2.014,76,1.877,77,1.983,91,1.365,92,1.365,93,1.233,126,1.616,137,0.003,138,0.004,139,0.003,225,2.333,233,2.04,244,1.944,245,1.507,246,1.482,247,1.701,248,1.701,250,1.507,251,1.559,252,1.671,562,4.595,1299,4.318,2254,4.318,2255,3.079,2462,3.189,2465,3.451,2466,4.75,2467,4.456,2468,4.956,2469,4.456,2470,4.456,2471,4.593,2472,3.451,2473,3.451,2474,3.451,2475,3.312,2476,3.451,2477,3.451,2478,3.312,2861,5.23]],["title/classes/LoadSettingsFailure.html",[0,0.257,2467,2.719]],["body/classes/LoadSettingsFailure.html",[0,0.487,2,0.71,3,0.035,4,0.035,5,0.042,8,1.33,32,0.25,33,1.1,34,0.243,35,0.507,36,0.815,37,1.878,38,1.353,39,0.267,40,1.433,42,0.287,44,0.386,45,0.006,46,0.359,47,0.386,49,0.674,50,0.541,51,0.075,52,0.52,57,0.077,58,0.854,66,1.948,76,1.835,77,1.964,91,1.352,92,1.352,93,1.221,126,1.603,137,0.003,138,0.004,139,0.003,215,2.18,225,2.294,233,1.995,244,1.911,245,1.458,246,1.433,247,1.645,248,1.645,250,1.458,251,1.508,252,1.617,562,4.577,1299,4.246,2254,4.246,2255,2.978,2462,3.085,2465,3.338,2466,4.382,2467,4.687,2468,4.874,2469,4.382,2470,4.382,2471,3.338,2472,4.492,2473,3.338,2474,3.338,2475,3.204,2476,3.338,2477,3.338,2478,3.204,2862,6.808,2863,5.059]],["title/classes/LoadSettingsSuccess.html",[0,0.257,2254,2.635]],["body/classes/LoadSettingsSuccess.html",[0,0.487,2,0.71,3,0.035,4,0.035,5,0.042,8,1.33,32,0.25,33,1.1,34,0.243,35,0.507,36,0.815,37,1.878,38,1.353,39,0.267,40,1.433,42,0.287,44,0.386,45,0.006,46,0.359,47,0.386,49,0.674,50,0.541,51,0.075,52,0.52,57,0.077,58,0.854,66,1.948,76,1.835,77,1.964,91,1.352,92,1.352,93,1.221,126,1.603,137,0.003,138,0.004,139,0.003,215,2.18,225,2.294,233,1.995,244,1.911,245,1.458,246,1.433,247,1.645,248,1.645,250,1.458,251,1.508,252,1.617,562,4.577,1299,4.246,2254,4.542,2255,2.978,2462,3.085,2465,3.338,2466,4.382,2467,4.382,2468,4.874,2469,4.382,2470,4.382,2471,3.338,2472,3.338,2473,4.492,2474,3.338,2475,3.204,2476,3.338,2477,3.338,2478,3.204,2864,6.808,2865,5.059]],["title/components/LoginComponent.html",[100,1.376,267,0.932]],["body/components/LoginComponent.html",[0,0.225,3,0.029,4,0.029,5,0.035,17,1.855,19,2.178,28,1.729,32,0.226,33,0.715,34,0.201,35,0.445,39,0.315,42,0.338,44,0.319,45,0.006,46,0.539,47,0.319,51,0.136,52,0.431,55,2.735,56,1.963,57,0.035,61,1.186,78,2.178,91,0.64,92,0.64,93,0.578,99,3.042,100,2.186,101,4.466,104,2.944,109,3.4,110,4.187,112,1.227,117,1.911,137,0.003,138,0.004,139,0.003,148,1.908,159,0.928,163,1.166,178,1.664,198,1.227,199,1.811,267,1.359,268,1.437,269,1.977,270,1.492,271,3.186,272,1.52,273,1.52,275,2.628,276,1.411,277,3.435,281,2.169,287,1.609,290,1.507,291,2.865,292,1.464,308,1.885,309,2.695,316,0.754,317,1.206,318,1.52,319,2.464,320,1.186,321,1.269,326,2.762,328,3.214,333,2.31,346,2.31,378,1.464,390,5.713,391,5.343,392,6.208,402,1.269,403,2.169,404,2.128,405,1.338,406,2.756,407,1.52,408,1.52,409,1.437,410,1.908,411,2.169,412,1.437,413,2.169,414,1.411,415,1.52,416,1.437,417,2.169,418,2.756,419,1.437,420,2.756,421,1.437,422,1.52,423,1.386,424,2.169,425,1.437,426,1.464,427,1.492,428,1.362,429,2.169,430,1.386,431,1.52,432,1.437,433,1.437,434,1.52,435,1.411,436,1.52,437,1.437,438,1.437,439,1.52,440,1.411,441,1.52,442,1.437,443,1.52,444,1.464,445,1.437,446,1.437,447,1.52,448,1.437,449,1.492,450,2.528,451,1.52,452,1.437,453,1.52,454,1.411,455,1.437,456,1.464,457,1.437,458,1.437,459,1.692,460,1.437,461,1.52,462,1.437,463,1.437,464,1.437,465,1.583,466,1.411,467,1.411,468,1.52,469,1.411,470,1.52,471,1.411,472,1.492,473,1.52,508,2.064,728,2.464,861,4.466,971,2.178,1171,3.036,1220,4.187,2795,4.592,2866,4.186,2867,6.96,2868,6.96,2869,5.971,2870,7.588,2871,6.96,2872,6.96,2873,6.96,2874,6.96,2875,7.588,2876,7.588,2877,5.971,2878,4.186,2879,4.186,2880,4.186,2881,4.186,2882,4.186,2883,4.186,2884,4.186,2885,4.186,2886,4.186,2887,4.186,2888,4.186,2889,4.186,2890,4.186,2891,4.186,2892,4.186,2893,4.186,2894,4.186,2895,4.186,2896,4.186,2897,4.186,2898,4.186,2899,4.186,2900,4.186,2901,4.186,2902,4.186,2903,5.971,2904,5.971,2905,5.971,2906,5.971,2907,5.971,2908,5.971]],["title/classes/Map.html",[0,0.257,163,1.331]],["body/classes/Map.html",[0,0.408,2,1.064,3,0.053,4,0.053,5,0.062,42,0.283,45,0.006,57,0.062,79,1.069,137,0.005,138,0.005,139,0.005,163,2.444,1176,5.163,2909,7.58,2910,7.58,2911,8.771,2912,7.58]],["title/injectables/MenuEffects.html",[635,3.92,683,1.448]],["body/injectables/MenuEffects.html",[0,0.256,3,0.033,4,0.033,5,0.039,8,1.201,17,2.175,28,1.994,32,0.217,34,0.403,35,0.487,37,1.618,39,0.251,42,0.278,44,0.363,45,0.006,46,0.464,47,0.363,49,0.871,50,0.699,51,0.136,52,0.49,57,0.039,91,0.728,92,0.728,93,0.657,99,3.26,106,4.57,117,1.991,126,1.423,137,0.005,138,0.004,139,0.003,163,1.327,182,1.809,186,2.516,225,2.223,287,2.01,292,1.665,316,0.858,317,1.372,318,1.729,320,1.349,321,1.444,336,1.495,346,3.605,550,2.711,580,3.308,581,5.636,635,5.363,683,1.981,684,2.179,687,4.91,690,4.725,691,3.558,699,4.895,701,3.605,702,4.79,704,2.711,705,2.549,707,2.347,708,2.477,731,4.794,732,3.453,772,4.31,802,4.508,898,5.363,1046,5.016,1075,5.827,1091,5.363,1118,5.016,1122,4.31,1123,7.133,1525,5.822,1858,3.605,1859,7.16,1860,2.627,1866,3.908,1941,4.247,2440,2.903,2441,2.627,2442,2.711,2443,2.711,2444,4.247,2445,4.247,2453,4.137,2761,5.827,2764,5.827,2913,4.761,2914,8.027,2915,4.761,2916,6.533,2917,6.533,2918,6.533,2919,6.533,2920,6.533,2921,6.533,2922,6.533,2923,4.761,2924,6.533,2925,6.533,2926,6.533,2927,6.533,2928,6.533,2929,6.533,2930,6.533,2931,6.533,2932,4.761,2933,6.533,2934,6.533]],["title/interfaces/MenuState.html",[576,2.087,587,3.92]],["body/interfaces/MenuState.html",[3,0.048,4,0.048,5,0.057,32,0.238,34,0.334,35,0.621,45,0.006,51,0.103,57,0.069,79,1.154,126,1.583,137,0.004,138,0.005,139,0.004,148,2.853,178,1.938,183,2.678,187,4.047,196,2.388,366,5.773,576,3.04,577,3.96,580,4.793,587,7.33,1940,3.725,2935,6.955,2936,9.467,2937,6.955,2938,6.955,2939,6.955]],["title/classes/Message.html",[0,0.257,55,1.876]],["body/classes/Message.html",[0,0.379,2,0.988,3,0.058,4,0.049,5,0.058,32,0.181,38,1.304,39,0.442,42,0.262,44,0.537,45,0.006,46,0.499,47,0.537,51,0.104,55,3.651,57,0.069,58,1.187,79,1.094,91,1.075,92,1.075,93,0.971,126,1.247,137,0.004,138,0.005,139,0.004,146,4.458,162,3.468,842,4.005,1171,5.102,2940,6.275,2941,7.034,2942,7.366,2943,7.034,2944,7.034,2945,6.275]],["title/directives/MouseWheelDirective.html",[405,1.526,471,1.61]],["body/directives/MouseWheelDirective.html",[0,0.304,3,0.039,4,0.039,5,0.047,7,2.263,28,1.818,32,0.209,34,0.271,42,0.34,44,0.431,45,0.006,46,0.401,47,0.431,51,0.084,57,0.06,137,0.004,138,0.005,139,0.004,276,1.903,277,2.513,290,1.848,308,1.402,309,2.795,316,1.017,335,3.442,345,3.214,397,5.05,405,2.746,466,1.903,471,2.467,472,2.608,1016,3.273,1094,5.619,1323,6.008,1336,4.633,1415,5.619,1685,7.01,2060,7.13,2065,6.528,2072,7.942,2076,6.667,2089,7.245,2298,8.284,2452,3.574,2946,5.644,2947,8.594,2948,7.319,2949,7.319,2950,7.319,2951,8.122,2952,8.122,2953,7.319,2954,7.319,2955,5.644,2956,5.644,2957,5.644,2958,5.644,2959,5.644,2960,5.644,2961,5.644,2962,5.644,2963,7.319,2964,5.644,2965,7.319,2966,7.319,2967,5.644,2968,5.644,2969,8.122,2970,5.644,2971,5.644,2972,5.644,2973,5.644,2974,7.319,2975,8.594,2976,5.644,2977,5.644,2978,5.644,2979,5.644,2980,5.644]],["title/components/MultiSettingsComponent.html",[267,0.932,448,1.64]],["body/components/MultiSettingsComponent.html",[0,0.205,3,0.027,4,0.027,5,0.031,28,1.64,32,0.232,33,0.668,34,0.183,35,0.416,39,0.201,42,0.357,44,0.616,45,0.006,46,0.62,47,0.616,49,0.744,50,0.864,51,0.114,52,0.392,57,0.031,61,1.08,79,0.68,100,1.098,107,1.504,112,1.117,117,1.851,137,0.002,138,0.003,139,0.002,148,1.783,151,2.334,159,0.867,182,1.162,198,1.117,199,1.692,267,1.289,268,1.309,269,1.848,270,1.359,272,1.385,273,1.385,275,2.492,276,1.285,277,3.414,281,2.027,287,2.177,290,1.409,291,2.492,292,1.333,308,2.234,309,2.536,316,0.687,320,1.08,321,1.156,379,1.197,402,1.156,403,2.027,404,1.989,405,1.218,406,2.639,407,1.385,408,1.385,409,1.309,410,1.783,411,2.027,412,1.309,413,2.027,414,1.285,415,1.385,416,1.309,417,2.397,418,2.639,419,3.289,420,2.639,421,1.309,422,1.385,423,1.262,424,2.027,425,1.309,426,1.333,427,1.359,428,1.24,429,2.027,430,1.262,431,1.385,432,1.309,433,1.309,434,1.385,435,1.285,436,1.385,437,1.309,438,1.309,439,1.385,440,1.285,441,1.385,442,1.309,443,1.385,444,1.333,445,1.309,446,1.309,447,1.385,448,2.495,449,2.974,450,2.397,451,1.385,452,1.309,453,1.385,454,1.285,455,1.309,456,1.333,457,1.309,458,1.309,459,1.581,460,1.309,461,1.385,462,1.309,463,1.309,464,1.309,465,1.011,466,1.285,467,1.285,468,1.385,469,1.285,470,1.385,471,1.285,472,1.359,473,1.385,508,1.88,562,3.406,675,2.103,978,3.285,1197,3.758,1199,5.982,1200,3.177,1201,3.534,1202,3.079,1203,5.285,1204,3.534,1205,3.642,1206,4.18,1207,4.601,1209,3.534,1210,3.534,1215,2.414,1217,2.414,1220,4.009,1221,2.414,1222,3.177,1224,2.414,1228,4.18,1238,2.414,1274,4.284,1276,2.765,1278,4.555,1280,3.85,1281,3.85,1294,2.414,1560,3.534,2116,6.48,2118,2.765,2119,2.765,2120,2.765,2126,2.765,2127,2.765,2128,2.765,2129,2.765,2130,2.765,2131,2.765,2132,2.765,2133,2.765,2134,2.765,2135,2.765,2136,2.765,2137,2.765,2138,2.765,2140,2.765,2141,5.269,2142,2.63,2795,2.515,2809,2.63,2810,2.927,2811,2.927,2981,7.732,2982,6.347,2983,3.4,2984,4.581,2985,6.48,2986,3.4,2987,3.812,2988,3.812,2989,3.812,2990,3.812,2991,3.812,2992,3.4]],["title/components/NavbarComponent.html",[112,1.4,267,0.932]],["body/components/NavbarComponent.html",[0,0.208,3,0.027,4,0.039,5,0.046,17,1.627,32,0.216,33,0.675,34,0.27,35,0.42,36,0.463,39,0.204,42,0.34,44,0.43,45,0.006,46,0.552,47,0.43,49,0.975,50,0.782,51,0.135,52,0.398,57,0.032,61,1.096,72,2.935,79,0.688,100,1.114,107,1.043,111,4.165,112,2.144,114,3.112,117,1.861,137,0.002,138,0.004,139,0.002,148,1.236,159,0.877,166,1.691,182,0.805,187,1.691,194,3.32,196,1.328,198,1.951,199,1.71,206,2.172,236,1.009,267,1.3,268,1.328,269,1.867,270,1.378,271,1.771,272,1.405,273,1.405,275,2.513,276,1.304,277,3.417,279,2.781,281,2.048,284,5.464,287,1.794,290,1.424,291,2.762,292,1.353,301,3.175,308,1.817,309,2.297,316,0.697,317,1.114,318,1.405,319,2.277,320,1.096,321,1.173,322,3.175,324,3.45,336,1.214,345,4.623,346,3.112,350,3.175,372,1.52,373,1.489,374,1.52,375,1.52,376,1.52,377,1.52,378,1.353,379,1.214,380,1.52,381,1.52,382,1.52,383,1.432,384,1.52,385,1.489,386,1.52,387,1.52,388,1.52,389,1.52,401,5.031,402,1.173,403,2.048,404,2.01,405,1.236,406,2.657,407,1.405,408,1.405,409,1.328,410,1.802,411,2.048,412,1.328,413,2.048,414,1.304,415,1.405,416,1.328,417,2.048,418,2.657,419,1.328,420,2.657,421,1.328,422,1.405,423,1.281,424,2.048,425,1.328,426,1.353,427,1.378,428,1.258,429,2.048,430,1.281,431,1.405,432,1.328,433,1.328,434,1.405,435,1.304,436,1.405,437,1.328,438,1.328,439,1.405,440,1.304,441,1.405,442,1.328,443,1.405,444,1.353,445,1.328,446,1.328,447,1.405,448,1.328,449,1.378,450,2.417,451,1.405,452,1.328,453,1.405,454,1.304,455,1.328,456,1.353,457,1.328,458,1.328,459,1.598,460,1.328,461,1.405,462,1.328,463,1.328,464,1.328,465,1.026,466,1.304,467,1.304,468,1.405,469,1.304,470,1.405,471,1.304,472,1.378,473,1.405,514,2.669,570,7.242,580,1.958,709,2.359,855,2.134,856,2.071,971,2.935,1416,3.721,1427,3.439,1430,3.891,1453,3.45,1454,3.45,1858,3.673,1863,2.202,1866,3.175,1940,2.071,2441,3.112,2699,3.45,2993,3.868,2994,6.656,2995,5.64,2996,6.656,2997,5.64,2998,5.64,2999,6.656,3000,5.64,3001,7.315,3002,6.656,3003,5.64,3004,3.868,3005,3.868,3006,3.868,3007,3.868,3008,3.868,3009,3.868,3010,3.868,3011,3.868,3012,3.868,3013,3.868,3014,3.868,3015,3.868,3016,3.868,3017,3.868,3018,3.868,3019,3.868,3020,3.868,3021,3.868,3022,3.868,3023,3.868,3024,3.868,3025,3.868,3026,3.868,3027,3.868,3028,3.868,3029,3.868,3030,3.868,3031,3.868,3032,3.868,3033,3.868,3034,5.64,3035,5.64,3036,5.64,3037,5.64,3038,5.64,3039,5.64,3040,5.64,3041,3.868,3042,6.005,3043,7.315,3044,3.868,3045,5.64,3046,5.64,3047,3.868,3048,3.868,3049,5.031,3050,5.64,3051,5.64,3052,3.868,3053,3.868]],["title/components/NoSelectionComponent.html",[267,0.932,452,1.64]],["body/components/NoSelectionComponent.html",[0,0.293,3,0.038,4,0.038,5,0.045,32,0.184,33,0.855,34,0.261,39,0.42,42,0.266,45,0.006,46,0.566,51,0.081,57,0.045,61,1.541,100,1.567,112,1.593,137,0.003,138,0.004,139,0.003,159,1.11,198,1.593,199,2.166,240,4.072,267,1.558,268,1.867,269,2.365,270,1.938,272,1.975,273,1.975,275,3.011,276,1.833,277,3.487,281,2.594,290,1.803,291,3.198,308,1.351,309,1.707,316,0.98,402,1.649,403,2.594,404,2.545,405,1.737,406,3.077,407,1.975,408,1.975,409,1.867,410,2.282,411,2.594,412,1.867,413,2.594,414,1.833,415,1.975,416,1.867,417,2.594,418,3.077,419,1.867,420,3.077,421,1.867,422,1.975,423,1.8,424,2.594,425,1.867,426,1.902,427,1.938,428,1.768,429,2.594,430,1.8,431,1.975,432,1.867,433,1.867,434,1.975,435,1.833,436,1.975,437,1.867,438,1.867,439,1.975,440,1.833,441,1.975,442,1.867,443,1.975,444,1.902,445,1.867,446,1.867,447,1.975,448,1.867,449,1.938,450,2.897,451,1.975,452,2.909,453,1.975,454,1.833,455,1.867,456,1.902,457,1.867,458,1.867,459,2.024,460,1.867,461,1.975,462,1.867,463,1.867,464,1.867,465,1.442,466,1.833,467,1.833,468,1.975,469,1.833,470,1.975,471,1.833,472,1.938,473,1.975,1274,5.484,2277,7.115,3054,7.977,3055,5.437,3056,7.143,3057,5.437,3058,5.437]],["title/classes/ParameterListItem.html",[0,0.257,209,2.912]],["body/classes/ParameterListItem.html",[0,0.489,2,0.673,3,0.033,4,0.033,5,0.039,8,0.684,11,1.74,32,0.193,36,0.574,38,1.471,39,0.485,42,0.179,44,0.366,45,0.006,46,0.466,47,0.366,50,0.861,51,0.111,57,0.077,58,1.108,79,1.177,91,1.387,92,1.387,93,1.253,102,2.094,137,0.003,138,0.004,139,0.003,142,2.922,144,4.001,145,5.125,146,3.985,147,2.728,148,2.942,149,3.034,150,3.034,151,2.004,152,2.745,153,3.034,154,3.034,155,3.034,156,3.034,157,3.034,159,0.745,160,2.426,161,1.962,162,2.363,163,1.335,164,3.034,165,2.644,166,2.094,167,3.034,168,2.922,169,3.034,170,3.034,171,3.034,172,3.034,173,3.034,174,3.034,175,3.034,176,3.034,177,4.156,178,1.335,179,3.621,180,3.034,181,4.156,182,1.366,183,1.845,184,3.862,185,3.034,186,2.527,187,2.094,188,1.558,189,2.193,190,3.034,191,3.034,192,3.034,193,3.034,194,2.82,195,2.922,196,3.061,197,4.001,198,1.404,199,1.453,200,2.922,201,2.922,202,2.922,203,2.193,204,3.034,205,3.034,206,2.527,207,3.034,208,2.644,209,4.563,210,3.034,211,3.034,3059,4.791,3060,4.791]],["title/classes/PatchSettings.html",[0,0.257,1299,2.635]],["body/classes/PatchSettings.html",[0,0.487,2,0.71,3,0.035,4,0.035,5,0.042,8,1.33,32,0.25,33,1.1,34,0.243,35,0.507,36,0.815,37,1.878,38,1.353,39,0.267,40,1.433,42,0.287,44,0.386,45,0.006,46,0.359,47,0.386,49,0.674,50,0.541,51,0.075,52,0.52,57,0.077,58,0.854,66,1.948,76,1.835,77,1.964,91,1.352,92,1.352,93,1.221,126,1.603,137,0.003,138,0.004,139,0.003,215,2.18,225,2.294,233,1.995,244,1.911,245,1.458,246,1.433,247,1.645,248,1.645,250,1.458,251,1.508,252,1.617,562,4.577,1299,4.542,2254,4.246,2255,2.978,2462,3.085,2465,3.338,2466,4.382,2467,4.382,2468,4.874,2469,4.382,2470,4.382,2471,3.338,2472,3.338,2473,3.338,2474,4.492,2475,3.204,2476,3.338,2477,3.338,2478,3.204,3061,6.808,3062,5.059]],["title/classes/PatchSettingsFailure.html",[0,0.257,2470,2.719]],["body/classes/PatchSettingsFailure.html",[0,0.487,2,0.71,3,0.035,4,0.035,5,0.042,8,1.33,32,0.25,33,1.1,34,0.243,35,0.507,36,0.815,37,1.878,38,1.353,39,0.267,40,1.433,42,0.287,44,0.386,45,0.006,46,0.359,47,0.386,49,0.674,50,0.541,51,0.075,52,0.52,57,0.077,58,0.854,66,1.948,76,1.835,77,1.964,91,1.352,92,1.352,93,1.221,126,1.603,137,0.003,138,0.004,139,0.003,215,2.18,225,2.294,233,1.995,244,1.911,245,1.458,246,1.433,247,1.645,248,1.645,250,1.458,251,1.508,252,1.617,562,4.577,1299,4.246,2254,4.246,2255,2.978,2462,3.085,2465,3.338,2466,4.382,2467,4.382,2468,4.874,2469,4.382,2470,4.687,2471,3.338,2472,3.338,2473,3.338,2474,3.338,2475,3.204,2476,4.492,2477,3.338,2478,3.204,3063,6.808,3064,5.059]],["title/classes/PatchSettingsSuccess.html",[0,0.257,2469,2.719]],["body/classes/PatchSettingsSuccess.html",[0,0.487,2,0.71,3,0.035,4,0.035,5,0.042,8,1.33,32,0.25,33,1.1,34,0.243,35,0.507,36,0.815,37,1.878,38,1.353,39,0.267,40,1.433,42,0.287,44,0.386,45,0.006,46,0.359,47,0.386,49,0.674,50,0.541,51,0.075,52,0.52,57,0.077,58,0.854,66,1.948,76,1.835,77,1.964,91,1.352,92,1.352,93,1.221,126,1.603,137,0.003,138,0.004,139,0.003,215,2.18,225,2.294,233,1.995,244,1.911,245,1.458,246,1.433,247,1.645,248,1.645,250,1.458,251,1.508,252,1.617,562,4.577,1299,4.246,2254,4.246,2255,2.978,2462,3.085,2465,3.338,2466,4.382,2467,4.382,2468,4.874,2469,4.687,2470,4.382,2471,3.338,2472,3.338,2473,3.338,2474,3.338,2475,3.204,2476,3.338,2477,4.492,2478,3.204,3065,6.808,3066,5.059]],["title/classes/PayloadForSuccessfulAuthentication.html",[0,0.257,41,2.635]],["body/classes/PayloadForSuccessfulAuthentication.html",[0,0.459,1,3.255,2,0.489,3,0.024,4,0.024,5,0.057,6,1.981,7,1.396,8,1.312,9,4.315,10,1.456,11,2.524,12,3.603,13,3.956,14,3.578,15,1.92,16,2.798,17,1.91,18,3.815,19,3.873,20,3.07,21,2.122,22,2.048,23,3.834,24,2.864,25,3.682,26,3.815,27,3.452,28,1.554,29,3.07,30,3.562,31,3.18,32,0.243,33,0.998,34,0.167,35,0.389,36,1.115,37,1.501,38,1.211,39,0.275,41,3.452,42,0.302,44,0.265,45,0.006,46,0.247,47,0.568,51,0.093,52,0.358,53,3.956,54,1.762,55,2.458,56,1.632,57,0.073,58,0.587,59,1.762,60,3.35,61,0.986,62,2.332,63,3.35,64,1.811,65,3.682,66,3.342,67,4.6,68,3.957,69,3.35,70,2.048,71,2.507,72,3.616,73,2.735,74,3.986,75,3.35,76,1.686,77,1.652,78,3.616,79,1.136,80,3.873,81,3.769,82,3.986,83,3.107,84,2.122,85,2.122,86,3.18,87,3.18,88,2.388,89,3.07,90,2.122,91,1.274,92,1.274,93,1.15,94,2.122,95,2.048,96,2.122,97,2.122,98,1.981,99,1.521,100,1.003,101,2.048,102,2.735,103,3.18,104,3.085,105,2.878,106,1.981,107,0.938,108,2.048,109,1.981,110,1.92,111,3.957,112,1.02,113,2.122,114,1.92,115,2.048,116,2.793,117,1.195,118,2.122,119,2.122,120,4.237,121,2.048,122,2.122,123,2.97,124,2.122,125,3.07,126,0.617,127,2.122,128,2.048,129,2.122,130,2.048,131,2.122,132,2.507,133,3.07,134,1.521,135,2.122,136,1.981,137,0.002,138,0.003,139,0.002,842,2.97,1060,5.335,1061,5.335,3067,3.48,3068,3.48,3069,3.48,3070,3.48,3071,3.48,3072,3.48,3073,3.48,3074,3.48]],["title/classes/Process.html",[0,0.257,179,2.635]],["body/classes/Process.html",[0,0.489,2,0.675,3,0.033,4,0.033,5,0.04,8,0.687,11,1.747,32,0.193,36,0.576,38,1.471,39,0.486,42,0.179,44,0.367,45,0.006,46,0.467,47,0.367,50,0.704,51,0.111,57,0.077,58,1.111,79,1.164,91,1.389,92,1.389,93,1.254,102,2.103,137,0.003,138,0.004,139,0.003,142,2.933,144,4.012,145,4.969,146,3.69,147,2.739,148,2.945,149,3.046,150,3.046,151,2.012,152,2.752,153,3.046,154,3.046,155,3.046,156,3.046,157,3.046,159,0.748,160,2.435,161,1.97,162,2.372,163,1.34,164,4.749,165,2.654,166,2.103,167,3.046,168,2.933,169,3.046,170,3.046,171,3.046,172,3.046,173,3.046,174,3.046,175,3.046,176,3.046,177,4.167,178,1.34,179,4.137,180,3.046,181,4.167,182,1.37,183,1.852,184,3.873,185,3.046,186,2.534,187,2.103,188,1.564,189,2.202,190,3.046,191,3.046,192,3.046,193,3.046,194,2.831,195,2.933,196,3.064,197,4.012,198,1.41,199,1.459,200,2.933,201,2.933,202,2.933,203,2.202,204,3.046,205,3.046,206,2.534,207,3.046,208,2.654,209,4.012,210,3.046,211,3.046,842,2.739,3075,4.81,3076,4.81,3077,4.81]],["title/classes/RejectLogIn.html",[0,0.257,69,2.557]],["body/classes/RejectLogIn.html",[0,0.462,1,3.298,2,0.499,3,0.025,4,0.025,5,0.062,6,2.025,7,1.426,8,1.335,9,4.484,10,1.488,11,2.729,12,3.625,13,4.132,14,3.611,15,1.962,16,3.141,17,2.05,18,4.283,19,4.1,20,3.731,21,2.169,22,2.093,23,4.145,24,3.215,25,4.135,26,4.283,27,3.876,28,1.745,29,3.731,30,4,31,3.233,32,0.244,33,1.026,34,0.171,35,0.395,36,0.977,37,1.645,38,1.268,39,0.279,40,1.008,41,2.925,42,0.236,44,0.271,45,0.006,46,0.253,47,0.271,49,0.474,50,0.38,51,0.094,52,0.366,53,3.209,54,1.801,55,2.76,56,1.668,57,0.073,58,0.6,59,1.801,60,3.394,61,1.008,62,2.371,63,3.394,64,1.851,65,3.731,66,3.36,67,4.637,68,4,69,3.762,70,2.093,71,2.548,72,3.655,73,2.77,74,4.023,75,3.394,76,1.429,77,1.667,78,1.851,79,0.916,80,1.851,81,1.801,82,1.905,83,1.59,84,2.169,85,2.169,86,3.233,87,3.233,88,2.427,89,3.12,90,2.169,91,1.282,92,1.282,93,1.157,94,2.169,95,2.093,96,2.169,97,2.169,98,2.025,99,1.555,100,1.025,101,2.093,102,3.07,103,3.233,104,3.464,105,2.925,106,2.025,107,0.959,108,2.093,109,2.025,110,1.962,111,4,112,1.042,113,2.169,114,1.962,115,2.093,116,3.394,117,1.452,118,3.233,119,3.233,120,4.581,121,3.12,122,3.233,123,3.609,124,3.233,125,4.135,126,0.63,127,2.169,128,2.093,129,2.169,130,2.093,131,2.169,132,2.548,133,3.12,134,1.555,135,2.169,136,2.025,137,0.002,138,0.003,139,0.002,215,1.796,3078,5.301,3079,3.556]],["title/classes/RemoveLightCard.html",[0,0.257,249,2.418]],["body/classes/RemoveLightCard.html",[0,0.499,2,0.619,3,0.031,4,0.031,5,0.036,8,1.346,12,1.665,32,0.25,33,1.119,34,0.211,35,0.462,36,0.742,37,1.823,38,1.369,39,0.409,40,1.25,42,0.267,44,0.336,45,0.006,46,0.313,47,0.336,49,0.588,50,0.472,51,0.092,52,0.454,57,0.078,58,0.744,76,1.189,77,1.883,79,0.538,91,1.416,92,1.416,93,1.278,126,1.545,134,1.928,137,0.003,138,0.004,139,0.003,159,1.113,212,3.626,213,4.159,214,2.362,215,2.029,218,2.511,219,2.127,220,1.572,221,1.487,222,2.019,223,3.727,224,5.11,225,2.315,226,3.626,227,2.174,228,3.531,229,3.224,230,2.433,231,1.845,232,3.727,233,1.815,234,3.626,235,1.602,236,1.15,237,3.626,238,1.845,239,2.591,240,2.12,241,2.295,242,3.626,243,2.362,244,1.779,245,1.271,246,1.25,247,1.434,248,1.434,249,3.932,250,1.271,251,1.315,252,1.409,253,2.511,254,2.511,255,2.511,256,2.019,257,2.511,258,2.511,259,2.511,260,2.174,261,2.511,262,2.511,263,2.511,264,3.527,265,2.019,266,2.362,3080,6.195,3081,4.41]],["title/classes/RouterStateUrl.html",[0,0.257,594,3.666]],["body/classes/RouterStateUrl.html",[0,0.384,2,0.761,3,0.038,4,0.055,5,0.045,7,2.174,11,2.893,13,4.284,28,1.347,32,0.14,33,0.649,38,1.157,39,0.376,42,0.202,44,0.671,45,0.006,46,0.385,47,0.414,51,0.106,57,0.066,79,0.971,88,3.263,91,0.829,92,0.829,93,0.748,117,1.825,137,0.003,138,0.004,139,0.003,178,2.358,182,1.484,186,3.475,203,3.263,231,2.982,250,2.438,287,1.461,308,1.771,459,2.02,550,3.087,581,4.515,593,3.741,594,6.115,663,4.45,771,4.515,900,3.609,922,4.059,932,6.286,991,4.919,1016,2.424,1179,4.196,1861,4.981,1867,4.162,1868,4.836,1869,6.946,1872,4.836,1873,6.359,1875,4.836,1876,6.946,1878,4.836,1879,4.836,1880,8.049,1881,4.836,1882,5.852,1883,6.359,1884,7.407,1885,6.359,1886,6.359,1887,6.946,1888,6.359,1889,6.359,1890,6.359,1891,6.359,1892,6.359,1893,6.359,1894,4.836,1895,4.836,1896,4.836,1897,4.836,1898,4.836,1899,4.836,1900,4.836,3082,5.421,3083,5.421]],["title/classes/SelectArchivedLightCard.html",[0,0.257,774,2.912]],["body/classes/SelectArchivedLightCard.html",[0,0.473,2,0.761,3,0.038,4,0.038,5,0.045,8,1.314,10,2.268,32,0.25,33,1.08,34,0.26,35,0.531,36,0.853,37,1.772,38,1.336,39,0.286,40,1.536,42,0.297,44,0.414,45,0.006,46,0.385,47,0.414,49,0.723,50,0.58,51,0.118,52,0.558,57,0.076,58,0.915,77,1.951,79,0.869,91,1.406,92,1.406,93,1.269,126,1.412,137,0.003,138,0.004,139,0.003,159,1.108,163,1.511,215,2.257,219,2.448,220,1.932,221,1.828,222,2.482,235,1.969,236,1.414,239,2.268,244,1.978,245,1.562,246,1.536,247,1.763,248,1.763,260,2.673,307,3.433,410,2.809,465,1.437,694,4.689,710,3.577,711,4.857,764,3.577,767,3.932,768,3.306,769,3.306,770,4.857,771,4.515,772,3.577,773,3.71,774,5.16,775,3.932,776,3.932,777,3.741,778,3.932,779,3.932,780,3.932,781,3.932,782,5.171,783,3.741,3084,7.129,3085,5.421]],["title/classes/SelectLightCard.html",[0,0.257,234,2.418]],["body/classes/SelectLightCard.html",[0,0.499,2,0.619,3,0.031,4,0.031,5,0.036,8,1.346,12,1.665,32,0.25,33,1.119,34,0.211,35,0.462,36,0.742,37,1.823,38,1.369,39,0.409,40,1.25,42,0.267,44,0.336,45,0.006,46,0.313,47,0.336,49,0.588,50,0.472,51,0.092,52,0.454,57,0.078,58,0.744,76,1.189,77,1.883,79,0.538,91,1.416,92,1.416,93,1.278,126,1.545,134,1.928,137,0.003,138,0.004,139,0.003,159,1.113,212,3.626,213,4.159,214,2.362,215,2.029,218,2.511,219,2.127,220,1.572,221,1.487,222,2.019,223,3.727,224,5.11,225,2.315,226,3.626,227,2.174,228,3.531,229,3.224,230,2.433,231,1.845,232,3.727,233,1.815,234,3.932,235,1.602,236,1.15,237,3.626,238,1.845,239,2.591,240,2.12,241,2.295,242,3.626,243,2.362,244,1.779,245,1.271,246,1.25,247,1.434,248,1.434,249,3.626,250,1.271,251,1.315,252,1.409,253,2.511,254,2.511,255,2.511,256,2.019,257,2.511,258,2.511,259,3.527,260,2.174,261,2.511,262,2.511,263,2.511,264,2.511,265,2.019,266,2.362,3086,6.195,3087,4.41]],["title/classes/SelectMenuLink.html",[0,0.257,1860,2.635]],["body/classes/SelectMenuLink.html",[0,0.467,2,0.61,3,0.03,4,0.03,5,0.036,7,1.744,8,1.343,14,2.948,16,2.743,17,1.499,32,0.245,33,1.061,34,0.208,35,0.457,36,0.734,37,1.895,38,1.309,39,0.323,40,1.232,42,0.265,44,0.621,45,0.006,46,0.309,47,0.332,49,0.579,50,0.465,51,0.091,52,0.447,57,0.074,58,0.734,76,1.653,77,1.874,79,0.941,91,1.327,92,1.327,93,1.198,126,1.571,132,2.948,137,0.003,138,0.004,139,0.003,166,2.681,186,2.362,187,2.681,188,2.51,189,2.808,215,2.013,225,2.118,233,1.274,235,2.581,244,1.765,245,1.253,246,1.232,250,1.253,251,1.296,252,1.389,580,5.001,631,3.61,900,3.908,922,3.492,930,2.651,1159,3.74,1166,3.61,1826,3.884,1849,4.5,1856,4.888,1857,3.884,1858,4.66,1860,4.259,1861,3.61,1862,3.884,1863,4.634,1940,2.328,2436,2.651,2439,2.869,2440,2.651,2441,3.921,2442,4.046,2443,4.046,2444,4.046,2445,4.046,2446,2.754,2447,2.869,2448,2.869,2449,2.869,2450,4.047,2451,4.047,2452,3.884,2453,3.884,2454,4.688,2455,4.688,2456,4.047,2457,2.869,2458,2.869,2459,2.869,2460,2.869,2461,2.754,3088,6.133,3089,4.348]],["title/classes/SelectMenuLinkFailure.html",[0,0.257,2445,2.719]],["body/classes/SelectMenuLinkFailure.html",[0,0.47,2,0.624,3,0.031,4,0.031,5,0.037,7,1.781,8,1.347,14,2.135,16,1.986,17,1.086,32,0.246,33,1.067,34,0.213,35,0.464,36,0.745,37,1.902,38,1.316,39,0.328,40,1.259,42,0.268,44,0.626,45,0.006,46,0.315,47,0.339,49,0.592,50,0.475,51,0.092,52,0.457,57,0.075,58,0.75,76,1.678,77,1.887,79,0.95,91,1.335,92,1.335,93,1.205,126,1.605,132,2.135,137,0.003,138,0.004,139,0.003,166,1.942,186,2.398,187,2.722,188,2.025,189,2.033,215,2.037,225,2.143,233,1.302,235,2.611,244,1.786,245,1.28,246,1.259,250,1.28,251,1.324,252,1.419,580,4.966,631,2.615,900,3.945,922,4.093,930,2.708,1159,2.708,1166,2.615,1826,2.813,1849,4.934,1856,4.934,1857,2.813,1858,4.526,1860,3.967,1861,2.615,1862,2.813,1863,4.436,1940,2.379,2436,2.708,2439,2.93,2440,2.708,2441,3.967,2442,4.093,2443,4.093,2444,4.093,2445,4.436,2446,2.813,2447,2.93,2448,2.93,2449,2.93,2450,2.93,2451,2.93,2452,2.813,2453,2.813,2454,5.14,2455,5.14,2456,4.108,2457,2.93,2458,2.93,2459,4.108,2460,4.108,2461,2.813,3090,6.226,3091,4.442]],["title/classes/SelectMenuLinkSuccess.html",[0,0.257,2444,2.719]],["body/classes/SelectMenuLinkSuccess.html",[0,0.47,2,0.621,3,0.031,4,0.031,5,0.036,7,1.775,8,1.346,14,2.127,16,1.979,17,1.082,32,0.246,33,1.066,34,0.212,35,0.463,36,0.743,37,1.901,38,1.315,39,0.327,40,1.254,42,0.268,44,0.625,45,0.006,46,0.314,47,0.338,49,0.59,50,0.473,51,0.092,52,0.455,57,0.075,58,0.747,76,1.674,77,1.885,79,0.948,91,1.333,92,1.333,93,1.204,126,1.578,132,2.127,137,0.003,138,0.004,139,0.003,166,1.935,186,2.996,187,2.715,188,2.02,189,2.026,215,2.033,225,2.139,233,1.297,235,2.606,244,1.782,245,1.275,246,1.254,250,1.275,251,1.319,252,1.414,580,4.964,631,2.605,900,3.938,922,4.085,930,3.787,1159,2.699,1166,2.605,1826,2.803,1849,4.926,1856,4.926,1857,2.803,1858,4.687,1860,3.959,1861,2.605,1862,2.803,1863,4.085,1940,2.37,2436,2.699,2439,2.92,2440,2.699,2441,3.959,2442,4.085,2443,4.085,2444,4.429,2445,4.085,2446,2.803,2447,2.92,2448,2.92,2449,2.92,2450,2.92,2451,2.92,2452,2.803,2453,2.803,2454,5.132,2455,5.132,2456,5.132,2457,4.097,2458,2.92,2459,2.92,2460,2.92,2461,2.803,3092,6.21,3093,4.426]],["title/classes/SendArchiveQuery.html",[0,0.257,694,2.811]],["body/classes/SendArchiveQuery.html",[0,0.473,2,0.761,3,0.038,4,0.038,5,0.045,8,1.314,10,2.268,32,0.25,33,1.08,34,0.26,35,0.531,36,0.853,37,1.772,38,1.336,39,0.286,40,1.536,42,0.297,44,0.414,45,0.006,46,0.385,47,0.414,49,0.723,50,0.58,51,0.118,52,0.558,57,0.076,58,0.915,77,1.951,79,0.869,91,1.406,92,1.406,93,1.269,126,1.412,137,0.003,138,0.004,139,0.003,159,1.108,163,1.511,215,2.257,219,2.448,220,1.932,221,1.828,222,2.482,235,1.969,236,1.414,239,2.268,244,1.978,245,1.562,246,1.536,247,1.763,248,1.763,260,2.673,307,3.433,410,2.809,465,1.437,694,4.981,710,3.577,711,4.857,764,3.577,767,3.932,768,3.306,769,3.306,770,4.857,771,4.515,772,3.577,773,3.71,774,4.857,775,3.932,776,3.932,777,3.741,778,5.171,779,3.932,780,3.932,781,3.932,782,3.932,783,3.741,3094,7.129,3095,5.421]],["title/modules/ServicesModule.html",[474,1.956,487,3.464]],["body/modules/ServicesModule.html",[0,0.287,3,0.037,4,0.049,5,0.058,28,1.323,36,0.638,39,0.281,42,0.199,45,0.006,47,0.538,51,0.144,57,0.044,73,2.329,107,1.436,126,0.944,137,0.003,138,0.004,139,0.003,182,1.109,203,3.226,236,1.39,290,1.345,293,6.513,308,1.323,316,0.96,334,4.753,360,4.09,372,2.093,373,2.052,374,2.093,375,2.093,376,2.093,377,2.093,378,1.864,379,1.673,380,2.093,381,2.093,382,2.093,383,1.973,384,2.093,385,2.052,386,2.093,387,2.093,388,2.093,389,2.093,402,1.616,449,1.899,474,2.182,475,3.864,476,2.561,477,2.94,478,3.136,479,3.034,480,4.649,481,2.697,487,7.271,490,4.013,491,3.136,493,2.773,497,4.11,501,3.136,502,4.298,505,3.034,543,4.09,544,4.09,673,3.249,688,5.687,731,4.955,732,3.864,850,4.863,851,4.09,861,5.286,971,2.773,1242,4.374,1432,5.476,1448,3.374,1686,4.374,1750,6.483,1752,6.483,1781,6.513,1797,4.753,2207,6.513,3096,4.753,3097,4.753,3098,6.513,3099,6.894,3100,5.328,3101,5.328,3102,7.048,3103,7.048,3104,5.328,3105,5.328,3106,4.753,3107,7.048,3108,5.328]],["title/classes/SetCardDataTimeline.html",[0,0.257,2747,3.295]],["body/classes/SetCardDataTimeline.html",[0,0.433,2,0.92,3,0.046,4,0.046,5,0.054,8,1.296,32,0.253,33,1.041,34,0.314,35,0.599,36,0.962,37,1.754,38,1.318,39,0.345,40,1.856,42,0.325,44,0.5,45,0.006,46,0.465,47,0.5,49,0.873,50,0.701,51,0.097,52,0.674,57,0.075,58,1.106,61,1.856,77,1.784,137,0.004,138,0.005,139,0.004,159,1.018,215,2.465,231,2.74,428,2.829,2049,4.148,2741,6.003,2742,5.029,2745,5.843,2746,5.377,2747,6.259,2748,5.843,2749,7.172,2750,5.843,2751,5.377,3109,8.04,3110,6.55]],["title/components/SettingsComponent.html",[267,0.932,454,1.61]],["body/components/SettingsComponent.html",[0,0.277,3,0.036,4,0.036,5,0.042,17,2.026,32,0.223,33,0.825,34,0.247,35,0.513,39,0.271,42,0.309,44,0.393,45,0.006,46,0.589,47,0.393,51,0.128,52,0.53,57,0.042,61,1.459,100,1.484,112,1.509,117,1.9,137,0.003,138,0.004,139,0.003,159,1.071,198,1.509,199,2.09,267,1.516,268,1.769,269,2.282,270,1.836,272,1.871,273,1.871,275,2.932,276,1.736,277,3.477,281,2.503,290,1.74,291,3.13,292,1.802,308,1.279,309,1.617,316,0.928,317,1.484,320,1.459,321,1.562,333,2.842,336,1.617,402,1.562,403,2.503,404,2.456,405,1.646,406,3.011,407,1.871,408,1.871,409,1.769,410,2.202,411,2.503,412,1.769,413,2.503,414,1.736,415,1.871,416,1.769,417,2.503,418,3.011,419,1.769,420,3.011,421,1.769,422,1.871,423,1.705,424,2.503,425,1.769,426,1.802,427,1.836,428,1.675,429,2.503,430,1.705,431,1.871,432,1.769,433,1.769,434,1.871,435,1.736,436,1.871,437,1.769,438,1.769,439,1.871,440,1.736,441,1.871,442,1.769,443,1.871,444,1.802,445,1.769,446,1.769,447,1.871,448,1.769,449,1.836,450,2.82,451,1.871,452,1.769,453,1.871,454,2.795,455,1.769,456,1.802,457,1.769,458,1.769,459,1.952,460,1.769,461,1.871,462,1.769,463,1.769,464,1.769,465,1.366,466,1.736,467,1.736,468,1.871,469,1.736,470,1.871,471,1.736,472,1.836,473,1.871,562,3.231,728,3.032,742,4.594,2984,5.656,3111,5.15,3112,5.29,3113,7.765,3114,6.891,3115,5.15,3116,5.15,3117,5.15,3118,5.15,3119,5.15,3120,5.15,3121,5.15,3122,5.15]],["title/injectables/SettingsEffects.html",[648,3.92,683,1.448]],["body/injectables/SettingsEffects.html",[0,0.281,1,2.71,3,0.036,4,0.036,5,0.043,8,0.744,17,2.226,28,2.069,32,0.215,34,0.25,35,0.517,39,0.274,42,0.311,44,0.397,45,0.006,46,0.37,47,0.397,49,1.041,50,0.835,51,0.139,52,0.536,57,0.043,59,2.637,91,0.796,92,0.796,93,0.719,99,3.792,117,2.045,137,0.003,138,0.004,139,0.003,163,1.451,182,1.445,225,2.069,287,1.871,292,1.822,316,0.938,317,1.501,318,1.892,319,3.066,320,1.476,321,1.579,336,1.635,562,3.905,648,5.699,683,2.105,684,2.384,687,5.026,690,4.086,691,2.843,699,5.079,701,4.309,702,5.186,704,2.966,705,2.789,707,2.568,708,2.71,1054,2.442,1086,6.837,1118,6.394,1122,5.495,1299,4.595,1300,4.275,1525,5.035,1543,3.999,1544,3.999,1545,3.999,1627,5.33,1709,5.33,1790,6.192,1791,6.192,2254,2.874,2255,3.066,2466,5.08,2467,2.966,2469,2.966,2470,2.966,3098,6.041,3106,4.646,3123,5.208,3124,7.809,3125,5.208,3126,6.942,3127,6.942,3128,6.942,3129,6.942,3130,6.942,3131,5.208,3132,6.942,3133,5.208,3134,6.942,3135,6.942,3136,6.942,3137,6.942,3138,6.942,3139,5.208]],["title/modules/SettingsModule.html",[474,1.956,3140,3.666]],["body/modules/SettingsModule.html",[0,0.303,3,0.039,4,0.051,5,0.06,32,0.145,36,0.673,45,0.006,51,0.145,57,0.046,73,2.456,107,1.514,137,0.003,138,0.005,139,0.003,236,1.465,316,1.012,372,2.208,373,2.164,374,2.208,375,2.208,376,2.208,377,2.208,378,1.965,379,1.764,380,2.208,381,2.208,382,2.208,383,2.08,384,2.208,385,2.164,386,2.208,387,2.208,388,2.208,389,2.208,402,1.704,419,3.129,433,3.129,446,3.129,448,3.129,454,3.072,457,3.129,462,3.129,463,2.783,474,2.301,476,2.7,477,3.1,478,4.77,479,3.199,480,3.307,481,2.844,490,4.155,491,3.307,493,3.797,497,3.797,502,4.45,505,3.199,506,5.602,507,5.602,508,2.77,514,3.877,519,5.293,520,3.908,521,3.009,562,2.634,1276,4.075,2112,5.011,2139,4.612,2140,6.222,2305,6.509,2822,5.011,2982,4.612,3140,7.663,3141,5.011,3142,5.011,3143,5.011,3144,6.609,3145,5.618,3146,5.011,3147,5.618,3148,5.618,3149,5.618,3150,5.618,3151,5.618,3152,6.509,3153,5.618,3154,5.011]],["title/modules/SettingsRoutingModule.html",[474,1.956,3144,3.464]],["body/modules/SettingsRoutingModule.html",[0,0.369,3,0.048,4,0.057,5,0.068,36,0.82,45,0.006,51,0.131,57,0.056,107,1.847,137,0.004,138,0.005,139,0.004,178,1.909,236,1.787,267,1.338,316,1.235,372,2.692,373,2.639,374,2.692,375,2.692,376,2.692,377,2.692,378,2.397,379,2.151,380,2.692,381,2.692,382,2.692,383,2.537,384,2.692,385,2.639,386,2.692,387,2.692,388,2.692,389,2.692,454,2.786,476,3.294,481,3.469,493,3.566,497,4.3,546,4.97,548,5.994,549,5.619,550,3.902,551,5.261,553,4.97,557,5.261,833,5.261,3144,5.994,3146,6.112,3155,6.852]],["title/injectables/SettingsService.html",[683,1.448,3098,3.464]],["body/injectables/SettingsService.html",[0,0.336,3,0.043,4,0.043,5,0.051,17,2.244,32,0.23,34,0.299,35,0.581,39,0.329,42,0.342,44,0.595,45,0.006,46,0.554,47,0.595,51,0.141,52,0.642,57,0.051,79,1.087,117,2.177,137,0.004,138,0.005,139,0.004,182,1.624,287,2.561,290,1.97,308,1.938,316,1.125,317,1.799,320,1.769,321,1.893,326,4.118,336,1.96,501,3.674,562,3.659,600,3.674,601,4.118,683,2.366,684,2.857,847,6.179,1303,5.568,1664,4.792,3098,5.66,3156,6.242,3157,8.513,3158,8.513,3159,8.919,3160,7.803,3161,7.803,3162,6.242,3163,6.242,3164,6.242,3165,6.242,3166,6.242,3167,6.242,3168,6.242,3169,6.242,3170,6.242,3171,6.242]],["title/interfaces/SettingsState.html",[576,2.087,589,3.92]],["body/interfaces/SettingsState.html",[3,0.049,4,0.049,5,0.058,32,0.239,34,0.336,35,0.624,45,0.006,57,0.069,79,1.092,126,1.682,137,0.004,138,0.005,139,0.004,148,3.077,178,1.953,183,2.699,196,2.876,360,7.283,366,5.785,562,4.352,576,3.063,577,3.99,589,7.354,2475,4.438,3172,7.008,3173,7.008]],["title/classes/State.html",[0,0.257,11,1.734]],["body/classes/State.html",[0,0.489,2,0.671,3,0.033,4,0.033,5,0.039,8,0.683,11,2.379,32,0.192,36,0.572,38,1.471,39,0.485,42,0.178,44,0.365,45,0.006,46,0.465,47,0.365,50,0.701,51,0.111,57,0.077,58,1.106,79,1.163,91,1.387,92,1.387,93,1.252,102,2.089,137,0.003,138,0.004,139,0.003,142,2.914,144,3.994,145,4.958,146,3.68,147,2.721,148,2.94,149,3.027,150,3.027,151,1.999,152,2.74,153,3.027,154,3.027,155,3.027,156,3.027,157,3.027,159,0.743,160,3.784,161,1.957,162,2.356,163,1.332,164,4.733,165,2.637,166,2.089,167,3.027,168,2.914,169,3.027,170,3.027,171,3.027,172,3.027,173,3.027,174,3.027,175,3.027,176,3.027,177,4.148,178,1.332,179,3.614,180,3.027,181,4.148,182,1.364,183,1.84,184,3.856,185,3.027,186,2.522,187,2.089,188,1.554,189,2.188,190,3.027,191,3.027,192,3.027,193,3.027,194,2.813,195,2.914,196,3.059,197,3.994,198,1.401,199,1.449,200,2.914,201,2.914,202,2.914,203,2.188,204,3.027,205,3.027,206,2.522,207,3.027,208,2.637,209,3.994,210,3.027,211,3.027,687,3.614,842,3.73,1411,3.466,3174,4.779,3175,4.779]],["title/modules/StateModule.html",[474,1.956,488,3.464]],["body/modules/StateModule.html",[0,0.313,3,0.04,4,0.052,5,0.061,9,2.938,34,0.278,36,0.695,42,0.216,45,0.006,51,0.142,52,0.766,57,0.048,73,2.536,107,1.564,117,1.707,137,0.004,138,0.005,139,0.004,182,1.208,203,3.411,236,1.514,290,1.465,308,1.441,316,1.045,372,2.28,373,2.235,374,2.28,375,2.28,376,2.28,377,2.28,378,2.03,379,1.822,380,2.28,381,2.28,382,2.28,383,2.148,384,2.28,385,2.235,386,2.28,387,2.28,388,2.28,389,2.28,402,1.76,427,2.068,474,2.376,476,2.789,477,3.202,478,4.386,479,3.304,480,4.386,481,2.938,488,6.78,490,4.242,491,3.416,493,3.877,497,4.283,502,4.543,505,3.304,543,4.455,544,4.455,581,3.675,593,5.141,595,5.176,600,5.287,601,3.828,656,5.176,657,5.176,660,5.176,661,6.646,705,3.107,1351,6.646,1750,6.756,1752,6.756,1867,6.319,1869,6.756,1876,6.116,1884,4.763,1887,4.763,3176,5.176,3177,5.176,3178,5.803,3179,5.803,3180,5.803,3181,5.803,3182,5.803,3183,5.176,3184,7.451,3185,5.803,3186,5.803,3187,5.803,3188,5.803,3189,5.803,3190,5.803,3191,5.803,3192,5.803,3193,5.803,3194,5.803,3195,5.803,3196,5.803,3197,5.803,3198,5.803]],["title/components/TagsFilterComponent.html",[267,0.932,455,1.64]],["body/components/TagsFilterComponent.html",[0,0.222,3,0.029,4,0.029,5,0.034,17,1.686,28,1.714,32,0.205,33,0.707,34,0.198,35,0.44,39,0.217,42,0.319,44,0.314,45,0.006,46,0.566,47,0.314,49,0.549,50,0.441,51,0.135,52,0.424,57,0.034,61,1.168,62,1.843,93,0.569,100,1.187,107,1.111,112,1.208,117,1.958,137,0.003,138,0.004,139,0.003,159,0.918,182,1.229,196,2.027,198,1.208,199,1.79,267,1.347,268,1.415,269,1.955,270,1.469,271,1.887,272,1.497,273,1.497,275,2.605,276,1.389,277,3.432,279,2.911,281,2.144,287,2.399,290,1.491,291,2.844,308,1.714,309,1.854,316,0.742,317,1.187,318,1.497,320,1.168,321,1.25,336,1.294,363,2.513,379,2.166,402,1.25,403,2.144,404,2.104,405,1.317,406,2.736,407,1.497,408,1.497,409,1.415,410,1.887,411,2.144,412,1.415,413,2.144,414,1.389,415,1.497,416,1.415,417,2.144,418,2.736,419,1.415,420,2.736,421,1.415,422,1.497,423,1.365,424,2.144,425,1.415,426,1.441,427,1.469,428,1.34,429,2.144,430,1.365,431,1.497,432,1.415,433,1.415,434,1.497,435,1.389,436,1.497,437,1.415,438,1.415,439,1.497,440,1.389,441,1.497,442,1.415,443,1.497,444,1.441,445,1.415,446,1.415,447,1.497,448,1.415,449,1.469,450,2.506,451,1.497,452,1.415,453,1.497,454,1.389,455,2.587,456,3.158,457,1.415,458,1.415,459,1.673,460,1.415,461,1.497,462,1.415,463,1.415,464,1.415,465,2.114,466,1.389,467,1.389,468,1.497,469,1.389,470,1.497,471,1.389,472,1.469,473,1.497,508,2.032,665,3.362,670,2.719,671,2.719,672,2.426,673,2.513,678,2.513,691,1.688,796,2.719,855,2.274,856,2.207,1136,2.61,1196,2.989,1197,3.928,1198,4.282,1200,3.928,1205,4.157,1214,3.164,1220,3.807,1222,2.347,1230,4.847,1231,3.383,1233,2.989,1234,4.282,1235,2.844,1236,2.844,1253,2.989,1255,2.989,1257,2.989,1262,2.989,1263,2.989,1416,2.719,1588,6.34,1649,2.989,2257,3.164,2303,7.797,2304,7.797,2767,5.663,2813,4.282,3042,3.383,3199,5.663,3200,6.899,3201,6.185,3202,4.121,3203,7.974,3204,4.121,3205,4.121,3206,4.121,3207,4.121,3208,5.904,3209,3.383,3210,3.383,3211,4.121,3212,3.383,3213,4.121,3214,4.121,3215,3.676,3216,3.383,3217,4.121,3218,4.121,3219,3.383,3220,3.383,3221,4.121,3222,4.121,3223,4.121,3224,3.676,3225,3.383,3226,3.676]],["title/components/TextSettingComponent.html",[267,0.932,457,1.64]],["body/components/TextSettingComponent.html",[0,0.195,3,0.025,4,0.025,5,0.03,28,1.593,32,0.232,33,0.644,34,0.174,35,0.401,39,0.191,42,0.358,44,0.627,45,0.006,46,0.623,47,0.627,49,0.717,50,0.849,51,0.112,52,0.373,57,0.03,61,1.028,79,0.782,100,1.046,102,1.587,107,1.451,112,1.064,117,1.819,137,0.002,138,0.003,139,0.002,148,2.05,151,2.251,152,2.251,159,0.836,182,1.335,198,2.221,199,1.632,267,1.252,268,1.246,269,1.782,270,1.293,272,1.318,273,1.318,275,2.422,276,1.224,277,3.402,281,1.955,287,2.139,290,1.359,291,2.679,292,1.27,308,2.237,309,2.492,316,0.654,320,1.028,321,1.101,379,1.14,402,1.101,403,1.955,404,1.918,405,1.16,406,2.577,407,1.318,408,1.318,409,1.246,410,1.72,411,1.955,412,1.246,413,1.955,414,1.224,415,1.318,416,1.246,417,2.33,418,2.577,419,3.268,420,2.577,421,1.246,422,1.318,423,1.202,424,1.955,425,1.246,426,1.27,427,1.293,428,1.18,429,1.955,430,1.202,431,1.318,432,1.246,433,1.246,434,1.318,435,1.224,436,1.318,437,1.246,438,1.246,439,1.318,440,1.224,441,1.318,442,1.246,443,1.318,444,1.27,445,1.246,446,1.246,447,1.318,448,1.246,449,1.293,450,2.33,451,1.318,452,1.246,453,1.318,454,1.224,455,1.246,456,1.27,457,2.436,458,1.246,459,1.525,460,1.246,461,1.318,462,1.246,463,1.246,464,1.246,465,0.962,466,1.224,467,1.224,468,1.318,469,1.224,470,1.318,471,1.224,472,1.293,473,1.318,508,1.79,978,3.168,1197,3.652,1199,6.028,1200,3.064,1201,3.408,1202,2.97,1203,5.203,1204,4.493,1205,3.539,1206,4.062,1207,4.493,1209,3.408,1210,3.408,1215,2.299,1217,2.299,1220,3.915,1221,4.062,1222,4.04,1224,3.408,1228,4.062,1238,2.299,1271,2.979,1276,2.633,1277,2.787,1278,5.228,1279,4.132,1280,3.714,1281,3.714,1283,3.238,1294,2.299,1560,3.408,2113,6.329,2114,4.801,2116,6.43,2118,2.633,2119,2.633,2120,2.633,2126,2.633,2127,2.633,2128,2.633,2129,2.633,2130,2.633,2131,2.633,2132,2.633,2133,2.633,2134,2.633,2135,2.633,2136,2.633,2137,2.633,2138,2.633,2139,6.744,2140,2.633,2141,5.146,2142,2.504,2145,4.132,2146,4.132,2147,4.132,2795,2.395,2809,2.504,2810,2.787,2811,2.787,2831,3.238,2832,3.238,2992,3.238,3227,8.215,3228,5.382,3229,3.63,3230,3.63,3231,3.63,3232,3.63,3233,3.63,3234,3.63,3235,3.63,3236,3.63,3237,3.63,3238,3.63]],["title/classes/Third.html",[0,0.257,166,2.087]],["body/classes/Third.html",[0,0.482,2,0.632,3,0.031,4,0.031,5,0.037,8,0.643,11,2.282,32,0.202,34,0.216,36,0.867,38,1.466,39,0.479,42,0.234,44,0.479,45,0.006,46,0.556,47,0.479,50,0.672,51,0.107,57,0.076,58,1.061,79,1.205,91,1.366,92,1.366,93,1.234,102,1.967,137,0.003,138,0.004,139,0.003,142,2.745,144,3.832,145,4.852,146,3.587,147,2.563,148,2.902,149,2.85,150,2.85,151,1.883,152,2.629,153,2.85,154,2.85,155,2.85,156,2.85,157,2.85,159,1.218,160,2.279,161,1.843,162,2.219,163,1.254,164,4.585,165,2.483,166,2.747,167,2.85,168,2.745,169,4.585,170,2.85,171,2.85,172,2.85,173,2.85,174,2.85,175,2.85,176,2.85,177,3.98,178,1.254,179,3.467,180,2.85,181,3.98,182,1.308,183,1.733,184,4.613,185,2.85,186,2.42,187,1.967,188,1.464,189,3.314,190,2.85,191,2.85,192,2.85,193,2.85,194,2.649,195,2.745,196,3.009,197,3.832,198,1.319,199,1.365,200,2.745,201,2.745,202,2.745,203,2.06,204,2.85,205,2.85,206,2.42,207,2.85,208,2.483,209,3.832,210,2.85,211,2.85,290,1.586,308,1.118,719,5.605,842,4.694,3112,4.825,3239,6.284,3240,4.501,3241,6.284,3242,6.284,3243,6.284,3244,4.501,3245,4.501,3246,4.501]],["title/classes/ThirdMenu.html",[0,0.257,187,2.087]],["body/classes/ThirdMenu.html",[0,0.488,2,0.666,3,0.033,4,0.033,5,0.039,8,0.677,11,1.722,32,0.192,36,0.568,38,1.47,39,0.484,42,0.177,44,0.362,45,0.006,46,0.463,47,0.362,50,0.697,51,0.11,57,0.077,58,1.1,79,1.194,91,1.384,92,1.384,93,1.25,102,2.073,137,0.003,138,0.004,139,0.003,142,2.892,144,3.973,145,5.233,146,3.668,147,2.7,148,2.936,149,3.003,150,3.003,151,1.984,152,2.726,153,3.003,154,3.003,155,3.003,156,3.003,157,3.003,159,0.737,160,2.401,161,1.942,162,2.338,163,1.321,164,3.003,165,2.617,166,2.073,167,3.003,168,2.892,169,3.003,170,3.003,171,3.003,172,3.003,173,3.003,174,3.003,175,3.003,176,3.003,177,4.126,178,1.321,179,3.595,180,3.003,181,4.126,182,1.356,183,1.826,184,4.717,185,3.003,186,2.509,187,2.848,188,2.119,189,3.407,190,4.714,191,3.003,192,3.003,193,3.003,194,2.792,195,2.892,196,3.053,197,3.973,198,1.39,199,1.438,200,2.892,201,2.892,202,2.892,203,2.171,204,3.003,205,3.003,206,2.509,207,3.003,208,2.617,209,3.973,210,3.003,211,3.003,3247,4.23,3248,4.742]],["title/classes/ThirdMenuEntry.html",[0,0.257,184,2.811]],["body/classes/ThirdMenuEntry.html",[0,0.488,2,0.669,3,0.033,4,0.033,5,0.039,8,0.681,11,1.731,32,0.192,36,0.571,38,1.471,39,0.485,42,0.178,44,0.364,45,0.006,46,0.464,47,0.364,50,0.699,51,0.111,57,0.077,58,1.104,79,1.194,91,1.386,92,1.386,93,1.251,102,2.084,137,0.003,138,0.004,139,0.003,142,2.907,144,3.987,145,5.24,146,3.676,147,2.714,148,2.939,149,3.019,150,3.019,151,1.994,152,2.735,153,3.019,154,3.019,155,3.019,156,3.019,157,3.019,159,0.741,160,2.413,161,1.952,162,2.35,163,1.328,164,3.019,165,2.63,166,2.084,167,3.019,168,2.907,169,3.019,170,3.019,171,3.019,172,3.019,173,3.019,174,3.019,175,3.019,176,3.019,177,4.141,178,1.328,179,3.608,180,3.019,181,4.141,182,1.361,183,1.836,184,4.393,185,3.019,186,3.093,187,2.084,188,2.127,189,2.182,190,3.019,191,3.019,192,3.019,193,3.019,194,2.806,195,2.907,196,3.057,197,3.987,198,1.397,199,1.446,200,2.907,201,2.907,202,2.907,203,2.182,204,3.019,205,3.019,206,2.518,207,3.019,208,2.63,209,3.987,210,3.019,211,3.019,3247,4.252,3249,4.767]],["title/modules/ThirdpartyModule.html",[474,1.956,3250,3.666]],["body/modules/ThirdpartyModule.html",[0,0.355,3,0.046,4,0.056,5,0.066,36,0.788,45,0.006,51,0.135,57,0.054,73,2.878,107,1.775,137,0.004,138,0.005,139,0.004,236,1.718,316,1.186,372,2.587,373,2.536,374,2.587,375,2.587,376,2.587,377,2.587,378,2.303,379,2.067,380,2.587,381,2.587,382,2.587,383,2.438,384,2.587,385,2.536,386,2.587,387,2.587,388,2.587,389,2.587,402,1.997,440,3.199,474,2.697,476,3.165,477,3.633,478,5.133,479,3.75,480,3.876,481,3.334,490,4.593,491,3.876,493,4.198,497,4.198,502,4.919,505,3.75,514,4.544,560,5.405,3250,7.449,3251,5.874,3252,5.874,3253,5.874,3254,6.883,3255,6.585,3256,5.874]],["title/modules/ThirdpartyRoutingModule.html",[474,1.956,3254,3.464]],["body/modules/ThirdpartyRoutingModule.html",[0,0.371,3,0.048,4,0.058,5,0.068,36,0.825,45,0.006,51,0.132,57,0.057,107,1.857,137,0.004,138,0.005,139,0.004,178,1.92,236,1.797,267,1.345,316,1.241,372,2.707,373,2.654,374,2.707,375,2.707,376,2.707,377,2.707,378,2.41,379,2.163,380,2.707,381,2.707,382,2.707,383,2.551,384,2.707,385,2.654,386,2.707,387,2.707,388,2.707,389,2.707,440,2.795,476,3.312,481,3.489,493,3.586,497,4.315,546,4.998,548,6.014,549,5.633,550,3.924,553,4.998,833,5.29,3254,6.014,3256,6.147,3257,6.891,3258,6.891]],["title/classes/ThirdsI18nLoader.html",[0,0.257,3259,3.92]],["body/classes/ThirdsI18nLoader.html",[0,0.287,2,0.504,3,0.025,4,0.025,5,0.03,17,2.196,24,1.642,28,2.089,32,0.137,33,0.639,34,0.172,38,0.521,39,0.189,42,0.199,44,0.407,45,0.006,46,0.452,47,0.407,51,0.133,52,0.369,57,0.053,79,1.176,117,1.46,137,0.004,138,0.003,139,0.002,152,1.501,163,1.966,166,2.332,178,2.553,182,2.019,183,1.381,186,1.381,187,1.568,188,2.294,189,3.933,198,1.051,219,1.232,221,1.21,227,2.631,236,0.936,250,1.034,287,2.357,290,1.347,308,0.891,316,0.646,317,1.034,318,1.303,320,1.016,328,2.754,336,1.126,465,0.951,501,2.112,520,1.921,521,1.921,566,2.945,580,1.816,600,2.112,683,1.618,691,2.609,699,3.254,707,1.769,708,1.867,709,2.188,731,4.361,802,2.475,847,4.203,849,2.754,855,1.979,856,1.921,861,3.75,903,2.475,932,5.005,971,2.777,991,2.475,1122,2.367,1135,2.475,1145,2.272,1176,2.112,1294,3.379,1401,2.367,1430,2.475,1431,3.52,1556,2.602,1687,5.791,1863,3.627,1940,1.921,2152,2.367,2172,5.203,2540,5.117,3112,4.096,3259,4.38,3260,3.2,3261,6.293,3262,5.336,3263,4.759,3264,3.587,3265,4.759,3266,3.587,3267,4.759,3268,5.682,3269,5.682,3270,3.2,3271,3.2,3272,3.2,3273,3.2,3274,3.2,3275,3.2,3276,3.2,3277,3.2,3278,3.2,3279,3.2,3280,3.2,3281,3.2,3282,3.2,3283,3.2,3284,3.2,3285,3.2,3286,3.2,3287,3.2,3288,3.2,3289,3.2,3290,3.2,3291,3.2,3292,3.2,3293,3.2,3294,5.682,3295,3.2,3296,3.2,3297,3.2,3298,4.759,3299,3.2,3300,3.2,3301,3.2,3302,3.2,3303,3.2,3304,3.2,3305,3.2,3306,3.2,3307,3.2,3308,3.2,3309,4.759,3310,3.2,3311,3.2,3312,3.2,3313,4.759,3314,3.2,3315,3.2,3316,3.2,3317,3.2,3318,3.2,3319,3.2,3320,3.2,3321,3.2,3322,3.2,3323,3.2,3324,3.2,3325,3.2,3326,5.682,3327,3.2,3328,3.2,3329,3.2,3330,3.2,3331,3.2,3332,3.2,3333,3.2,3334,3.2,3335,4.759,3336,4.38,3337,4.759,3338,2.945,3339,3.2,3340,3.2,3341,3.2,3342,3.2,3343,3.2,3344,3.2,3345,3.2,3346,3.2,3347,3.2,3348,3.2,3349,3.2,3350,3.2,3351,3.2,3352,3.2,3353,3.2,3354,3.2,3355,4.759,3356,3.2,3357,3.2,3358,3.2,3359,3.2,3360,3.2,3361,3.2,3362,3.2,3363,3.2,3364,3.2,3365,3.2,3366,4.759,3367,3.2,3368,3.2,3369,3.2,3370,3.2,3371,3.2,3372,3.2,3373,3.2,3374,3.2,3375,3.2,3376,3.2,3377,3.2,3378,4.759,3379,3.2,3380,4.759,3381,3.2,3382,4.759,3383,3.2,3384,4.759,3385,3.2,3386,3.2,3387,5.682,3388,3.2,3389,3.2,3390,3.2,3391,3.2,3392,3.2,3393,3.2,3394,3.2,3395,3.2,3396,3.2,3397,3.2,3398,3.2,3399,3.2]],["title/injectables/ThirdsService.html",[683,1.448,731,2.635]],["body/injectables/ThirdsService.html",[0,0.243,3,0.02,4,0.02,5,0.024,17,2.221,24,1.317,28,2.003,32,0.223,33,0.345,34,0.138,35,0.336,38,0.808,39,0.152,42,0.336,44,0.629,45,0.006,46,0.615,47,0.629,49,0.741,50,0.595,51,0.127,52,0.296,57,0.046,79,1.216,117,1.736,137,0.003,138,0.003,139,0.002,152,1.204,163,1.904,166,1.971,178,2.443,182,1.968,183,1.108,186,1.108,187,2.43,188,2.046,189,4.187,198,0.843,219,1.909,221,0.97,227,2.223,236,0.751,250,0.829,265,1.317,287,2.529,290,1.138,308,2.088,316,0.519,317,0.829,318,1.045,320,0.815,328,2.21,336,0.904,465,0.763,501,1.694,520,1.541,521,1.541,566,2.363,580,1.457,600,1.694,683,1.367,684,1.317,691,2.277,699,2.75,707,1.419,708,1.498,709,1.755,731,3.472,802,1.986,847,4.781,849,2.21,855,1.588,856,1.541,861,4.459,903,1.986,932,4.59,971,2.347,991,1.986,1122,1.899,1135,1.986,1145,1.823,1176,1.694,1294,2.856,1401,4.508,1430,4.342,1431,3.668,1556,2.088,1664,2.21,1687,5.165,1863,3.165,1940,1.541,2152,1.899,2172,4.714,2540,5.257,3112,4.831,3259,2.363,3260,2.567,3261,4.959,3263,2.567,3265,2.567,3267,2.567,3268,6.758,3269,5.613,3270,2.567,3271,2.567,3272,2.567,3273,2.567,3274,2.567,3275,2.567,3276,4.959,3277,4.959,3278,4.959,3279,4.959,3280,4.959,3281,2.567,3282,2.567,3283,2.567,3284,2.567,3285,2.567,3286,2.567,3287,2.567,3288,2.567,3289,2.567,3290,2.567,3291,2.567,3292,2.567,3293,4.022,3294,4.959,3295,2.567,3296,4.022,3297,4.959,3298,5.613,3299,2.567,3300,2.567,3301,2.567,3302,2.567,3303,2.567,3304,2.567,3305,2.567,3306,2.567,3307,2.567,3308,2.567,3309,4.022,3310,2.567,3311,2.567,3312,4.022,3313,4.022,3314,2.567,3315,2.567,3316,4.022,3317,4.959,3318,2.567,3319,2.567,3320,2.567,3321,2.567,3322,2.567,3323,2.567,3324,2.567,3325,4.022,3326,4.959,3327,2.567,3328,2.567,3329,2.567,3330,2.567,3331,2.567,3332,2.567,3333,2.567,3334,2.567,3335,4.022,3336,3.701,3337,4.022,3338,5.165,3339,2.567,3340,2.567,3341,2.567,3342,2.567,3343,2.567,3344,2.567,3345,2.567,3346,2.567,3347,2.567,3348,2.567,3349,4.022,3350,2.567,3351,2.567,3352,2.567,3353,2.567,3354,2.567,3355,4.022,3356,2.567,3357,2.567,3358,2.567,3359,2.567,3360,2.567,3361,4.022,3362,2.567,3363,2.567,3364,2.567,3365,2.567,3366,4.022,3367,2.567,3368,2.567,3369,2.567,3370,2.567,3371,2.567,3372,2.567,3373,2.567,3374,2.567,3375,2.567,3376,2.567,3377,2.567,3378,4.022,3379,2.567,3380,4.022,3381,2.567,3382,4.022,3383,2.567,3384,4.022,3385,2.567,3386,2.567,3387,4.959,3388,2.567,3389,2.567,3390,2.567,3391,2.567,3392,2.567,3393,2.567,3394,2.567,3395,2.567,3396,2.567,3397,2.567,3398,2.567,3399,2.567,3400,4.509,3401,4.509,3402,4.509,3403,4.509,3404,4.509,3405,4.022,3406,4.509,3407,4.509,3408,4.509,3409,4.509,3410,2.878,3411,2.878,3412,2.878,3413,2.878,3414,2.878,3415,2.878,3416,2.878,3417,2.878,3418,2.878,3419,2.878,3420,2.878,3421,2.878,3422,2.878,3423,2.878,3424,2.878,3425,2.878,3426,2.878,3427,2.878,3428,2.878,3429,2.878]],["title/classes/ThirdsServiceMock.html",[0,0.257,3430,4.26]],["body/classes/ThirdsServiceMock.html",[0,0.373,2,0.973,3,0.048,4,0.048,5,0.057,17,2.179,28,2.297,34,0.332,42,0.31,45,0.006,51,0.123,57,0.057,137,0.004,138,0.005,139,0.004,182,1.443,184,4.079,187,3.029,290,2.1,308,2.066,317,1.997,345,4.737,1940,3.711,3338,7.59,3405,7.953,3430,7.421,3431,6.929,3432,6.929,3433,6.929,3434,6.929,3435,6.929,3436,6.929,3437,6.929,3438,6.929,3439,6.929,3440,6.929,3441,6.929,3442,6.929,3443,6.929,3444,6.929,3445,6.929,3446,6.929,3447,6.929,3448,6.929,3449,6.929]],["title/classes/Tick.html",[0,0.257,2165,2.719]],["body/classes/Tick.html",[0,0.458,2,0.772,3,0.038,4,0.038,5,0.045,7,2.206,8,1.294,10,3.356,16,3.219,32,0.233,33,1.019,34,0.264,35,0.536,36,0.96,37,1.781,38,1.283,39,0.29,40,1.559,42,0.299,44,0.42,45,0.006,46,0.391,47,0.42,49,0.733,50,0.588,51,0.126,52,0.566,55,2.828,56,2.58,57,0.075,58,0.929,71,2.644,77,1.889,83,3.219,88,3.672,116,2.946,126,1.276,137,0.003,138,0.004,139,0.003,206,2.119,233,1.612,269,2.383,298,4.892,306,3.99,459,2.567,675,3.972,900,3.644,1054,3.375,1076,5.221,1145,3.484,1202,3.036,2149,4.558,2150,3.796,2151,3.796,2152,3.63,2153,4.224,2154,6.534,2155,4.224,2156,4.224,2159,4.224,2160,3.484,2161,3.796,2162,3.484,2163,3.796,2164,4.224,2165,5.029,2166,4.224,2167,4.967,2168,4.224,2169,6.406,2170,6.406,2171,5.526,2172,4.967,2173,6.159,2174,5.221,2175,4.967,2176,4.224,2177,4.224,2178,6.172,2179,4.224,2180,3.63,2181,3.99,2182,4.558,2183,4.224,2184,4.224,2185,3.99,3450,7.198,3451,5.502,3452,5.502]],["title/classes/TickPayload.html",[0,0.257,2178,3.464]],["body/classes/TickPayload.html",[0,0.462,2,0.788,3,0.039,4,0.039,5,0.046,7,2.25,8,1.269,10,3.388,16,2.509,32,0.229,33,0.969,34,0.269,35,0.543,36,1.064,37,1.633,38,1.177,39,0.296,42,0.302,44,0.428,45,0.006,46,0.398,47,0.428,51,0.127,52,0.577,55,2.864,56,2.63,57,0.075,58,0.947,71,2.696,77,1.903,83,2.509,88,3.337,116,3.004,126,1.292,137,0.003,138,0.005,139,0.003,206,3.302,233,1.644,269,1.857,298,4.445,306,4.069,459,2.518,675,3.095,900,2.84,1054,3.418,1076,4.069,1145,3.553,1202,3.095,2149,4.617,2150,3.871,2151,3.871,2152,3.701,2153,4.307,2154,6.218,2155,4.307,2156,4.307,2159,4.307,2160,3.553,2161,3.871,2162,3.553,2163,3.871,2164,4.307,2165,5.06,2166,4.307,2167,5.03,2168,4.307,2169,6.219,2170,6.219,2171,4.307,2172,3.871,2173,6.218,2174,4.069,2175,3.871,2176,4.307,2177,4.307,2178,5.288,2179,6.583,2180,5.657,2181,6.446,2182,4.617,2183,4.307,2184,4.307,2185,4.069,3453,5.61,3454,5.61,3455,5.61,3456,5.61]],["title/injectables/TimeEffects.html",[651,3.92,683,1.448]],["body/injectables/TimeEffects.html",[0,0.256,3,0.033,4,0.033,5,0.039,8,0.678,10,3.354,17,2.246,28,2.31,32,0.207,34,0.228,35,0.486,39,0.25,42,0.299,44,0.362,45,0.006,46,0.337,47,0.362,49,0.869,50,0.697,51,0.142,52,0.488,55,2.927,56,2.227,57,0.039,59,2.404,99,3.674,117,1.99,126,1.421,137,0.003,138,0.004,139,0.003,146,2.174,162,2.341,163,2.234,165,2.62,178,1.817,182,1.669,287,2.265,292,1.661,298,4.889,307,4.13,316,0.855,317,1.368,318,1.725,319,2.795,320,1.345,321,1.44,336,1.491,459,2.46,651,5.353,683,1.978,684,2.174,687,4.907,690,4.72,691,3.284,701,3.598,702,4.785,704,2.704,705,2.543,707,2.341,708,4.373,965,5.353,1046,5.007,1110,5.817,1118,5.007,1145,4.13,1171,3.444,1432,4.889,1448,3.007,1556,4.73,1627,6.156,2149,4.717,2151,4.5,2152,4.303,2160,4.717,2161,3.277,2165,4.241,2167,4.5,2169,4.73,2170,4.73,2182,3.007,2256,4.236,2722,4.236,3457,4.749,3458,7.448,3459,7.448,3460,7.448,3461,6.521,3462,6.521,3463,6.521,3464,6.521,3465,4.749,3466,6.521,3467,6.521,3468,6.521,3469,8.018,3470,6.521,3471,8.018,3472,6.521,3473,6.521,3474,4.749,3475,6.521,3476,6.521,3477,4.749,3478,4.749,3479,4.749]],["title/components/TimeFilterComponent.html",[267,0.932,458,1.64]],["body/components/TimeFilterComponent.html",[0,0.205,3,0.026,4,0.026,5,0.031,8,0.543,10,2.331,11,1.382,17,1.774,28,2.005,32,0.199,33,0.667,34,0.182,35,0.415,39,0.2,42,0.319,44,0.29,45,0.006,46,0.549,47,0.29,49,0.507,50,0.407,51,0.135,52,0.391,57,0.031,61,1.078,62,1.701,93,0.525,100,1.096,107,1.025,112,1.115,117,1.85,137,0.002,138,0.003,139,0.002,159,0.866,182,1.372,183,2.146,196,2.653,198,1.115,199,1.69,208,2.099,267,1.287,268,1.306,269,1.845,270,1.356,272,1.382,273,1.382,275,2.489,276,1.283,277,3.413,281,2.024,287,2.39,290,1.407,291,2.74,292,1.331,297,3.123,308,1.638,309,1.749,316,0.685,317,1.096,318,1.382,320,1.078,321,1.154,336,1.194,363,2.32,379,2.07,402,1.154,403,2.024,404,1.986,405,1.216,406,2.636,407,1.382,408,1.382,409,1.306,410,1.78,411,2.024,412,1.306,413,2.024,414,1.283,415,1.382,416,1.306,417,2.024,418,2.636,419,1.306,420,2.636,421,1.306,422,1.382,423,1.26,424,2.024,425,1.306,426,1.331,427,1.356,428,1.812,429,2.024,430,1.26,431,1.382,432,1.306,433,1.306,434,1.382,435,1.283,436,1.382,437,1.306,438,1.306,439,1.382,440,1.283,441,1.382,442,1.306,443,1.382,444,1.331,445,1.306,446,1.306,447,1.382,448,1.306,449,1.356,450,2.395,451,1.382,452,1.306,453,1.382,454,1.283,455,1.306,456,1.331,457,1.306,458,2.492,459,2.287,460,1.306,461,1.382,462,1.306,463,1.306,464,1.306,465,2.351,466,1.283,467,1.283,468,1.382,469,1.283,470,1.382,471,1.283,472,1.356,473,1.382,508,1.876,665,3.754,670,2.51,671,2.51,672,2.239,673,2.32,675,2.099,678,2.32,691,1.558,796,2.51,855,2.099,856,2.037,1196,2.759,1197,3.754,1198,4.041,1200,3.754,1205,4.005,1213,3.394,1214,2.921,1220,4.005,1222,3.173,1230,3.123,1233,2.759,1234,4.041,1235,2.625,1236,2.625,1253,2.759,1255,2.759,1257,2.759,1262,2.759,1263,2.759,1272,3.123,1427,3.398,1432,5.085,1448,2.409,1588,6.328,1644,3.123,1649,2.759,2081,4.041,2087,4.041,2202,3.123,2257,2.921,2285,7.782,2286,7.782,2795,4.35,2809,2.625,2813,5.603,3199,5.412,3201,5.958,3209,3.123,3210,4.574,3212,3.123,3216,4.574,3219,3.123,3220,3.123,3480,6.593,3481,5.572,3482,3.804,3483,3.804,3484,3.804,3485,3.394,3486,5.572,3487,3.804,3488,3.804,3489,3.804,3490,3.804,3491,5.572,3492,3.804,3493,3.804,3494,3.804,3495,3.804,3496,3.804,3497,3.804,3498,5.572,3499,3.804,3500,3.804,3501,3.804,3502,3.804,3503,5.572,3504,3.804,3505,3.804,3506,3.804,3507,3.804,3508,5.572,3509,5.572,3510,3.804,3511,3.804,3512,5.572,3513,5.572,3514,5.572]],["title/components/TimeLineComponent.html",[267,0.932,460,1.64]],["body/components/TimeLineComponent.html",[0,0.121,3,0.016,4,0.016,5,0.019,9,1.139,11,1.983,17,1.152,28,0.559,32,0.184,33,0.443,34,0.108,35,0.276,36,0.777,39,0.119,42,0.277,44,0.36,45,0.006,46,0.461,47,0.36,51,0.113,52,0.231,57,0.019,61,1.048,83,2.901,100,0.648,112,0.659,117,1.487,137,0.001,138,0.002,139,0.001,148,1.506,159,0.848,178,2.557,182,1.136,196,1.618,198,0.659,199,1.122,219,0.773,220,0.802,221,0.759,231,1.971,235,1.344,241,1.171,256,2.157,267,0.92,268,0.773,269,1.225,270,0.802,272,0.817,273,0.817,275,1.779,276,0.759,277,3.254,281,1.344,290,0.934,291,2.061,292,0.787,305,5.787,308,1.356,309,1.162,316,0.405,317,0.648,318,0.817,320,0.638,321,0.682,335,2.874,336,0.706,345,4.551,346,2.6,363,3.329,402,0.682,403,1.344,404,1.319,405,0.719,406,1.983,407,0.817,408,0.817,409,0.773,410,1.182,411,1.344,412,0.773,413,1.344,414,0.759,415,0.817,416,0.773,417,1.344,418,1.983,419,0.773,420,1.983,421,0.773,422,0.817,423,0.745,424,1.344,425,0.773,426,0.787,427,0.802,428,1.776,429,1.344,430,0.745,431,0.817,432,0.773,433,0.773,434,0.817,435,0.759,436,0.817,437,0.773,438,0.773,439,0.817,440,0.759,441,0.817,442,0.773,443,0.817,444,0.787,445,0.773,446,0.773,447,0.817,448,0.773,449,0.802,450,1.712,451,0.817,452,0.773,453,0.817,454,0.759,455,0.773,456,0.787,457,0.773,458,0.773,459,1.838,460,1.875,461,0.817,462,0.773,463,0.773,464,0.773,465,0.597,466,0.759,467,0.759,468,0.817,469,0.759,470,0.817,471,0.759,472,0.802,473,0.817,554,2.6,572,3.252,707,1.109,762,2.841,795,1.847,796,1.484,799,1.847,800,1.847,802,1.553,855,1.242,856,1.205,915,1.847,971,4.73,1016,4.481,1054,3.876,1057,4.481,1176,2.774,1177,1.425,1179,2.178,1197,2.683,1205,3.012,1235,2.553,1337,2.007,1370,2.007,1403,2.841,1404,2.841,1405,2.841,1406,2.553,1410,2.841,1498,2.007,1935,2.841,2049,2.984,2060,5.864,2081,5.797,2087,4.705,2104,2.007,2180,2.441,2202,4.481,2224,1.847,2280,6.813,2316,3.3,2435,5.325,2540,1.632,2577,3.3,2735,2.684,2741,3.252,2747,2.553,2942,3.868,3336,1.847,3515,2.25,3516,3.7,3517,7.162,3518,4.712,3519,3.7,3520,3.7,3521,3.7,3522,3.7,3523,5.381,3524,2.25,3525,3.7,3526,7.638,3527,3.7,3528,5.787,3529,4.87,3530,5.459,3531,4.712,3532,3.3,3533,3.7,3534,3.7,3535,2.25,3536,2.25,3537,3.7,3538,2.25,3539,3.7,3540,5.459,3541,8.578,3542,4.712,3543,2.25,3544,2.25,3545,2.25,3546,2.25,3547,8.81,3548,3.7,3549,2.25,3550,2.25,3551,3.7,3552,7.651,3553,2.25,3554,2.25,3555,8.578,3556,2.25,3557,2.25,3558,2.25,3559,2.25,3560,8.578,3561,8.381,3562,8.381,3563,6.033,3564,2.25,3565,2.25,3566,2.25,3567,2.25,3568,6.033,3569,5.459,3570,4.712,3571,6.033,3572,2.25,3573,2.25,3574,2.25,3575,2.25,3576,2.25,3577,2.25,3578,2.25,3579,2.25,3580,4.712,3581,2.25,3582,2.25,3583,2.25,3584,3.7,3585,3.7,3586,4.712,3587,3.7,3588,4.712,3589,3.7,3590,3.7,3591,3.7,3592,2.25,3593,2.25,3594,2.25,3595,2.25,3596,2.25,3597,2.25,3598,2.25,3599,2.25,3600,2.25,3601,2.25,3602,5.459,3603,5.459,3604,5.459,3605,5.459,3606,2.25,3607,5.459,3608,5.459,3609,2.25,3610,2.25,3611,2.25,3612,2.25,3613,2.25,3614,2.25,3615,2.25,3616,2.25,3617,2.25,3618,2.25,3619,2.25,3620,2.25,3621,3.7,3622,2.25,3623,2.25,3624,3.7,3625,2.25,3626,3.7,3627,2.25,3628,2.25,3629,2.25,3630,2.25,3631,3.7,3632,5.459,3633,2.25,3634,4.712,3635,3.7,3636,2.25,3637,3.7,3638,3.7,3639,2.25,3640,2.25,3641,2.25,3642,2.25,3643,2.25,3644,3.7,3645,2.25,3646,2.25,3647,2.25,3648,2.25,3649,2.25,3650,2.25,3651,2.25,3652,2.25,3653,4.712,3654,2.25,3655,2.25,3656,2.25,3657,2.25,3658,2.25,3659,3.7,3660,2.25,3661,2.25,3662,2.25,3663,2.25,3664,2.25]],["title/classes/TimeReference.html",[0,0.257,2160,3.024]],["body/classes/TimeReference.html",[0,0.262,2,0.682,3,0.034,4,0.034,5,0.04,32,0.225,34,0.233,38,1.095,39,0.256,42,0.334,44,0.667,45,0.006,46,0.621,47,0.667,50,0.866,51,0.098,57,0.062,58,0.82,79,1.066,137,0.005,138,0.004,139,0.003,148,1.553,178,2.436,182,1.863,183,2.903,203,3.451,206,3.684,287,2.357,290,1.673,308,2.172,345,2.768,459,1.377,572,3.354,739,4.336,1054,3.535,1176,3.9,2017,4.336,2160,4.196,2162,3.078,2180,6.163,2597,4.806,2671,5.911,3665,4.336,3666,8.744,3667,6.626,3668,6.626,3669,8.097,3670,4.86,3671,8.097,3672,7.539,3673,8.473,3674,7.223,3675,4.86,3676,7.539,3677,4.86,3678,4.86,3679,4.86,3680,4.86,3681,4.86,3682,4.86,3683,4.86,3684,4.86,3685,4.86,3686,6.626,3687,4.86,3688,8.097,3689,6.626,3690,4.86,3691,4.86,3692,4.86,3693,4.86,3694,4.86,3695,4.86,3696,4.86,3697,4.86,3698,4.86,3699,4.86,3700,4.86,3701,4.86,3702,4.86,3703,4.86,3704,4.86,3705,6.626,3706,4.86,3707,4.86,3708,4.86,3709,4.86,3710,4.86,3711,4.86,3712,4.86,3713,4.86,3714,4.86,3715,4.86,3716,4.86,3717,4.86,3718,4.86,3719,4.86,3720,4.86,3721,4.86,3722,6.626,3723,4.336,3724,4.336,3725,4.336,3726,3.732,3727,4.336,3728,4.336,3729,4.336,3730,4.336,3731,4.336,3732,4.336,3733,4.86,3734,4.86]],["title/classes/TimeSpan.html",[0,0.257,2175,3.295]],["body/classes/TimeSpan.html",[0,0.38,2,0.748,3,0.037,4,0.037,5,0.044,8,1.007,24,2.439,32,0.137,33,0.638,38,1.47,39,0.416,42,0.199,44,0.406,45,0.006,46,0.378,47,0.406,51,0.079,57,0.075,58,1.333,79,1.188,91,0.814,92,0.814,93,0.735,137,0.006,138,0.004,139,0.003,146,4.001,162,2.627,182,1.109,188,2.292,206,3.752,219,2.712,289,5.112,345,3.034,456,2.465,572,3.676,576,2.329,842,3.034,1016,2.383,1136,5.322,1177,3.374,1179,4.947,1182,6.096,1401,4.65,1402,5.411,1403,5.411,1404,5.411,1405,5.411,1406,6.32,1407,5.785,1408,5.785,1409,5.411,1410,5.411,1413,5.785,2081,5.112,2087,5.728,2175,5.799,2376,5.411,2377,4.753,2378,4.753,2379,6.063,2380,4.753,2381,6.063,2382,4.753,2432,4.09,2735,3.864,3735,6.287,3736,4.753,3737,5.328,3738,5.328,3739,7.048,3740,5.328,3741,4.753,3742,4.753,3743,5.328]],["title/interfaces/TimeState.html",[576,2.087,590,3.92]],["body/interfaces/TimeState.html",[3,0.048,4,0.048,5,0.057,32,0.23,34,0.333,35,0.621,45,0.006,51,0.132,55,3.635,56,3.255,57,0.069,126,1.677,137,0.004,138,0.005,139,0.004,178,1.934,183,2.673,576,3.035,577,3.953,590,7.324,1054,4.184,2160,6.204,2161,4.79,2162,4.396,2180,5.887,3744,6.942,3745,9.462,3746,6.942,3747,6.942,3748,6.942]],["title/interfaces/TimelineState.html",[576,2.087,591,3.92]],["body/interfaces/TimelineState.html",[3,0.038,4,0.038,5,0.045,7,2.193,11,3.285,13,3.63,24,2.504,32,0.227,34,0.262,35,0.534,45,0.006,51,0.118,55,2.817,57,0.07,79,1.103,126,1.677,137,0.003,138,0.004,139,0.003,148,2.556,159,1.406,178,1.998,182,1.139,183,2.106,188,2.332,196,1.878,206,2.761,219,3.277,220,1.949,221,1.844,231,3.956,265,3.282,364,5.201,366,5.621,428,2.332,554,3.956,576,2.391,577,3.114,591,6.567,611,4.879,785,7.077,1136,4.541,1369,5.886,1462,5.886,1547,6.396,1548,7.863,1549,5.505,1550,8.222,1551,7.574,1552,5.886,1554,6.396,1555,6.396,1556,5.201,1557,6.396,1560,4.541,1561,4.879,1562,4.879,1563,4.49,1565,4.879,1566,4.879,1567,4.879,1568,4.879,1584,6.396,1587,4.879,1935,5.505,3529,6.396,3749,5.469,3750,7.17,3751,7.17,3752,7.17,3753,7.17,3754,5.469,3755,5.469]],["title/interceptors/TokenInjector.html",[1711,4.26,3099,3.666]],["body/interceptors/TokenInjector.html",[0,0.331,3,0.043,4,0.043,5,0.051,10,2.572,17,2.066,32,0.218,33,0.736,34,0.295,39,0.324,42,0.315,44,0.645,45,0.006,46,0.6,47,0.645,51,0.131,57,0.051,91,1.181,92,1.181,93,1.261,137,0.004,138,0.005,139,0.004,178,2.356,182,1.609,186,2.368,290,1.952,308,1.92,316,1.108,317,1.772,336,1.93,501,3.619,683,2.344,861,5.492,1686,5.047,1709,6.811,1714,5.485,3099,5.935,3756,6.149,3757,6.149,3758,7.73,3759,7.73,3760,6.149,3761,6.149,3762,7.73,3763,9.663,3764,6.149,3765,7.73,3766,8.871,3767,6.149,3768,6.149,3769,7.73,3770,6.149,3771,6.149,3772,7.73,3773,6.149,3774,6.149,3775,6.149,3776,6.149,3777,6.149]],["title/classes/TryToLogIn.html",[0,0.257,19,2.485]],["body/classes/TryToLogIn.html",[0,0.464,1,3.33,2,0.508,3,0.025,4,0.025,5,0.058,6,2.059,7,1.45,8,1.339,9,4.436,10,1.512,11,2.572,12,3.62,13,4.013,14,3.809,15,1.995,16,2.862,17,1.937,18,3.902,19,4.124,20,3.159,21,2.205,22,2.128,23,4.174,24,2.93,25,3.767,26,3.902,27,3.531,28,1.59,29,3.159,30,3.644,31,3.272,32,0.244,33,1.031,34,0.173,35,0.4,36,0.982,37,1.654,38,1.273,39,0.283,40,1.024,41,2.961,42,0.239,44,0.276,45,0.006,46,0.257,47,0.276,49,0.482,50,0.387,51,0.095,52,0.372,53,3.24,54,1.83,55,2.515,56,1.695,57,0.073,58,0.61,59,1.83,60,3.427,61,1.024,62,2.4,63,3.427,64,1.881,65,3.767,66,3.423,67,4.665,68,4.032,69,3.427,70,2.128,71,2.579,72,3.685,73,2.797,74,4.051,75,3.427,76,1.447,77,1.679,78,1.881,79,0.922,80,1.881,81,1.83,82,1.936,83,1.617,84,2.205,85,2.205,86,3.272,87,3.272,88,2.457,89,3.159,90,2.205,91,1.288,92,1.288,93,1.163,94,2.205,95,2.128,96,3.272,97,3.272,98,3.056,99,2.346,100,1.546,101,3.159,102,3.095,103,3.902,104,3.73,105,3.531,106,3.056,107,1.447,108,3.159,109,2.059,110,1.995,111,4.032,112,1.06,113,2.205,114,1.995,115,2.128,116,2.874,117,1.23,118,2.205,119,2.205,120,4.318,121,2.128,122,2.205,123,3.056,124,2.205,125,3.159,126,0.641,127,2.205,128,2.128,129,2.205,130,2.128,131,2.205,132,2.579,133,3.159,134,1.58,135,2.205,136,2.059,137,0.002,138,0.003,139,0.002,215,1.813,3778,5.366,3779,3.615]],["title/classes/TryToLogOut.html",[0,0.257,72,2.485]],["body/classes/TryToLogOut.html",[0,0.467,1,3.385,2,0.522,3,0.026,4,0.026,5,0.059,6,2.116,7,1.491,8,1.344,9,4.465,10,1.555,11,2.607,12,3.619,13,4.053,14,3.848,15,2.051,16,2.909,17,1.957,18,3.966,19,3.982,20,3.224,21,2.266,22,2.188,23,4.222,24,2.977,25,3.829,26,3.966,27,3.589,28,1.616,29,3.224,30,3.704,31,3.34,32,0.238,33,1.038,34,0.178,35,0.408,36,0.916,37,1.447,38,1.281,39,0.196,41,3.022,42,0.139,45,0.006,49,0.495,50,0.398,51,0.096,52,0.382,53,3.293,54,1.882,55,2.556,56,1.743,57,0.074,58,0.627,59,1.882,60,3.483,61,1.053,62,2.449,63,3.483,64,1.934,65,3.829,66,3.485,67,4.712,68,4.087,69,3.483,70,2.188,71,2.633,72,3.982,73,2.843,74,4.098,75,3.483,76,1.476,77,1.698,78,1.934,79,0.933,80,1.934,81,1.882,82,1.99,83,1.662,84,2.266,85,2.266,86,3.34,87,3.34,88,2.507,89,3.224,90,2.266,91,1.298,92,1.298,93,1.172,94,2.266,95,2.188,96,2.266,97,2.266,98,2.116,99,1.625,100,1.071,101,2.188,102,3.137,103,3.966,104,3.207,105,3.589,106,2.116,107,1.002,108,2.188,109,2.116,110,2.051,111,4.714,112,1.605,113,3.34,114,3.022,115,3.224,116,2.933,117,1.255,118,2.266,119,2.266,120,4.377,121,2.188,122,2.266,123,3.119,124,2.266,125,3.224,126,0.659,127,2.266,128,2.188,129,2.266,130,2.188,131,2.266,132,2.633,133,3.224,134,1.625,135,2.266,136,2.116,137,0.002,138,0.003,139,0.002,3780,3.717]],["title/components/TypeAheadSettingsComponent.html",[267,0.932,462,1.64]],["body/components/TypeAheadSettingsComponent.html",[0,0.172,3,0.022,4,0.022,5,0.026,28,1.212,32,0.247,33,0.584,34,0.153,35,0.364,39,0.168,42,0.365,44,0.647,45,0.006,46,0.629,47,0.647,49,0.885,50,0.923,51,0.098,52,0.328,57,0.026,61,0.903,79,0.81,100,0.918,107,1.791,112,0.934,117,1.731,137,0.002,138,0.003,139,0.002,148,2.123,151,2.041,159,0.758,198,0.934,199,1.48,267,1.158,268,1.094,269,1.616,270,1.136,271,1.459,272,1.158,273,1.158,275,2.239,276,1.074,277,3.367,279,2.406,281,1.772,287,2.36,290,1.232,291,2.852,292,1.115,308,2.31,309,2.709,316,0.574,320,0.903,321,0.966,379,1.532,402,0.966,403,1.772,404,1.739,405,1.018,406,2.413,407,1.158,408,1.158,409,1.094,410,1.559,411,1.772,412,1.094,413,1.772,414,1.074,415,1.158,416,1.094,417,1.772,418,2.413,419,3.153,420,2.413,421,1.094,422,1.158,423,1.055,424,1.772,425,1.094,426,1.115,427,1.136,428,1.037,429,1.772,430,1.055,431,1.158,432,1.094,433,1.094,434,1.158,435,1.074,436,1.158,437,1.094,438,1.094,439,1.158,440,1.074,441,1.158,442,1.094,443,1.158,444,1.115,445,1.094,446,1.094,447,1.158,448,3.253,449,1.739,450,2.154,451,1.158,452,1.094,453,1.158,454,1.074,455,1.094,456,1.707,457,1.094,458,1.094,459,1.383,460,1.094,461,1.158,462,2.281,463,3.006,464,1.094,465,0.845,466,1.074,467,1.074,468,1.158,469,1.074,470,1.158,471,1.074,472,1.136,473,1.158,562,2.288,978,3.911,1136,2.018,1197,3.376,1199,6.128,1200,3.783,1201,4.208,1202,3.666,1203,5.265,1204,4.208,1205,4.168,1206,4.784,1207,4.784,1209,4.208,1210,4.208,1215,3.09,1217,3.09,1220,3.666,1221,3.09,1222,3.783,1224,3.09,1228,3.755,1238,2.018,1278,4.584,1280,4.584,1281,4.584,1294,3.09,1416,2.103,1560,3.09,2116,6.744,2118,2.312,2119,2.312,2120,2.312,2126,2.312,2127,2.312,2128,2.312,2129,2.312,2130,2.312,2131,2.312,2132,2.312,2133,2.312,2134,2.312,2135,2.312,2136,2.312,2137,2.312,2138,2.312,2142,2.199,2145,3.746,2982,2.616,2983,2.843,2984,4.006,2985,5.289,2986,2.843,3042,2.616,3152,2.843,3154,4.353,3224,2.843,3225,2.616,3226,2.843,3781,4.88,3782,5.929,3783,3.187,3784,3.187,3785,3.187,3786,4.88,3787,3.187,3788,3.187,3789,3.187,3790,3.187,3791,3.187,3792,3.187,3793,3.187,3794,3.187,3795,3.187,3796,3.187,3797,3.187,3798,3.187,3799,3.187,3800,3.187]],["title/components/TypeFilterComponent.html",[267,0.932,464,1.64]],["body/components/TypeFilterComponent.html",[0,0.191,3,0.025,4,0.037,5,0.044,8,0.506,17,1.832,28,2.08,32,0.237,33,0.632,34,0.17,35,0.394,36,0.424,39,0.186,42,0.312,44,0.27,45,0.006,46,0.532,47,0.27,49,0.472,50,0.379,51,0.133,52,0.364,57,0.029,61,1.003,62,1.583,93,0.488,100,1.02,107,1.424,112,1.037,117,1.802,137,0.002,138,0.003,139,0.002,159,0.821,182,1.316,196,2.876,198,1.037,199,1.602,236,0.923,239,2.21,267,1.234,268,1.215,269,1.749,270,1.261,271,1.62,272,1.286,273,1.286,275,2.386,276,1.193,277,3.395,279,2.605,281,1.919,287,2.308,290,1.334,291,2.646,292,1.238,308,1.57,309,1.658,316,0.638,317,1.02,318,1.286,320,1.003,321,1.073,336,1.111,363,2.158,372,1.391,373,1.363,374,1.391,375,1.391,376,1.391,377,1.391,378,1.238,379,2.2,380,1.391,381,1.391,382,1.391,383,1.311,384,1.391,385,1.363,386,1.391,387,1.391,388,1.391,389,1.391,391,2.717,394,2.335,399,3.157,402,1.073,403,1.919,404,1.883,405,1.131,406,2.545,407,1.286,408,1.286,409,1.215,410,1.688,411,1.919,412,1.215,413,1.919,414,1.193,415,1.286,416,1.215,417,1.919,418,2.545,419,1.215,420,2.545,421,1.215,422,1.286,423,1.172,424,1.919,425,1.215,426,1.238,427,1.261,428,1.151,429,1.919,430,1.172,431,1.286,432,1.215,433,1.215,434,1.286,435,1.193,436,1.286,437,1.215,438,1.215,439,1.286,440,1.193,441,1.286,442,1.215,443,1.286,444,1.238,445,1.215,446,1.215,447,1.286,448,1.215,449,1.261,450,2.295,451,1.286,452,1.215,453,1.286,454,1.193,455,1.215,456,1.238,457,1.215,458,1.215,459,1.497,460,1.215,461,1.286,462,1.215,463,1.215,464,2.406,465,2.27,466,1.193,467,1.193,468,1.286,469,1.193,470,1.286,471,1.193,472,1.261,473,1.286,508,1.745,665,3.008,670,2.335,671,2.335,672,2.083,673,2.158,675,1.953,678,2.158,691,1.449,796,2.335,855,1.953,856,1.895,1025,2.717,1136,4.002,1196,2.567,1197,3.598,1198,3.831,1200,3.598,1205,3.867,1214,2.717,1220,3.867,1222,2.015,1231,2.906,1232,3.157,1233,2.567,1234,3.831,1235,2.442,1236,2.442,1253,2.567,1255,2.567,1257,2.567,1262,2.567,1263,2.567,1427,3.221,1483,6.251,1496,3.157,1588,6.21,1649,2.567,2007,5.188,2049,2.242,2257,2.717,2283,7.637,2284,7.637,2376,2.717,2379,2.717,2381,2.717,2685,3.157,2767,5.188,2795,4.947,2809,2.442,2813,5.083,3049,6.688,3199,5.188,3201,5.752,3209,2.906,3210,5.188,3212,2.906,3215,3.157,3216,2.906,3219,2.906,3220,2.906,3225,2.906,3485,3.157,3726,2.717,3801,6.32,3802,3.54,3803,3.54,3804,3.54,3805,3.54,3806,3.54,3807,3.54,3808,5.282,3809,3.54,3810,3.54,3811,3.54,3812,3.54,3813,3.54,3814,3.54,3815,3.54,3816,3.54,3817,3.54,3818,3.54,3819,3.54,3820,3.54,3821,3.54,3822,3.54,3823,3.54,3824,3.54,3825,3.54,3826,3.54,3827,3.54,3828,5.282,3829,5.282,3830,5.282,3831,5.282,3832,5.282,3833,7.497,3834,3.54,3835,6.32,3836,5.282,3837,5.282,3838,6.32,3839,5.282,3840,3.54]],["title/classes/UpdateArchiveFilter.html",[0,0.257,770,2.912]],["body/classes/UpdateArchiveFilter.html",[0,0.473,2,0.761,3,0.038,4,0.038,5,0.045,8,1.314,10,2.268,32,0.25,33,1.08,34,0.26,35,0.531,36,0.853,37,1.772,38,1.336,39,0.286,40,1.536,42,0.297,44,0.414,45,0.006,46,0.385,47,0.414,49,0.723,50,0.58,51,0.118,52,0.558,57,0.076,58,0.915,77,1.951,79,0.869,91,1.406,92,1.406,93,1.269,126,1.412,137,0.003,138,0.004,139,0.003,159,1.108,163,1.511,215,2.257,219,2.448,220,1.932,221,1.828,222,2.482,235,1.969,236,1.414,239,2.268,244,1.978,245,1.562,246,1.536,247,1.763,248,1.763,260,2.673,307,3.433,410,2.809,465,1.437,694,4.689,710,3.577,711,4.857,764,3.577,767,3.932,768,3.306,769,3.306,770,5.16,771,4.515,772,3.577,773,3.71,774,4.857,775,5.171,776,3.932,777,3.741,778,3.932,779,3.932,780,3.932,781,3.932,782,3.932,783,3.741,3841,7.129,3842,5.421]],["title/classes/UpdateTimeReference.html",[0,0.257,2182,3.024]],["body/classes/UpdateTimeReference.html",[0,0.461,2,0.783,3,0.039,4,0.039,5,0.046,7,2.236,8,1.323,10,3.578,16,2.494,32,0.245,33,1.024,34,0.267,35,0.541,36,0.967,37,1.788,38,1.289,39,0.294,40,1.58,42,0.301,44,0.425,45,0.006,46,0.396,47,0.425,49,0.743,50,0.596,51,0.127,52,0.574,55,2.853,56,2.615,57,0.075,58,0.941,71,2.68,77,1.898,83,2.494,88,3.696,116,2.986,126,1.287,137,0.003,138,0.005,139,0.003,206,2.147,215,2.288,233,1.634,269,1.846,298,4.924,306,4.044,459,2.577,675,3.077,900,2.823,1054,3.405,1076,4.044,1145,3.531,1202,4.007,2149,4.599,2150,3.848,2151,3.848,2152,3.679,2153,4.281,2154,6.567,2155,4.281,2156,4.281,2159,4.281,2160,3.531,2161,3.848,2162,3.531,2163,3.848,2164,4.281,2165,4.871,2166,4.281,2167,5.01,2168,4.281,2169,5.857,2170,5.857,2171,4.281,2172,3.848,2173,5.575,2174,4.044,2175,3.848,2176,4.281,2177,4.281,2178,4.044,2179,4.281,2180,3.679,2181,4.044,2182,5.114,2183,4.281,2184,4.281,2185,4.044,3843,7.261,3844,5.576,3845,5.576]],["title/classes/UpdatedSubscription.html",[0,0.257,242,2.418]],["body/classes/UpdatedSubscription.html",[0,0.501,2,0.635,3,0.031,4,0.031,5,0.037,8,1.351,12,1.708,32,0.245,33,1.124,34,0.217,35,0.47,37,1.724,38,1.374,39,0.435,42,0.235,45,0.006,49,0.603,50,0.484,51,0.093,52,0.465,57,0.078,58,0.763,76,1.219,77,1.898,79,0.551,91,1.422,92,1.422,93,1.284,126,1.556,134,1.977,137,0.003,138,0.004,139,0.003,159,1.128,212,3.675,213,3.887,214,2.422,218,2.575,219,2.165,220,1.612,221,1.525,222,2.07,223,3.778,224,5.135,225,2.341,226,3.675,227,2.23,228,3.579,229,3.281,230,2.496,231,1.892,232,3.778,233,1.848,234,3.675,235,1.643,236,1.18,237,3.675,238,1.892,239,2.638,240,2.174,241,2.354,242,3.976,243,2.422,244,1.803,245,1.303,246,1.282,247,1.471,248,1.471,249,3.675,250,1.303,251,1.348,252,1.445,253,2.575,254,2.575,255,2.575,256,2.07,257,2.575,258,2.575,259,2.575,260,2.23,261,2.575,262,3.59,263,2.575,264,2.575,265,2.07,266,2.422,3846,6.305]],["title/classes/User.html",[0,0.257,66,1.839]],["body/classes/User.html",[0,0.391,2,1.021,3,0.051,4,0.051,5,0.06,32,0.187,36,1.025,38,1.322,39,0.451,42,0.271,44,0.555,45,0.006,46,0.516,47,0.555,57,0.06,66,3.296,79,1.184,104,3.584,137,0.005,138,0.005,139,0.005,1060,6.571,1061,6.571,3847,7.268,3848,6.484,3849,7.268,3850,6.484,3851,6.484,3852,6.484]],["title/classes/UserContext.html",[0,0.257,1907,3.666]],["body/classes/UserContext.html",[0,0.388,2,1.011,3,0.05,4,0.05,5,0.059,32,0.185,38,1.36,39,0.448,42,0.269,44,0.549,45,0.006,46,0.511,47,0.549,57,0.059,79,1.202,81,4.309,104,3.549,137,0.004,138,0.005,139,0.004,1060,6.533,1061,6.533,1907,6.533,2014,6.421,3848,6.421,3850,6.421,3851,6.421,3852,6.421,3853,8.51,3854,7.198,3855,7.198]],["title/modules/UtilitiesModule.html",[474,1.956,489,3.151]],["body/modules/UtilitiesModule.html",[0,0.347,3,0.045,4,0.055,5,0.066,36,0.772,45,0.006,51,0.128,57,0.053,73,3.481,107,1.738,137,0.004,138,0.005,139,0.004,236,1.682,316,1.162,372,2.533,373,2.483,374,2.533,375,2.533,376,2.533,377,2.533,378,2.255,379,2.024,380,2.533,381,2.533,382,2.533,383,2.387,384,2.533,385,2.483,386,2.533,387,2.533,388,2.533,389,2.533,402,1.955,405,2.06,467,3.338,474,2.64,476,3.099,477,3.558,478,5.085,479,3.671,480,3.795,481,4.374,489,6.312,490,4.534,491,3.795,493,3.355,497,4.144,502,4.855,505,3.671,565,4.677,759,4.95,1021,5.293,3856,5.751,3857,5.751,3858,5.751,3859,6.448,3860,6.448,3861,6.448,3862,6.448]],["title/pipes/XAxisTickFormatPipe.html",[691,1.956,2272,3.666]],["body/pipes/XAxisTickFormatPipe.html",[0,0.204,3,0.026,4,0.026,5,0.031,9,2.813,24,2.543,32,0.169,33,0.454,42,0.245,44,0.502,45,0.006,46,0.548,47,0.502,49,0.74,50,1.004,51,0.097,57,0.031,79,1.192,83,3.239,137,0.002,138,0.003,139,0.002,178,2.018,182,2.076,227,3.572,236,1.449,276,1.277,290,0.957,308,1.634,316,0.683,335,4.915,336,1.19,691,2.275,1016,3.604,1054,2.605,1177,3.518,1179,5.584,1432,4.011,1448,2.399,2060,5.561,2165,4.125,2272,4.265,2295,6.461,2296,6.461,2597,4.029,2735,4.029,2942,6.617,3523,8.57,3528,4.955,3532,7.19,3552,4.955,3863,3.789,3864,3.789,3865,5.555,3866,3.789,3867,5.555,3868,3.789,3869,8.06,3870,7.244,3871,3.789,3872,5.555,3873,3.789,3874,5.555,3875,5.555,3876,5.555,3877,5.555,3878,5.555,3879,3.789,3880,5.555,3881,3.789,3882,5.555,3883,6.577,3884,6.577,3885,6.577,3886,9.701,3887,5.555,3888,7.244,3889,6.577,3890,6.577,3891,5.555,3892,5.555,3893,5.555,3894,5.555,3895,6.577,3896,5.555,3897,5.555,3898,7.244,3899,3.789,3900,3.789,3901,3.789,3902,3.789,3903,6.577,3904,6.577,3905,3.789,3906,7.244,3907,5.555,3908,5.555,3909,3.789,3910,3.789,3911,3.789,3912,3.789,3913,3.789,3914,3.789,3915,5.555]],["title/dependencies.html",[477,3.174,3916,3.974]],["body/dependencies.html",[4,0.042,32,0.156,45,0.006,52,0.787,53,3.062,54,3.062,117,1.386,137,0.004,138,0.005,139,0.004,251,1.803,316,1.09,317,1.743,463,2.077,477,3.337,479,4.356,490,3.444,495,5.874,496,5.549,505,3.444,508,2.982,511,5.874,512,4.965,520,4.494,521,3.239,525,4.965,526,4.965,528,4.965,529,6.442,530,6.28,533,4.965,534,4.965,535,4.965,550,3.444,581,3.831,593,4.174,705,3.239,853,4.965,854,6.28,856,3.239,1054,3.587,1563,4.965,1685,4.387,1916,4.965,2162,3.831,2290,5.395,2291,5.395,3183,5.395,3917,6.048,3918,9.635,3919,6.048,3920,6.048,3921,6.048,3922,6.048,3923,6.048,3924,6.048,3925,6.048,3926,6.048,3927,7.65,3928,9.096,3929,6.048,3930,6.048,3931,6.048,3932,6.048,3933,6.048,3934,6.048,3935,6.048,3936,6.048,3937,6.048,3938,6.048,3939,6.048,3940,6.048,3941,6.048,3942,6.048,3943,6.048,3944,6.048,3945,7.65,3946,6.048,3947,6.048,3948,6.048,3949,6.048,3950,6.048,3951,6.048,3952,6.048]],["title/miscellaneous/enumerations.html",[3953,3.051,3954,5.13]],["body/miscellaneous/enumerations.html",[1,1.83,3,0.024,6,2.002,8,0.751,10,2.922,12,3.335,19,1.83,34,0.169,45,0.006,50,1.083,59,2.661,60,1.883,61,1.784,62,2.815,63,1.883,64,1.83,65,3.705,66,3.131,67,4.618,68,3.977,69,1.883,70,2.07,71,3.025,72,1.83,73,2.752,74,1.883,75,1.883,76,2.304,78,2.735,80,2.735,81,2.661,82,2.815,126,1.441,134,1.537,137,0.002,138,0.003,139,0.002,142,2.144,144,3.205,148,1.123,159,1.479,186,1.354,194,2.07,195,2.144,197,3.205,198,1.03,199,1.066,200,2.144,201,2.144,202,2.144,203,1.61,212,1.78,213,1.883,214,2.815,222,2.406,223,1.83,224,4.874,225,2.812,226,1.78,227,1.734,228,1.734,229,1.83,230,1.94,231,2.199,232,1.83,233,2.504,234,1.78,235,2.715,236,1.371,237,1.78,238,2.199,239,2.633,240,1.69,241,2.735,242,1.78,243,1.883,244,1.949,245,2.26,246,2.223,247,2.432,248,2.432,249,1.78,307,2.227,329,2.144,345,2.002,397,2.426,410,2.389,428,2.047,459,2.118,465,1.669,554,2.9,562,4.28,572,2.426,579,4.629,580,4.579,665,2.002,666,2.699,672,3.094,674,4.035,675,1.94,676,2.886,694,2.07,710,3.468,711,2.144,764,2.32,770,2.144,771,3.329,772,2.32,773,3.891,774,2.144,835,2.886,858,4.315,1136,3.329,1163,1.94,1169,3.468,1171,3.812,1299,1.94,1399,2.886,1406,3.627,1414,4.315,1415,2.699,1416,2.32,1460,2.32,1536,3.094,1537,1.83,1538,1.94,1539,1.94,1540,1.78,1541,1.94,1542,1.94,1591,3.136,1592,4.689,1596,4.315,1605,2.886,1766,2.07,1798,2.227,1799,2.227,1858,3.473,1860,1.94,2049,2.227,2149,2.227,2150,2.426,2163,3.627,2165,2.993,2167,3.627,2182,2.227,2254,1.94,2255,3.094,2359,3.136,2376,4.035,2379,4.833,2381,4.833,2402,3.136,2403,3.136,2404,3.136,2405,3.136,2406,3.136,2424,2.426,2436,2.144,2440,3.205,2441,1.94,2442,2.002,2443,2.002,2444,2.002,2445,2.002,2446,2.227,2462,2.144,2466,2.002,2467,2.002,2468,3.986,2469,2.002,2470,2.002,2735,2.55,2741,2.426,2742,2.699,2746,4.315,2747,2.426,2940,3.136,2945,3.136,3665,3.136,3674,4.689,3723,3.136,3724,3.136,3725,3.136,3726,2.699,3727,3.136,3728,3.136,3729,3.136,3730,3.136,3731,3.136,3732,3.136,3735,3.136,3736,6.23,3741,4.689,3742,3.136,3953,2.699,3954,3.136,3955,5.256,3956,3.136,3957,3.136,3958,3.136,3959,3.516,3960,3.136,3961,6.23,3962,3.136,3963,3.516,3964,3.516,3965,3.136,3966,3.516,3967,3.136,3968,3.136,3969,3.136,3970,3.516,3971,3.516]],["title/index.html",[34,0.229,3972,4.26]],["body/index.html",[2,0.563,45,0.006,73,1.753,100,1.958,112,1.991,137,0.002,138,0.004,139,0.002,268,2.91,269,1.328,293,4.928,345,2.283,402,1.216,409,2.333,412,2.333,414,2.291,416,2.333,419,2.333,421,2.91,423,2.806,425,2.333,426,2.376,430,2.806,432,2.91,433,2.333,435,2.857,437,2.333,438,2.333,440,2.291,442,2.333,444,2.376,445,2.333,446,2.333,448,2.333,452,2.333,454,2.291,455,2.333,457,2.333,458,2.333,460,2.333,462,2.333,464,2.333,466,1.352,467,2.857,469,2.291,471,2.291,474,1.642,475,7.015,476,1.927,477,2.213,478,2.36,479,2.283,480,2.36,481,2.03,482,3.577,483,3.577,484,3.577,485,3.577,486,4.928,487,7.015,488,5.722,489,5.724,490,3.296,491,2.36,549,2.539,577,2.283,600,3.999,684,1.836,688,4.303,691,1.642,731,3.749,805,7.265,806,3.577,807,3.577,808,3.577,809,4.928,810,6.65,861,3.999,1432,4.143,1743,3.577,1744,3.577,1746,3.577,1747,3.577,1748,4.928,1781,4.928,2207,4.928,2267,7.641,2268,3.577,2269,3.577,2270,3.577,2271,3.577,2272,5.216,2273,4.928,2432,3.079,3096,3.577,3097,3.577,3098,4.928,3099,5.216,3140,7.339,3141,3.577,3142,3.577,3143,3.577,3144,4.928,3176,3.577,3177,3.577,3250,6.312,3251,3.577,3252,3.577,3253,3.577,3254,4.928,3726,3.079,3856,3.577,3857,3.577,3858,3.577,3972,3.577,3973,4.01,3974,4.01,3975,4.01,3976,4.01,3977,4.01]],["title/modules.html",[476,3.147]],["body/modules.html",[45,0.005,137,0.004,138,0.005,139,0.004,367,7.763,475,5.026,476,3.33,486,5.026,487,5.026,488,5.026,489,4.572,496,7.15,529,7.568,805,5.32,809,5.026,810,4.781,2267,5.32,2273,5.026,3140,5.32,3144,5.026,3250,5.32,3254,5.026,3978,9.857,3979,10.047,3980,9.457]],["title/routes.html",[549,4.146]],["body/routes.html",[45,0.006,137,0.005,138,0.006,139,0.005,549,4.994]],["title/miscellaneous/typealiases.html",[3953,3.051,3981,5.752]],["body/miscellaneous/typealiases.html",[1,3.127,6,3.422,19,3.127,32,0.155,34,0.288,45,0.006,60,3.218,63,3.218,69,3.218,72,3.127,74,3.218,75,3.218,136,4.338,137,0.004,138,0.005,139,0.004,212,3.043,213,3.218,214,4.08,223,3.127,226,3.043,228,2.963,232,3.127,234,3.043,237,3.043,242,3.043,244,2.304,249,3.043,266,4.08,329,3.664,665,3.422,666,4.614,679,4.147,682,6.254,694,3.537,711,3.664,764,3.965,770,3.664,774,3.664,783,5.257,1163,3.316,1299,3.316,1537,3.127,1538,3.316,1539,3.316,1540,3.043,1541,3.316,1542,3.316,1766,3.537,1776,4.646,1798,3.806,1799,3.806,1860,3.316,2149,3.806,2150,4.147,2165,3.422,2182,3.806,2185,5.526,2254,3.316,2424,4.147,2431,5.526,2436,3.664,2441,3.316,2442,3.422,2443,3.422,2444,3.422,2445,3.422,2461,4.825,2462,3.664,2466,3.422,2467,3.422,2469,3.422,2470,3.422,2478,4.825,2741,4.147,2742,4.614,2747,4.147,2751,6.254,3953,4.614,3956,5.36,3957,5.36,3958,5.36,3960,5.36,3961,5.36,3962,5.36,3965,5.36,3967,5.36,3968,5.36,3969,5.36,3982,6.009]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":1016,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"directives/MouseWheelDirective.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["0.3.0",{"_index":3924,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3732,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["0.5.25",{"_index":3943,"title":{},"body":{"dependencies.html":{}}}],["0.5rem",{"_index":3046,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.8.29",{"_index":3952,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":345,"title":{"classes/HandleUnexpectedError-1.html":{}},"body":{"components/AppComponent.html":{},"injectables/HandlebarsService.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["1)?location.pathname",{"_index":1041,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["1.0.14",{"_index":3944,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":3938,"title":{},"body":{"dependencies.html":{}}}],["1.2.17",{"_index":3925,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":3950,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3726,"title":{},"body":{"classes/TimeReference.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["10.1.0",{"_index":3932,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["1000",{"_index":860,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["11.0.1",{"_index":3929,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":3554,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["14",{"_index":3973,"title":{},"body":{"index.html":{}}}],["16",{"_index":3591,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["16px",{"_index":2680,"title":{},"body":{"components/IconComponent.html":{}}}],["16th",{"_index":3661,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["1m",{"_index":2263,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["2",{"_index":572,"title":{"classes/HandleUnexpectedError-2.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["2*60*60*1000",{"_index":1703,"title":{},"body":{"injectables/CardService.html":{}}}],["2.0",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["2.0.1",{"_index":3945,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":3940,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":3934,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":3942,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":3937,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3975,"title":{},"body":{"index.html":{}}}],["2018",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["2px",{"_index":3836,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["3",{"_index":2432,"title":{"classes/HandleUnexpectedError-3.html":{}},"body":{"injectables/HandlebarsService.html":{},"classes/TimeSpan.html":{},"index.html":{}}}],["3.6.0",{"_index":3948,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":3977,"title":{},"body":{"index.html":{}}}],["30px",{"_index":1497,"title":{},"body":{"components/CardComponent.html":{}}}],["32",{"_index":3974,"title":{},"body":{"index.html":{}}}],["32px",{"_index":2679,"title":{},"body":{"components/IconComponent.html":{}}}],["3600",{"_index":3730,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["4",{"_index":2435,"title":{"classes/HandleUnexpectedError-4.html":{}},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{}}}],["4.0.0",{"_index":3927,"title":{},"body":{"dependencies.html":{}}}],["4.0.14",{"_index":3939,"title":{},"body":{"dependencies.html":{}}}],["4.17.15",{"_index":3941,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":3935,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":1484,"title":{},"body":{"components/CardComponent.html":{}}}],["401",{"_index":1180,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5",{"_index":348,"title":{"classes/HandleUnexpectedError-5.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{}}}],["5.8.1",{"_index":3926,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1183,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5000",{"_index":1803,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["5px",{"_index":1486,"title":{},"body":{"components/CardComponent.html":{}}}],["6",{"_index":3551,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["6.3.3",{"_index":3946,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3728,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["60000",{"_index":2231,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["600000",{"_index":1716,"title":{},"body":{"injectables/CardService.html":{}}}],["64px",{"_index":2678,"title":{},"body":{"components/IconComponent.html":{}}}],["7",{"_index":3558,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["7.1.0",{"_index":3928,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":3918,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":3920,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":3580,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["8",{"_index":915,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/TimeLineComponent.html":{}}}],["86",{"_index":3976,"title":{},"body":{"index.html":{}}}],["8px",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["90",{"_index":2736,"title":{},"body":{"components/InfoComponent.html":{}}}],["_",{"_index":855,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_.clonedeep(tmpmoment",{"_index":3645,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(value",{"_index":3625,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.difference(forma.tags,formb.tags).length===0",{"_index":3217,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(formb.tags,forma.tags).length===0",{"_index":3218,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["_.difference(work",{"_index":3368,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.fill(this.expandedmenu,false",{"_index":3024,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_.get(oauth2conf",{"_index":881,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["_.intersection(card.tags,status.tags).length",{"_index":2388,"title":{},"body":{"injectables/FilterService.html":{}}}],["_.isequal(forma",{"_index":1272,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/TimeFilterComponent.html":{}}}],["_.isequal(forma,formb",{"_index":3822,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["_.merge(acc,val",{"_index":3337,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.remove(this.loadingi18n",{"_index":3382,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.uniq(ids",{"_index":3367,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_defaultfilters",{"_index":2360,"title":{},"body":{"injectables/FilterService.html":{}}}],["_description",{"_index":2707,"title":{},"body":{"components/InfoComponent.html":{}}}],["_filter",{"_index":3199,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_htmlcontent",{"_index":1905,"title":{},"body":{"components/DetailComponent.html":{}}}],["_i18nprefix",{"_index":1422,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["_locale",{"_index":2604,"title":{},"body":{"injectables/I18nService.html":{}}}],["_locale:string",{"_index":2619,"title":{},"body":{"injectables/I18nService.html":{}}}],["_resizesubject",{"_index":1318,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["_selectediframeurl",{"_index":2691,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_thirdmenus",{"_index":2996,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_time",{"_index":2708,"title":{},"body":{"components/InfoComponent.html":{}}}],["_timezone",{"_index":2605,"title":{},"body":{"injectables/I18nService.html":{}}}],["_timezone:string",{"_index":2620,"title":{},"body":{"injectables/I18nService.html":{}}}],["_username",{"_index":2709,"title":{},"body":{"components/InfoComponent.html":{}}}],["a.payload.lightcards",{"_index":1612,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["a[key",{"_index":2596,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["above",{"_index":2242,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["abstractcontrol",{"_index":2794,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["accept",{"_index":65,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["acceptlogin",{"_index":1,"title":{"classes/AcceptLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogin(auth",{"_index":1117,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authenticationinfo",{"_index":1105,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authinfo",{"_index":1119,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogout",{"_index":74,"title":{"classes/AcceptLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsuccess",{"_index":75,"title":{"classes/AcceptLogOutSuccess.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsucess",{"_index":1095,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["access_token",{"_index":838,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["accessors",{"_index":1427,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["according",{"_index":3870,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["accordingly",{"_index":1076,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["accumulated",{"_index":2262,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["accumulation",{"_index":2241,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action",{"_index":8,"title":{"classes/Action.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["action.buttonstyle",{"_index":1998,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.buttonstyle.split",{"_index":1999,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle",{"_index":2001,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle.split",{"_index":2002,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.payload",{"_index":1147,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["action.payload.event.url.indexof(\"/archives/cards/\")>=0",{"_index":1836,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed",{"_index":1832,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed/cards/\")>=0",{"_index":1843,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/thirdparty/\")>=0",{"_index":1846,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.menu_entry_id",{"_index":2927,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.menu_version",{"_index":2926,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["action.payload.routerstate",{"_index":1838,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.routerstate.url.indexof(\"/feed/cards/\")>=0",{"_index":1831,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.settings.defaulttags",{"_index":2218,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["action.payload.settings.defaulttags.length>0",{"_index":2217,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["actionid",{"_index":1924,"title":{},"body":{"components/DetailComponent.html":{}}}],["actionreducermap",{"_index":598,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":687,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"injectables/TimeEffects.html":{}}}],["actions?:ofmap",{"_index":193,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actiontype",{"_index":144,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["activate",{"_index":2050,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1873,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["active",{"_index":678,"title":{},"body":{"classes/ApplyFilter.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["active:boolean",{"_index":2347,"title":{},"body":{"classes/Filter.html":{}}}],["activedetail",{"_index":2045,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activedetail.length",{"_index":2051,"title":{},"body":{"components/DetailsComponent.html":{}}}],["actual",{"_index":3530,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["actual_component",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["add",{"_index":241,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/CardOperation.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addauthheadersifnecessary",{"_index":3758,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addauthheadersifnecessary(request",{"_index":3762,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["added",{"_index":1552,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["addlightcardfailure",{"_index":212,"title":{"classes/AddLightCardFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addlightcardfailure({error",{"_index":1639,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["af.payload.name",{"_index":1643,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["af.payload.status.end",{"_index":1647,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["afterviewinit",{"_index":2020,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{}}}],["ahead",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["aims",{"_index":86,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["alarm",{"_index":2376,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert('submitted",{"_index":1273,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["alert(`${actionid",{"_index":2009,"title":{},"body":{"components/DetailComponent.html":{}}}],["aliases",{"_index":3982,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1498,"title":{},"body":{"components/CardComponent.html":{},"components/TimeLineComponent.html":{}}}],["allowed",{"_index":1359,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["allows",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":3108,"title":{},"body":{"modules/ServicesModule.html":{}}}],["always",{"_index":1888,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["angular",{"_index":873,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["angular/animations",{"_index":3917,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3919,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":505,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"components/IconComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["angular/compiler",{"_index":3921,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":508,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"modules/FeedModule.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":3922,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":550,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/FeedRoutingModule.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"dependencies.html":{}}}],["angular/router/src/utils/collection",{"_index":1689,"title":{},"body":{"injectables/CardService.html":{}}}],["animations",{"_index":3596,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["another",{"_index":1374,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["app",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["app.component",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":268,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["appdraggable",{"_index":2063,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appdraggable]'},{'name",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appear",{"_index":2107,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appeffects",{"_index":656,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["application",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["application/x",{"_index":911,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["applies",{"_index":2344,"title":{},"body":{"classes/Filter.html":{}}}],["apply",{"_index":1135,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["applyfilter",{"_index":665,"title":{"classes/ApplyFilter.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["applyfilter(card",{"_index":2333,"title":{},"body":{"classes/Filter.html":{}}}],["applyfilter({name:filtertype.tag_filter,active:true,status:{tags:v",{"_index":2226,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["appmetareducers",{"_index":659,"title":{},"body":{"interfaces/AppState.html":{}}}],["appmodule",{"_index":475,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["appmousewheel",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appreducer",{"_index":657,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["appropriate",{"_index":1022,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["approutingmodule",{"_index":486,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":320,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archive",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{}}}],["archive.filters.{{filterpath",{"_index":2819,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["archive.search",{"_index":752,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["archiveactions",{"_index":783,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/typealiases.html":{}}}],["archiveactiontypes",{"_index":710,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{}}}],["archiveactiontypes.archivequerysuccess",{"_index":767,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["archiveactiontypes.handleunexpectederror",{"_index":780,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["archiveactiontypes.selectarchivedlightcard",{"_index":782,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["archiveactiontypes.sendarchivequery",{"_index":778,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["archiveactiontypes.updatearchivefilter",{"_index":775,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["archived",{"_index":773,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{}}}],["archiveeffects",{"_index":654,"title":{"injectables/ArchiveEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{}}}],["archivefilterscomponent",{"_index":409,"title":{"components/ArchiveFiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archiveinitialstate",{"_index":788,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["archivelistcomponent",{"_index":412,"title":{"components/ArchiveListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivequerysuccess",{"_index":711,"title":{"classes/ArchiveQuerySuccess.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["archivequerysuccess({lightcards",{"_index":697,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["archivereducer",{"_index":627,"title":{},"body":{"interfaces/AppState.html":{}}}],["archives",{"_index":558,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{}}}],["archives'},{'name",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives.component",{"_index":812,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{}}}],["archives.component.html",{"_index":791,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archives.component.scss",{"_index":790,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archivescomponent",{"_index":414,"title":{"components/ArchivesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["archivescomponent,archivelistcomponent",{"_index":822,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["archivesmodule",{"_index":805,"title":{"modules/ArchivesModule.html":{}},"body":{"modules/ArchivesModule.html":{},"index.html":{},"modules.html":{}}}],["archivesroutingmodule",{"_index":809,"title":{"modules/ArchivesRoutingModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["archivestate",{"_index":582,"title":{"interfaces/ArchiveState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{}}}],["archivesurl",{"_index":1655,"title":{},"body":{"injectables/CardService.html":{}}}],["args",{"_index":2557,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1",{"_index":2559,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[0].split(args[1])[args[2",{"_index":2560,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[2",{"_index":2569,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["arguments",{"_index":2076,"title":{},"body":{"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{}}}],["array",{"_index":1935,"title":{},"body":{"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["array(menus.length",{"_index":3023,"title":{},"body":{"components/NavbarComponent.html":{}}}],["array.from(calcelements",{"_index":1395,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array.from(fixedelements",{"_index":1383,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["array[0",{"_index":2921,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["arrow::after",{"_index":3840,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["ask",{"_index":864,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfromcode(code",{"_index":928,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfrompassword(login",{"_index":943,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenurl",{"_index":865,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["assets/styles/_variables.scss",{"_index":2685,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["assignconfigurationproperties(oauth2conf",{"_index":879,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["attachaction",{"_index":1908,"title":{},"body":{"components/DetailComponent.html":{}}}],["attachaction(button",{"_index":1922,"title":{},"body":{"components/DetailComponent.html":{}}}],["attempt",{"_index":68,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":962,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["auth.firstname",{"_index":958,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["auth.lastname",{"_index":960,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticate",{"_index":1156,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticated",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["authentication.reducer.ts",{"_index":26,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authentication.service",{"_index":1686,"title":{},"body":{"injectables/CardService.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationactions",{"_index":136,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationactiontypes",{"_index":59,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.acceptlogin",{"_index":31,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogout",{"_index":133,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogoutsuccess",{"_index":135,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.checkauthenticationstatus",{"_index":95,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.initauthstatus",{"_index":90,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.rejectlogin",{"_index":125,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologin",{"_index":108,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologout",{"_index":115,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffect",{"_index":120,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffects",{"_index":15,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationguard",{"_index":551,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["authenticationreducer",{"_index":596,"title":{},"body":{"interfaces/AppState.html":{}}}],["authenticationservice",{"_index":861,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/LoginComponent.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["authenticationservice,private",{"_index":1691,"title":{},"body":{"injectables/CardService.html":{}}}],["authenticationservice.clearauthenticationinformation",{"_index":1142,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.computeredirecturi",{"_index":940,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.decodetoken(payload.access_token",{"_index":1012,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.extractidentificationinformation",{"_index":1114,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.extracttoken",{"_index":1029,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.getsecurityheader",{"_index":1714,"title":{},"body":{"injectables/CardService.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationservice.isexpirationdateover",{"_index":1112,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.verifyexpirationdate",{"_index":986,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authinfo",{"_index":1113,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authinitialstate",{"_index":1062,"title":{},"body":{"interfaces/AuthState.html":{}}}],["authobject",{"_index":834,"title":{"classes/AuthObject.html":{}},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authorization",{"_index":1027,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authorization_code",{"_index":935,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authservice",{"_index":1069,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authstate",{"_index":583,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authstate.firstname",{"_index":1954,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.identifier",{"_index":1952,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.lastname",{"_index":1955,"title":{},"body":{"components/DetailComponent.html":{}}}],["authstate.token",{"_index":1953,"title":{},"body":{"components/DetailComponent.html":{}}}],["auto",{"_index":763,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["autoscale",{"_index":3595,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["available",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"directives/CalcHeightDirective.html":{},"modules.html":{}}}],["availableheight",{"_index":1392,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["availableheight}px",{"_index":1398,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["axis",{"_index":2296,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["b[key",{"_index":2598,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["back",{"_index":898,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/MenuEffects.html":{}}}],["background",{"_index":3839,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["backwardconf",{"_index":3606,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["badge",{"_index":1495,"title":{},"body":{"components/CardComponent.html":{}}}],["base",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["based",{"_index":1361,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["basefiltercomponent",{"_index":416,"title":{"components/BaseFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["basefiltercomponent:25",{"_index":2772,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:26",{"_index":2773,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:27",{"_index":2774,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:28",{"_index":2792,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:29",{"_index":2790,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:30",{"_index":2793,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:31",{"_index":2791,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:37",{"_index":2787,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:62",{"_index":2786,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:67",{"_index":2789,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:71",{"_index":2784,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:75",{"_index":2782,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:80",{"_index":2783,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:84",{"_index":2785,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basefiltercomponent:88",{"_index":2788,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["basehref",{"_index":2666,"title":{},"body":{"components/IconComponent.html":{}}}],["basehref?basehref:'/')+'assets/images/icons",{"_index":2669,"title":{},"body":{"components/IconComponent.html":{}}}],["basemoment.add(computedoffsetduration",{"_index":3721,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=moment(this.virtualtime",{"_index":3718,"title":{},"body":{"classes/TimeReference.html":{}}}],["basemoment=ref",{"_index":3720,"title":{},"body":{"classes/TimeReference.html":{}}}],["basesettingcomponent",{"_index":419,"title":{"components/BaseSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["basesettingcomponent:26",{"_index":2120,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:27",{"_index":2118,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:28",{"_index":2119,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:29",{"_index":2136,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:30",{"_index":2138,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:31",{"_index":2137,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:32",{"_index":2135,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:33",{"_index":2134,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:39",{"_index":2131,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:69",{"_index":2130,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:74",{"_index":2133,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:78",{"_index":2128,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:82",{"_index":2126,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:87",{"_index":2127,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:93",{"_index":2129,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettingcomponent:97",{"_index":2132,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["basesettings",{"_index":1280,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["bearer",{"_index":1028,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["bearing",{"_index":1368,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["beat",{"_index":2170,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["before",{"_index":3529,"title":{},"body":{"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{}}}],["begins",{"_index":3527,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["behaviour",{"_index":2313,"title":{},"body":{"classes/Filter.html":{}}}],["best",{"_index":3862,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["beware",{"_index":936,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{}}}],["big",{"_index":2641,"title":{},"body":{"components/IconComponent.html":{}}}],["big:boolean",{"_index":2659,"title":{},"body":{"components/IconComponent.html":{}}}],["bindactions",{"_index":1909,"title":{},"body":{"components/DetailComponent.html":{}}}],["bindactions(third",{"_index":1926,"title":{},"body":{"components/DetailComponent.html":{}}}],["block",{"_index":2103,"title":{},"body":{"directives/DraggableDirective.html":{},"components/InfoComponent.html":{}}}],["body",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/TypeFilterComponent.html":{}}}],["boolean",{"_index":148,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["border",{"_index":1496,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["both",{"_index":2312,"title":{},"body":{"classes/Filter.html":{}}}],["bottom",{"_index":1485,"title":{},"body":{"components/CardComponent.html":{}}}],["break",{"_index":1182,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/TimeSpan.html":{}}}],["browse",{"_index":3979,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":2867,"title":{},"body":{"components/LoginComponent.html":{}}}],["bubble",{"_index":3742,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["build",{"_index":874,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["buildarchivefilterselector",{"_index":1237,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["buildconfigselector",{"_index":728,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["buildfilterselector",{"_index":2257,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["buildsettingsorconfigselector",{"_index":2616,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["buildsettingsselector",{"_index":1301,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["business",{"_index":1073,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["business_start",{"_index":1473,"title":{},"body":{"components/CardComponent.html":{}}}],["button",{"_index":105,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["button.addeventlistener('click",{"_index":2008,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.attributes['action",{"_index":1992,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add('fa",{"_index":2004,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add(c",{"_index":2003,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add('btn",{"_index":1997,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add(c",{"_index":2000,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttons",{"_index":1991,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttonstyle",{"_index":149,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["buttontitle",{"_index":3604,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["c",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["calc",{"_index":759,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"modules/UtilitiesModule.html":{}}}],["calcelements",{"_index":1378,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight",{"_index":1319,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheight(parentid",{"_index":1333,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightclass",{"_index":1320,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calcheightdirective",{"_index":467,"title":{"directives/CalcHeightDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["calcheightdirective]'},{'name",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["calculate",{"_index":1388,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calculated",{"_index":1366,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["calculation",{"_index":1363,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["call",{"_index":894,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["call.pipe",{"_index":948,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["called",{"_index":102,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["calling",{"_index":1133,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{}}}],["canactivate",{"_index":557,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["caps",{"_index":1491,"title":{},"body":{"components/CardComponent.html":{}}}],["card",{"_index":159,"title":{"classes/Card.html":{}},"body":{"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["card'},{'name",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["card.actions",{"_index":769,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"injectables/LightCardEffects.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["card.actions.ts",{"_index":214,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["card.actions.ts:104",{"_index":3080,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:106",{"_index":3081,"title":{},"body":{"classes/RemoveLightCard.html":{}}}],["card.actions.ts:28",{"_index":2850,"title":{},"body":{"classes/LoadLightCards.html":{}}}],["card.actions.ts:33",{"_index":2148,"title":{},"body":{"classes/EmptyLightCards.html":{}}}],["card.actions.ts:37",{"_index":2854,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:40",{"_index":2855,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:45",{"_index":2851,"title":{},"body":{"classes/LoadLightCardsExtendedData.html":{}}}],["card.actions.ts:53",{"_index":2852,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:56",{"_index":2853,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:62",{"_index":3086,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:64",{"_index":3087,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:70",{"_index":1777,"title":{},"body":{"classes/ClearLightCardSelection.html":{}}}],["card.actions.ts:76",{"_index":216,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:79",{"_index":217,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:84",{"_index":3846,"title":{},"body":{"classes/UpdatedSubscription.html":{}}}],["card.actions.ts:93",{"_index":2433,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.actions.ts:95",{"_index":2434,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["card.component.html",{"_index":1421,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":1420,"title":{},"body":{"components/CardComponent.html":{}}}],["card.details",{"_index":1514,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["card.effects",{"_index":639,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.effects.ts",{"_index":2754,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:20",{"_index":2756,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:30",{"_index":2765,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.enddate",{"_index":2392,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.id.indexof(selectedcardid",{"_index":1617,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["card.model",{"_index":221,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{}}}],["card.model.ts",{"_index":3736,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["card.model.ts:82",{"_index":3738,"title":{},"body":{"classes/TimeSpan.html":{}}}],["card.publisher",{"_index":3353,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisherversion",{"_index":3354,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.reducer",{"_index":616,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.service",{"_index":3105,"title":{},"body":{"modules/ServicesModule.html":{}}}],["card.severity",{"_index":2384,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.startdate",{"_index":2393,"title":{},"body":{"injectables/FilterService.html":{}}}],["card1.lttd",{"_index":1573,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.publishdate",{"_index":1576,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card1.startdate",{"_index":1567,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card2",{"_index":1566,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card2.lttd",{"_index":1574,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.publishdate",{"_index":1577,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["card2.startdate",{"_index":1568,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card:card",{"_index":2018,"title":{},"body":{"classes/DetailContext.html":{}}}],["card:lightcard",{"_index":2389,"title":{},"body":{"injectables/FilterService.html":{}}}],["cardactions",{"_index":1776,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["cardactiontypes",{"_index":1536,"title":{},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["cardactiontypes.clearcard",{"_index":1767,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.handleunexpectederror",{"_index":1775,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcard",{"_index":1772,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardfailure",{"_index":1773,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadarchivedcardsuccess",{"_index":1774,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcard",{"_index":1769,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardfailure",{"_index":1770,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardsuccess",{"_index":1771,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardcomponent",{"_index":421,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["carddetailscomponent",{"_index":423,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardeffects",{"_index":604,"title":{"injectables/CardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardEffects.html":{}}}],["cardfeedstate",{"_index":586,"title":{"interfaces/CardFeedState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardFeedState.html":{}}}],["cardids",{"_index":1597,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardinitialstate",{"_index":1742,"title":{},"body":{"interfaces/CardState.html":{}}}],["cardlistcomponent",{"_index":425,"title":{"components/CardListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["cardoperation",{"_index":1590,"title":{"classes/CardOperation.html":{}},"body":{"classes/CardOperation.html":{},"injectables/CardService.html":{}}}],["cardoperationeffects",{"_index":606,"title":{"injectables/CardOperationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardOperationEffects.html":{}}}],["cardoperationsurl",{"_index":1656,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationtype",{"_index":1596,"title":{},"body":{"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"miscellaneous/enumerations.html":{}}}],["cardoperationtype.add",{"_index":1632,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype.delete",{"_index":1635,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["cardoperationtype[value",{"_index":1604,"title":{},"body":{"classes/CardOperation.html":{}}}],["cardreducer",{"_index":617,"title":{},"body":{"interfaces/AppState.html":{}}}],["cards",{"_index":265,"title":{},"body":{"classes/AddLightCardFailure.html":{},"modules/ArchivesRoutingModule.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"injectables/ThirdsService.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["cards'},{'name",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["cards/cards.module",{"_index":815,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["cards/components/card",{"_index":824,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cards/components/detail/detail.component",{"_index":827,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cardselectors",{"_index":1506,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cardservice",{"_index":688,"title":{"injectables/CardService.html":{}},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["cardsmodule",{"_index":810,"title":{"modules/CardsModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["cardstate",{"_index":584,"title":{"interfaces/CardState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardState.html":{}}}],["cardstimeline",{"_index":3642,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["cardsurl",{"_index":1657,"title":{},"body":{"injectables/CardService.html":{}}}],["care",{"_index":2319,"title":{},"body":{"classes/Filter.html":{}}}],["case",{"_index":1179,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/RouterStateUrl.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["catch",{"_index":1045,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror",{"_index":707,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{}}}],["catcherror((err",{"_index":1122,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror((err,caught",{"_index":2761,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["catcherror((error",{"_index":698,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["catcherror((error,caught",{"_index":3394,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror(authenticationservice.handleerror",{"_index":920,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror(e=>of(auth",{"_index":963,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror(err",{"_index":802,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["catcherror(error",{"_index":3470,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["catcherror(errorresponse",{"_index":1106,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["category",{"_index":1079,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["caught",{"_index":699,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["cell",{"_index":3833,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["center",{"_index":1499,"title":{},"body":{"components/CardComponent.html":{}}}],["centeredonticks",{"_index":3602,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["chain",{"_index":2338,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter",{"_index":2326,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter(card",{"_index":2336,"title":{},"body":{"classes/Filter.html":{}}}],["change",{"_index":675,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitFilters.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["changed",{"_index":3488,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["changelocale",{"_index":2606,"title":{},"body":{"injectables/I18nService.html":{}}}],["changelocale(locale",{"_index":2609,"title":{},"body":{"injectables/I18nService.html":{}}}],["changelocale(locale:string",{"_index":2626,"title":{},"body":{"injectables/I18nService.html":{}}}],["changes",{"_index":2033,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changes['card'].currentvalue.publisher+'.'+changes['card'].currentvalue.publisherversion",{"_index":2058,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changing",{"_index":2153,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["character",{"_index":3318,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["charset=utf",{"_index":914,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["chart",{"_index":3752,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["chart'},{'name",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["chart.component",{"_index":2294,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/custom",{"_index":2293,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart/init",{"_index":2302,"title":{},"body":{"modules/FeedModule.html":{}}}],["chartcommonmodule",{"_index":2288,"title":{},"body":{"modules/FeedModule.html":{}}}],["charts",{"_index":2291,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["checauthentication",{"_index":122,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["check",{"_index":64,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["checkauthentication",{"_index":20,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["checkauthentication(token",{"_index":904,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checkauthenticationstatus",{"_index":63,"title":{"classes/CheckAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checkauthenticationwhenready",{"_index":1066,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checking",{"_index":1048,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checks",{"_index":895,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["checktokenresponse",{"_index":1049,"title":{"classes/CheckTokenResponse.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["checktokenurl",{"_index":862,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["child",{"_index":1898,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["children",{"_index":828,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["cid",{"_index":831,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["claim",{"_index":889,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["class.thirds",{"_index":3034,"title":{},"body":{"components/NavbarComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"index.html":{}}}],["clear",{"_index":238,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["clearauthenticationinformation",{"_index":987,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clearcard",{"_index":1163,"title":{"classes/ClearCard.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["clearlightcardselection",{"_index":237,"title":{"classes/ClearLightCardSelection.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":103,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["clicked",{"_index":1166,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clicking",{"_index":1159,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["clientid",{"_index":80,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["clientsecret",{"_index":869,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clock",{"_index":2173,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["clone",{"_index":2327,"title":{},"body":{"classes/Filter.html":{}}}],["clone():filter",{"_index":2348,"title":{},"body":{"classes/Filter.html":{}}}],["cluster",{"_index":3532,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["cluster_appmodule",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_archivesmodule",{"_index":806,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_declarations",{"_index":807,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_imports",{"_index":808,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_cardsmodule",{"_index":1743,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_declarations",{"_index":1744,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_exports",{"_index":1746,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_imports",{"_index":1745,"title":{},"body":{"modules/CardsModule.html":{}}}],["cluster_cardsmodule_providers",{"_index":1747,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_feedmodule",{"_index":2268,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_declarations",{"_index":2269,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_exports",{"_index":2271,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_imports",{"_index":2270,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":3096,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_servicesmodule_providers",{"_index":3097,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_settingsmodule",{"_index":3141,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_declarations",{"_index":3142,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_settingsmodule_imports",{"_index":3143,"title":{},"body":{"modules/SettingsModule.html":{},"index.html":{}}}],["cluster_statemodule",{"_index":3176,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_statemodule_imports",{"_index":3177,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule",{"_index":3251,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_declarations",{"_index":3252,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_imports",{"_index":3253,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule",{"_index":3856,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_declarations",{"_index":3857,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["cluster_utilitiesmodule_exports",{"_index":3858,"title":{},"body":{"modules/UtilitiesModule.html":{},"index.html":{}}}],["clusterlevel",{"_index":3523,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["clustertickstoticks",{"_index":3603,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["code",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["codeflow",{"_index":2875,"title":{},"body":{"components/LoginComponent.html":{}}}],["codeprovider",{"_index":2870,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":1558,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["color",{"_index":3049,"title":{},"body":{"components/NavbarComponent.html":{},"components/TypeFilterComponent.html":{}}}],["color:inherit",{"_index":3044,"title":{},"body":{"components/NavbarComponent.html":{}}}],["combinelatest",{"_index":2618,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["commonmodule",{"_index":502,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{}}}],["comparebylttd(card1",{"_index":1572,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebylttd(card1,card2",{"_index":1581,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1",{"_index":1575,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebypublishdate(card1,card2",{"_index":1583,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1",{"_index":1569,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseverity(card1,card2",{"_index":1579,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebyseveritylttdpublishdate(card1",{"_index":1578,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["comparebystartdate(card1",{"_index":1565,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["complex",{"_index":1887,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["component",{"_index":267,"title":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["component_template",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["components",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"index.html":{}}}],["components/archive",{"_index":813,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["components/card",{"_index":1754,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["components/card/card.component",{"_index":1753,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/custom",{"_index":2292,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/detail/detail.component",{"_index":1756,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/details/details.component",{"_index":1755,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/icon/icon.component",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["components/init",{"_index":2301,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/login/login.component",{"_index":517,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/info/info.component",{"_index":536,"title":{},"body":{"modules/AppModule.html":{}}}],["components/navbar/navbar.component",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["components/no",{"_index":2276,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/settings/base",{"_index":3147,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/email",{"_index":3149,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/list",{"_index":3150,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/multi",{"_index":3151,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/settings.component",{"_index":3146,"title":{},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["components/settings/text",{"_index":3148,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/settings/type",{"_index":3153,"title":{},"body":{"modules/SettingsModule.html":{}}}],["components/time",{"_index":2279,"title":{},"body":{"modules/FeedModule.html":{}}}],["computation",{"_index":3701,"title":{},"body":{"classes/TimeReference.html":{}}}],["compute",{"_index":1463,"title":{},"body":{"components/CardComponent.html":{}}}],["computed",{"_index":2456,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["computedisplayeddates",{"_index":1424,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config",{"_index":1436,"title":{},"body":{"components/CardComponent.html":{}}}],["computedisplayeddates(config:string,lightcard:lightcard):string",{"_index":1469,"title":{},"body":{"components/CardComponent.html":{}}}],["computednow",{"_index":3672,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetduration",{"_index":3716,"title":{},"body":{"classes/TimeReference.html":{}}}],["computedoffsetinmilliseconds",{"_index":3713,"title":{},"body":{"classes/TimeReference.html":{}}}],["computelistvalidators",{"_index":2769,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["computemultivalidators",{"_index":2985,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["computenow",{"_index":3666,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow",{"_index":3680,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(momentnow:moment.moment):moment.moment",{"_index":3695,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow",{"_index":3683,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(realnow:number|moment.moment):moment.moment",{"_index":3696,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow",{"_index":3677,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenow(timestampnow:number):moment.moment",{"_index":3694,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment",{"_index":3667,"title":{},"body":{"classes/TimeReference.html":{}}}],["computenowmoment(realnowmoment",{"_index":3686,"title":{},"body":{"classes/TimeReference.html":{}}}],["computeredirecturi",{"_index":1036,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["computetextvalidators",{"_index":2113,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["computethirdcssurl",{"_index":3400,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["computethirdcssurl(publisher",{"_index":3316,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["computethirdsmenu",{"_index":3338,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["conf",{"_index":3517,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key",{"_index":3649,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["conf[key].foreach(value",{"_index":3647,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["config",{"_index":579,"title":{},"body":{"interfaces/AppState.html":{},"components/BaseFilterComponent.html":{},"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["config:any",{"_index":1819,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["config_load_max_retries",{"_index":1801,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["configactions",{"_index":2431,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["configactiontypes",{"_index":1169,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configactiontypes.handleunexpectederror",{"_index":2427,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfig",{"_index":2428,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigfailure",{"_index":2429,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigsuccess",{"_index":2430,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configeffects",{"_index":644,"title":{"injectables/ConfigEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["configinitialstate",{"_index":1820,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["configloaded",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["configreducer",{"_index":619,"title":{},"body":{"interfaces/AppState.html":{}}}],["configservice",{"_index":1781,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["configstate",{"_index":585,"title":{"interfaces/ConfigState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ConfigState.html":{}}}],["configtags",{"_index":2219,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configtags.length",{"_index":2220,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["configuration",{"_index":1460,"title":{},"body":{"components/CardComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configurl",{"_index":1811,"title":{},"body":{"injectables/ConfigService.html":{}}}],["confirm",{"_index":1050,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["confzoom",{"_index":3518,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["connection",{"_index":923,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["consequence",{"_index":1096,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consist",{"_index":1547,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["console.error('something",{"_index":3395,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.error(`error",{"_index":1723,"title":{},"body":{"injectables/CardService.html":{}}}],["console.error(`i18",{"_index":2762,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["console.error(err",{"_index":1123,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["console.error(error",{"_index":965,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/TimeEffects.html":{}}}],["console.error(message",{"_index":1189,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log(\"calcheightdirective",{"_index":1394,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["console.log(\"send",{"_index":1739,"title":{},"body":{"injectables/CardService.html":{}}}],["console.log('listfiltercomponent.isequal",{"_index":2814,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["console.log('listsettingcomponent.isequal",{"_index":2830,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["console.log('textsettingcomponent.isequal",{"_index":3238,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["console.log(`location",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`this",{"_index":1970,"title":{},"body":{"components/DetailComponent.html":{}}}],["console.log(err",{"_index":3308,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["const",{"_index":178,"title":{},"body":{"classes/Action.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constants",{"_index":2258,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["constructor(access_token",{"_index":840,"title":{},"body":{"classes/AuthObject.html":{}}}],["constructor(authenticationservice",{"_index":3760,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["constructor(card",{"_index":2015,"title":{},"body":{"classes/DetailContext.html":{}}}],["constructor(currenttime",{"_index":3453,"title":{},"body":{"classes/TickPayload.html":{}}}],["constructor(details",{"_index":3174,"title":{},"body":{"classes/State.html":{}}}],["constructor(el",{"_index":1325,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["constructor(element",{"_index":1914,"title":{},"body":{"components/DetailComponent.html":{}}}],["constructor(formbuilder",{"_index":3202,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["constructor(funktion",{"_index":2328,"title":{},"body":{"classes/Filter.html":{}}}],["constructor(httpclient",{"_index":1664,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"injectables/ThirdsService.html":{}}}],["constructor(id",{"_index":3247,"title":{},"body":{"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["constructor(identifier",{"_index":3067,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["constructor(key",{"_index":2601,"title":{},"body":{"classes/I18n.html":{}}}],["constructor(label",{"_index":3059,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["constructor(login",{"_index":3848,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["constructor(message",{"_index":2941,"title":{},"body":{"classes/Message.html":{}}}],["constructor(name",{"_index":3240,"title":{},"body":{"classes/Third.html":{}}}],["constructor(number",{"_index":1594,"title":{},"body":{"classes/CardOperation.html":{}}}],["constructor(payload",{"_index":40,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TryToLogIn.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{}}}],["constructor(platformlocation",{"_index":2643,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(platformlocation:platformlocation",{"_index":2665,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(private",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["constructor(protected",{"_index":1238,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["constructor(public",{"_index":77,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["constructor(readonly",{"_index":2017,"title":{},"body":{"classes/DetailContext.html":{},"classes/TimeReference.html":{}}}],["constructor(referencetime",{"_index":3670,"title":{},"body":{"classes/TimeReference.html":{}}}],["constructor(router",{"_index":1429,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(start",{"_index":3737,"title":{},"body":{"classes/TimeSpan.html":{}}}],["constructor(states",{"_index":3075,"title":{},"body":{"classes/Process.html":{}}}],["constructor(store",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["constructor(sub",{"_index":1761,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["constructor(thirdsservice",{"_index":3263,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["constructor(time",{"_index":2497,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["constructor(titleposition",{"_index":1901,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(translate",{"_index":2607,"title":{},"body":{"injectables/I18nService.html":{}}}],["constructor(type",{"_index":143,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{}}}],["constructor(uid",{"_index":1400,"title":{},"body":{"classes/Card.html":{}}}],["constructor(url",{"_index":3082,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["consume",{"_index":131,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["contain",{"_index":3556,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["containing",{"_index":29,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["contains",{"_index":900,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["content",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"classes/AuthObject.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{}}}],["contentchildren",{"_index":2041,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentchildren(detailcomponent",{"_index":2038,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentstyle",{"_index":150,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["context",{"_index":2500,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["context.model",{"_index":1944,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["context.model.ts",{"_index":2014,"title":{},"body":{"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["context.model.ts:11",{"_index":2016,"title":{},"body":{"classes/DetailContext.html":{}}}],["context.model.ts:8",{"_index":3854,"title":{},"body":{"classes/UserContext.html":{}}}],["control",{"_index":2780,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["convert",{"_index":978,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(payload",{"_index":1011,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["convert(value",{"_index":1215,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["convert(value:any):any",{"_index":1266,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["convertspeedintoenum",{"_index":3668,"title":{},"body":{"classes/TimeReference.html":{}}}],["convertspeedintoenum(key",{"_index":3689,"title":{},"body":{"classes/TimeReference.html":{}}}],["converttypeintoenum",{"_index":1593,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key",{"_index":1599,"title":{},"body":{"classes/CardOperation.html":{}}}],["converttypeintoenum(key:string",{"_index":1601,"title":{},"body":{"classes/CardOperation.html":{}}}],["copy",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["copyright",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["core",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["correct",{"_index":3878,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["correctly",{"_index":930,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["corresponding",{"_index":1046,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/MenuEffects.html":{},"injectables/TimeEffects.html":{}}}],["create",{"_index":27,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["createentityadapter",{"_index":1561,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["createformgroup",{"_index":3201,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["css",{"_index":1965,"title":{},"body":{"components/DetailComponent.html":{},"directives/DraggableDirective.html":{}}}],["csses",{"_index":3242,"title":{},"body":{"classes/Third.html":{}}}],["csses?:string",{"_index":171,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["cssurl",{"_index":1960,"title":{},"body":{"components/DetailComponent.html":{}}}],["curr",{"_index":1386,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["current",{"_index":88,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["currentdate",{"_index":3745,"title":{},"body":{"interfaces/TimeState.html":{}}}],["currentlang",{"_index":3385,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["currently",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["currentmoment",{"_index":3567,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["currentpath",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["currenttime",{"_index":2179,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["currenttimefilter",{"_index":2246,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.active",{"_index":2247,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.end",{"_index":2249,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimefilter.status.start",{"_index":2248,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["currenttimereference",{"_index":3458,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["custom",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["customroutereffects",{"_index":631,"title":{"injectables/CustomRouterEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["customrouterstateserializer",{"_index":1867,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["customtimelinechartcomponent",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["d.end",{"_index":3633,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["d.start",{"_index":3631,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dark",{"_index":2007,"title":{},"body":{"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["dark:boolean",{"_index":2660,"title":{},"body":{"components/IconComponent.html":{}}}],["dat",{"_index":3891,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["data",{"_index":231,"title":{},"body":{"classes/AddLightCardFailure.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitTimeline.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["date",{"_index":83,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["date().valueof",{"_index":1702,"title":{},"body":{"injectables/CardService.html":{}}}],["date(+localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":1008,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(0",{"_index":1063,"title":{},"body":{"interfaces/AuthState.html":{}}}],["date(expirationdate",{"_index":1020,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(minus2hour.valueof()+48*60*60*1000",{"_index":1705,"title":{},"body":{"injectables/CardService.html":{}}}],["date(new",{"_index":1701,"title":{},"body":{"injectables/CardService.html":{}}}],["date(value",{"_index":2579,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["date.date(16",{"_index":3662,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.format(clusterlevel",{"_index":3897,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hour",{"_index":3908,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hours",{"_index":3905,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.minutes",{"_index":3907,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.minutes(0).seconds(0).millisecond(0",{"_index":3652,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.now",{"_index":1014,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date.seconds",{"_index":3909,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.startof('month",{"_index":3657,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.subtract(1",{"_index":3658,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.subtract(2",{"_index":3663,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["date.valueof",{"_index":3903,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateinsidetooltipsmonth",{"_index":3896,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateinsidetooltipsweek",{"_index":3887,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonday",{"_index":3906,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateondaynewyear",{"_index":3910,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonmonth",{"_index":3914,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonweek",{"_index":3913,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dateonyear",{"_index":3915,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datesimplifliedonday",{"_index":3912,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datesimplifliedondaynewyear",{"_index":3911,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datetodisplay",{"_index":1423,"title":{},"body":{"components/CardComponent.html":{}}}],["datewithspacebeforemoment",{"_index":3519,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["datewithspacebeforemoment(date",{"_index":3522,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["day",{"_index":3552,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["dd",{"_index":3614,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dd/mm",{"_index":3616,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["deactivate",{"_index":2053,"title":{},"body":{"components/DetailsComponent.html":{}}}],["debounce",{"_index":1234,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["debouncetime",{"_index":1337,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["debouncetime(300",{"_index":1340,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["debug",{"_index":2945,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["decode",{"_index":854,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["decodetoken(token",{"_index":1043,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["decoration",{"_index":3051,"title":{},"body":{"components/NavbarComponent.html":{}}}],["decorators",{"_index":701,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["deep",{"_index":3225,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["default",{"_index":49,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["default:return",{"_index":1475,"title":{},"body":{"components/CardComponent.html":{}}}],["defaultfilters",{"_index":2361,"title":{},"body":{"injectables/FilterService.html":{}}}],["define",{"_index":1360,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["defined",{"_index":42,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["defines",{"_index":937,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delay",{"_index":1796,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delay(this.retrydelay",{"_index":1809,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delegateurl",{"_index":872,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delete",{"_index":1605,"title":{},"body":{"classes/CardOperation.html":{},"directives/DraggableDirective.html":{},"miscellaneous/enumerations.html":{}}}],["delta",{"_index":2975,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dentifier",{"_index":1002,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["dependencies",{"_index":477,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"directives/MouseWheelDirective.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["description$|async",{"_index":2732,"title":{},"body":{"components/InfoComponent.html":{}}}],["deserializable",{"_index":901,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["desired",{"_index":3197,"title":{},"body":{"modules/StateModule.html":{}}}],["detail",{"_index":160,"title":{"classes/Detail.html":{}},"body":{"classes/Action.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detail'},{'name",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["detail.active",{"_index":2056,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.component.html",{"_index":1904,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.component",{"_index":2042,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailcomponent",{"_index":430,"title":{"components/DetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["detailcontext",{"_index":1942,"title":{"classes/DetailContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"injectables/HandlebarsService.html":{}}}],["detailcontext(this.card,null",{"_index":1978,"title":{},"body":{"components/DetailComponent.html":{}}}],["detailcontext):observable",{"_index":2535,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["details",{"_index":1411,"title":{},"body":{"classes/Card.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"classes/State.html":{}}}],["details'},{'name",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["details.component",{"_index":826,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details.component.html",{"_index":1502,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":2022,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.ts",{"_index":1501,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":1505,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1503,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1504,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/:did",{"_index":832,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details/card",{"_index":825,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details?:detail",{"_index":192,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detailscomponent",{"_index":432,"title":{"components/DetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["devtools",{"_index":3183,"title":{},"body":{"modules/StateModule.html":{},"dependencies.html":{}}}],["didn't",{"_index":1353,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["different",{"_index":3533,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["directive",{"_index":405,"title":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["directives",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dispatch",{"_index":1202,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdateTimeReference.html":{}}}],["dispatch(value",{"_index":1217,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dispatch(value:any",{"_index":1267,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["dispatched",{"_index":3493,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["display",{"_index":1136,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/InfoComponent.html":{},"components/TagsFilterComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["display.bubble",{"_index":3743,"title":{},"body":{"classes/TimeSpan.html":{}}}],["displays",{"_index":2264,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["distinctuntilchanged",{"_index":1235,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged((forma",{"_index":1255,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distributed",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["divide",{"_index":1376,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["document.getelementbyid('${svguid}').addeventlistener('load",{"_index":2573,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["document.getelementbyid(this.parentid",{"_index":1350,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["doesn't",{"_index":739,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/TimeReference.html":{}}}],["dom",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["domain",{"_index":3526,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domain7dayconf",{"_index":3566,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainmonthconf",{"_index":3564,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainweekconf",{"_index":3565,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["domainyearconf",{"_index":3559,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dommousescroll",{"_index":2953,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dommousescroll(event",{"_index":2957,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["domsanitizer",{"_index":1918,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["done",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["dow",{"_index":3550,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["down",{"_index":1415,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["doy",{"_index":3553,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["drag",{"_index":2080,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragend",{"_index":2066,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragevent",{"_index":2110,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable",{"_index":2300,"title":{},"body":{"modules/FeedModule.html":{}}}],["draggable.ts",{"_index":2062,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:11",{"_index":2088,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:18",{"_index":2079,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:28",{"_index":2083,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:40",{"_index":2086,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:7",{"_index":2075,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:8",{"_index":2074,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:9",{"_index":2073,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggabledirective",{"_index":469,"title":{"directives/DraggableDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["dragging",{"_index":2064,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragmove",{"_index":2067,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragstart",{"_index":2068,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dropdown",{"_index":3042,"title":{},"body":{"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["dropdown]=\"tmenu.entries.length>1",{"_index":3035,"title":{},"body":{"components/NavbarComponent.html":{}}}],["duration",{"_index":3711,"title":{},"body":{"classes/TimeReference.html":{}}}],["duration.asmilliseconds",{"_index":3714,"title":{},"body":{"classes/TimeReference.html":{}}}],["during",{"_index":1556,"title":{},"body":{"interfaces/CardFeedState.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interfaces/TimelineState.html":{}}}],["dynamic",{"_index":3923,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":3531,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["effect",{"_index":702,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["effects",{"_index":1544,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodule",{"_index":3181,"title":{},"body":{"modules/StateModule.html":{}}}],["effectsmodule.forroot(appeffects",{"_index":3190,"title":{},"body":{"modules/StateModule.html":{}}}],["el",{"_index":1328,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["elapsed",{"_index":2171,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsincelast",{"_index":2181,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["elapsedsofar",{"_index":2201,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["element",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["elementref",{"_index":1326,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/DetailComponent.html":{}}}],["elements",{"_index":1358,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["email",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emailsettingcomponent",{"_index":433,"title":{"components/EmailSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["emit",{"_index":1094,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{}}}],["emitevent",{"_index":2813,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["emitevent:false",{"_index":3491,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["emits",{"_index":1154,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emitted",{"_index":14,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["emittedby",{"_index":1132,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emmited",{"_index":119,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["empty",{"_index":227,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["emptylightcards",{"_index":226,"title":{"classes/EmptyLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["emptylightcards(),new",{"_index":1162,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["enabledrag",{"_index":3593,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enabletracing",{"_index":574,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enablezoom",{"_index":3594,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["encoding",{"_index":3319,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["end",{"_index":2087,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddate",{"_index":1405,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["enddomain",{"_index":3571,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.valueof",{"_index":3601,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2",{"_index":3574,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.valueof",{"_index":3612,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3",{"_index":3577,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.valueof",{"_index":3618,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4",{"_index":3581,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain4.valueof",{"_index":3610,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["entire",{"_index":1886,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["entities",{"_index":252,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{}}}],["entityadapter",{"_index":1562,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entitystate",{"_index":1548,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entries",{"_index":190,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["entry",{"_index":1863,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["entry.id",{"_index":3304,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["enum",{"_index":58,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["enumerations",{"_index":3954,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":601,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{}}}],["environment",{"_index":600,"title":{},"body":{"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"index.html":{}}}],["environment.production",{"_index":660,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["environment.urls.auth}/check_token",{"_index":863,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/code/redirect_uri=${authenticationservice.computeredirecturi",{"_index":1034,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/token",{"_index":866,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.cards}/archives",{"_index":1698,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cards",{"_index":1696,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cardsubscription?clientid=${clientid",{"_index":1694,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.config",{"_index":1816,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.urls.thirds",{"_index":3283,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["environment.urls.users",{"_index":3167,"title":{},"body":{"injectables/SettingsService.html":{}}}],["environment.urls.users}/users",{"_index":868,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environments/environment",{"_index":3270,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["equal",{"_index":3540,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["equally",{"_index":1377,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["err",{"_index":1125,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["error",{"_index":126,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"interfaces/ConfigState.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/InitAuthStatus.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["error('no",{"_index":3307,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["error(`unhandled",{"_index":1638,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["error.tostring",{"_index":1726,"title":{},"body":{"injectables/CardService.html":{}}}],["error:null",{"_index":2939,"title":{},"body":{"interfaces/MenuState.html":{}}}],["error:string",{"_index":2937,"title":{},"body":{"interfaces/MenuState.html":{}}}],["errormsg",{"_index":1084,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse",{"_index":1081,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.message",{"_index":1188,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.status",{"_index":1178,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["es",{"_index":1725,"title":{},"body":{"injectables/CardService.html":{}}}],["etc",{"_index":3490,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["evaluate",{"_index":2317,"title":{},"body":{"classes/Filter.html":{}}}],["event",{"_index":1685,"title":{},"body":{"injectables/CardService.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"dependencies.html":{}}}],["event.detail",{"_index":2979,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["event.wheeldelta",{"_index":2978,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["eventemitter",{"_index":2072,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["eventsource",{"_index":1671,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.close",{"_index":1730,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.closed",{"_index":1729,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onerror",{"_index":1722,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onmessage",{"_index":1719,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.readystate",{"_index":1728,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsourcepolyfill",{"_index":1669,"title":{},"body":{"injectables/CardService.html":{}}}],["example",{"_index":2452,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"directives/MouseWheelDirective.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["examples/blob/master/app/mousewheeldirective/mousewheel.directive.ts",{"_index":2949,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["exceeded",{"_index":3655,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["executetemplate",{"_index":2481,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["executetemplate(templatename",{"_index":2499,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["exist",{"_index":3704,"title":{},"body":{"classes/TimeReference.html":{}}}],["exists",{"_index":89,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/BaseFilterComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["exp",{"_index":893,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expandedmenu",{"_index":2997,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedmenu:boolean",{"_index":3017,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu",{"_index":2998,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedusermenu=false",{"_index":3018,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expiration",{"_index":972,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["expirationdate",{"_index":82,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["expireclaim",{"_index":871,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expired",{"_index":1120,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["expires_in",{"_index":839,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["explain",{"_index":786,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["export",{"_index":57,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["exports",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["extended",{"_index":230,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["extends",{"_index":1560,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["external",{"_index":194,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":967,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["extractidentificationinformation",{"_index":1003,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["extractparams",{"_index":1870,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["extractparams(state",{"_index":1872,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["extractstate",{"_index":3239,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card",{"_index":3245,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card:card):state",{"_index":175,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extracttoken",{"_index":969,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["f5",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":2005,"title":{},"body":{"components/DetailComponent.html":{}}}],["faclock",{"_index":2287,"title":{},"body":{"modules/FeedModule.html":{}}}],["faexternallinkalt",{"_index":531,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":233,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":2763,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["failtoupdatetimereference",{"_index":2149,"title":{"classes/FailToUpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["failtoupdatetimereference='[time",{"_index":2168,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["failure",{"_index":2446,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["fallback",{"_index":1355,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["false",{"_index":196,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeFilterComponent.html":{}}}],["fasignoutalt",{"_index":532,"title":{},"body":{"modules/AppModule.html":{}}}],["fctargs[fctargs.length",{"_index":2572,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["feed",{"_index":554,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchiveListComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"miscellaneous/enumerations.html":{}}}],["feed.component",{"_index":2275,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":2188,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":2187,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.filters.time.end.label",{"_index":3513,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.start.label",{"_index":3512,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.title",{"_index":3514,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.type.action.label",{"_index":3829,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.alarm.label",{"_index":3828,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.notification.label",{"_index":3831,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.question.label",{"_index":3830,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.title",{"_index":3832,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.timefilter.followclocktick",{"_index":2259,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["feedactions",{"_index":682,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["feedactiontypes",{"_index":674,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["feedactiontypes.applyfilter",{"_index":669,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.initfilter",{"_index":680,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedcomponent",{"_index":435,"title":{"components/FeedComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["feedfilterseffects",{"_index":640,"title":{"injectables/FeedFiltersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/FeedFiltersEffects.html":{}}}],["feedinitialstate",{"_index":1586,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["feedmodule",{"_index":2267,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["feedroutingmodule",{"_index":2273,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["feedselectors",{"_index":795,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["fetch",{"_index":1459,"title":{},"body":{"components/CardComponent.html":{}}}],["fetcharchivedcards",{"_index":1659,"title":{},"body":{"injectables/CardService.html":{}}}],["fetcharchivedcards(filters",{"_index":1666,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation",{"_index":1660,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation(eventsource",{"_index":1668,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchconfiguration",{"_index":1812,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetchhbstemplate",{"_index":3401,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchhbstemplate(publisher",{"_index":3312,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchi18njson",{"_index":3402,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchi18njson(publisher",{"_index":3325,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchthird",{"_index":3403,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchthird(publisher",{"_index":3293,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchusersettings",{"_index":3159,"title":{},"body":{"injectables/SettingsService.html":{}}}],["field",{"_index":3224,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["fill",{"_index":2686,"title":{},"body":{"components/IconComponent.html":{}}}],["filter",{"_index":465,"title":{"classes/Filter.html":{}},"body":{"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{}}}],["filter$(filter",{"_index":3807,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter'},{'name",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter(()=>this.form.valid",{"_index":1254,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["filter(([action",{"_index":1808,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["filter(([elapsedsincelast",{"_index":2245,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter((action",{"_index":1829,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["filter((af",{"_index":1642,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["filter((t:third)=>!(!t.menuentries",{"_index":3341,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter((third",{"_index":3300,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter(time",{"_index":2240,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(v=>!!v",{"_index":2223,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter(x",{"_index":2232,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filter.component",{"_index":818,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"components/ListFilterComponent.html":{}}}],["filter.component.html",{"_index":1198,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/ListFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.scss",{"_index":2767,"title":{},"body":{"components/ListFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts",{"_index":1196,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/ListFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:24",{"_index":2771,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["filter.component.ts:25",{"_index":1212,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/ListFilterComponent.html":{}}}],["filter.component.ts:26",{"_index":1213,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/TimeFilterComponent.html":{}}}],["filter.component.ts:27",{"_index":1214,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":1231,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":1230,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":1232,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:31",{"_index":1211,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/ListFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":3806,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":3481,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":3802,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:35",{"_index":3206,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:37",{"_index":1226,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":3483,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:44",{"_index":3803,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:45",{"_index":3484,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:50",{"_index":2776,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["filter.component.ts:53",{"_index":3804,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:58",{"_index":2775,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":3805,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:62",{"_index":1225,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["filter.component.ts:63",{"_index":3205,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:65",{"_index":2778,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["filter.component.ts:67",{"_index":1229,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["filter.component.ts:68",{"_index":3204,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filter.component.ts:69",{"_index":2777,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["filter.component.ts:71",{"_index":1219,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["filter.component.ts:74",{"_index":2779,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["filter.component.ts:75",{"_index":1216,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["filter.component.ts:80",{"_index":1218,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["filter.component.ts:84",{"_index":1223,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["filter.component.ts:88",{"_index":1227,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["filter.component.ts:94",{"_index":3482,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.model",{"_index":671,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.model.ts",{"_index":2310,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:22",{"_index":2330,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:27",{"_index":2331,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:28",{"_index":2332,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:32",{"_index":2345,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:43",{"_index":2334,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:56",{"_index":2337,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:67",{"_index":2342,"title":{},"body":{"classes/Filter.html":{}}}],["filter/base",{"_index":817,"title":{},"body":{"modules/ArchivesModule.html":{},"components/BaseFilterComponent.html":{},"components/ListFilterComponent.html":{}}}],["filter/list",{"_index":820,"title":{},"body":{"modules/ArchivesModule.html":{},"components/ListFilterComponent.html":{}}}],["filter/tags",{"_index":2304,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["filter/time",{"_index":2286,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["filter/type",{"_index":2284,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["filtered",{"_index":2224,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["filtering",{"_index":30,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/CustomRouterEffects.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["filterpath",{"_index":1208,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/ListFilterComponent.html":{}}}],["filters",{"_index":716,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{}}}],["filters'},{'name",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filters.component",{"_index":821,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["filters.component.html",{"_index":718,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/FiltersComponent.html":{}}}],["filters.component.scss",{"_index":717,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts",{"_index":715,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:24",{"_index":726,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:25",{"_index":725,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:26",{"_index":727,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:28",{"_index":722,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:33",{"_index":723,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.component.ts:41",{"_index":724,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["filters.effects",{"_index":642,"title":{},"body":{"interfaces/AppState.html":{}}}],["filters.effects.ts",{"_index":2200,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:25",{"_index":2210,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:28",{"_index":2209,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:31",{"_index":2208,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:44",{"_index":2230,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:54",{"_index":2227,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:75",{"_index":2253,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.foreach((values",{"_index":1736,"title":{},"body":{"injectables/CardService.html":{}}}],["filters.set(filtertype.recipient_filter",{"_index":2396,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.tag_filter",{"_index":2400,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.time_filter",{"_index":2398,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.type_filter",{"_index":2394,"title":{},"body":{"injectables/FilterService.html":{}}}],["filterscomponent",{"_index":437,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["filterservice",{"_index":2207,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["filtertype",{"_index":672,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtertype.tag_filter",{"_index":3221,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["filtertype.time_filter",{"_index":1644,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{}}}],["filtertype.type_filter",{"_index":3823,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filtervalues",{"_index":777,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"components/BaseFilterComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["find",{"_index":3861,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["fires",{"_index":1859,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["firing",{"_index":1623,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["first",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/DetailsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["firstmovestartofunit",{"_index":3608,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["firstname",{"_index":1060,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname:string",{"_index":3851,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["firstname?:string",{"_index":84,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["fixed",{"_index":1362,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedelements",{"_index":1364,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["fixedheightclass",{"_index":1321,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["flow",{"_index":927,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["followclocktick",{"_index":2202,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["following",{"_index":16,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["font",{"_index":1488,"title":{},"body":{"components/CardComponent.html":{},"components/InfoComponent.html":{}}}],["fontawesome",{"_index":526,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":524,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["foreach",{"_index":1688,"title":{},"body":{"injectables/CardService.html":{}}}],["foreach((x",{"_index":1396,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["form",{"_index":107,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["form.action",{"_index":3825,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.alarm",{"_index":3824,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.end",{"_index":3509,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.notification",{"_index":3827,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.question",{"_index":3826,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.start",{"_index":3508,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.tags.length>0",{"_index":3222,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["forma",{"_index":1224,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["forma.filter",{"_index":2815,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["forma.setting",{"_index":2831,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["format",{"_index":3875,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe",{"_index":2297,"title":{},"body":{"modules/FeedModule.html":{}}}],["format.pipe.ts",{"_index":3864,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:16",{"_index":3881,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:55",{"_index":3873,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["format.pipe.ts:79",{"_index":3868,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatted",{"_index":3869,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatter",{"_index":2583,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatter.format(value",{"_index":2586,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatticks",{"_index":3613,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formattooltipsdate",{"_index":3615,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["formb",{"_index":1222,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formb):boolean",{"_index":1271,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formb.filter",{"_index":2816,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["formb.setting",{"_index":2832,"title":{},"body":{"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["formbuilder",{"_index":3203,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formbuilder,private",{"_index":3207,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["formcontrol",{"_index":2795,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formcontrol([],validators",{"_index":2991,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["formcontrol(null,validators",{"_index":3234,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["formdata",{"_index":906,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["formgroup",{"_index":1220,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["forms",{"_index":1893,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["formsmodule",{"_index":506,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["forroot",{"_index":1750,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["fortawesome/angular",{"_index":525,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":528,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":533,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["forward",{"_index":3583,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardconf",{"_index":3605,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwarddayconf",{"_index":3587,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardmonthconf",{"_index":3585,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardweekconf",{"_index":3586,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["forwardyearconf",{"_index":3584,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["found",{"_index":2459,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["france.com",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["freeze",{"_index":603,"title":{},"body":{"interfaces/AppState.html":{}}}],["from(_.difference(work",{"_index":3370,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["from(cards).pipe",{"_index":3351,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["from(menus).pipe",{"_index":3357,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fromrouter",{"_index":592,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromrouter.routerreducer",{"_index":658,"title":{},"body":{"interfaces/AppState.html":{}}}],["full",{"_index":830,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["function",{"_index":24,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["function(a,b",{"_index":2594,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["function(lvalue",{"_index":2562,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["funktion",{"_index":2315,"title":{},"body":{"classes/Filter.html":{}}}],["futur",{"_index":1051,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["future",{"_index":1057,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/TimeLineComponent.html":{}}}],["g",{"_index":2591,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["gather",{"_index":2311,"title":{},"body":{"classes/Filter.html":{}}}],["generating",{"_index":924,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["gently",{"_index":569,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getcardoperation",{"_index":1661,"title":{},"body":{"injectables/CardService.html":{}}}],["getcurrentguid",{"_index":2411,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring",{"_index":2412,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring():string",{"_index":2418,"title":{},"body":{"classes/GuidService.html":{}}}],["getdescription",{"_index":2716,"title":{},"body":{"components/InfoComponent.html":{}}}],["getfilter",{"_index":3485,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["gethtmlcontent",{"_index":1937,"title":{},"body":{"components/DetailComponent.html":{}}}],["geti18nprefix",{"_index":1445,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["getitem",{"_index":1006,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getlocale",{"_index":2612,"title":{},"body":{"injectables/I18nService.html":{}}}],["getroutepe",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["getsecurityheader",{"_index":1026,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getselectediframeurl",{"_index":2696,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getthirdmenus",{"_index":3014,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gettime",{"_index":2718,"title":{},"body":{"components/InfoComponent.html":{}}}],["gettimezone",{"_index":2614,"title":{},"body":{"injectables/I18nService.html":{}}}],["gettranslation",{"_index":3262,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["gettranslation(lang",{"_index":3265,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["getusername",{"_index":2714,"title":{},"body":{"components/InfoComponent.html":{}}}],["given",{"_index":922,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["gives",{"_index":897,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["graph",{"_index":3980,"title":{},"body":{"modules.html":{}}}],["guid",{"_index":53,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["guid.create",{"_index":2417,"title":{},"body":{"classes/GuidService.html":{}}}],["guid.parse(localstorage.getitem(localstorageauthcontent.clientid",{"_index":1005,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["guidservice",{"_index":850,"title":{"classes/GuidService.html":{}},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"modules/ServicesModule.html":{}}}],["h",{"_index":3888,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["half",{"_index":3731,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["handle",{"_index":245,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":1916,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"dependencies.html":{}}}],["handlebars.registerhelper(\"math",{"_index":2561,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper(\"preservespace",{"_index":2589,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('action",{"_index":2575,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindex",{"_index":2566,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindexlength",{"_index":2554,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('bool",{"_index":2549,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('dateformat",{"_index":2576,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('now",{"_index":2587,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('numberformat",{"_index":2582,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('slice",{"_index":2568,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('sort",{"_index":2571,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('split",{"_index":2556,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars/dist/handlebars.js",{"_index":2518,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebarsservice",{"_index":1748,"title":{"injectables/HandlebarsService.html":{}},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"index.html":{}}}],["handledate",{"_index":1425,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp",{"_index":1438,"title":{},"body":{"components/CardComponent.html":{}}}],["handledate(timestamp:number):string",{"_index":1477,"title":{},"body":{"components/CardComponent.html":{}}}],["handleerror(error",{"_index":964,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handleerrorontokengeneration",{"_index":1067,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse",{"_index":1078,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse,category:string",{"_index":1175,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleloginattempt",{"_index":22,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handleloginattempt(payload",{"_index":1193,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handlenewtoken(call",{"_index":947,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handlerejectedlogin",{"_index":121,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handlerejectedlogin(errormsg",{"_index":1082,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleunexpectederror",{"_index":244,"title":{"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["handleunexpectederror({error",{"_index":700,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["handling",{"_index":2011,"title":{},"body":{"components/DetailComponent.html":{}}}],["hashlocationstrategy",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["header",{"_index":1025,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/TypeFilterComponent.html":{}}}],["headers",{"_index":909,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["headers}).pipe",{"_index":918,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["heart",{"_index":2169,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["heartbeat",{"_index":3459,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["heartbeattimeout",{"_index":1715,"title":{},"body":{"injectables/CardService.html":{}}}],["height",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/InfoComponent.html":{},"components/TypeFilterComponent.html":{}}}],["height.directive",{"_index":3860,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["height.directive.ts",{"_index":1317,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:21",{"_index":1331,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:24",{"_index":1330,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:27",{"_index":1329,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:29",{"_index":1327,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:40",{"_index":1335,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:45",{"_index":1332,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["height.directive.ts:49",{"_index":1334,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["heights",{"_index":1381,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["helper",{"_index":1009,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["here",{"_index":1707,"title":{},"body":{"injectables/CardService.html":{}}}],["hidden",{"_index":147,"title":{},"body":{"classes/Action.html":{},"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hide",{"_index":2871,"title":{},"body":{"components/LoginComponent.html":{}}}],["hidetimeline",{"_index":2189,"title":{},"body":{"components/FeedComponent.html":{}}}],["horizontal",{"_index":3877,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hostlistener",{"_index":1336,"title":{},"body":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["hostlistener('document:dragstart",{"_index":2108,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('dommousescroll",{"_index":2970,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('mousewheel",{"_index":2967,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('onmousewheel",{"_index":2972,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('pointerdown",{"_index":2090,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointermove",{"_index":2094,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointerup",{"_index":2097,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('window:resize",{"_index":1346,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["hostlisteners",{"_index":1323,"title":{},"body":{"directives/CalcHeightDirective.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["hou",{"_index":3890,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hour",{"_index":3561,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["hours",{"_index":3653,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["hoursonly",{"_index":3898,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["href",{"_index":1964,"title":{},"body":{"components/DetailComponent.html":{}}}],["hrefsofcsslink",{"_index":1906,"title":{},"body":{"components/DetailComponent.html":{}}}],["html",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["htmlbuttonelement",{"_index":1923,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlcontent",{"_index":1913,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlelement",{"_index":1349,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["http",{"_index":1024,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http://www.rte",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["http_interceptors",{"_index":3103,"title":{},"body":{"modules/ServicesModule.html":{}}}],["httpcall",{"_index":3326,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpclient",{"_index":847,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpclient:httpclient",{"_index":1690,"title":{},"body":{"injectables/CardService.html":{}}}],["httpclientmodule",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":3768,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httphandler",{"_index":3766,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpheaders",{"_index":848,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpheaders({'content",{"_index":910,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpinterceptor",{"_index":3769,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpparams",{"_index":1687,"title":{},"body":{"injectables/CardService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('version',version",{"_index":3323,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httprequest",{"_index":3763,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["https://github.com/briebug/ngrx",{"_index":1892,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["https://github.com/sodhanalibrary/angular2",{"_index":2948,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["httpurlencodingcodec",{"_index":3269,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["i18n",{"_index":146,"title":{"classes/I18n.html":{}},"body":{"classes/Action.html":{},"components/ArchiveFiltersComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/I18n.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["i18n('login.error.token.expiration",{"_index":1121,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.token.invalid",{"_index":1111,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.unexpected",{"_index":1127,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('time.error",{"_index":3473,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18n(key",{"_index":1192,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18nlabelkey",{"_index":169,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18nparameters",{"_index":3471,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nparameters['message",{"_index":3472,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["i18nprefix",{"_index":1428,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["i18nprefix+detailc.detail.title.key",{"_index":2059,"title":{},"body":{"components/DetailsComponent.html":{}}}],["i18nprefix+lightcard.summary.key",{"_index":1481,"title":{},"body":{"components/CardComponent.html":{}}}],["i18nprefix+lightcard.title.key",{"_index":1479,"title":{},"body":{"components/CardComponent.html":{}}}],["i18nservice",{"_index":293,"title":{"injectables/I18nService.html":{}},"body":{"components/AppComponent.html":{},"injectables/I18nService.html":{},"modules/ServicesModule.html":{},"index.html":{}}}],["i18nservice:i18nservice",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["icon",{"_index":2636,"title":{},"body":{"components/IconComponent.html":{}}}],["icon'},{'name",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["icon.component.html",{"_index":2638,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":2637,"title":{},"body":{"components/IconComponent.html":{}}}],["icon:string",{"_index":2656,"title":{},"body":{"components/IconComponent.html":{}}}],["iconcomponent",{"_index":438,"title":{"components/IconComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iconpath",{"_index":2639,"title":{},"body":{"components/IconComponent.html":{}}}],["iconpath:string",{"_index":2664,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":535,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["id",{"_index":188,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{}}}],["id'].nodevalue",{"_index":1993,"title":{},"body":{"components/DetailComponent.html":{}}}],["id.split",{"_index":3374,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["id:string",{"_index":185,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["identifier",{"_index":78,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["identifying",{"_index":1862,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["ids",{"_index":3364,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ids.push(id",{"_index":3363,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(!!control.value",{"_index":2817,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["if(!!next.status.end",{"_index":3501,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!next.status.start",{"_index":3496,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!state",{"_index":1994,"title":{},"body":{"components/DetailComponent.html":{}}}],["if(!parent",{"_index":1356,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["if(!this.delegateurl",{"_index":1032,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["if(!this.form",{"_index":1241,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["if(a[key]b[key",{"_index":2599,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(action.payload.settings.defaulttags",{"_index":2216,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(args.length",{"_index":2558,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(card",{"_index":1511,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["if(card.details",{"_index":1512,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["if(card.process",{"_index":176,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(card.state",{"_index":180,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(changes['card'].currentvalue",{"_index":2057,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(entry.length==1",{"_index":3305,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(i",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["if(ismoment(realnow",{"_index":3697,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(key",{"_index":1603,"title":{},"body":{"classes/CardOperation.html":{}}}],["if(locale",{"_index":2627,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(newelapsedsofar>=this.refreshthreshold",{"_index":2237,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["if(result",{"_index":1582,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(result==0",{"_index":1580,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["if(template",{"_index":2544,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(third",{"_index":3288,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(this.active",{"_index":2353,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.applyfilter(card",{"_index":2355,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.dark||this.light",{"_index":2681,"title":{},"body":{"components/IconComponent.html":{}}}],["if(this.expandedmenu[index",{"_index":3028,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.expandedusermenu",{"_index":3031,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(this.isvirtualtimeundefine",{"_index":3719,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(this.speed",{"_index":3706,"title":{},"body":{"classes/TimeReference.html":{}}}],["if(timezone",{"_index":2631,"title":{},"body":{"injectables/I18nService.html":{}}}],["if(typeof",{"_index":2595,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(url",{"_index":1454,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["iframe_url",{"_index":2458,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["iframedisplay",{"_index":2688,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay'},{'name",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["iframedisplay.component",{"_index":3256,"title":{},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["iframedisplay.component.html",{"_index":2690,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay.component.scss",{"_index":2689,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplaycomponent",{"_index":440,"title":{"components/IframeDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["iframeurl",{"_index":2701,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["ignore",{"_index":92,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{}}}],["implementation",{"_index":2321,"title":{},"body":{"classes/Filter.html":{}}}],["implemented",{"_index":2012,"title":{},"body":{"components/DetailComponent.html":{}}}],["implementing",{"_index":1072,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["implements",{"_index":33,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["imports",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["include",{"_index":3196,"title":{},"body":{"modules/StateModule.html":{}}}],["incorrect",{"_index":2146,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":2910,"title":{},"body":{"classes/Map.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["info'},{'name",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["info.component.html",{"_index":2706,"title":{},"body":{"components/InfoComponent.html":{}}}],["info.component.scss",{"_index":2705,"title":{},"body":{"components/InfoComponent.html":{}}}],["infocomponent",{"_index":442,"title":{"components/InfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["information",{"_index":13,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["informatios",{"_index":990,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["inherit",{"_index":3050,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inheritance",{"_index":2323,"title":{},"body":{"classes/Filter.html":{}}}],["inherited",{"_index":2116,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["iniitialized",{"_index":1031,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["init",{"_index":61,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initauthstatus",{"_index":60,"title":{"classes/InitAuthStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initauthstatus({code:window.location.href.substring(i",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["initchartcomponent",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["initfilter",{"_index":676,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["initfilters",{"_index":679,"title":{"classes/InitFilters.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["initfilters({filters:this.service.defaultfilters",{"_index":2229,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["initformgroup",{"_index":1203,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["initformgroup():formgroup",{"_index":1265,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["initialized",{"_index":931,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["initializehandlebarstemplates",{"_index":1910,"title":{},"body":{"components/DetailComponent.html":{}}}],["initializehrefsofcsslink",{"_index":1911,"title":{},"body":{"components/DetailComponent.html":{}}}],["initialstate",{"_index":663,"title":{},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["initrecipientfilter",{"_index":2362,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilter",{"_index":2363,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittagfilteronloadedsettings",{"_index":2203,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["inittimefilter",{"_index":2364,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimeline",{"_index":2741,"title":{"classes/InitTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["inittypefilter",{"_index":2365,"title":{},"body":{"injectables/FilterService.html":{}}}],["inject",{"_index":1795,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/GuidService.html":{}}}],["inject('configretrydelay",{"_index":1802,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["injectable",{"_index":683,"title":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"interceptors/TokenInjector.html":{}}}],["injectables",{"_index":684,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"index.html":{}}}],["injected",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["injector",{"_index":3268,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["inline",{"_index":2734,"title":{},"body":{"components/InfoComponent.html":{}}}],["input",{"_index":152,"title":{"classes/Input.html":{}},"body":{"classes/Action.html":{},"components/ArchiveListComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["input[0",{"_index":3375,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["input[1",{"_index":3376,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["inputs",{"_index":151,"title":{},"body":{"classes/Action.html":{},"components/ArchiveListComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["inputtype",{"_index":197,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["inside",{"_index":2102,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["instance",{"_index":1010,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["instanciate",{"_index":1244,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["instanciation",{"_index":2322,"title":{},"body":{"classes/Filter.html":{}}}],["instantiate",{"_index":1963,"title":{},"body":{"components/DetailComponent.html":{}}}],["intercept",{"_index":3759,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercept(request",{"_index":3765,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercepted",{"_index":1710,"title":{},"body":{"injectables/CardService.html":{}}}],["interceptor",{"_index":1711,"title":{"interceptors/TokenInjector.html":{}},"body":{"injectables/CardService.html":{}}}],["interceptors",{"_index":3756,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["interceptors.service",{"_index":3104,"title":{},"body":{"modules/ServicesModule.html":{}}}],["interface",{"_index":576,"title":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{}}}],["interfaces",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ArchiveState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"index.html":{}}}],["internal",{"_index":3048,"title":{},"body":{"components/NavbarComponent.html":{}}}],["intl.datetimeformat().resolvedoptions().timezone",{"_index":2633,"title":{},"body":{"injectables/I18nService.html":{}}}],["intl.numberformat(this.translate.getbrowserlang",{"_index":2584,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["invalid",{"_index":899,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["isauth",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["isequal",{"_index":1204,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isequal(forma",{"_index":1221,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["isexpirationdateover",{"_index":985,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["isinthefuture(expirationdate",{"_index":983,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture(time",{"_index":1058,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ismoment",{"_index":3692,"title":{},"body":{"classes/TimeReference.html":{}}}],["isnan(expirationdate",{"_index":981,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isnotanumber",{"_index":980,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["issue",{"_index":248,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["istanbul",{"_index":91,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{}}}],["isused",{"_index":1007,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isvirtualtimeundefine",{"_index":3669,"title":{},"body":{"classes/TimeReference.html":{}}}],["it's",{"_index":1130,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["item",{"_index":3043,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":1890,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["january",{"_index":3557,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["jnlp",{"_index":195,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["js",{"_index":3936,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":853,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["jwt.expire",{"_index":892,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt.login",{"_index":888,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt[this.expireclaim",{"_index":1015,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode",{"_index":852,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode(token",{"_index":1044,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["keep",{"_index":1618,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["key",{"_index":1176,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Map.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{}}}],["label",{"_index":145,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label1",{"_index":3438,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label2",{"_index":3441,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label3",{"_index":3446,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["labels",{"_index":738,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["lang",{"_index":3267,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["langs",{"_index":3384,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["large",{"_index":3193,"title":{},"body":{"modules/StateModule.html":{}}}],["larger",{"_index":1493,"title":{},"body":{"components/CardComponent.html":{}}}],["last",{"_index":1551,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastcards",{"_index":1550,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lastname",{"_index":1061,"title":{},"body":{"interfaces/AuthState.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname:string",{"_index":3852,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["lastname?:string",{"_index":85,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["later",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["latest",{"_index":2214,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["lcard",{"_index":224,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["left",{"_index":3045,"title":{},"body":{"components/NavbarComponent.html":{}}}],["legend",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["less",{"_index":3751,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["level",{"_index":2942,"title":{},"body":{"classes/Message.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["library",{"_index":527,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["library.add(faclock",{"_index":2306,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(faexternallinkalt",{"_index":538,"title":{},"body":{"modules/AppModule.html":{}}}],["library.add(fasignoutalt",{"_index":539,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["light",{"_index":239,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ArchiveQuerySuccess.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["light:boolean",{"_index":2661,"title":{},"body":{"components/IconComponent.html":{}}}],["lightcard",{"_index":219,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcard):boolean",{"_index":2352,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard,any",{"_index":2346,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard.id",{"_index":1621,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcardactions",{"_index":266,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardactiontypes",{"_index":222,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcardactiontypes.addlightcardfailure",{"_index":218,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.clearlightcardselection",{"_index":261,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.emptylightcards",{"_index":254,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.handleunexpectederror",{"_index":263,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcards",{"_index":253,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsextendeddata",{"_index":257,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsfailure",{"_index":258,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardssuccess",{"_index":255,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.removelightcard",{"_index":264,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.selectlightcard",{"_index":259,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatedsubscription",{"_index":262,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardadapter",{"_index":1584,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardadapter.getinitialstate",{"_index":1587,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["lightcardeffects",{"_index":637,"title":{"injectables/LightCardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/LightCardEffects.html":{}}}],["lightcardreducer",{"_index":614,"title":{},"body":{"interfaces/AppState.html":{}}}],["lightcards",{"_index":256,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcards.filter(card",{"_index":1616,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["lightcards:${test",{"_index":2760,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["line",{"_index":2735,"title":{},"body":{"components/InfoComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["line'},{'name",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["line.component",{"_index":2281,"title":{},"body":{"modules/FeedModule.html":{}}}],["line.component.html",{"_index":3516,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts",{"_index":3515,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:24",{"_index":3544,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:25",{"_index":3545,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:27",{"_index":3543,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:28",{"_index":3521,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:32",{"_index":3536,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:328",{"_index":3538,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:352",{"_index":3524,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:389",{"_index":3535,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line/app",{"_index":2061,"title":{},"body":{"directives/DraggableDirective.html":{},"modules/FeedModule.html":{}}}],["line/mouse",{"_index":2298,"title":{},"body":{"modules/FeedModule.html":{},"directives/MouseWheelDirective.html":{}}}],["line/time",{"_index":2280,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeLineComponent.html":{}}}],["line/x",{"_index":2295,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["link",{"_index":1858,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["link/button",{"_index":1165,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["link1",{"_index":3439,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link2",{"_index":3442,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link3",{"_index":3447,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["list",{"_index":199,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["list.component",{"_index":814,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/FeedModule.html":{}}}],["list.component.html",{"_index":756,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.scss",{"_index":755,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts",{"_index":754,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:19",{"_index":758,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list.component.ts:20",{"_index":757,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{}}}],["list/archive",{"_index":753,"title":{},"body":{"components/ArchiveListComponent.html":{},"modules/ArchivesModule.html":{}}}],["list/card",{"_index":1589,"title":{},"body":{"components/CardListComponent.html":{},"modules/FeedModule.html":{}}}],["list/filters/archive",{"_index":714,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"modules/ArchivesModule.html":{}}}],["list/filters/base",{"_index":816,"title":{},"body":{"modules/ArchivesModule.html":{},"components/BaseFilterComponent.html":{}}}],["list/filters/filters.component",{"_index":2282,"title":{},"body":{"modules/FeedModule.html":{}}}],["list/filters/filters.component.ts",{"_index":2407,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:14",{"_index":2408,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:18",{"_index":2409,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/list",{"_index":819,"title":{},"body":{"modules/ArchivesModule.html":{},"components/ListFilterComponent.html":{}}}],["list/filters/tags",{"_index":2303,"title":{},"body":{"modules/FeedModule.html":{},"components/TagsFilterComponent.html":{}}}],["list/filters/time",{"_index":2285,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{}}}],["list/filters/type",{"_index":2283,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{}}}],["list_radio",{"_index":200,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":1152,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["listens",{"_index":1091,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["listfiltercomponent",{"_index":445,"title":{"components/ListFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["listsettingcomponent",{"_index":446,"title":{"components/ListSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["literal",{"_index":215,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/TryToLogIn.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{}}}],["little",{"_index":2106,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["load",{"_index":225,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"injectables/SettingsEffects.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadarchivedbyid",{"_index":1521,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcard",{"_index":1537,"title":{"classes/LoadArchivedCard.html":{}},"body":{"injectables/CardEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcard(id",{"_index":1673,"title":{},"body":{"injectables/CardService.html":{}}}],["loadarchivedcard({id",{"_index":1839,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["loadarchivedcardfailure",{"_index":1538,"title":{"classes/LoadArchivedCardFailure.html":{}},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardfailure(err",{"_index":1529,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadarchivedcardsuccess",{"_index":1539,"title":{"classes/LoadArchivedCardSuccess.html":{}},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadarchivedcardsuccess({card",{"_index":1528,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadbyid",{"_index":1522,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/LightCardEffects.html":{}}}],["loadcard",{"_index":1540,"title":{"classes/LoadCard.html":{}},"body":{"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcard(id",{"_index":1675,"title":{},"body":{"injectables/CardService.html":{}}}],["loadcard({id",{"_index":1620,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["loadcardfailure",{"_index":1541,"title":{"classes/LoadCardFailure.html":{}},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardfailure(err",{"_index":1534,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcardsuccess",{"_index":1542,"title":{"classes/LoadCardSuccess.html":{}},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardsuccess({card",{"_index":1533,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadchildren",{"_index":555,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconfig",{"_index":329,"title":{"classes/LoadConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure",{"_index":1798,"title":{"classes/LoadConfigFailure.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure(err",{"_index":1788,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess",{"_index":1799,"title":{"classes/LoadConfigSuccess.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigsuccess({config",{"_index":1787,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfiguration",{"_index":1779,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loaded",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"modules/ServicesModule.html":{},"interfaces/SettingsState.html":{}}}],["loadedi18n",{"_index":3277,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loader",{"_index":3931,"title":{},"body":{"dependencies.html":{}}}],["loadfeedfilteronauthenticationsuccess",{"_index":2204,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["loadi18nforlightcards",{"_index":3404,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nforlightcards(cards",{"_index":3415,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nforlightcards(cards:lightcard",{"_index":3350,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loadi18nformenuentries",{"_index":3405,"title":{},"body":{"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(){return",{"_index":3448,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(menus",{"_index":3417,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nformenuentries(menus:thirdmenu",{"_index":3356,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loading",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"injectables/LightCardEffects.html":{},"interfaces/MenuState.html":{},"interfaces/SettingsState.html":{},"interfaces/TimelineState.html":{}}}],["loadingi18n",{"_index":3278,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loadlightcards",{"_index":223,"title":{"classes/LoadLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsextendeddata",{"_index":229,"title":{"classes/LoadLightCardsExtendedData.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadlightcardsfailure",{"_index":232,"title":{"classes/LoadLightCardsFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess",{"_index":228,"title":{"classes/LoadLightCardsSuccess.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess({lightcards",{"_index":1633,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["loadmenu",{"_index":2441,"title":{"classes/LoadMenu.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure",{"_index":2443,"title":{"classes/LoadMenuFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure(err",{"_index":2922,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loadmenusuccess",{"_index":2442,"title":{"classes/LoadMenuSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenusuccess({menu",{"_index":2920,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loads",{"_index":1625,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["loadsettings",{"_index":2466,"title":{"classes/LoadSettings.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure",{"_index":2467,"title":{"classes/LoadSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingsfailure(err",{"_index":3130,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingsonlogin",{"_index":3124,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loadsettingssuccess",{"_index":2254,"title":{"classes/LoadSettingsSuccess.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadsettingssuccess({settings",{"_index":3129,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["loaduserdata(auth:payloadforsuccessfulauthentication):observable",{"_index":955,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["local",{"_index":1974,"title":{},"body":{"components/DetailComponent.html":{}}}],["locale",{"_index":2540,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["locales",{"_index":3112,"title":{},"body":{"components/SettingsComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["locales$:observable",{"_index":3117,"title":{},"body":{"components/SettingsComponent.html":{}}}],["locales?:string",{"_index":172,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["localestorage",{"_index":974,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage",{"_index":968,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.clear",{"_index":988,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":979,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.identifier",{"_index":1004,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.token",{"_index":970,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.clientid",{"_index":999,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.expirationdate",{"_index":997,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.identifier",{"_index":993,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.token",{"_index":995,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorageauthcontent",{"_index":858,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/enumerations.html":{}}}],["location.href",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["location.origin",{"_index":1038,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["location.pathname.length",{"_index":1040,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["locationstrategy",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["lockaction",{"_index":153,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lockcard",{"_index":154,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lodash",{"_index":856,"title":{},"body":{"classes/AuthObject.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/FilterService.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["log",{"_index":67,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":104,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["login'},{'name",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["login.component.html",{"_index":2869,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.error.${category",{"_index":1181,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unavailable",{"_index":1185,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unexpected",{"_index":1186,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.login",{"_index":2903,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":2904,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.reset",{"_index":2906,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.code",{"_index":2907,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.password",{"_index":2905,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/password",{"_index":97,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["login:id",{"_index":1310,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["login:string",{"_index":3850,"title":{},"body":{"classes/User.html":{},"classes/UserContext.html":{}}}],["loginclaim",{"_index":870,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["logincomponent",{"_index":100,"title":{"components/LoginComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["loginmessage",{"_index":2872,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage.i18n.key|translate:loginmessage.i18n.parameters",{"_index":2908,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":111,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["longtext",{"_index":202,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["lttd",{"_index":1409,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["lvalue",{"_index":2565,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m",{"_index":2577,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{}}}],["m.format(options.hash.format",{"_index":2581,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.level==messagelevel.error",{"_index":2891,"title":{},"body":{"components/LoginComponent.html":{}}}],["m.locale(this.translate.getbrowserlang",{"_index":2580,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["mainrecipient",{"_index":1407,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["make",{"_index":3525,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["makes",{"_index":1371,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["manage",{"_index":566,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["managed",{"_index":3476,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["management",{"_index":1065,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manager",{"_index":1071,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manages",{"_index":1790,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["mandatory",{"_index":204,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["map",{"_index":163,"title":{"classes/Map.html":{}},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/InfoComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"classes/UpdateArchiveFilter.html":{}}}],["map(([action,configtags",{"_index":2215,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(([elapsedsincelast",{"_index":2252,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map((a",{"_index":1611,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map((action",{"_index":1088,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["map((auth",{"_index":951,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map((card",{"_index":1527,"title":{},"body":{"injectables/CardEffects.html":{}}}],["map((config",{"_index":1786,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["map((lightcards",{"_index":696,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["map((settings",{"_index":3128,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(a=>new",{"_index":3132,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(action",{"_index":1143,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(array",{"_index":2919,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(auth",{"_index":1116,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(authenticationinfo",{"_index":1104,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(card",{"_index":3352,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(check",{"_index":919,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(data",{"_index":949,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(id=>this.lightcard.id",{"_index":1457,"title":{},"body":{"components/CardComponent.html":{}}}],["map(id=>{return",{"_index":1309,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["map(isinthefuture",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["map(lightcard",{"_index":1619,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(menu",{"_index":3358,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(operation",{"_index":1630,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(r",{"_index":3328,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(s=>handlebars.compile(s",{"_index":2547,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(settings",{"_index":3136,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(t",{"_index":3342,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(t=>t(context",{"_index":2537,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(timeref",{"_index":3467,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["map(u",{"_index":957,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(url",{"_index":2928,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(v=>new",{"_index":2225,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["map(values",{"_index":2729,"title":{},"body":{"components/InfoComponent.html":{}}}],["map(x",{"_index":1384,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["map):observable",{"_index":1735,"title":{},"body":{"injectables/CardService.html":{}}}],["mapped",{"_index":2221,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["margin",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/LoginComponent.html":{}}}],["matching",{"_index":138,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["math.max",{"_index":2976,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["math.min(1",{"_index":2977,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["max",{"_index":1482,"title":{},"body":{"components/CardComponent.html":{}}}],["maxedretries",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["maxlength",{"_index":205,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["means",{"_index":3489,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["medium",{"_index":2642,"title":{},"body":{"components/IconComponent.html":{}}}],["medium:boolean",{"_index":2658,"title":{},"body":{"components/IconComponent.html":{}}}],["member",{"_index":132,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["members",{"_index":18,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["menu",{"_index":580,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/enumerations.html":{}}}],["menu.'+link.path",{"_index":3033,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.\\'+link.path",{"_index":3052,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.id",{"_index":3359,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menu.logout",{"_index":3053,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.logout&nbsp",{"_index":3041,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.settings",{"_index":3040,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.version",{"_index":3360,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menu_entry_id",{"_index":2455,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id",{"_index":2454,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menu_id/:menu_version/:menu_entry_id",{"_index":3258,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["menu_version",{"_index":1849,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactions",{"_index":2461,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["menuactiontypes",{"_index":2440,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["menuactiontypes.handleunexpectederror",{"_index":2439,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenu",{"_index":2447,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenufailure",{"_index":2448,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.loadmenusuccess",{"_index":2449,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulink",{"_index":2453,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinkfailure",{"_index":2460,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menuactiontypes.selectmenulinksuccess",{"_index":2457,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["menueffects",{"_index":635,"title":{"injectables/MenuEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MenuEffects.html":{}}}],["menuentries",{"_index":3243,"title":{},"body":{"classes/Third.html":{}}}],["menuentries?:thirdmenuentry",{"_index":173,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["menuentry",{"_index":3310,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuentry.url",{"_index":3311,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menuinitialstate",{"_index":2938,"title":{},"body":{"interfaces/MenuState.html":{}}}],["menureducer",{"_index":623,"title":{},"body":{"interfaces/AppState.html":{}}}],["menus",{"_index":3349,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menus.push(menu",{"_index":3348,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menustate",{"_index":587,"title":{"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MenuState.html":{}}}],["merge",{"_index":3271,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["merge(previous",{"_index":3333,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["mergemap",{"_index":3272,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["mergemap((id",{"_index":3372,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["message",{"_index":55,"title":{"classes/Message.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["message('the",{"_index":1109,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(err",{"_index":1126,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(message",{"_index":1191,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["messagelevel",{"_index":1171,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"injectables/TimeEffects.html":{},"miscellaneous/enumerations.html":{}}}],["messagelevel.debug",{"_index":2944,"title":{},"body":{"classes/Message.html":{}}}],["messagelevel.error",{"_index":1110,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/TimeEffects.html":{}}}],["messageplaceholder",{"_index":1209,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["metadata",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["metareducer",{"_index":599,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":662,"title":{},"body":{"interfaces/AppState.html":{}}}],["method",{"_index":23,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["methods",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["middle",{"_index":3660,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["min",{"_index":3884,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["minus",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["minus2hour",{"_index":1700,"title":{},"body":{"injectables/CardService.html":{}}}],["minute",{"_index":3562,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["minutes",{"_index":2265,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["minutesonly",{"_index":3889,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["miscellaneous",{"_index":3953,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["model/light",{"_index":3275,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["modification",{"_index":1555,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["module",{"_index":474,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["modules",{"_index":476,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["modules/archives/archives.module#archivesmodule",{"_index":559,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/feed/feed.module#feedmodule",{"_index":556,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/settings/settings.module#settingsmodule",{"_index":563,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/thirdparty/thirdparty.module#thirdpartymodule",{"_index":561,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/utilities/utilities.module",{"_index":537,"title":{},"body":{"modules/AppModule.html":{}}}],["modulewithproviders",{"_index":1752,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["moment",{"_index":1054,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["moment(date).startof('year",{"_index":3902,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment(new",{"_index":2578,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["moment(this.referencetime",{"_index":3710,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment(value",{"_index":3883,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.duration(computedoffsetinmilliseconds",{"_index":3717,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.duration(realnowmoment.diff(ref",{"_index":3712,"title":{},"body":{"classes/TimeReference.html":{}}}],["moment.locale(this._locale",{"_index":2629,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.moment",{"_index":2180,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["moment.tz.setdefault(timezone",{"_index":2634,"title":{},"body":{"injectables/I18nService.html":{}}}],["moment.updatelocale('en",{"_index":3549,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["momentnow",{"_index":3682,"title":{},"body":{"classes/TimeReference.html":{}}}],["moments",{"_index":3539,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mon",{"_index":3893,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["mono.svg",{"_index":2683,"title":{},"body":{"components/IconComponent.html":{}}}],["month",{"_index":3560,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["months",{"_index":3659,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["more",{"_index":568,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mouse",{"_index":2965,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel",{"_index":2947,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel(event",{"_index":2959,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheeldirective",{"_index":471,"title":{"directives/MouseWheelDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["mousewheeldown",{"_index":2951,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc",{"_index":2950,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc(event",{"_index":2963,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelup",{"_index":2952,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["move",{"_index":2084,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["movement",{"_index":2104,"title":{},"body":{"directives/DraggableDirective.html":{},"components/TimeLineComponent.html":{}}}],["movetocodeflowloginpage",{"_index":1030,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["mozilla",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["mpl",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["multi",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["multisettingscomponent",{"_index":448,"title":{"components/MultiSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["multisettingscomponent:24",{"_index":3787,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:26",{"_index":3785,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:27",{"_index":3783,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:28",{"_index":3784,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:29",{"_index":3799,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:30",{"_index":3800,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:31",{"_index":3786,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:32",{"_index":3798,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:33",{"_index":3797,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:38",{"_index":3788,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:39",{"_index":3794,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:69",{"_index":3793,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:74",{"_index":3796,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:78",{"_index":3791,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:82",{"_index":3789,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:87",{"_index":3790,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:93",{"_index":3792,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["multisettingscomponent:97",{"_index":3795,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["mycardstimeline",{"_index":3626,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimeline",{"_index":3641,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardstimeline.push(mycardtimelinetimespans",{"_index":3636,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimeline",{"_index":3639,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["mycardtimelinetimespans",{"_index":3630,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["name",{"_index":46,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{},"classes/UserContext.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["name:string",{"_index":167,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["navbar",{"_index":114,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/CheckAuthenticationStatus.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["navbar'},{'name",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["navbar.component.html",{"_index":2995,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":2994,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcollapsed",{"_index":2999,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":112,"title":{"components/NavbarComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["navigate",{"_index":1093,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["navigateawayfromfeed",{"_index":1823,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigates",{"_index":2934,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["navigatetoarchivedcard",{"_index":1824,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetocard",{"_index":1825,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetomenuurl",{"_index":1826,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigating",{"_index":1854,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigation",{"_index":2450,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["navigationactiontiming",{"_index":3184,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationactiontiming.postactivation",{"_index":3188,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationid",{"_index":1881,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["navigationroutes",{"_index":570,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["nb",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["nbw",{"_index":3895,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["necessarily",{"_index":736,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["need",{"_index":1889,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["needed",{"_index":250,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdatedSubscription.html":{}}}],["needsconfirm",{"_index":157,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["neutraltimereference",{"_index":3746,"title":{},"body":{"interfaces/TimeState.html":{}}}],["neutraltimereference:timereference=new",{"_index":3733,"title":{},"body":{"classes/TimeReference.html":{}}}],["new",{"_index":28,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/ArchiveEffects.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["newdate",{"_index":3644,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.add(conf[key",{"_index":3650,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.startof(value",{"_index":3648,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newdate.subtract(conf[key",{"_index":3651,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["newelapsedsofar",{"_index":2235,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["next",{"_index":93,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{}}}],["next.handle(this.addauthheadersifnecessary(request",{"_index":3770,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["next.length",{"_index":2356,"title":{},"body":{"classes/Filter.html":{}}}],["next.status.action",{"_index":3813,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.alarm",{"_index":3811,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.end",{"_index":3500,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next.status.notification",{"_index":3817,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.question",{"_index":3815,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.start",{"_index":3495,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next[0].chainfilter(card,next.slice(1",{"_index":2357,"title":{},"body":{"classes/Filter.html":{}}}],["next||next.length",{"_index":2358,"title":{},"body":{"classes/Filter.html":{}}}],["ng",{"_index":511,"title":{},"body":{"modules/AppModule.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":2023,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{}}}],["ngbcollapse]=\"!expandedmenu[index",{"_index":3037,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngbmodule",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["ngbmodule.forroot",{"_index":2307,"title":{},"body":{"modules/FeedModule.html":{}}}],["ngmodule",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"modules/UtilitiesModule.html":{}}}],["ngonchanges",{"_index":2024,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngonchanges(changes",{"_index":2030,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngondestroy",{"_index":1205,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngoninit",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngrx",{"_index":251,"title":{},"body":{"classes/AddLightCardFailure.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":705,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"modules/StateModule.html":{},"injectables/TimeEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":1563,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":593,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":52,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":1200,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngx",{"_index":520,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":2289,"title":{},"body":{"modules/FeedModule.html":{}}}],["none",{"_index":1416,"title":{},"body":{"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["normal",{"_index":3703,"title":{},"body":{"classes/TimeReference.html":{}}}],["noselectioncomponent",{"_index":452,"title":{"components/NoSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["notchecktokenrequest",{"_index":3772,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["nothing",{"_index":2155,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["notification",{"_index":2381,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notify",{"_index":116,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["now",{"_index":1367,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["null",{"_index":183,"title":{},"body":{"classes/Action.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{}}}],["number",{"_index":206,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/Detail.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/UpdateTimeReference.html":{}}}],["oauth2.client",{"_index":882,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["oauth2.flow.delagate",{"_index":886,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["object",{"_index":1294,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["object.keys(conf).foreach(key",{"_index":3646,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["object[locale",{"_index":3329,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[locale][publisher",{"_index":3330,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[locale][publisher][version",{"_index":3331,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["observable",{"_index":17,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{}}}],["observable.create(observer",{"_index":1718,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(error",{"_index":1727,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(message",{"_index":1720,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.next(json.parse(message.data,cardoperation.converttypeintoenum",{"_index":1721,"title":{},"body":{"injectables/CardService.html":{}}}],["obtain",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["occurred",{"_index":1724,"title":{},"body":{"injectables/CardService.html":{}}}],["of([new",{"_index":3434,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(false",{"_index":2764,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["of(new",{"_index":1118,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["of(null",{"_index":921,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["of(template",{"_index":2545,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["of(third",{"_index":3289,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["of(this.handlerejectedlogin(new",{"_index":1108,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(true",{"_index":3449,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(v",{"_index":2799,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["of(v.label",{"_index":2802,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["ofactions/archive.actions",{"_index":712,"title":{},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/BaseFilterComponent.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofactions/authentication.actions",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["ofactions/card.actions",{"_index":1172,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofactions/config.actions",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["ofactions/feed.actions",{"_index":1649,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofactions/light",{"_index":768,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"injectables/LightCardEffects.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["ofactions/menu.actions",{"_index":1866,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{}}}],["ofactions/settings.actions",{"_index":1300,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{}}}],["ofactions/time.actions",{"_index":2256,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/TimeEffects.html":{}}}],["ofactions/timeline.actions",{"_index":3546,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofeffects/archive.effects",{"_index":655,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/authentication.effects",{"_index":609,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card",{"_index":607,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card.effects",{"_index":605,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/config.effects",{"_index":645,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/custom",{"_index":632,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/feed",{"_index":641,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/light",{"_index":638,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/menu.effects",{"_index":636,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/settings.effects",{"_index":649,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/time.effects",{"_index":652,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofmap",{"_index":164,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/card",{"_index":1652,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["ofmodel/card.model",{"_index":161,"title":{},"body":{"classes/Action.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError-1.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/detail",{"_index":1943,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["ofmodel/feed",{"_index":670,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofmodel/i18n.model",{"_index":162,"title":{},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{},"classes/TimeSpan.html":{}}}],["ofmodel/light",{"_index":220,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"classes/ClearLightCardSelection.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/map",{"_index":165,"title":{},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeEffects.html":{}}}],["ofmodel/message.model",{"_index":56,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/thirds.model",{"_index":1940,"title":{},"body":{"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["ofmodel/time.model",{"_index":2161,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["ofmodel/user",{"_index":1946,"title":{},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{}}}],["ofmodel/user.model",{"_index":857,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ofselectors/archive.selectors",{"_index":730,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{}}}],["ofselectors/authentication.selectors",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseSettingComponent.html":{},"components/DetailComponent.html":{},"components/InfoComponent.html":{},"components/LoginComponent.html":{},"injectables/SettingsService.html":{}}}],["ofselectors/card.selectors",{"_index":1651,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["ofselectors/config.selectors",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"classes/AuthObject.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/SettingsComponent.html":{}}}],["ofselectors/feed.selectors",{"_index":796,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofselectors/menu.selectors",{"_index":2699,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/router.selectors",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/settings.selectors",{"_index":1302,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/InfoComponent.html":{}}}],["ofselectors/settings.x.config.selectors",{"_index":2617,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["ofselectors/time.selectors",{"_index":2722,"title":{},"body":{"components/InfoComponent.html":{},"injectables/TimeEffects.html":{}}}],["ofservices/authentication.service",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ofservices/card.service",{"_index":706,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{}}}],["ofservices/config.service",{"_index":1797,"title":{},"body":{"injectables/ConfigEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/filter.service",{"_index":673,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"modules/ServicesModule.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofservices/guard.service",{"_index":552,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["ofservices/guid.service",{"_index":851,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"modules/ServicesModule.html":{}}}],["ofservices/i18n.service",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"modules/ServicesModule.html":{}}}],["ofservices/services.module",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["ofservices/settings.service",{"_index":3106,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{}}}],["ofservices/thirds.service",{"_index":732,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/time.service",{"_index":1448,"title":{},"body":{"components/CardComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["ofstates/archive.state",{"_index":653,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/authentication.state",{"_index":629,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/card.state",{"_index":630,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/config.state",{"_index":643,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["ofstates/feed.state",{"_index":611,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["ofstates/menu.state",{"_index":634,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/settings.state",{"_index":647,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/time.state",{"_index":650,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/timeline.state",{"_index":646,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/index",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofstore/reducers/archive.reducer",{"_index":628,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/authentication.reducer",{"_index":597,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/card.reducer",{"_index":618,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/config.reducer",{"_index":620,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/light",{"_index":615,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/menu.reducer",{"_index":624,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/settings.reducer",{"_index":622,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/time.reducer",{"_index":626,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/timeline.reducer",{"_index":613,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/selectors/card.selectors",{"_index":1507,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["ofstore/selectors/router.selectors",{"_index":1447,"title":{},"body":{"components/CardComponent.html":{}}}],["ofstore/state.module",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["ofstore/states/router.state",{"_index":595,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["oftype",{"_index":704,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oftype(archiveactiontypes.sendarchivequery",{"_index":692,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogin",{"_index":1627,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogout",{"_index":1087,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.checkauthenticationstatus",{"_index":1098,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologin",{"_index":1146,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologout",{"_index":1160,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(cardactiontypes.loadarchivedcard",{"_index":1524,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(cardactiontypes.loadcard",{"_index":1531,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(configactiontypes.loadconfig",{"_index":1784,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigfailure",{"_index":1806,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigsuccess",{"_index":1137,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(feedactiontypes.applyfilter",{"_index":1641,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["oftype(lightcardactiontypes.loadlightcardssuccess",{"_index":1610,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/LightCardEffects.html":{}}}],["oftype(menuactiontypes.loadmenu",{"_index":2916,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(menuactiontypes.selectmenulink",{"_index":2924,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(router_navigation",{"_index":1834,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(router_request",{"_index":1828,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oftype(settingsactiontypes.loadsettings",{"_index":3126,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(settingsactiontypes.loadsettingssuccess",{"_index":2212,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oftype(settingsactiontypes.patchsettings",{"_index":3134,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(timeactiontypes.tick",{"_index":2234,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["oidc",{"_index":926,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ok",{"_index":1131,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["once",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"injectables/FeedFiltersEffects.html":{}}}],["onchanges",{"_index":2021,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ondestroy",{"_index":1197,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ondragend(event",{"_index":2109,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["one",{"_index":236,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearLightCardSelection.html":{},"components/DetailsComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NavbarComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["one_second",{"_index":859,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ongoing",{"_index":1554,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["oninit",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["onmousewheel",{"_index":2954,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheel(event",{"_index":2961,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome(event",{"_index":2968,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox(event",{"_index":2971,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie(event",{"_index":2973,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onpointerdown(event",{"_index":2091,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointermove(event",{"_index":2095,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointerup(event",{"_index":2098,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onresize",{"_index":1347,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["onsubmit",{"_index":101,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["open",{"_index":1426,"title":{},"body":{"components/CardComponent.html":{}}}],["operation.cardids",{"_index":1637,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.cards",{"_index":1634,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects",{"_index":608,"title":{},"body":{"interfaces/AppState.html":{}}}],["operation.effects.ts",{"_index":1607,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:32",{"_index":1609,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:41",{"_index":1640,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:73",{"_index":1648,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:92",{"_index":1624,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.model",{"_index":1653,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{}}}],["operation.model.ts",{"_index":1592,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["operation.model.ts:10",{"_index":1598,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.model.ts:21",{"_index":1600,"title":{},"body":{"classes/CardOperation.html":{}}}],["operation.type",{"_index":1631,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operations",{"_index":1626,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["operator",{"_index":2551,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["operatorfabric",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":1375,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{},"classes/UserContext.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["options",{"_index":2553,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["options.hash",{"_index":2585,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["otherwise",{"_index":903,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["out",{"_index":73,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"modules/UtilitiesModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":2089,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["outputs",{"_index":2065,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["over",{"_index":984,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["overflow",{"_index":760,"title":{},"body":{"components/ArchiveListComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{}}}],["overview",{"_index":3972,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":3916,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["page",{"_index":106,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["pair",{"_index":98,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["paload",{"_index":1157,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pan",{"_index":3947,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameterlistitem",{"_index":209,"title":{"classes/ParameterListItem.html":{}},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{},"classes/UserContext.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameters['message",{"_index":1124,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parametrization",{"_index":2314,"title":{},"body":{"classes/Filter.html":{}}}],["params",{"_index":932,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["params.append('client_secret",{"_index":946,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('clientid",{"_index":938,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('code",{"_index":933,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('grant_type",{"_index":934,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('password",{"_index":945,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('redirect_uri",{"_index":939,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('username",{"_index":944,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append(key,value",{"_index":1738,"title":{},"body":{"injectables/CardService.html":{}}}],["params.tostring",{"_index":942,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params['error",{"_index":1187,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parent",{"_index":1348,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.clientheight",{"_index":1393,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(calcheightclass",{"_index":1379,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parent.getelementsbyclassname(fixedheightclass",{"_index":1365,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentid",{"_index":1322,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["parentmodule",{"_index":3107,"title":{},"body":{"modules/ServicesModule.html":{}}}],["parse",{"_index":3195,"title":{},"body":{"modules/StateModule.html":{}}}],["party",{"_index":1857,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["pass",{"_index":2325,"title":{},"body":{"classes/Filter.html":{}}}],["passes",{"_index":2335,"title":{},"body":{"classes/Filter.html":{}}}],["password",{"_index":110,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["patch",{"_index":2468,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["patchsettings",{"_index":1299,"title":{"classes/PatchSettings.html":{}},"body":{"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettings({settings",{"_index":1315,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["patchsettingsfailure",{"_index":2470,"title":{"classes/PatchSettingsFailure.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingsfailure(err",{"_index":3138,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchsettingssuccess",{"_index":2469,"title":{"classes/PatchSettingsSuccess.html":{}},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["patchsettingssuccess({settings:settings",{"_index":3137,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["patchusersettings",{"_index":3160,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings",{"_index":3163,"title":{},"body":{"injectables/SettingsService.html":{}}}],["patchusersettings(settings:any",{"_index":3170,"title":{},"body":{"injectables/SettingsService.html":{}}}],["path",{"_index":553,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["path/values",{"_index":787,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["pathend",{"_index":1039,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pathmatch",{"_index":829,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["pattern",{"_index":2114,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["pattern:string",{"_index":3232,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["payload",{"_index":37,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["payload.access_token",{"_index":1019,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid",{"_index":1018,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid.tostring",{"_index":1000,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expirationdate.gettime().tostring",{"_index":998,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expires_in",{"_index":1013,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.identifier",{"_index":994,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.password).pipe",{"_index":1149,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["payload.token",{"_index":996,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload:tickpayload",{"_index":2177,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payload:{cardstimeline",{"_index":2750,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{code",{"_index":94,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["payload:{data",{"_index":2748,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["payload:{filterpath",{"_index":776,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["payload:{filters",{"_index":681,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{lightcards",{"_index":781,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["payload:{name",{"_index":677,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{params",{"_index":779,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{}}}],["payload:{timereference:timereference",{"_index":2184,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["payloadforsuccessfulauthentication",{"_index":41,"title":{"classes/PayloadForSuccessfulAuthentication.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["payloadforsuccessfulauthentication(jwt[this.loginclaim",{"_index":1017,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["periodstarttoend",{"_index":3520,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["periodstarttoend(conf",{"_index":3537,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["pertinent",{"_index":1883,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pieces",{"_index":3198,"title":{},"body":{"modules/StateModule.html":{}}}],["pipe",{"_index":691,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["pipe(catcherror",{"_index":1100,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(first",{"_index":1250,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["pipe(map(config",{"_index":1464,"title":{},"body":{"components/CardComponent.html":{}}}],["pipe(map(flowmode=>flowmode",{"_index":2889,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(pulse",{"_index":3463,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["pipe(map(trans",{"_index":3379,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["pipe(takeuntil(this.ngunsubscribe",{"_index":1247,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["pipe(tap(menus",{"_index":3021,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipes",{"_index":3863,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["pipetransform",{"_index":3882,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["placeholder",{"_index":1201,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["platformlocation",{"_index":2644,"title":{},"body":{"components/IconComponent.html":{}}}],["platformlocation.getbasehreffromdom",{"_index":2667,"title":{},"body":{"components/IconComponent.html":{}}}],["please",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["plus48hours",{"_index":1704,"title":{},"body":{"injectables/CardService.html":{}}}],["point",{"_index":1885,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pointerdown",{"_index":2069,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerdown(event",{"_index":2077,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerevent",{"_index":2078,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove",{"_index":2070,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove(event",{"_index":2082,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup",{"_index":2071,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup(event",{"_index":2085,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["popover",{"_index":3838,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["possible",{"_index":118,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["postdata",{"_index":905,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.append('token",{"_index":908,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.tostring",{"_index":917,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["preloadallmodules",{"_index":547,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":575,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preparedlist",{"_index":2768,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["present",{"_index":1053,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["prev",{"_index":1387,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["previous",{"_index":2172,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["previous.pipe",{"_index":3334,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["primary",{"_index":2868,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/RouterStateUrl.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["problem",{"_index":741,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["process",{"_index":179,"title":{"classes/Process.html":{}},"body":{"classes/Action.html":{},"classes/Card.html":{},"injectables/CardOperationEffects.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["process.states[card.state",{"_index":181,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processes",{"_index":719,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"classes/Third.html":{}}}],["processes$:observable",{"_index":734,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["processes?:ofmap",{"_index":174,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processid",{"_index":1408,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["processing",{"_index":1557,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["properties",{"_index":35,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{}}}],["property",{"_index":2260,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{}}}],["protected",{"_index":1199,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["provide",{"_index":543,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["provided",{"_index":1351,"title":{},"body":{"directives/CalcHeightDirective.html":{},"modules/StateModule.html":{}}}],["providedin",{"_index":2373,"title":{},"body":{"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["providers",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["providers:[{provide:'configretrydelay',usevalue:5000",{"_index":3192,"title":{},"body":{"modules/StateModule.html":{}}}],["public",{"_index":36,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/User.html":{},"modules/UtilitiesModule.html":{}}}],["publication",{"_index":1471,"title":{},"body":{"components/CardComponent.html":{}}}],["publicationdate",{"_index":1595,"title":{},"body":{"classes/CardOperation.html":{}}}],["publishdate",{"_index":1403,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["publisher",{"_index":1401,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeSpan.html":{}}}],["publishers",{"_index":720,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"injectables/LightCardEffects.html":{}}}],["publishers$:observable",{"_index":733,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["publisherversion",{"_index":1402,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/TimeSpan.html":{}}}],["publisher}.${version}.${name}.${locale",{"_index":2542,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["push",{"_index":96,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["put",{"_index":1021,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"modules/UtilitiesModule.html":{}}}],["query",{"_index":771,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{}}}],["queryarchivedcards",{"_index":686,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["querylist",{"_index":2037,"title":{},"body":{"components/DetailsComponent.html":{}}}],["querymenuentryurl",{"_index":3406,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querymenuentryurl(thirdmenuid",{"_index":3296,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["queryparams",{"_index":1880,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querytemplate",{"_index":2482,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher",{"_index":2502,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher:string",{"_index":2538,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querythird",{"_index":3407,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname",{"_index":3421,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname:string",{"_index":3284,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["question",{"_index":2379,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["r",{"_index":3332,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["rangeend",{"_index":1679,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart",{"_index":1681,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart:rangestart,rangeend",{"_index":1733,"title":{},"body":{"injectables/CardService.html":{}}}],["reactiveformsmodule",{"_index":507,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{}}}],["reads",{"_index":1261,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["ready",{"_index":1140,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["real",{"_index":3702,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnow",{"_index":3685,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment",{"_index":3688,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=moment(realnow",{"_index":3699,"title":{},"body":{"classes/TimeReference.html":{}}}],["realnowmoment=realnow",{"_index":3698,"title":{},"body":{"classes/TimeReference.html":{}}}],["realtimebar",{"_index":3598,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["reason",{"_index":2324,"title":{},"body":{"classes/Filter.html":{}}}],["received",{"_index":3620,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["recipient_filter",{"_index":2403,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["recursion",{"_index":2340,"title":{},"body":{"classes/Filter.html":{}}}],["recursively",{"_index":2339,"title":{},"body":{"classes/Filter.html":{}}}],["redirect",{"_index":1075,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/MenuEffects.html":{}}}],["redirectto",{"_index":564,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["reduce",{"_index":3273,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((acc",{"_index":3335,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((ids",{"_index":3362,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((menus:thirdmenu[],menu:thirdmenu",{"_index":3347,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reducer",{"_index":25,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["ref",{"_index":3709,"title":{},"body":{"classes/TimeReference.html":{}}}],["reference",{"_index":2167,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["referencetime",{"_index":3676,"title":{},"body":{"classes/TimeReference.html":{}}}],["refresh",{"_index":1622,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["refreshed",{"_index":2261,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["refreshifselectedcard",{"_index":1608,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["refreshthreshold",{"_index":2205,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["regarding",{"_index":1052,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registerarrayatindex",{"_index":2483,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerarrayatindexlength",{"_index":2484,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerbool",{"_index":2485,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registercardaction",{"_index":2486,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerdateformat",{"_index":2487,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registered",{"_index":925,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registeri18n",{"_index":2488,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registermath",{"_index":2489,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernow",{"_index":2490,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernumberformat",{"_index":2491,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerpreservespace",{"_index":2492,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerslice",{"_index":2493,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersort",{"_index":2494,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersplit",{"_index":2495,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersvg",{"_index":2496,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reinsertscripts",{"_index":1912,"title":{},"body":{"components/DetailComponent.html":{}}}],["reject",{"_index":70,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["rejectedlogin",{"_index":1134,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejection",{"_index":124,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rejectlogin",{"_index":69,"title":{"classes/RejectLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rejectlogin({error",{"_index":1190,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectloginattempt",{"_index":130,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["related",{"_index":247,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":1001,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["reload",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":134,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["removelightcard",{"_index":249,"title":{"classes/RemoveLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["removelightcard({cards",{"_index":1636,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["removes",{"_index":127,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rendered",{"_index":1559,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["rendering",{"_index":1966,"title":{},"body":{"components/DetailComponent.html":{}}}],["replication",{"_index":2318,"title":{},"body":{"classes/Filter.html":{}}}],["reported",{"_index":2156,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["request",{"_index":1709,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{},"interceptors/TokenInjector.html":{}}}],["request.clone(update",{"_index":3777,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["request.url",{"_index":3771,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["requiredfield",{"_index":1210,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["reset",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{}}}],["resetform",{"_index":2876,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetstate",{"_index":1068,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["resolvethirdpartylink",{"_index":2914,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["resource",{"_index":1972,"title":{},"body":{"components/DetailComponent.html":{}}}],["resourceurl",{"_index":3320,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["resourceurl}?${versionparam.tostring",{"_index":3324,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["response",{"_index":1047,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["responsetype",{"_index":3315,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result",{"_index":137,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["result.id",{"_index":3392,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result.translation[lang",{"_index":3388,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result:any",{"_index":3383,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["results",{"_index":139,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":1613,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["retry",{"_index":1793,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{}}}],["retryconfigurationloading",{"_index":1780,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["retrydelay",{"_index":1782,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["return",{"_index":182,"title":{},"body":{"classes/Action.html":{},"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["returned",{"_index":1891,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["returns",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"components/SettingsComponent.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"interceptors/TokenInjector.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["right",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["root",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["root'},{'name",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["route",{"_index":1861,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["router",{"_index":581,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/MenuEffects.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["router.effects",{"_index":633,"title":{},"body":{"interfaces/AppState.html":{}}}],["router.effects.ts",{"_index":1822,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:27",{"_index":1827,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:34",{"_index":1845,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:49",{"_index":1842,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:71",{"_index":1852,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:85",{"_index":1833,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigated",{"_index":1864,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_navigation",{"_index":1853,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router_request",{"_index":1865,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routereffects",{"_index":610,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerinitialstate",{"_index":664,"title":{},"body":{"interfaces/AppState.html":{}}}],["routermodule",{"_index":548,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":833,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":573,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigationaction",{"_index":1835,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerreducerstate",{"_index":588,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerrequestaction",{"_index":1830,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate",{"_index":1878,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate.params['cid",{"_index":1840,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_entry_id",{"_index":1851,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_id",{"_index":1848,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_version'],menu_entry_id",{"_index":1850,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.root.queryparams",{"_index":1895,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate:any",{"_index":1837,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstateserializer",{"_index":1869,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstatesnapshot",{"_index":1876,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstateurl",{"_index":594,"title":{"classes/RouterStateUrl.html":{}},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstateurl(url",{"_index":1896,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routes",{"_index":549,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routes.slice(0",{"_index":571,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"components/NavbarComponent.html":{},"modules/SettingsModule.html":{},"modules/ThirdpartyModule.html":{}}}],["routing.module.ts",{"_index":546,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["row",{"_index":3837,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["rows",{"_index":207,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["rte",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["rules",{"_index":1074,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["running",{"_index":976,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["rvalue",{"_index":2563,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["rxjs",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/operators/tap",{"_index":2766,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["rxjs/operators",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"injectables/SettingsEffects.html":{},"components/TagsFilterComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["safe",{"_index":1971,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl",{"_index":1967,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tolocalestring",{"_index":1975,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tostring",{"_index":1973,"title":{},"body":{"components/DetailComponent.html":{}}}],["safehtml",{"_index":1932,"title":{},"body":{"components/DetailComponent.html":{}}}],["saferesourceurl",{"_index":1939,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeurl",{"_index":2695,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["same",{"_index":1370,"title":{},"body":{"directives/CalcHeightDirective.html":{},"components/TimeLineComponent.html":{}}}],["sanitizer",{"_index":1917,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["saturday",{"_index":3548,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["save",{"_index":989,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["saveauthenticationinformation(payload",{"_index":992,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["scope",{"_index":2320,"title":{},"body":{"classes/Filter.html":{}}}],["scripts",{"_index":1986,"title":{},"body":{"components/DetailComponent.html":{}}}],["scripts.length",{"_index":1989,"title":{},"body":{"components/DetailComponent.html":{}}}],["scriptsinitiallength",{"_index":1988,"title":{},"body":{"components/DetailComponent.html":{}}}],["search",{"_index":1352,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sec",{"_index":3885,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["second",{"_index":3541,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["secondedsonly",{"_index":3899,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["secret",{"_index":884,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["security",{"_index":1706,"title":{},"body":{"injectables/CardService.html":{}}}],["seem",{"_index":740,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["select",{"_index":235,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"classes/ClearLightCardSelection.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"components/TimeLineComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["select(feedselectors.selectfeed",{"_index":3619,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["select(feedselectors.selectfilteredfeed",{"_index":2195,"title":{},"body":{"components/FeedComponent.html":{}}}],["select(selectarchivelightcards",{"_index":801,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["select(selectconfigloaded",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectmaxedretries",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["selectarchivedlightcard",{"_index":774,"title":{"classes/SelectArchivedLightCard.html":{}},"body":{"classes/ArchiveQuerySuccess.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectarchivedlightcard({selectedcardid",{"_index":1841,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectarchivefilters",{"_index":729,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["selectarchivelightcards",{"_index":797,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["selectarchivelightcardselection",{"_index":798,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["selectauthenticationstate",{"_index":1945,"title":{},"body":{"components/DetailComponent.html":{}}}],["selectcardstateselectedid",{"_index":1650,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["selectcode",{"_index":1170,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["selectconfigloaded",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["selectconfigretry",{"_index":1800,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["selectcurrentdate",{"_index":2721,"title":{},"body":{"components/InfoComponent.html":{}}}],["selectcurrenturl",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["selectdetail",{"_index":2025,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selectdetail(detail",{"_index":2034,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selected",{"_index":1549,"title":{},"body":{"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/CardState.html":{},"interfaces/TimelineState.html":{}}}],["selected_iframe_url",{"_index":2936,"title":{},"body":{"interfaces/MenuState.html":{}}}],["selectedcardid",{"_index":785,"title":{},"body":{"interfaces/ArchiveState.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"interfaces/TimelineState.html":{}}}],["selectedcardid:string",{"_index":260,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{}}}],["selectediframeurl",{"_index":2692,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedvalues",{"_index":210,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["selectexpirationtime",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["selectidentifier",{"_index":1303,"title":{},"body":{"components/BaseSettingComponent.html":{},"injectables/SettingsService.html":{}}}],["selection",{"_index":240,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardListComponent.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/NoSelectionComponent.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["selection'},{'name",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selection.component",{"_index":2278,"title":{},"body":{"modules/FeedModule.html":{}}}],["selection.component.html",{"_index":3056,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3055,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:14",{"_index":3057,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":3058,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection/no",{"_index":2277,"title":{},"body":{"modules/FeedModule.html":{},"components/NoSelectionComponent.html":{}}}],["selections",{"_index":3834,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["selectlightcard",{"_index":234,"title":{"classes/SelectLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectlightcard({selectedcardid",{"_index":1844,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmaxedretries",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmenulink",{"_index":1860,"title":{"classes/SelectMenuLink.html":{}},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulink({menu_id",{"_index":1847,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectmenulinkfailure",{"_index":2445,"title":{"classes/SelectMenuLinkFailure.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinkfailure(err",{"_index":2931,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenulinksuccess",{"_index":2444,"title":{"classes/SelectMenuLinkSuccess.html":{}},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectmenulinksuccess({iframe_url",{"_index":2929,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["selectmenustatemenu",{"_index":3016,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selectmenustateselectediframeurl",{"_index":2698,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectmessage",{"_index":2886,"title":{},"body":{"components/LoginComponent.html":{}}}],["selector",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selectrouterstate",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["selecttimereference",{"_index":3477,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["selectusernameoridentifier",{"_index":2720,"title":{},"body":{"components/InfoComponent.html":{}}}],["send",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"injectables/TimeEffects.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{}}}],["sendarchivequery",{"_index":694,"title":{"classes/SendArchiveQuery.html":{}},"body":{"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["sendarchivequery({params",{"_index":751,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["sendquery",{"_index":721,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["sense",{"_index":1372,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sent",{"_index":2251,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["sequentially",{"_index":2343,"title":{},"body":{"classes/Filter.html":{}}}],["serialize",{"_index":1871,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerstate",{"_index":1875,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["serializer",{"_index":3189,"title":{},"body":{"modules/StateModule.html":{}}}],["service",{"_index":99,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["services/authentication.service",{"_index":1167,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["services/handlebars.service",{"_index":1758,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{}}}],["services/thirds.service",{"_index":1757,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["servicesmodule",{"_index":487,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["servicesmodule.forroot",{"_index":541,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":2049,"title":{},"body":{"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["set(\"locale",{"_index":3313,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set(\"version",{"_index":3294,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["setcarddatatimeline",{"_index":2747,"title":{"classes/SetCardDataTimeline.html":{}},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["setheaders",{"_index":3776,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["settimeout",{"_index":1982,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["settimeout(()=>this.expandedmenu[index]=false,5000",{"_index":3029,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settimeout(()=>this.expandedusermenu=false,5000",{"_index":3032,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setting",{"_index":1278,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["setting'},{'name",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["setting.component",{"_index":2140,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.html",{"_index":1279,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts",{"_index":1277,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:18",{"_index":2115,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["setting.component.ts:21",{"_index":3228,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:23",{"_index":2823,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:24",{"_index":2121,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:26",{"_index":1285,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:27",{"_index":1283,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["setting.component.ts:28",{"_index":1284,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:29",{"_index":1296,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:30",{"_index":1298,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{}}}],["setting.component.ts:31",{"_index":1297,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:32",{"_index":1295,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:33",{"_index":1282,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:34",{"_index":3229,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:39",{"_index":1291,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:46",{"_index":3231,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:49",{"_index":2825,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:50",{"_index":3230,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["setting.component.ts:57",{"_index":2824,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:64",{"_index":2827,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:68",{"_index":2826,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:69",{"_index":1290,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:73",{"_index":2828,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["setting.component.ts:74",{"_index":1293,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:78",{"_index":1288,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:82",{"_index":1286,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:87",{"_index":1287,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:93",{"_index":1289,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting.component.ts:97",{"_index":1292,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["setting/base",{"_index":1276,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["setting/email",{"_index":2112,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/list",{"_index":2822,"title":{},"body":{"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{}}}],["setting/text",{"_index":2139,"title":{},"body":{"components/EmailSettingComponent.html":{},"modules/SettingsModule.html":{},"components/TextSettingComponent.html":{}}}],["settingpath",{"_index":1281,"title":{},"body":{"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings",{"_index":562,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"components/BaseSettingComponent.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/MultiSettingsComponent.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"components/TypeAheadSettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["settings'},{'name",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["settings.component",{"_index":3152,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.html",{"_index":2984,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/SettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.scss",{"_index":3782,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts",{"_index":2983,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:18",{"_index":2986,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings.component.ts:24",{"_index":2988,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:31",{"_index":2987,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.component.ts:38",{"_index":2989,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["settings.{{settingpath",{"_index":2145,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/multi",{"_index":2982,"title":{},"body":{"components/MultiSettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings/type",{"_index":3154,"title":{},"body":{"modules/SettingsModule.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["settings:any",{"_index":2475,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"interfaces/SettingsState.html":{}}}],["settings[this.settingpath",{"_index":1313,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["settingsactions",{"_index":2478,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["settingsactiontypes",{"_index":2255,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"injectables/SettingsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["settingsactiontypes.handleunexpectederror",{"_index":2465,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettings",{"_index":2471,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingsfailure",{"_index":2472,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.loadsettingssuccess",{"_index":2473,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettings",{"_index":2474,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingsfailure",{"_index":2476,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingsactiontypes.patchsettingssuccess",{"_index":2477,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{}}}],["settingscomponent",{"_index":454,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["settingseffects",{"_index":648,"title":{"injectables/SettingsEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SettingsEffects.html":{}}}],["settingsinitialstate",{"_index":3173,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["settingsmodule",{"_index":3140,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"index.html":{},"modules.html":{}}}],["settingsreducer",{"_index":621,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingsroutingmodule",{"_index":3144,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["settingsservice",{"_index":3098,"title":{"injectables/SettingsService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"index.html":{}}}],["settingsstate",{"_index":589,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SettingsState.html":{}}}],["severity",{"_index":1406,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/FilterService.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["severity.action",{"_index":2378,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severity.alarm",{"_index":2377,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severity.notification",{"_index":2382,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severity.question",{"_index":2380,"title":{},"body":{"injectables/FilterService.html":{},"classes/TimeSpan.html":{}}}],["severityordinal",{"_index":1564,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card1.severity",{"_index":1570,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(card2.severity",{"_index":1571,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["severityordinal(severity",{"_index":3740,"title":{},"body":{"classes/TimeSpan.html":{}}}],["shift",{"_index":2174,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["showgridlines",{"_index":3597,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["simplechanges",{"_index":2031,"title":{},"body":{"components/DetailsComponent.html":{}}}],["single",{"_index":3047,"title":{},"body":{"components/NavbarComponent.html":{}}}],["size",{"_index":1492,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["size:string",{"_index":2662,"title":{},"body":{"components/IconComponent.html":{}}}],["skipself",{"_index":3102,"title":{},"body":{"modules/ServicesModule.html":{}}}],["small",{"_index":1490,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{},"components/InfoComponent.html":{}}}],["small:boolean",{"_index":2657,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":1884,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["solid",{"_index":534,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["something",{"_index":2151,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["sortcomparer:comparebyseveritylttdpublishdate",{"_index":1585,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["sortcomparer:comparebystartdate",{"_index":3754,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["sortonkey(key",{"_index":2593,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sound",{"_index":3741,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"modules/ServicesModule.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"modules/UtilitiesModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["space",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["spacebeforemoment",{"_index":3542,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["special",{"_index":3874,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["speed",{"_index":3673,"title":{},"body":{"classes/TimeReference.html":{}}}],["sprites",{"_index":2640,"title":{},"body":{"components/IconComponent.html":{}}}],["sprites:string",{"_index":2663,"title":{},"body":{"components/IconComponent.html":{}}}],["src/.../archive.actions.ts",{"_index":3956,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.actions.ts",{"_index":3957,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.service.ts",{"_index":3964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card",{"_index":3959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.actions.ts",{"_index":3958,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":3971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.actions.ts",{"_index":3960,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../feed.actions.ts",{"_index":3962,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../filter.service.ts",{"_index":3963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../light",{"_index":3961,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.actions.ts",{"_index":3965,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../message.model.ts",{"_index":3966,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../settings.actions.ts",{"_index":3967,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../thirds.model.ts",{"_index":3955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../time.actions.ts",{"_index":3968,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../time.model.ts",{"_index":3970,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../timeline.actions.ts",{"_index":3969,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":545,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/icon/icon.component.ts",{"_index":2635,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:18",{"_index":2648,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:19",{"_index":2651,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:20",{"_index":2650,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:21",{"_index":2646,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:22",{"_index":2647,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:23",{"_index":2649,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:24",{"_index":2653,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:25",{"_index":2654,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:26",{"_index":2645,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:32",{"_index":2652,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":2866,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:27",{"_index":2882,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":2885,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":2884,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":2883,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":2877,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":2879,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:51",{"_index":2880,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":2881,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:63",{"_index":2878,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts",{"_index":2704,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:26",{"_index":2713,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:27",{"_index":2712,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:28",{"_index":2710,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:33",{"_index":2711,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:44",{"_index":2715,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:48",{"_index":2717,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/info/info.component.ts:52",{"_index":2719,"title":{},"body":{"components/InfoComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":2993,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":3012,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":3013,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":3010,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":3009,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":3011,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:33",{"_index":3003,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":3005,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:52",{"_index":3004,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:56",{"_index":3015,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:60",{"_index":3007,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:66",{"_index":3008,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/model/card",{"_index":1591,"title":{},"body":{"classes/CardOperation.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts",{"_index":1399,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts:11",{"_index":1412,"title":{},"body":{"classes/Card.html":{}}}],["src/app/model/card.model.ts:40",{"_index":1902,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/model/detail",{"_index":2013,"title":{},"body":{"classes/DetailContext.html":{}}}],["src/app/model/feed",{"_index":2309,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/model/i18n.model.ts",{"_index":2600,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/i18n.model.ts:10",{"_index":2602,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/light",{"_index":3735,"title":{},"body":{"classes/TimeSpan.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/map.ts",{"_index":2909,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/map.ts:8",{"_index":2912,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/message.model.ts",{"_index":2940,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/message.model.ts:10",{"_index":2943,"title":{},"body":{"classes/Message.html":{}}}],["src/app/model/thirds.model.ts",{"_index":142,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/thirds.model.ts:105",{"_index":2752,"title":{},"body":{"classes/Input.html":{}}}],["src/app/model/thirds.model.ts:12",{"_index":3244,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:122",{"_index":3060,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["src/app/model/thirds.model.ts:25",{"_index":3246,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:36",{"_index":3249,"title":{},"body":{"classes/ThirdMenuEntry.html":{}}}],["src/app/model/thirds.model.ts:45",{"_index":3248,"title":{},"body":{"classes/ThirdMenu.html":{}}}],["src/app/model/thirds.model.ts:54",{"_index":3076,"title":{},"body":{"classes/Process.html":{}}}],["src/app/model/thirds.model.ts:61",{"_index":3175,"title":{},"body":{"classes/State.html":{}}}],["src/app/model/thirds.model.ts:76",{"_index":158,"title":{},"body":{"classes/Action.html":{}}}],["src/app/model/time.model.ts",{"_index":3665,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/time.model.ts:11",{"_index":3690,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:19",{"_index":3678,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:20",{"_index":3681,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:21",{"_index":3684,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:33",{"_index":3687,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:4",{"_index":3675,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/time.model.ts:56",{"_index":3691,"title":{},"body":{"classes/TimeReference.html":{}}}],["src/app/model/user",{"_index":3853,"title":{},"body":{"classes/UserContext.html":{}}}],["src/app/model/user.model.ts",{"_index":3847,"title":{},"body":{"classes/User.html":{}}}],["src/app/model/user.model.ts:8",{"_index":3849,"title":{},"body":{"classes/User.html":{}}}],["src/app/modules/archives/archives",{"_index":823,"title":{},"body":{"modules/ArchivesRoutingModule.html":{}}}],["src/app/modules/archives/archives.component.ts",{"_index":789,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:24",{"_index":794,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:25",{"_index":792,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:29",{"_index":793,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.module.ts",{"_index":811,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["src/app/modules/archives/components/archive",{"_index":713,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/BaseFilterComponent.html":{},"components/ListFilterComponent.html":{}}}],["src/app/modules/cards/cards.module.ts",{"_index":1749,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/cards.module.ts:30",{"_index":1751,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/components/card",{"_index":1500,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts",{"_index":1419,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:26",{"_index":1435,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:27",{"_index":1434,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:28",{"_index":1444,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:29",{"_index":1443,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:30",{"_index":1433,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:40",{"_index":1442,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:45",{"_index":1441,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:63",{"_index":1437,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:73",{"_index":1439,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:78",{"_index":1446,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts",{"_index":1903,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:104",{"_index":1927,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:120",{"_index":1925,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:26",{"_index":1934,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:27",{"_index":1921,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:28",{"_index":1920,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:29",{"_index":1936,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:30",{"_index":1933,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:31",{"_index":1919,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:40",{"_index":1930,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:54",{"_index":1929,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:69",{"_index":1928,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:85",{"_index":1938,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:89",{"_index":1931,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts",{"_index":2019,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:19",{"_index":2039,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:20",{"_index":2028,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:21",{"_index":2027,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:26",{"_index":2029,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:35",{"_index":2036,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:45",{"_index":2035,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:54",{"_index":2040,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:58",{"_index":2032,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts",{"_index":2479,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:107",{"_index":2510,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:121",{"_index":2504,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:127",{"_index":2514,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:144",{"_index":2515,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:186",{"_index":2509,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:212",{"_index":2517,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:230",{"_index":2507,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:24",{"_index":2498,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:244",{"_index":2508,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:252",{"_index":2512,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:259",{"_index":2511,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:266",{"_index":2513,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:45",{"_index":2501,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:50",{"_index":2503,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:63",{"_index":2506,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:92",{"_index":2505,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:98",{"_index":2516,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/feed/components/card",{"_index":1588,"title":{},"body":{"components/CardListComponent.html":{},"components/FiltersComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["src/app/modules/feed/components/no",{"_index":3054,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["src/app/modules/feed/components/time",{"_index":2060,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["src/app/modules/feed/feed",{"_index":2308,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/modules/feed/feed.component.ts",{"_index":2186,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:24",{"_index":2193,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:25",{"_index":2194,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:26",{"_index":2190,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:31",{"_index":2192,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:42",{"_index":2191,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.module.ts",{"_index":2274,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/modules/settings/components/settings/base",{"_index":1275,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/email",{"_index":2111,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/list",{"_index":2821,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/multi",{"_index":2981,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts",{"_index":3111,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:19",{"_index":3116,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:20",{"_index":3114,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/settings.component.ts:25",{"_index":3115,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/components/settings/text",{"_index":3227,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["src/app/modules/settings/components/settings/type",{"_index":3781,"title":{},"body":{"components/TypeAheadSettingsComponent.html":{}}}],["src/app/modules/settings/settings",{"_index":3155,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":3145,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts",{"_index":2687,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:21",{"_index":2693,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:27",{"_index":2694,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:35",{"_index":2697,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/thirdparty",{"_index":3257,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["src/app/modules/thirdparty/thirdparty.module.ts",{"_index":3255,"title":{},"body":{"modules/ThirdpartyModule.html":{}}}],["src/app/modules/utilities/calc",{"_index":1316,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["src/app/modules/utilities/utilities.module.ts",{"_index":3859,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["src/app/services/authentication.service.ts",{"_index":835,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/authentication.service.ts:288",{"_index":841,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:291",{"_index":843,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:292",{"_index":845,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:293",{"_index":844,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:294",{"_index":846,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:303",{"_index":1762,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:305",{"_index":1765,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:306",{"_index":1764,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:307",{"_index":1763,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/card.service.ts",{"_index":1654,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:22",{"_index":1684,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:23",{"_index":1682,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:24",{"_index":1683,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:25",{"_index":1665,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:35",{"_index":1676,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:39",{"_index":1672,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:49",{"_index":1677,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:53",{"_index":1670,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:77",{"_index":1680,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:83",{"_index":1674,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:87",{"_index":1667,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/config.service.ts",{"_index":1810,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:17",{"_index":1813,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:24",{"_index":1814,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/filter.service.ts",{"_index":2359,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/filter.service.ts:18",{"_index":2366,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:24",{"_index":2367,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:29",{"_index":2372,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:53",{"_index":2370,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:61",{"_index":2369,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:69",{"_index":2371,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:91",{"_index":2368,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/guid.service.ts",{"_index":2410,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:16",{"_index":2413,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:22",{"_index":2414,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:26",{"_index":2415,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/i18n.service.ts",{"_index":2603,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:19",{"_index":2611,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:20",{"_index":2608,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:30",{"_index":2610,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:46",{"_index":2613,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/i18n.service.ts:50",{"_index":2615,"title":{},"body":{"injectables/I18nService.html":{}}}],["src/app/services/interceptors.service.ts",{"_index":3757,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:14",{"_index":3761,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:20",{"_index":3767,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:25",{"_index":3764,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/services.module.ts",{"_index":3100,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/services.module.ts:45",{"_index":3101,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/settings.service.ts",{"_index":3156,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:18",{"_index":3165,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:19",{"_index":3161,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:27",{"_index":3162,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/settings.service.ts:31",{"_index":3164,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/app/services/thirds.service.ts",{"_index":3260,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:128",{"_index":3411,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:142",{"_index":3416,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:148",{"_index":3418,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:155",{"_index":3424,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:209",{"_index":3425,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:214",{"_index":3264,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:218",{"_index":3266,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:23",{"_index":3428,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:24",{"_index":3426,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:25",{"_index":3427,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:26",{"_index":3429,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:27",{"_index":3409,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:38",{"_index":3422,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:51",{"_index":3414,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:59",{"_index":3419,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:78",{"_index":3412,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:88",{"_index":3410,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:95",{"_index":3413,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/store/actions/archive.actions.ts",{"_index":764,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/archive.actions.ts:22",{"_index":3841,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:24",{"_index":3842,"title":{},"body":{"classes/UpdateArchiveFilter.html":{}}}],["src/app/store/actions/archive.actions.ts:28",{"_index":3094,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:30",{"_index":3095,"title":{},"body":{"classes/SendArchiveQuery.html":{}}}],["src/app/store/actions/archive.actions.ts:35",{"_index":2420,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:38",{"_index":2421,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/archive.actions.ts:42",{"_index":765,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:44",{"_index":766,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{}}}],["src/app/store/actions/archive.actions.ts:49",{"_index":3084,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/archive.actions.ts:51",{"_index":3085,"title":{},"body":{"classes/SelectArchivedLightCard.html":{}}}],["src/app/store/actions/authentication.actions.ts",{"_index":6,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/authentication.actions.ts:111",{"_index":3078,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:114",{"_index":3079,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:128",{"_index":140,"title":{},"body":{"classes/AcceptLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:144",{"_index":141,"title":{},"body":{"classes/AcceptLogOutSuccess.html":{}}}],["src/app/store/actions/authentication.actions.ts:26",{"_index":3068,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:27",{"_index":3072,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:28",{"_index":3069,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:29",{"_index":3074,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:30",{"_index":3070,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:31",{"_index":3071,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:32",{"_index":3073,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:41",{"_index":2737,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:43",{"_index":2738,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:52",{"_index":1760,"title":{},"body":{"classes/CheckAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:67",{"_index":43,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:70",{"_index":48,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:80",{"_index":3778,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:83",{"_index":3779,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:94",{"_index":3780,"title":{},"body":{"classes/TryToLogOut.html":{}}}],["src/app/store/actions/card.actions.ts",{"_index":1766,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/card.actions.ts:23",{"_index":1768,"title":{},"body":{"classes/ClearCard.html":{}}}],["src/app/store/actions/card.actions.ts:26",{"_index":2839,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:29",{"_index":2840,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:32",{"_index":2841,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:35",{"_index":2842,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:39",{"_index":2843,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:42",{"_index":2844,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:46",{"_index":2833,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:49",{"_index":2834,"title":{},"body":{"classes/LoadArchivedCard.html":{}}}],["src/app/store/actions/card.actions.ts:52",{"_index":2835,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:55",{"_index":2836,"title":{},"body":{"classes/LoadArchivedCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:59",{"_index":2837,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:62",{"_index":2838,"title":{},"body":{"classes/LoadArchivedCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:67",{"_index":2422,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/card.actions.ts:70",{"_index":2423,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/config.actions.ts",{"_index":2424,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/config.actions.ts:18",{"_index":2845,"title":{},"body":{"classes/LoadConfig.html":{}}}],["src/app/store/actions/config.actions.ts:21",{"_index":2846,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:24",{"_index":2847,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:29",{"_index":2848,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:32",{"_index":2849,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:38",{"_index":2425,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/config.actions.ts:40",{"_index":2426,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["src/app/store/actions/feed.actions.ts",{"_index":666,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/feed.actions.ts:18",{"_index":667,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:20",{"_index":668,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:24",{"_index":2739,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:27",{"_index":2740,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/light",{"_index":213,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts",{"_index":2436,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts:22",{"_index":2856,"title":{},"body":{"classes/LoadMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:29",{"_index":2857,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:32",{"_index":2858,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:37",{"_index":2859,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:40",{"_index":2860,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:45",{"_index":2437,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:48",{"_index":2438,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{}}}],["src/app/store/actions/menu.actions.ts:59",{"_index":3088,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:62",{"_index":3089,"title":{},"body":{"classes/SelectMenuLink.html":{}}}],["src/app/store/actions/menu.actions.ts:70",{"_index":3092,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:73",{"_index":3093,"title":{},"body":{"classes/SelectMenuLinkSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:81",{"_index":3090,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:84",{"_index":3091,"title":{},"body":{"classes/SelectMenuLinkFailure.html":{}}}],["src/app/store/actions/settings.actions.ts",{"_index":2462,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/settings.actions.ts:24",{"_index":2861,"title":{},"body":{"classes/LoadSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:27",{"_index":2862,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:30",{"_index":2863,"title":{},"body":{"classes/LoadSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:35",{"_index":2864,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:38",{"_index":2865,"title":{},"body":{"classes/LoadSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:43",{"_index":3061,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:44",{"_index":3062,"title":{},"body":{"classes/PatchSettings.html":{}}}],["src/app/store/actions/settings.actions.ts:47",{"_index":3063,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:50",{"_index":3064,"title":{},"body":{"classes/PatchSettingsFailure.html":{}}}],["src/app/store/actions/settings.actions.ts:55",{"_index":3065,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:58",{"_index":3066,"title":{},"body":{"classes/PatchSettingsSuccess.html":{}}}],["src/app/store/actions/settings.actions.ts:64",{"_index":2463,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/settings.actions.ts:66",{"_index":2464,"title":{},"body":{"classes/HandleUnexpectedError-5.html":{}}}],["src/app/store/actions/time.actions.ts",{"_index":2150,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/time.actions.ts:18",{"_index":3450,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:19",{"_index":3451,"title":{},"body":{"classes/Tick.html":{}}}],["src/app/store/actions/time.actions.ts:25",{"_index":3454,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:26",{"_index":3455,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:27",{"_index":3456,"title":{},"body":{"classes/TickPayload.html":{}}}],["src/app/store/actions/time.actions.ts:36",{"_index":3843,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:37",{"_index":3844,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:46",{"_index":2157,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/time.actions.ts:47",{"_index":2158,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{}}}],["src/app/store/actions/timeline.actions.ts",{"_index":2742,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/timeline.actions.ts:16",{"_index":2743,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:17",{"_index":2744,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:21",{"_index":3109,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:22",{"_index":3110,"title":{},"body":{"classes/SetCardDataTimeline.html":{}}}],["src/app/store/effects/archive.effects.ts",{"_index":685,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:24",{"_index":689,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/archive.effects.ts:33",{"_index":703,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts",{"_index":1064,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:110",{"_index":1164,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:119",{"_index":1085,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:136",{"_index":1090,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:155",{"_index":1144,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:179",{"_index":1128,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:228",{"_index":1080,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:250",{"_index":1083,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:40",{"_index":1070,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:61",{"_index":1138,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:83",{"_index":1151,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/card",{"_index":1606,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["src/app/store/effects/card.effects.ts",{"_index":1520,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:27",{"_index":1523,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:37",{"_index":1535,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:51",{"_index":1530,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/config.effects.ts",{"_index":1778,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:21",{"_index":1783,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:54",{"_index":1789,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:71",{"_index":1792,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/custom",{"_index":1821,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["src/app/store/effects/feed",{"_index":2199,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["src/app/store/effects/light",{"_index":2753,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["src/app/store/effects/menu.effects.ts",{"_index":2913,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:27",{"_index":2915,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:38",{"_index":2923,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:68",{"_index":2932,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/settings.effects.ts",{"_index":3123,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:28",{"_index":3125,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:41",{"_index":3131,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:53",{"_index":3133,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/settings.effects.ts:59",{"_index":3139,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/store/effects/time.effects.ts",{"_index":3457,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:19",{"_index":3461,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:35",{"_index":3465,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/effects/time.effects.ts:49",{"_index":3474,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["src/app/store/index.ts",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/store/state.module.ts",{"_index":3178,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/state.module.ts:33",{"_index":3179,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/states/archive.state.ts",{"_index":784,"title":{},"body":{"interfaces/ArchiveState.html":{}}}],["src/app/store/states/authentication.state.ts",{"_index":1059,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/store/states/card.state.ts",{"_index":1741,"title":{},"body":{"interfaces/CardState.html":{}}}],["src/app/store/states/config.state.ts",{"_index":1818,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["src/app/store/states/feed.state.ts",{"_index":1546,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["src/app/store/states/menu.state.ts",{"_index":2935,"title":{},"body":{"interfaces/MenuState.html":{}}}],["src/app/store/states/router.state.ts",{"_index":1868,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:37",{"_index":3083,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:48",{"_index":1877,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/router.state.ts:55",{"_index":1874,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/settings.state.ts",{"_index":3172,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/store/states/time.state.ts",{"_index":3744,"title":{},"body":{"interfaces/TimeState.html":{}}}],["src/app/store/states/timeline.state.ts",{"_index":3749,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["src/tests/mocks/thirds.service.mock.ts",{"_index":3431,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:14",{"_index":3433,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:5",{"_index":3432,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["sse",{"_index":1708,"title":{},"body":{"injectables/CardService.html":{}}}],["start",{"_index":2081,"title":{},"body":{"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdate",{"_index":1404,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["startdomain",{"_index":3568,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain.valueof",{"_index":3600,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2",{"_index":3573,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.valueof",{"_index":3611,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3",{"_index":3576,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.valueof",{"_index":3617,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4",{"_index":3579,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain4.valueof",{"_index":3609,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startof",{"_index":3563,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startup",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["startyear",{"_index":3901,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["startyear.valueof",{"_index":3904,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["state",{"_index":11,"title":{"classes/State.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["state.actions[actionid",{"_index":1995,"title":{},"body":{"components/DetailComponent.html":{}}}],["state.children",{"_index":1899,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.params",{"_index":1897,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["statemodule",{"_index":488,"title":{"modules/StateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StateModule.html":{},"index.html":{},"modules.html":{}}}],["statemodule.forroot",{"_index":540,"title":{},"body":{"modules/AppModule.html":{}}}],["states",{"_index":3077,"title":{},"body":{"classes/Process.html":{}}}],["states?:ofmap",{"_index":191,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["static",{"_index":203,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/CardOperation.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["status",{"_index":62,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["status.action",{"_index":2385,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.alarm",{"_index":2383,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.end",{"_index":2391,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.notification",{"_index":2387,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.question",{"_index":2386,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.start",{"_index":2390,"title":{},"body":{"injectables/FilterService.html":{}}}],["stay",{"_index":3656,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["sticktovirtualtime",{"_index":3460,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["still",{"_index":975,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{}}}],["stillvalid",{"_index":982,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["stops",{"_index":2341,"title":{},"body":{"classes/Filter.html":{}}}],["store",{"_index":117,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/I18nService.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/SettingsService.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["store,private",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["store.select(buildconfigselector('security",{"_index":876,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["store/index",{"_index":3274,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["store:store",{"_index":742,"title":{},"body":{"components/ArchiveFiltersComponent.html":{},"components/SettingsComponent.html":{}}}],["storeconfig",{"_index":661,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["stored",{"_index":973,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["storedevtoolsmodule",{"_index":3182,"title":{},"body":{"modules/StateModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":3191,"title":{},"body":{"modules/StateModule.html":{}}}],["storefreeze",{"_index":602,"title":{},"body":{"interfaces/AppState.html":{}}}],["storemodule",{"_index":3180,"title":{},"body":{"modules/StateModule.html":{}}}],["storemodule.forroot(appreducer",{"_index":3186,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule",{"_index":3185,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":3187,"title":{},"body":{"modules/StateModule.html":{}}}],["string",{"_index":79,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CardOperation.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["string):observable",{"_index":2539,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["strings",{"_index":737,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["structure",{"_index":3194,"title":{},"body":{"modules/StateModule.html":{}}}],["style",{"_index":1962,"title":{},"body":{"components/DetailComponent.html":{}}}],["stylename",{"_index":3317,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["styles",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["styleurls",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/NavbarComponent.html":{},"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sub",{"_index":890,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subject",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["submission",{"_index":2147,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/TextSettingComponent.html":{}}}],["submit",{"_index":3235,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["submitted",{"_index":1158,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["submitvalue",{"_index":1206,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["subscribe",{"_index":1251,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"components/DetailComponent.html":{}}}],["subscribe(([locale,timezone",{"_index":2624,"title":{},"body":{"injectables/I18nService.html":{}}}],["subscribe((maxedretries=>this.maxedretries=maxedretries",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(authstate",{"_index":1950,"title":{},"body":{"components/DetailComponent.html":{}}}],["subscribe(card",{"_index":1509,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(computeddate",{"_index":1467,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(form",{"_index":3219,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["subscribe(isauth",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(loaded",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(m=>this.loginmessage=m",{"_index":2892,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(next=>this.basesettings",{"_index":1311,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["subscribe(next=>this.dispatch(this.convert(next",{"_index":1258,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["subscribe(oauth2conf",{"_index":877,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subscribe(open=>this.open",{"_index":1458,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(provider=>this.codeprovider={name:provider",{"_index":2894,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(third",{"_index":1517,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(v=>this.hidetimeline",{"_index":2198,"title":{},"body":{"components/FeedComponent.html":{}}}],["subscribe(value",{"_index":3623,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["subscribe(x",{"_index":1341,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["subscribetoloadi18n",{"_index":3408,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["subscribetoloadi18n(observable",{"_index":3361,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["subscription",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/TimeLineComponent.html":{}}}],["subtitle",{"_index":1494,"title":{},"body":{"components/CardComponent.html":{}}}],["subtract",{"_index":3654,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["subtracting",{"_index":1389,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["success",{"_index":76,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/InitAuthStatus.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["success/message",{"_index":1791,"title":{},"body":{"injectables/ConfigEffects.html":{},"injectables/SettingsEffects.html":{}}}],["successful",{"_index":772,"title":{},"body":{"classes/ArchiveQuerySuccess.html":{},"classes/HandleUnexpectedError.html":{},"injectables/MenuEffects.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{}}}],["such",{"_index":991,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["sum",{"_index":1380,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["sumfixelemheights",{"_index":1382,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["summary",{"_index":1410,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{}}}],["super(store",{"_index":2142,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["super.computetextvalidators",{"_index":2143,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["super.ngoninit",{"_index":2806,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["support",{"_index":3978,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":529,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{},"modules.html":{}}}],["svgpanzoom(document.getelementbyid('${svguid",{"_index":2574,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["swimlane/ngx",{"_index":2290,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["switch",{"_index":1177,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["switch(operator",{"_index":2564,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch_list",{"_index":201,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":708,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeEffects.html":{}}}],["switchmap(([lightcards",{"_index":1615,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap(([payload",{"_index":1102,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action",{"_index":693,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{}}}],["switchmap((action:loadlightcardssuccess",{"_index":2757,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["switchmap((action:patchsettings)=>this.service.patchusersettings(action.payload.settings",{"_index":3135,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["switchmap((af",{"_index":1645,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap((auth)=>this.loaduserdata(auth",{"_index":954,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["switchmap((ids:string",{"_index":3365,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(action",{"_index":1525,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{}}}],["switchmap(menu=>zip(of(menu),this.service.loadi18nformenuentries(menu",{"_index":2918,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["switchmap(third",{"_index":3302,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(ts=>from(ts",{"_index":3340,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["system",{"_index":128,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["t",{"_index":2911,"title":{},"body":{"classes/Map.html":{}}}],["t.i18nlabelkey",{"_index":3345,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.menuentries",{"_index":3346,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.version",{"_index":3344,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tab",{"_index":2048,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tab.active",{"_index":2047,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":3835,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["tabs",{"_index":2054,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tag",{"_index":2222,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tag_filter",{"_index":2404,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["tagfilterform",{"_index":3200,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["tags",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeSpan.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tags$:observable",{"_index":735,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["tagsfiltercomponent",{"_index":455,"title":{"components/TagsFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["take",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Filter.html":{}}}],["takes",{"_index":1882,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/RouterStateUrl.html":{}}}],["takeuntil",{"_index":1236,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"injectables/CardOperationEffects.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":1253,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe",{"_index":3507,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["takeuntil(this.service.unsubscribe",{"_index":1629,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["tap",{"_index":709,"title":{},"body":{"injectables/ArchiveEffects.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(authenticationservice.saveauthenticationinformation",{"_index":953,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["tap(t=>object.setprototypeof(t,third.prototype",{"_index":3291,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t=>this.templatecache[key]=t",{"_index":2548,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["tap(t=>this.thirdcache.set(key,t",{"_index":3292,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(test=>console.log(`loaded",{"_index":2759,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["tap(v=>console.log(\"inittagfilteronloadedsettings",{"_index":2211,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tap(v=>console.log(\"loadfeedfilteronauthenticationsuccess",{"_index":2228,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["tells",{"_index":1092,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["template",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templatecache",{"_index":2480,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatecache:map",{"_index":2519,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatename",{"_index":1418,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{}}}],["templates",{"_index":3241,"title":{},"body":{"classes/Third.html":{}}}],["templates?:string",{"_index":170,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["templateurl",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templateurl:'icon.component.html",{"_index":2655,"title":{},"body":{"components/IconComponent.html":{}}}],["terms",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["test",{"_index":1056,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["test_filter",{"_index":2406,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["text",{"_index":198,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"components/SettingsComponent.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["textsettingcomponent",{"_index":457,"title":{"components/TextSettingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["textsettingcomponent:21",{"_index":2117,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:27",{"_index":2123,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:34",{"_index":2122,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:46",{"_index":2125,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["textsettingcomponent:50",{"_index":2124,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["that.time.currenttime().valueof",{"_index":2588,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["they're",{"_index":1373,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["third",{"_index":166,"title":{"classes/Third.html":{}},"body":{"classes/Action.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third)=>!(!third.menuentries",{"_index":3301,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["third,html",{"_index":1979,"title":{},"body":{"components/DetailComponent.html":{}}}],["third.extractstate(this.card",{"_index":1518,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["third.menuentries.filter(entry",{"_index":3303,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdcache",{"_index":3280,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu",{"_index":187,"title":{"classes/ThirdMenu.html":{}},"body":{"classes/Action.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t1",{"_index":3435,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t2",{"_index":3443,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu(t.name",{"_index":3343,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuentry",{"_index":184,"title":{"classes/ThirdMenuEntry.html":{}},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id1",{"_index":3437,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id2",{"_index":3440,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id3",{"_index":3445,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentryid",{"_index":3298,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenuid",{"_index":3420,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdmenus",{"_index":3002,"title":{},"body":{"components/NavbarComponent.html":{}}}],["thirdmenuversion",{"_index":3297,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdname",{"_index":3423,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdname}.${version",{"_index":3286,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdparty",{"_index":560,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomRouterEffects.html":{},"modules/ThirdpartyModule.html":{}}}],["thirdpartymodule",{"_index":3250,"title":{"modules/ThirdpartyModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"index.html":{},"modules.html":{}}}],["thirdpartyroutingmodule",{"_index":3254,"title":{"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["thirds",{"_index":1915,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["thirdservice",{"_index":2755,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdsi18nloader",{"_index":3259,"title":{"classes/ThirdsI18nLoader.html":{}},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloader(thirdsservice",{"_index":3399,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloaderfactory(thirdsservice",{"_index":3398,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsservice",{"_index":731,"title":{"injectables/ThirdsService.html":{}},"body":{"components/ArchiveFiltersComponent.html":{},"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"index.html":{}}}],["thirdsservicemock",{"_index":3430,"title":{"classes/ThirdsServiceMock.html":{}},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdsurl",{"_index":3276,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirparty",{"_index":2451,"title":{},"body":{"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["this.$injector.get(translateservice",{"_index":3397,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this._defaultfilters",{"_index":2374,"title":{},"body":{"injectables/FilterService.html":{}}}],["this._description",{"_index":2725,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._filter",{"_index":3210,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(first",{"_index":3506,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this._filter$.pipe(first(),takeuntil(this.ngunsubscribe$)).subscribe",{"_index":3215,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((next",{"_index":3212,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._htmlcontent",{"_index":1980,"title":{},"body":{"components/DetailComponent.html":{}}}],["this._i18nprefix",{"_index":1451,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["this._locale",{"_index":2628,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._resizesubject",{"_index":1338,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.asobservable().pipe",{"_index":1339,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._resizesubject$.next",{"_index":1345,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this._selectediframeurl",{"_index":2702,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._thirdmenus",{"_index":3025,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._thirdmenus=this.store.select(selectmenustatemenu",{"_index":3020,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._time",{"_index":2727,"title":{},"body":{"components/InfoComponent.html":{}}}],["this._timezone",{"_index":2632,"title":{},"body":{"injectables/I18nService.html":{}}}],["this._username",{"_index":2723,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.actions",{"_index":690,"title":{},"body":{"injectables/ArchiveEffects.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/TimeEffects.html":{}}}],["this.actions$.pipe",{"_index":1086,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.actions$.pipe(oftype(authenticationactiontypes.rejectlogin",{"_index":1141,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.active",{"_index":2350,"title":{},"body":{"classes/Filter.html":{}}}],["this.archivesurl",{"_index":1697,"title":{},"body":{"injectables/CardService.html":{}}}],["this.assignconfigurationproperties(oauth2conf",{"_index":878,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.attachaction(button",{"_index":1996,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.authservice.asktokenfromcode(code).pipe",{"_index":1103,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.asktokenfrompassword(payload.username",{"_index":1148,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.checkauthentication(authenticationservice.extracttoken",{"_index":1099,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.extractidentificationinformation",{"_index":1194,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.loaduserdata(authinfo",{"_index":1115,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.basesettings",{"_index":1312,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.big",{"_index":2670,"title":{},"body":{"components/IconComponent.html":{}}}],["this.big?'big':this.medium?'medium':'small",{"_index":2676,"title":{},"body":{"components/IconComponent.html":{}}}],["this.bindactions(third",{"_index":1985,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.calcheight(this.parentid",{"_index":1342,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.calcheightclass",{"_index":1344,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.card",{"_index":1510,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.card.publisher",{"_index":1958,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.card.publisherversion",{"_index":1516,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.cardoperationsurl",{"_index":1693,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardoperationsurl}&notification=true&rangestart=${minus2hour.valueof()}&rangeend=${plus48hours.valueof",{"_index":1713,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardservice.unsubscribecardoperation",{"_index":1174,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.cardsurl",{"_index":1695,"title":{},"body":{"injectables/CardService.html":{}}}],["this.changelocale(locale",{"_index":2625,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.clientid",{"_index":880,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.clientsecret",{"_index":883,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.computedisplayeddates(config",{"_index":1465,"title":{},"body":{"components/CardComponent.html":{}}}],["this.computelistvalidators",{"_index":2807,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["this.computemultivalidators",{"_index":2990,"title":{},"body":{"components/MultiSettingsComponent.html":{}}}],["this.computenowmoment(realnowmoment",{"_index":3700,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.computetextvalidators",{"_index":3233,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.conf",{"_index":3592,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.configloaded",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurl",{"_index":1815,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.confzoom",{"_index":3599,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.convert(auth",{"_index":952,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.createformgroup",{"_index":3209,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.currentpath",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.currenttimereference",{"_index":3479,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.dark",{"_index":2674,"title":{},"body":{"components/IconComponent.html":{}}}],["this.datetodisplay",{"_index":1480,"title":{},"body":{"components/CardComponent.html":{}}}],["this.datetodisplay=computeddate",{"_index":1468,"title":{},"body":{"components/CardComponent.html":{}}}],["this.datewithspacebeforemoment(moment(currentmoment",{"_index":3569,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.delegateurl",{"_index":885,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.delegateurl}&redirect_uri=${authenticationservice.computeredirecturi",{"_index":1035,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.detail",{"_index":1956,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles",{"_index":1957,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles.foreach(style",{"_index":1959,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.details",{"_index":1513,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.changes.subscribe",{"_index":2044,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.filter((tab",{"_index":2046,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.push(...state.details",{"_index":1519,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.toarray().foreach(detail",{"_index":2055,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.dragend.emit(event",{"_index":2099,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragging",{"_index":2092,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragmove.emit(event",{"_index":2096,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragstart.emit(event",{"_index":2093,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.el.nativeelement",{"_index":1357,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.elapsedsofar",{"_index":2238,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.elapsedsofar+tick.payload.elapsedsincelast",{"_index":2236,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.element.nativeelement.getelementsbytagname('button",{"_index":1990,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('script",{"_index":1987,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.expandedmenu=new",{"_index":3022,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedmenu[index]=!this.expandedmenu[index",{"_index":3027,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedusermenu=!this.expandedusermenu",{"_index":3030,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expireclaim",{"_index":891,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.extractparams(child",{"_index":1900,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extractparams(routerstate.root",{"_index":1894,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.fetchcardoperation(new",{"_index":1712,"title":{},"body":{"injectables/CardService.html":{}}}],["this.fetchi18njson(publisher",{"_index":3377,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.fetchthird(thirdname,version",{"_index":3290,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.filter",{"_index":1245,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["this.filter$.subscribe(next",{"_index":1248,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["this.filterpath",{"_index":1269,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["this.filters",{"_index":750,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.fixedheightclass",{"_index":1343,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["this.followclocktick",{"_index":2233,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.form",{"_index":1239,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["this.form.get('filter').setvalue(value?value",{"_index":2812,"title":{},"body":{"components/ListFilterComponent.html":{}}}],["this.form.get('setting').setvalue(value,{emitevent:false",{"_index":2992,"title":{},"body":{"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.form.get('setting').setvalue(value?value",{"_index":2829,"title":{},"body":{"components/ListSettingComponent.html":{}}}],["this.form.valuechanges",{"_index":1252,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["this.formbuilder.group",{"_index":3223,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.funktion",{"_index":2349,"title":{},"body":{"classes/Filter.html":{}}}],["this.funktion(card,this.status",{"_index":2354,"title":{},"body":{"classes/Filter.html":{}}}],["this.getcurrentguid().tostring",{"_index":2419,"title":{},"body":{"classes/GuidService.html":{}}}],["this.getroutepe",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["this.guid",{"_index":2416,"title":{},"body":{"classes/GuidService.html":{}}}],["this.guidservice.getcurrentguid",{"_index":950,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.guidservice.getcurrentguidstring",{"_index":1692,"title":{},"body":{"injectables/CardService.html":{}}}],["this.handlebars.executetemplate(this.detail.templatename",{"_index":1977,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handledate(lightcard.enddate",{"_index":1476,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.lttd",{"_index":1470,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.publishdate",{"_index":1472,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handledate(lightcard.startdate",{"_index":1474,"title":{},"body":{"components/CardComponent.html":{}}}],["this.handleerrorontokengeneration(errorresponse,'authenticate",{"_index":1150,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handleerrorontokengeneration(errorresponse,'code",{"_index":1107,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handlenewtoken(this.httpclient.post(this.asktokenurl",{"_index":941,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.handlerejectedlogin('invalid",{"_index":1195,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.hide",{"_index":2895,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hrefsofcsslink.push(safecssurl",{"_index":1969,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.httpclient.get(`${this.archivesurl}/${id",{"_index":1734,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.archivesurl}/`,{params",{"_index":1740,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.cardsurl}/${id",{"_index":1699,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.configurl",{"_index":1817,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher",{"_index":3295,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/i18n",{"_index":3327,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/templates/${name",{"_index":3314,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/`).pipe",{"_index":3339,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.userdataurl}/${auth.identifier",{"_index":956,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.httpclient.get(`${this.usersurl}/users/${this.userid}/settings",{"_index":3169,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.patch(`${this.usersurl}/users/${this.userid}/settings",{"_index":3171,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.httpclient.post",{"_index":1732,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.post(this.checktokenurl",{"_index":916,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.iconpath",{"_index":2668,"title":{},"body":{"components/IconComponent.html":{}}}],["this.initfilters",{"_index":2375,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.initformgroup",{"_index":1240,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["this.initializehandlebarstemplates",{"_index":1948,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initializehrefsofcsslink",{"_index":1947,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initrecipientfilter",{"_index":2397,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittagfilter",{"_index":2401,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittimefilter",{"_index":2399,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittypefilter",{"_index":2395,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.isauthenticated",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isequal(forma",{"_index":1256,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["this.isvirtualtimeundefine",{"_index":3708,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.light",{"_index":2675,"title":{},"body":{"components/IconComponent.html":{}}}],["this.lightcard",{"_index":1466,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcard.publisher+'.'+this.lightcard.publisherversion",{"_index":1452,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcards",{"_index":799,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.lightcards$.pipe(debouncetime(300",{"_index":3622,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.loadedi18n",{"_index":3371,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadedi18n.push(result.id",{"_index":3393,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadingi18n",{"_index":3369,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadingi18n.push(id",{"_index":3373,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.locales",{"_index":3118,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.loginclaim",{"_index":887,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.medium",{"_index":2672,"title":{},"body":{"components/IconComponent.html":{}}}],["this.mousewheelfunc(event",{"_index":2969,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.mousewheelup.emit(event",{"_index":2980,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.ngunsubscribe$.complete",{"_index":1263,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":1262,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.open=true",{"_index":1450,"title":{},"body":{"components/CardComponent.html":{}}}],["this.pattern",{"_index":3236,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["this.periodstarttoend(domain7dayconf",{"_index":3582,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainmonthconf",{"_index":3575,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainweekconf",{"_index":3572,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.periodstarttoend(domainyearconf",{"_index":3578,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.placeholder",{"_index":1259,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["this.preparedlist",{"_index":2796,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["this.preparedlist.map(e=>e.value).indexof(control.value",{"_index":2818,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["this.preparedlist.push",{"_index":2803,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["this.preparedlist.push({value",{"_index":2798,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["this.processes",{"_index":745,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.processes[card.process",{"_index":177,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["this.publishers",{"_index":743,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.querytemplate(context.card.publisher,context.card.publisherversion,templatename).pipe",{"_index":2536,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.querythird(thirdmenuid,thirdmenuversion).pipe",{"_index":3299,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.referencetime",{"_index":3705,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.refreshthreshold",{"_index":2239,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.registerarrayatindex",{"_index":2529,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindexlength",{"_index":2532,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerbool",{"_index":2533,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registercardaction",{"_index":2524,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerdateformat",{"_index":2523,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registeri18n",{"_index":2526,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registermath",{"_index":2530,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernow",{"_index":2534,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernumberformat",{"_index":2522,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerpreservespace",{"_index":2521,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerslice",{"_index":2528,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersort",{"_index":2527,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersplit",{"_index":2531,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersvg",{"_index":2525,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.reinsertscripts",{"_index":1984,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.requiredfield",{"_index":2810,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["this.resetstate",{"_index":1161,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.retryconfigurationloading",{"_index":1805,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.retrydelay",{"_index":1804,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.router.navigate",{"_index":2930,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.router.navigate(['/'+this.currentpath,'cards',this.lightcard.id",{"_index":1449,"title":{},"body":{"components/CardComponent.html":{}}}],["this.router.navigate(['/login",{"_index":1089,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":1981,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(cssurl",{"_index":1968,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(iframeurl",{"_index":2703,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.selectdetail(this.details.first",{"_index":2052,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selection",{"_index":803,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{}}}],["this.service.computethirdsmenu",{"_index":2917,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.fetcharchivedcards(action.payload.params",{"_index":695,"title":{},"body":{"injectables/ArchiveEffects.html":{}}}],["this.service.fetchconfiguration",{"_index":1785,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.service.fetchtimereferences().pipe",{"_index":3466,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.fetchusersettings",{"_index":3127,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.service.getcardoperation",{"_index":1628,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.service.loadarchivedcard(action.payload.id",{"_index":1526,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.loadcard(action.payload.id",{"_index":1532,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.movetocodeflowloginpage",{"_index":2902,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.pulsate",{"_index":3462,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.service.querymenuentryurl(action.payload.menu_id",{"_index":2925,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.updatecardsubscriptionwithdates(af.payload.status.start",{"_index":1646,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.setting",{"_index":1304,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.setting$.subscribe(next",{"_index":1306,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.size",{"_index":2677,"title":{},"body":{"components/IconComponent.html":{}}}],["this.small",{"_index":2673,"title":{},"body":{"components/IconComponent.html":{}}}],["this.speed",{"_index":3715,"title":{},"body":{"classes/TimeReference.html":{}}}],["this.sprites='sprites",{"_index":2682,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites.svg",{"_index":2684,"title":{},"body":{"components/IconComponent.html":{}}}],["this.status",{"_index":2351,"title":{},"body":{"classes/Filter.html":{}}}],["this.store",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch",{"_index":3220,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.store.dispatch(new",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.store.pipe",{"_index":800,"title":{},"body":{"components/ArchivesComponent.html":{},"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(selectcurrenturl)).subscribe(url",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectexpirationtime",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectrouterstate",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildarchivefilterselector(this.filterpath",{"_index":1246,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.process.list",{"_index":746,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.publisher.list",{"_index":744,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('archive.filters.tags.list",{"_index":748,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(buildconfigselector('feed.card.time.display",{"_index":1461,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(buildconfigselector('feed.timefilter.followclocktick')).subscribe(x",{"_index":2266,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["this.store.select(buildconfigselector('feed.timeline.hide",{"_index":2197,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(buildconfigselector('i10n.supported.time",{"_index":3121,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('i18n.supported.locales",{"_index":3119,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.mode",{"_index":2888,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.provider",{"_index":2893,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector(`archive.filters.default.${this.filterpath",{"_index":1260,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["this.store.select(buildconfigselector(`settings.${this.settingpath",{"_index":1307,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.tag_filter",{"_index":3211,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.time_filter",{"_index":3487,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.type_filter",{"_index":3809,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('locale",{"_index":2622,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsorconfigselector('timezone",{"_index":2623,"title":{},"body":{"injectables/I18nService.html":{},"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector('description",{"_index":2726,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(buildsettingsselector(this.settingpath",{"_index":1305,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(cardselectors.selectcardstateselected",{"_index":1508,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.store.select(feedselectors.selectlightcardselection",{"_index":2196,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(selectarchivefilters).subscribe",{"_index":749,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.store.select(selectarchivelightcardselection",{"_index":804,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["this.store.select(selectauthenticationstate",{"_index":1949,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.store.select(selectcardstateselectedid",{"_index":1456,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(selectcurrentdate",{"_index":2728,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.store.select(selectcurrenturl).subscribe(url",{"_index":1453,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.store.select(selectidentifier",{"_index":1308,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["this.store.select(selectidentifier).subscribe(id=>this.userid=id",{"_index":3168,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.store.select(selectmenustateselectediframeurl).subscribe",{"_index":2700,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.store.select(selectmessage).pipe(filter(m=>m!=null",{"_index":2890,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(selecttimereference).subscribe",{"_index":3478,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["this.store.select(selectusernameoridentifier",{"_index":2724,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.subscribetoloadi18n(observable",{"_index":3355,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.subscription",{"_index":3621,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":3664,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.tagfilterform",{"_index":3208,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue",{"_index":3214,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tagfilterform.get('tags').setvalue(next.active?next.status.tags",{"_index":3213,"title":{},"body":{"components/TagsFilterComponent.html":{}}}],["this.tags",{"_index":747,"title":{},"body":{"components/ArchiveFiltersComponent.html":{}}}],["this.templatecache[key",{"_index":2543,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdcache.get(key",{"_index":3287,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirds.computethirdcssurl(publisher",{"_index":1961,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.thirds.fetchhbstemplate(publisher,version,name,locale).pipe",{"_index":2546,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdservice.loadi18nforlightcards(action.payload.lightcards",{"_index":2758,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.thirdsservice.querythird(this.card.publisher",{"_index":1515,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.thirdsurl",{"_index":3282,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.time.formatdatetime(timestamp",{"_index":1478,"title":{},"body":{"components/CardComponent.html":{}}}],["this.timefilterform",{"_index":3486,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(null",{"_index":3503,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(this.timeservice.asinputstring(next.status.end",{"_index":3502,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').value",{"_index":3505,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(null",{"_index":3498,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(this.timeservice.asinputstring(next.status.start",{"_index":3497,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').value",{"_index":3504,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.formattime(moment(values[0",{"_index":2730,"title":{},"body":{"components/InfoComponent.html":{}}}],["this.timeservice.parsestring(form.end).valueof",{"_index":3511,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.start).valueof",{"_index":3510,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('end').value).valueof",{"_index":3499,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('start').value).valueof",{"_index":3494,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.predefinedformat(date",{"_index":3886,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["this.timezones",{"_index":3120,"title":{},"body":{"components/SettingsComponent.html":{}}}],["this.translate().currentlang",{"_index":3386,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().getlangs",{"_index":3378,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().settranslation(lang",{"_index":3389,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().use(currentlang",{"_index":3391,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().use(lang",{"_index":3390,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate.getbrowserlang",{"_index":2541,"title":{},"body":{"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{}}}],["this.translate.use(this._locale",{"_index":2630,"title":{},"body":{"injectables/I18nService.html":{}}}],["this.translateservice.get(v.label.key",{"_index":2804,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["this.typefilterform",{"_index":3808,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(!next.active",{"_index":3812,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(true,{emitevent",{"_index":3819,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(!next.active",{"_index":3810,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(true,{emitevent",{"_index":3818,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(!next.active",{"_index":3816,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(true,{emitevent",{"_index":3821,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(!next.active",{"_index":3814,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(true,{emitevent",{"_index":3820,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.unsubscribe$.next",{"_index":1717,"title":{},"body":{"injectables/CardService.html":{}}}],["this.updateasync",{"_index":2043,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.updatevalue(next",{"_index":1249,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["this.urlcleaner",{"_index":3281,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlcleaner.encodevalue(`${this.thirdsurl}/${publisher}/css/${stylename",{"_index":3321,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.usecodeflow",{"_index":2887,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usercontext",{"_index":1951,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.userform",{"_index":2896,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('identifier').value",{"_index":2898,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('password').value",{"_index":2899,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.reset",{"_index":2901,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.valid",{"_index":2897,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.usersurl",{"_index":3166,"title":{},"body":{"injectables/SettingsService.html":{}}}],["this.values",{"_index":2797,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["this.virtualtime",{"_index":3722,"title":{},"body":{"classes/TimeReference.html":{}}}],["those",{"_index":1543,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{}}}],["threshold",{"_index":2243,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["throw",{"_index":1242,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"modules/ServicesModule.html":{}}}],["throwerror",{"_index":849,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror('the",{"_index":929,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["throwerror(err",{"_index":3309,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror(error",{"_index":966,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["throwerror(new",{"_index":3306,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thrown",{"_index":902,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["thus",{"_index":129,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["tick",{"_index":2165,"title":{"classes/Tick.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tick(pulse",{"_index":3464,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["tick='[time",{"_index":2164,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["tickpayload",{"_index":2178,"title":{"classes/TickPayload.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["ticks",{"_index":3528,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["ticks4hoursconf",{"_index":3588,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksconf",{"_index":3607,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ticksdayconf",{"_index":3589,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tickshalfmonthconf",{"_index":3590,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/RouterStateUrl.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["time$|async",{"_index":2733,"title":{},"body":{"components/InfoComponent.html":{}}}],["time:timeservice",{"_index":2520,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["time_filter",{"_index":2405,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["timeactions",{"_index":2185,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/typealiases.html":{}}}],["timeactiontypes",{"_index":2163,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timeactiontypes.failtoupdatetimereference",{"_index":2159,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["timeactiontypes.tick",{"_index":3452,"title":{},"body":{"classes/Tick.html":{}}}],["timeactiontypes.updatetimereference",{"_index":3845,"title":{},"body":{"classes/UpdateTimeReference.html":{}}}],["timeeffects",{"_index":651,"title":{"injectables/TimeEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TimeEffects.html":{}}}],["timefiltercomponent",{"_index":458,"title":{"components/TimeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timefilterform",{"_index":3480,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["timeinitialstate",{"_index":3747,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timeline",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitTimeline.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactions",{"_index":2751,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/typealiases.html":{}}}],["timelineactiontypes",{"_index":2746,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactiontypes.inittimeline",{"_index":2745,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelineactiontypes.setcarddatatimeline",{"_index":2749,"title":{},"body":{"classes/InitTimeline.html":{},"classes/SetCardDataTimeline.html":{}}}],["timelinecomponent",{"_index":460,"title":{"components/TimeLineComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["timelineinitialstate",{"_index":3755,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timelinereducer",{"_index":612,"title":{},"body":{"interfaces/AppState.html":{}}}],["timelinestate",{"_index":591,"title":{"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["timer",{"_index":1233,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timer(500",{"_index":1257,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timereducer",{"_index":625,"title":{},"body":{"interfaces/AppState.html":{}}}],["timeref",{"_index":3469,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["timereference",{"_index":2160,"title":{"classes/TimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{}}}],["timereference(null,null,null,timespeed.x1",{"_index":3734,"title":{},"body":{"classes/TimeReference.html":{}}}],["timereference:neutraltimereference",{"_index":3748,"title":{},"body":{"interfaces/TimeState.html":{}}}],["timescale",{"_index":3753,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["timeservice",{"_index":1432,"title":{},"body":{"components/CardComponent.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"components/InfoComponent.html":{},"modules/ServicesModule.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["timespan",{"_index":2175,"title":{"classes/TimeSpan.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeSpan.html":{},"classes/UpdateTimeReference.html":{}}}],["timespans",{"_index":3739,"title":{},"body":{"classes/TimeSpan.html":{}}}],["timespeed",{"_index":3674,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["timespeed.x1",{"_index":3707,"title":{},"body":{"classes/TimeReference.html":{}}}],["timespeed[value",{"_index":3693,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestamp",{"_index":1440,"title":{},"body":{"components/CardComponent.html":{}}}],["timestampnow",{"_index":3679,"title":{},"body":{"classes/TimeReference.html":{}}}],["timestate",{"_index":590,"title":{"interfaces/TimeState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimeState.html":{}}}],["timezone",{"_index":2162,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"injectables/I18nService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TimeReference.html":{},"interfaces/TimeState.html":{},"classes/UpdateTimeReference.html":{},"dependencies.html":{}}}],["timezones",{"_index":3113,"title":{},"body":{"components/SettingsComponent.html":{}}}],["title",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["titleposition",{"_index":1414,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["titlestyle",{"_index":1417,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["tlabel1",{"_index":3436,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tlabel2",{"_index":3444,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{entry.label",{"_index":3038,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.entries[0].label",{"_index":3039,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.label",{"_index":3036,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmp",{"_index":3624,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tmpmoment",{"_index":3643,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["todo",{"_index":565,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"interfaces/ArchiveState.html":{},"components/BaseFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["toggle",{"_index":3226,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["togglemenu",{"_index":3000,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index",{"_index":3006,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index:number",{"_index":3026,"title":{},"body":{"components/NavbarComponent.html":{}}}],["toggleusermenu",{"_index":3001,"title":{},"body":{"components/NavbarComponent.html":{}}}],["token",{"_index":81,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UserContext.html":{},"miscellaneous/enumerations.html":{}}}],["token:string",{"_index":3855,"title":{},"body":{"classes/UserContext.html":{}}}],["tokeninjector",{"_index":3099,"title":{"interceptors/TokenInjector.html":{}},"body":{"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"index.html":{}}}],["total",{"_index":1390,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["trace",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["trans",{"_index":3381,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["transform",{"_index":3866,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transform(value",{"_index":3867,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced",{"_index":3871,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformadvanced(value",{"_index":3872,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered",{"_index":3879,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transformhovered(value",{"_index":3880,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["translate",{"_index":1430,"title":{},"body":{"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translate.config",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["translate/core",{"_index":521,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"modules/SettingsModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":3930,"title":{},"body":{"dependencies.html":{}}}],["translateconfig",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":3261,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translatemodule",{"_index":519,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["translatemodule.forroot(translateconfig",{"_index":542,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":1431,"title":{},"body":{"components/CardComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translateservice,private",{"_index":2621,"title":{},"body":{"injectables/I18nService.html":{}}}],["translation",{"_index":3380,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translation',error",{"_index":3396,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translationelement",{"_index":3387,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["treatment",{"_index":3534,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["tree",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["tries",{"_index":2933,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["trigger",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardOperationEffects.html":{},"components/TimeFilterComponent.html":{}}}],["triggered",{"_index":1856,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{}}}],["triggered.\\naction",{"_index":2010,"title":{},"body":{"components/DetailComponent.html":{}}}],["triggers",{"_index":1139,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["true",{"_index":971,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["try",{"_index":71,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["trying",{"_index":1243,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["trylogout",{"_index":1097,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["trytologin",{"_index":19,"title":{"classes/TryToLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["trytologin({username",{"_index":2900,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytologout",{"_index":72,"title":{"classes/TryToLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":3949,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":2316,"title":{},"body":{"classes/Filter.html":{},"components/TimeLineComponent.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"interfaces/ArchiveState.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/DetailContext.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/RouterStateUrl.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"interfaces/SettingsState.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TimeReference.html":{},"classes/TimeSpan.html":{},"interfaces/TimeState.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"classes/User.html":{},"classes/UserContext.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{}}}],["type=timeactiontypes.tick",{"_index":2176,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type=timeactiontypes.updatetimereference",{"_index":2183,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["type_filter",{"_index":2402,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["typeaheadmodule",{"_index":2305,"title":{},"body":{"modules/FeedModule.html":{},"modules/SettingsModule.html":{}}}],["typeaheadsettingscomponent",{"_index":462,"title":{"components/TypeAheadSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"modules/SettingsModule.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typealiases",{"_index":3981,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":1173,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["typefiltercomponent",{"_index":464,"title":{"components/TypeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["typefilterform",{"_index":3801,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["typeof",{"_index":2597,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/TimeReference.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["types/jwt",{"_index":3933,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":54,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["typically",{"_index":1855,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["u",{"_index":2105,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["u.firstname",{"_index":959,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["u.lastname",{"_index":961,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["u00a0",{"_index":2592,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["uid",{"_index":1413,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"classes/TimeSpan.html":{}}}],["unable",{"_index":1155,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unavailable",{"_index":1184,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["uncomment",{"_index":2100,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["undefined",{"_index":2671,"title":{},"body":{"components/IconComponent.html":{},"classes/TimeReference.html":{}}}],["undefined,undefined",{"_index":2329,"title":{},"body":{"classes/Filter.html":{}}}],["unexpected",{"_index":246,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["unique",{"_index":875,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["unselectedvalues",{"_index":211,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["unselection",{"_index":2101,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["unsubscribe",{"_index":1658,"title":{},"body":{"injectables/CardService.html":{}}}],["unsubscribecardoperation",{"_index":1662,"title":{},"body":{"injectables/CardService.html":{}}}],["unused",{"_index":1545,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/SettingsEffects.html":{}}}],["up",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"directives/MouseWheelDirective.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":10,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/ArchiveQuerySuccess.html":{},"classes/CardOperation.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/HandleUnexpectedError.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["updatearchivefilter",{"_index":770,"title":{"classes/UpdateArchiveFilter.html":{}},"body":{"classes/ArchiveQuerySuccess.html":{},"components/BaseFilterComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SendArchiveQuery.html":{},"classes/UpdateArchiveFilter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatearchivefilter({filterpath",{"_index":1268,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["updateasync",{"_index":2026,"title":{},"body":{"components/DetailsComponent.html":{}}}],["updatecardsubscriptionwithdates",{"_index":1663,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart",{"_index":1678,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart:number,rangeend:number):observable",{"_index":1731,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":1369,"title":{},"body":{"directives/CalcHeightDirective.html":{},"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["updatedsubscription",{"_index":242,"title":{"classes/UpdatedSubscription.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatefilteronclocktick",{"_index":2206,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updateon",{"_index":2809,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["updates",{"_index":2250,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["updatestate",{"_index":155,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatestatebeforeaction",{"_index":156,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatesubscription",{"_index":243,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearLightCardSelection.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RemoveLightCard.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["updatetimereference",{"_index":2182,"title":{"classes/UpdateTimeReference.html":{}},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updatetimereference({timereference",{"_index":3468,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["updatetimereference='[time",{"_index":2166,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["updatevalue",{"_index":1207,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value",{"_index":1228,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{},"components/TypeAheadSettingsComponent.html":{}}}],["updatevalue(value:any",{"_index":1264,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{}}}],["upon",{"_index":1794,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/Filter.html":{}}}],["uribase",{"_index":1037,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["uribase}${pathend",{"_index":1042,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["url",{"_index":186,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"miscellaneous/enumerations.html":{}}}],["url.endswith('/auth/check_token",{"_index":3773,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/code",{"_index":3775,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/token",{"_index":3774,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.split",{"_index":3019,"title":{},"body":{"components/NavbarComponent.html":{}}}],["url.split('/')[1",{"_index":1455,"title":{},"body":{"components/CardComponent.html":{}}}],["urlcleaner",{"_index":3279,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["urlencoded",{"_index":913,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["urlsearchparams",{"_index":907,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["usable",{"_index":1023,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["use",{"_index":1462,"title":{},"body":{"components/CardComponent.html":{},"classes/Filter.html":{},"interfaces/TimelineState.html":{}}}],["useclass",{"_index":544,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["usecodeflow",{"_index":2873,"title":{},"body":{"components/LoginComponent.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/StateModule.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["useless",{"_index":3632,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["user",{"_index":66,"title":{"classes/User.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-5.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["usercontext",{"_index":1907,"title":{"classes/UserContext.html":{}},"body":{"components/DetailComponent.html":{},"classes/DetailContext.html":{},"classes/UserContext.html":{}}}],["userdataurl",{"_index":867,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["userform",{"_index":2874,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":3157,"title":{},"body":{"injectables/SettingsService.html":{}}}],["username",{"_index":109,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"components/InfoComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["username$|async",{"_index":2731,"title":{},"body":{"components/InfoComponent.html":{}}}],["usersurl",{"_index":3158,"title":{},"body":{"injectables/SettingsService.html":{}}}],["uses",{"_index":1153,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["using",{"_index":836,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["utc",{"_index":1055,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["utilities/utilities.module",{"_index":1759,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["utilitiesmodule",{"_index":489,"title":{"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"modules.html":{}}}],["v",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"modules/UtilitiesModule.html":{}}}],["v.label",{"_index":2800,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["v.label.parameters",{"_index":2805,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["v.label|async",{"_index":2820,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["v.value",{"_index":2801,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["v1",{"_index":2550,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["v2",{"_index":2552,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["val",{"_index":3336,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["val.enddate",{"_index":3637,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.publishdate",{"_index":3640,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.severity",{"_index":3634,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.startdate",{"_index":3638,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans",{"_index":3627,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.foreach(d",{"_index":3629,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.timespans.length",{"_index":3628,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.title.parameters.value",{"_index":3635,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["valid",{"_index":896,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["validate",{"_index":87,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["validators",{"_index":2141,"title":{},"body":{"components/EmailSettingComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validators.push(this.valueinlistvalidator",{"_index":2808,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["validators.push(validators.email",{"_index":2144,"title":{},"body":{"components/EmailSettingComponent.html":{}}}],["validators.push(validators.pattern(this.pattern",{"_index":3237,"title":{},"body":{"components/TextSettingComponent.html":{}}}],["validators.push(validators.required",{"_index":2811,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/TextSettingComponent.html":{}}}],["validity",{"_index":1129,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["value",{"_index":50,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/ArchiveEffects.html":{},"components/ArchiveFiltersComponent.html":{},"classes/ArchiveQuerySuccess.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"classes/CardOperation.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/ClearLightCardSelection.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"classes/EmptyLightCards.html":{},"classes/FailToUpdateTimeReference.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/HandleUnexpectedError-4.html":{},"classes/HandleUnexpectedError-5.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/LoadArchivedCard.html":{},"classes/LoadArchivedCardFailure.html":{},"classes/LoadArchivedCardSuccess.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/LoadSettings.html":{},"classes/LoadSettingsFailure.html":{},"classes/LoadSettingsSuccess.html":{},"injectables/MenuEffects.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PatchSettings.html":{},"classes/PatchSettingsFailure.html":{},"classes/PatchSettingsSuccess.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RemoveLightCard.html":{},"classes/SelectArchivedLightCard.html":{},"classes/SelectLightCard.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/SendArchiveQuery.html":{},"classes/SetCardDataTimeline.html":{},"injectables/SettingsEffects.html":{},"classes/State.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"injectables/TimeEffects.html":{},"components/TimeFilterComponent.html":{},"classes/TimeReference.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateArchiveFilter.html":{},"classes/UpdateTimeReference.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["value.filter",{"_index":1270,"title":{},"body":{"components/BaseFilterComponent.html":{}}}],["value.replace",{"_index":2590,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.setting",{"_index":1314,"title":{},"body":{"components/BaseSettingComponent.html":{}}}],["value.slice(from",{"_index":2570,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value:string",{"_index":1602,"title":{},"body":{"classes/CardOperation.html":{}}}],["value[index",{"_index":2567,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index].length",{"_index":2555,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["valuechanges",{"_index":3216,"title":{},"body":{"components/TagsFilterComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["valueinlist",{"_index":2781,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["valueinlistvalidator",{"_index":2770,"title":{},"body":{"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{}}}],["values",{"_index":208,"title":{},"body":{"classes/Action.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Input.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{}}}],["values.foreach",{"_index":1737,"title":{},"body":{"injectables/CardService.html":{}}}],["var",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchiveListComponent.html":{},"components/ArchivesComponent.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["variant",{"_index":1489,"title":{},"body":{"components/CardComponent.html":{}}}],["variation",{"_index":1077,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["verifyexpirationdate",{"_index":977,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["version",{"_index":189,"title":{},"body":{"classes/Action.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError-4.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectMenuLink.html":{},"classes/SelectMenuLinkFailure.html":{},"classes/SelectMenuLinkSuccess.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["version:string",{"_index":168,"title":{},"body":{"classes/Action.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["version:string):observable",{"_index":3285,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["versionparam",{"_index":3322,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["via",{"_index":21,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["virtual",{"_index":2154,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"classes/UpdateTimeReference.html":{}}}],["virtualtime",{"_index":3671,"title":{},"body":{"classes/TimeReference.html":{}}}],["visible",{"_index":567,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/ArchiveFiltersComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"directives/CalcHeightDirective.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/EmailSettingComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/I18nService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/InfoComponent.html":{},"components/ListFilterComponent.html":{},"components/ListSettingComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/MultiSettingsComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/SettingsComponent.html":{},"components/TagsFilterComponent.html":{},"components/TextSettingComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeAheadSettingsComponent.html":{},"components/TypeFilterComponent.html":{}}}],["w",{"_index":3570,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["wait",{"_index":1983,"title":{},"body":{"components/DetailComponent.html":{}}}],["warning",{"_index":2006,"title":{},"body":{"components/DetailComponent.html":{}}}],["way",{"_index":3475,"title":{},"body":{"injectables/TimeEffects.html":{}}}],["weather",{"_index":3750,"title":{},"body":{"interfaces/TimelineState.html":{}}}],["web",{"_index":837,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["wee",{"_index":3892,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["week",{"_index":3547,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["weeknumberonly",{"_index":3900,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["went",{"_index":2152,"title":{},"body":{"classes/FailToUpdateTimeReference.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wheel",{"_index":2966,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive",{"_index":2299,"title":{},"body":{"modules/FeedModule.html":{}}}],["wheel.directive.ts",{"_index":2946,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:11",{"_index":2956,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:13",{"_index":2955,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:16",{"_index":2960,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:21",{"_index":2958,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:26",{"_index":2962,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:34",{"_index":2964,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["whether",{"_index":1553,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["width",{"_index":1483,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["win",{"_index":113,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["window",{"_index":1391,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["window.event",{"_index":2974,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["window.location.href",{"_index":1033,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["window.location.href.indexof('code",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["window.location.pathname",{"_index":1879,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["window:resize",{"_index":1324,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["withlatestfrom",{"_index":1168,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildconfigselector('settings.defaulttags",{"_index":2213,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(buildfilterselector(filtertype.time_filter",{"_index":2244,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["withlatestfrom(this.store.select(selectcardstateselectedid",{"_index":1614,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["withlatestfrom(this.store.select(selectcode",{"_index":1101,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["withlatestfrom(this.store.select(selectconfigretry",{"_index":1807,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["without",{"_index":123,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["won't",{"_index":3492,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["word",{"_index":1487,"title":{},"body":{"components/CardComponent.html":{}}}],["work",{"_index":3366,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["works",{"_index":1274,"title":{},"body":{"components/BaseFilterComponent.html":{},"components/BaseSettingComponent.html":{},"components/MultiSettingsComponent.html":{},"components/NoSelectionComponent.html":{}}}],["wrong",{"_index":1145,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/FailToUpdateTimeReference.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/Tick.html":{},"classes/TickPayload.html":{},"injectables/TimeEffects.html":{},"classes/UpdateTimeReference.html":{}}}],["wrote",{"_index":3876,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["www",{"_index":912,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["x",{"_index":761,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{}}}],["x.getboundingclientrect().height).reduce((prev",{"_index":1385,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x.style.height",{"_index":1397,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["x1",{"_index":3723,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x10",{"_index":3725,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x2",{"_index":3724,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x3600",{"_index":3729,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["x60",{"_index":3727,"title":{},"body":{"classes/TimeReference.html":{},"miscellaneous/enumerations.html":{}}}],["xaxistickformat",{"_index":3865,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["xaxistickformatpipe",{"_index":2272,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["y",{"_index":762,"title":{},"body":{"components/ArchiveListComponent.html":{},"components/CardListComponent.html":{},"components/DetailsComponent.html":{},"components/TimeLineComponent.html":{}}}],["yea",{"_index":3894,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["year",{"_index":3555,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["yes",{"_index":842,"title":{},"body":{"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CardOperation.html":{},"classes/CheckTokenResponse.html":{},"classes/I18n.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/TimeSpan.html":{}}}],["yield",{"_index":1354,"title":{},"body":{"directives/CalcHeightDirective.html":{}}}],["zip",{"_index":1941,"title":{},"body":{"components/DetailComponent.html":{},"injectables/MenuEffects.html":{}}}],["zip(this.thirds.querythird(this.card.publisher,this.card.publisherversion",{"_index":1976,"title":{},"body":{"components/DetailComponent.html":{}}}],["zone.js",{"_index":3951,"title":{},"body":{"dependencies.html":{}}}],["zones",{"_index":3122,"title":{},"body":{"components/SettingsComponent.html":{}}}],["zoom",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/SettingsModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptLogIn.html":{"url":"classes/AcceptLogIn.html","title":"class - AcceptLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the authentication information\nEmitted by {AuthenticationEffects} in the following {Observable} @members:\n\nTryToLogIn\nCheckAuthentication via handleLogInAttempt @method\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\ncontaining the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: PayloadForSuccessfulAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        PayloadForSuccessfulAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PayloadForSuccessfulAuthentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOut.html":{"url":"classes/AcceptLogOut.html","title":"class - AcceptLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to removes authentication information of the system and thus logOut the user.\nEmitted by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogOut\n\nRejectLogInAttempt\nConsume by {AuthenticationEffect} in the AcceptLogOut {Observable} @member\n\n\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:128\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:128\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOutSuccess.html":{"url":"classes/AcceptLogOutSuccess.html","title":"class - AcceptLogOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store to remove authentication information\nEmitted by {AuthenticationEffect} in AcceptLogOut {Observable} @member.\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:144\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ActionType, label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockAction: boolean, lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, called: boolean, needsConfirm: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        ActionType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                        Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        called\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URL\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLightCardFailure.html":{"url":"classes/AddLightCardFailure.html","title":"class - AddLightCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLightCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddLightCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configLoaded\n                            \n                            \n                                currentPath\n                            \n                            \n                                getRoutePE\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                maxedRetries\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, i18nService: I18nService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                            NB: I18nService is injected to trigger its constructor at application startup\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nService\n                                                  \n                                                        \n                                                                        I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:47\n                \n            \n\n\n            \n                \n                    On Init the app take trace of the current url and of the authentication status\nOnce the subscription done, send an Action to Check the current authentication status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoutePE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OperatorFabric'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {InitAuthStatus} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl, selectRouterState} from '@ofSelectors/router.selectors';\nimport {selectExpirationTime} from '@ofSelectors/authentication.selectors';\nimport {isInTheFuture} from \"@ofServices/authentication.service\";\nimport {LoadConfig} from \"@ofActions/config.actions\";\nimport {selectConfigLoaded, selectMaxedRetries} from \"@ofSelectors/config.selectors\";\nimport {I18nService} from \"@ofServices/i18n.service\";\n\n@Component({\n    selector: 'of-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    title = 'OperatorFabric';\n    getRoutePE: Observable;\n    currentPath: any;\n    isAuthenticated$: boolean = false;\n    configLoaded: boolean = false ;\n    private maxedRetries: boolean = false;\n\n    /**\n     * NB: I18nService is injected to trigger its constructor at application startup\n     * @param store\n     * @param i18nService\n     */\n    constructor(private store: Store,private i18nService:I18nService) {\n        this.getRoutePE = this.store.pipe(select(selectRouterState));\n    }\n\n    /**\n     * On Init the app take trace of the current url and of the authentication status\n     * Once the subscription done, send an Action to Check the current authentication status.\n     */\n    ngOnInit() {\n        console.log(`location: ${location.href}`)\n        let i = window.location.href.indexOf('code');\n        if(i != -1){\n            this.store.dispatch(new InitAuthStatus({code:window.location.href.substring(i + 5)}))\n        }\n        this.store.pipe(select(selectCurrentUrl)).subscribe(url => this.currentPath = url);\n        this.store.pipe(select(selectExpirationTime),\n            map(isInTheFuture)\n                        ).subscribe(isAUth => this.isAuthenticated$ = isAUth);\n        this.store\n            .select(selectConfigLoaded)\n            .subscribe(loaded => this.configLoaded = loaded);\n        this.store\n            .select(selectMaxedRetries)\n            .subscribe((maxedRetries=>this.maxedRetries=maxedRetries));\n        // First Action send by the application, is the user currently authenticated ?\n        this.store.dispatch(new LoadConfig());\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n    \n    \n    \n    \n    \n        Application is loading ...\n    \n        \n        Application is not available yet, please reload later (F5)\n    \n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n.button {margin-right: 8px;}\n\n.app-content {\n  height: 100%; //This allows to take up all the space in body, minus padding\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Application is loading ...                    Application is not available yet, please reload later (F5)        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            InfoComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            StateModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {StateModule} from '@ofStore/state.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ServicesModule} from '@ofServices/services.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {IconComponent} from './components/icon/icon.component';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {translateConfig} from \"./translate.config\";\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faExternalLinkAlt, faSignOutAlt} from '@fortawesome/free-solid-svg-icons';\nimport {InfoComponent} from './components/navbar/info/info.component';\nimport {UtilitiesModule} from \"./modules/utilities/utilities.module\";\n\nlibrary.add(faExternalLinkAlt);\nlibrary.add(faSignOutAlt)\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        StateModule.forRoot(),\n        ServicesModule.forRoot(),\n        NgbModule,\n        TranslateModule.forRoot(translateConfig),\n        FontAwesomeModule,\n        UtilitiesModule\n    ],\n    declarations: [AppComponent, NavbarComponent, LoginComponent, IconComponent, InfoComponent],\n    providers: [ { provide: LocationStrategy, useClass: HashLocationStrategy }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from '@ofServices/guard.service';\nimport {LoginComponent} from './components/login/login.component';\n\nconst routes: Routes = [\n    // {\n    //     path: 'login',\n    //     component: LoginComponent\n    // },\n    {\n        path: 'feed',\n        loadChildren: './modules/feed/feed.module#FeedModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'archives',\n        loadChildren: './modules/archives/archives.module#ArchivesModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'thirdparty',\n        loadChildren: './modules/thirdparty/thirdparty.module#ThirdpartyModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'settings',\n        loadChildren: './modules/settings/settings.module#SettingsModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'navbar',\n        component: LoginComponent\n    },\n    {path: '**', redirectTo: '/feed'}\n];\n// TODO manage visible path more gently\nexport const navigationRoutes: Routes = routes.slice(0, 2);\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes,{ enableTracing: false, preloadingStrategy: PreloadAllModules })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        archive\n                                \n                                \n                                        authentication\n                                \n                                \n                                        card\n                                \n                                \n                                        config\n                                \n                                \n                                        feed\n                                \n                                \n                                        menu\n                                \n                                \n                                        router\n                                \n                                \n                                        settings\n                                \n                                \n                                        time\n                                \n                                \n                                        timeline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        archive\n                                    \n                                \n                                \n                                    \n                                        archive:         ArchiveState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ArchiveState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                    \n                                \n                                \n                                    \n                                        authentication:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                    \n                                \n                                \n                                    \n                                        card:         CardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         ConfigState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfigState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:         CardFeedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardFeedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:         MenuState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MenuState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                    \n                                \n                                \n                                    \n                                        time:         TimeState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeline\n                                    \n                                \n                                \n                                    \n                                        timeline:         TimelineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimelineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport {RouterReducerState} from '@ngrx/router-store';\nimport {RouterStateUrl} from '@ofStore/states/router.state';\nimport {reducer as authenticationReducer} from '@ofStore/reducers/authentication.reducer';\nimport {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '@env/environment';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport {CardEffects} from '@ofEffects/card.effects';\nimport {CardOperationEffects} from '@ofEffects/card-operation.effects';\nimport {AuthenticationEffects} from '@ofEffects/authentication.effects';\nimport {RouterEffects} from 'ngrx-router';\nimport {CardFeedState} from '@ofStates/feed.state';\nimport {reducer as timelineReducer} from '@ofStore/reducers/timeline.reducer';\nimport {reducer as lightCardReducer} from '@ofStore/reducers/light-card.reducer';\nimport {reducer as cardReducer} from '@ofStore/reducers/card.reducer';\nimport {reducer as configReducer} from '@ofStore/reducers/config.reducer';\nimport {reducer as settingsReducer} from '@ofStore/reducers/settings.reducer';\nimport {reducer as menuReducer} from '@ofStore/reducers/menu.reducer';\nimport {reducer as timeReducer} from '@ofStore/reducers/time.reducer';\nimport {reducer as archiveReducer} from '@ofStore/reducers/archive.reducer';\nimport {AuthState} from '@ofStates/authentication.state';\nimport {CardState} from \"@ofStates/card.state\";\nimport {CustomRouterEffects} from \"@ofEffects/custom-router.effects\";\nimport {MenuState} from \"@ofStates/menu.state\";\nimport {MenuEffects} from \"@ofEffects/menu.effects\";\nimport {LightCardEffects} from \"@ofEffects/light-card.effects\";\nimport {FeedFiltersEffects} from \"@ofEffects/feed-filters.effects\";\nimport {ConfigState} from \"@ofStates/config.state\";\nimport {ConfigEffects} from \"@ofEffects/config.effects\";\nimport {TimelineState} from \"@ofStates/timeline.state\";\nimport {SettingsState} from \"@ofStates/settings.state\";\nimport {SettingsEffects} from \"@ofEffects/settings.effects\";\nimport {TimeState} from \"@ofStates/time.state\";\nimport {TimeEffects} from \"@ofEffects/time.effects\";\nimport {ArchiveState} from \"@ofStates/archive.state\";\nimport {ArchiveEffects} from \"@ofEffects/archive.effects\";\n\nexport interface AppState {\n    router: RouterReducerState;\n    feed: CardFeedState;\n    timeline: TimelineState;\n    authentication: AuthState;\n    card: CardState;\n    menu: MenuState;\n    config: ConfigState;\n    settings: SettingsState;\n    time: TimeState;\n    archive: ArchiveState;\n}\n\nexport const appEffects = [\n    CardEffects,\n    ConfigEffects,\n    SettingsEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects,\n    TimeEffects,\n    ArchiveEffects];\n\nexport const appReducer: ActionReducerMap = {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    timeline: timelineReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer,\n    settings: settingsReducer,\n    time: timeReducer,\n    archive: archiveReducer\n};\n\nexport const appMetaReducers: MetaReducer[] = !environment.production\n    ? [storeFreeze]\n    : [];\n\nexport const storeConfig = {\n    metaReducers: appMetaReducers,\n    // initialState: {\n    //     router: routerInitialState,\n    // }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyFilter.html":{"url":"classes/ApplyFilter.html","title":"class - ApplyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ApplyFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArchiveEffects.html":{"url":"injectables/ArchiveEffects.html","title":"injectable - ArchiveEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArchiveEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/archive.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                queryArchivedCards\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/archive.effects.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryArchivedCards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ArchiveActionTypes.SendArchiveQuery),\n            switchMap((action: SendArchiveQuery) => this.service.fetchArchivedCards(action.payload.params)),\n            map((lightCards: LightCard[]) => {\n                return new ArchiveQuerySuccess({lightCards: lightCards});\n            }),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/archive.effects.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {\n    ArchiveActionTypes,\n    ArchiveQuerySuccess,\n    HandleUnexpectedError,\n    SendArchiveQuery\n} from \"@ofActions/archive.actions\";\nimport {LightCard} from \"@ofModel/light-card.model\";\n\n@Injectable()\nexport class ArchiveEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    queryArchivedCards: Observable = this.actions$\n        .pipe(\n            ofType(ArchiveActionTypes.SendArchiveQuery),\n            switchMap((action: SendArchiveQuery) => this.service.fetchArchivedCards(action.payload.params)),\n            map((lightCards: LightCard[]) => {\n                return new ArchiveQuerySuccess({lightCards: lightCards});\n            }),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveFiltersComponent.html":{"url":"components/ArchiveFiltersComponent.html","title":"component - ArchiveFiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveFiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/filters/archive-filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-filters\n            \n\n            \n                styleUrls\n                ./archive-filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                processes$\n                            \n                            \n                                publishers$\n                            \n                            \n                                tags$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/filters/archive-filters.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/archive-filters.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendQuery\n                        \n                        \n                    \n                \n            \n            \n                \nsendQuery()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/archive-filters.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/archive-filters.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processes$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/archive-filters.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishers$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/archive-filters.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/archive-filters.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {SendArchiveQuery} from \"@ofActions/archive.actions\";\nimport {selectArchiveFilters} from \"@ofSelectors/archive.selectors\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\n\n@Component({\n  selector: 'of-archive-filters',\n  templateUrl: './archive-filters.component.html',\n  styleUrls: ['./archive-filters.component.scss']\n})\nexport class ArchiveFiltersComponent implements OnInit {\n\n  publishers$:Observable;\n  processes$:Observable;\n  tags$:Observable; //TODO Not necessarily strings, could be value/ labels or i18n but it doesn't seem to be a problem\n\n  filters: Map;\n\n  constructor(private store:Store) { }\n\n\n  ngOnInit() {\n    this.publishers$ = this.store.select(buildConfigSelector('archive.filters.publisher.list'));\n    this.processes$ = this.store.select(buildConfigSelector('archive.filters.process.list'));\n    this.tags$ = this.store.select(buildConfigSelector('archive.filters.tags.list'));\n\n    this.store.select(selectArchiveFilters).subscribe( next => this.filters = next);\n  }\n\n  sendQuery(): void{\n    this.store.dispatch(new SendArchiveQuery({params: this.filters}));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n        archive.search\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./archive-filters.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                              archive.search            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveFiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchiveListComponent.html":{"url":"components/ArchiveListComponent.html","title":"component - ArchiveListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchiveListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/archive-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archive-list\n            \n\n            \n                styleUrls\n                ./archive-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archive-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :         LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/archive-list.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'of-archive-list',\n  templateUrl: './archive-list.component.html',\n  styleUrls: ['./archive-list.component.scss']\n})\nexport class ArchiveListComponent  {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n      \n        \n      \n    \n\n\n\n    \n\n    \n                \n                    ./archive-list.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchiveListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArchiveQuerySuccess.html":{"url":"classes/ArchiveQuerySuccess.html","title":"class - ArchiveQuerySuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArchiveQuerySuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.ArchiveQuerySuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {LightCardActionTypes} from \"@ofActions/light-card.actions\";\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{filterPath: string, filterValues: string[]}){}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    /* istanbul ignore next */\n    constructor(public payload:{params: Map}){}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload:{lightCards: LightCard[]}){}\n}\n\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\n\n\n\nexport type ArchiveActions =\n    UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    |SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArchiveState.html":{"url":"interfaces/ArchiveState.html","title":"interface - ArchiveState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArchiveState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/archive.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filters\n                                \n                                \n                                        lightCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lightCards\n                                    \n                                \n                                \n                                    \n                                        lightCards:         LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\nexport interface ArchiveState {\n    selectedCardId: string;\n    lightCards: LightCard[];\n    filters: Map; //TODO Explain path/values or create data type\n    loading: boolean\n}\n\nexport const archiveInitialState: ArchiveState = {\n        selectedCardId: null,\n        lightCards:[],\n        filters: new Map(),\n        loading: false\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchivesComponent.html":{"url":"components/ArchivesComponent.html","title":"component - ArchivesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchivesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/archives.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archives\n            \n\n            \n                styleUrls\n                ./archives.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archives.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/archives.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/archives.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable, of} from \"rxjs\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {select, Store} from \"@ngrx/store\";\nimport * as feedSelectors from \"@ofSelectors/feed.selectors\";\nimport {catchError} from \"rxjs/operators\";\nimport {AppState} from \"@ofStore/index\";\nimport {selectArchiveLightCards, selectArchiveLightCardSelection} from \"@ofSelectors/archive.selectors\";\n\n@Component({\n  selector: 'of-archives',\n  templateUrl: './archives.component.html',\n  styleUrls: ['./archives.component.scss']\n})\nexport class ArchivesComponent implements OnInit {\n\n  lightCards$: Observable;\n  selection$: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit() {\n    this.lightCards$ = this.store.pipe(\n        select(selectArchiveLightCards),\n        catchError(err => of([]))\n    );\n    this.selection$ = this.store.select(selectArchiveLightCardSelection);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n        \n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./archives.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchivesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesModule.html":{"url":"modules/ArchivesModule.html","title":"module - ArchivesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nBaseFilterComponent\n\nBaseFilterComponent\n\nArchivesModule -->\n\nBaseFilterComponent->ArchivesModule\n\n\n\n\n\nListFilterComponent\n\nListFilterComponent\n\nArchivesModule -->\n\nListFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArchiveFiltersComponent\n                        \n                        \n                            ArchiveListComponent\n                        \n                        \n                            ArchivesComponent\n                        \n                        \n                            BaseFilterComponent\n                        \n                        \n                            ListFilterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArchivesRoutingModule\n                        \n                        \n                            CardsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {ArchivesRoutingModule} from './archives-routing.module';\nimport {ArchivesComponent} from \"./archives.component\";\nimport {ArchiveListComponent} from \"./components/archive-list/archive-list.component\";\nimport {CardsModule} from \"../cards/cards.module\";\nimport {BaseFilterComponent} from \"./components/archive-list/filters/base-filter/base-filter.component\";\nimport {ListFilterComponent} from \"./components/archive-list/filters/list-filter/list-filter.component\";\nimport { ArchiveFiltersComponent } from './components/archive-list/filters/archive-filters.component';\nimport {TranslateModule} from \"@ngx-translate/core\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ArchivesRoutingModule,\n    CardsModule,\n    TranslateModule,\n  ],\n  declarations: [ArchivesComponent,ArchiveListComponent, BaseFilterComponent, ListFilterComponent, ArchiveFiltersComponent]\n})\nexport class ArchivesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesRoutingModule.html":{"url":"modules/ArchivesRoutingModule.html","title":"module - ArchivesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {ArchivesComponent} from \"./archives.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ArchivesComponent,\n        // canActivate: [AuthenticationGuard]\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n        ]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArchivesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthObject.html":{"url":"classes/AuthObject.html","title":"class - AuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class used to try to login using the authentication web service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access_token\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, expires_in: number, clientId: Guid, identifier?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:288\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:291\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:293\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:292\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:294\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\nimport {User} from \"@ofModel/user.model\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError),\n            switchMap((auth)=>this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth:PayloadForSuccessfulAuthentication):Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(e=>of(auth))\n            );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate)\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        if(!this.delegateUrl)\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        else{\n            window.location.href = `${this.delegateUrl}&redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        }\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        code\n                                \n                                \n                                        expirationDate\n                                \n                                \n                                        firstName\n                                \n                                \n                                        identifier\n                                \n                                \n                                        lastName\n                                \n                                \n                                        message\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     Guid\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Guid\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                    \n                                \n                                \n                                    \n                                        expirationDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface AuthState {\n    code: string;\n    identifier: string;\n    clientId: Guid;\n    token: string;\n    expirationDate: Date;\n    message: Message;\n    firstName: string;\n    lastName: string;\n}\n\nexport const authInitialState: AuthState = {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null,\n    firstName: null,\n    lastName: null\n};\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/authentication.effects.ts\n        \n\n            \n                Description\n            \n            \n                Management of the authentication of the current user\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AcceptLogOut\n                            \n                            \n                                CheckAuthentication\n                            \n                            \n                                checkAuthenticationWhenReady\n                            \n                            \n                                RejectLogInAttempt\n                            \n                            \n                                TryToLogIn\n                            \n                            \n                                TryToLogOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleErrorOnTokenGeneration\n                            \n                            \n                                handleRejectedLogin\n                            \n                            \n                                    Private\n                                resetState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthenticationService, cardService: CardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/authentication.effects.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Store} state manager\n\n\n                                                        \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Action} {Observable} of Action of the Application\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice implementing the authentication business rules\n\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrouter service to redirect user accordingly to the user authentication status or variation of it.\n\nistanbul ignore next \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleErrorOnTokenGeneration\n                        \n                        \n                    \n                \n            \n            \n                \nhandleErrorOnTokenGeneration(errorResponse, category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorResponse\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRejectedLogin\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRejectedLogin(errorMsg: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMsg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AuthenticationActions\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/effects/authentication.effects.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AcceptLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:136\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\nIt tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\nThis {Effect} should be called as a consequence of a {TryLogOut} action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse,'code');\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => new AcceptLogIn(auth))\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:179\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\nIt extract the current authentication information if any and checks its validity, the expiration date.\n  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n  the {handleLogInAttempt} @method,\n  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\nThis {Effect} should be the first effect apply by the application to display the right page accordingly with the\ncurrent authentication state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthenticationWhenReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:61\n                            \n                        \n\n                \n                    \n                        Triggers Authentication Check when the application is ready\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RejectLogInAttempt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:155\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\nIt tells the {AuthenticationService} to clear authentication information from the system\nThis {Effect} should be called after a wrong login attempt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                            return this.handleErrorOnTokenGeneration(errorResponse,'authenticate');\n                            }\n                        ));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:83\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\nthe login payload to get an authentication token from the authentication service if the authentication is\nvalid and emit an {AcceptLogin} action with it.\nFor invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\nas paload\nThis effect should take action after the user has submitted login information in the login page by clicking\non the login button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap((action: TryToLogOut) => {\n                this.resetState();\n                return of(new EmptyLightCards(),new ClearCard(), new AcceptLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:110\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\nIt tells the {AuthenticationService} to clear the authentication information from the system and emit\nan {AcceptLogOut} Action.\nThis effect should take action after the Logout link/button has been clicked by the user.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable, of} from 'rxjs';\nimport {Action, Store} from '@ngrx/store';\nimport {\n    AcceptLogIn,\n    AcceptLogOut,\n    AcceptLogOutSuccess,\n    AuthenticationActions,\n    AuthenticationActionTypes,\n    CheckAuthenticationStatus,\n    RejectLogIn,\n    TryToLogIn,\n    TryToLogOut\n} from '@ofActions/authentication.actions';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {catchError, map, switchMap, tap, withLatestFrom} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {Router} from \"@angular/router\";\nimport {ConfigActionTypes} from \"@ofActions/config.actions\";\nimport {selectCode} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\nimport {CardService} from \"@ofServices/card.service\";\nimport {EmptyLightCards} from \"@ofActions/light-card.actions\";\nimport {ClearCard} from \"@ofActions/card.actions\";\n\n/**\n * Management of the authentication of the current user\n */\n@Injectable()\nexport class AuthenticationEffects {\n\n    /**\n     * @constructor\n     * @param store - {Store} state manager\n     * @param actions$ - {Action} {Observable} of Action of the Application\n     * @param authService - service implementing the authentication business rules\n     * @param router - router service to redirect user accordingly to the user authentication status or variation of it.\n     *\n     * istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private authService: AuthenticationService,\n                private cardService: CardService,\n                private router: Router) {\n    }\n\n    /**\n     * Triggers Authentication Check when the application is ready\n     */\n    @Effect()\n    checkAuthenticationWhenReady: Observable =\n        this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\n     * the login payload to get an authentication token from the authentication service if the authentication is\n     * valid and emit an {AcceptLogin} action with it.\n     * For invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\n     * as paload\n     *\n     * This effect should take action after the user has submitted login information in the login page by clicking\n     * on the login button.\n     *\n     * @member\n     * @name TryToLogin\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogIn: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                            return this.handleErrorOnTokenGeneration(errorResponse,'authenticate');\n                            }\n                        ));\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\n     * It tells the {AuthenticationService} to clear the authentication information from the system and emit\n     * an {AcceptLogOut} Action.\n     *\n     * This effect should take action after the Logout link/button has been clicked by the user.\n     *\n     * @member\n     * @name TryToLogOut\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap((action: TryToLogOut) => {\n                this.resetState();\n                return of(new EmptyLightCards(),new ClearCard(), new AcceptLogOut());\n            })\n        );\n\n    private resetState() {\n        AuthenticationService.clearAuthenticationInformation();\n        this.cardService.unsubscribeCardOperation();\n    }\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\n     * It tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\n     *\n     * This {Effect} should be called as a consequence of a {TryLogOut} action\n     *\n     * @member\n     * @name AcceptLogOut\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    AcceptLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        );\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\n     * It tells the {AuthenticationService} to clear authentication information from the system\n     *\n     * This {Effect} should be called after a wrong login attempt.\n\n     * @member\n     * @name RejectLogInAttempt\n     * @typedef {Observable}\n     */\n    @Effect()\n    RejectLogInAttempt: Observable =\n        this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()));\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\n     *It extract the current authentication information if any and checks its validity, the expiration date.\n     *  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n     *  the {handleLogInAttempt} @method,\n     *\n     *  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\n     *\n     * This {Effect} should be the first effect apply by the application to display the right page accordingly with the\n     * current authentication state.\n     *\n     * @member\n     * @name CheckAuthentication\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    CheckAuthentication: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse,'code');\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return this.authService.loadUserData(authInfo)\n                                    .pipe(\n                                        map(auth => new AcceptLogIn(auth))\n                                    );\n                                // return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            );\n\n    handleErrorOnTokenGeneration(errorResponse,category:string) {\n        let message, key;\n        let params = new Map()\n        switch (errorResponse.status) {\n            case 401:\n                message = 'Unable to authenticate the user';\n                key = `login.error.${category}`;\n                break;\n            case 0:\n            case 500:\n                message = 'Authentication service currently unavailable';\n                key = 'login.error.unavailable';\n                break;\n            default:\n                message = 'Unexpected error';\n                key = 'login.error.unexpected';\n                params['error'] = errorResponse.message;\n        }\n        console.error(message, errorResponse);\n        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n    }\n\n    handleRejectedLogin(errorMsg: Message): AuthenticationActions {\n        AuthenticationService.clearAuthenticationInformation();\n        return new RejectLogIn({error: errorMsg});\n\n    }\n\n    // handleLogInAttempt(payload: CheckTokenResponse): AuthenticationActions {\n    //     if (payload) {\n    //         const authInfo = this.authService.extractIdentificationInformation();\n    //         return new AcceptLogIn(authInfo);\n    //\n    //     }\n    //     return this.handleRejectedLogin('invalid token');\n    // }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseFilterComponent.html":{"url":"components/BaseFilterComponent.html","title":"component - BaseFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-base-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./base-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                filter$\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterPath\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            filter$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/base-filter/base-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, filter, first, map, takeUntil} from \"rxjs/operators\";\nimport {FormGroup} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport {buildArchiveFilterSelector} from \"@ofSelectors/archive.selectors\";\nimport {UpdateArchiveFilter} from \"@ofActions/archive.actions\";\n\n@Component({\n    selector: 'of-base-filter',\n    templateUrl: './base-filter.component.html'\n})\nexport class BaseFilterComponent implements OnInit, OnDestroy {\n\n    @Input() public filterPath: string;\n    @Input() public messagePlaceholder: string;\n    @Input() public requiredField: boolean;\n    private ngUnsubscribe$ = new Subject();\n    protected filter$;\n    protected placeholder$;\n    form: FormGroup;\n\n    constructor(protected store: Store) {\n\n    }\n\n    ngOnInit() {\n        this.form = this.initFormGroup();\n        if(!this.form){\n            throw 'Trying to instanciate component without form';\n        }\n        this.filter$ = this.store.select(buildArchiveFilterSelector(this.filterPath))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n            this.filter$.subscribe(next => this.updateValue(next));\n        this.filter$\n            .pipe(first())\n            .subscribe(()=>\n                this.form.valueChanges\n                    .pipe(\n                        takeUntil(this.ngUnsubscribe$),\n                        filter(()=>this.form.valid),\n                        distinctUntilChanged((formA, formB) => this.isEqual(formA, formB)),\n                        debounce(() => timer(500))\n                    )\n                    .subscribe(next=>this.dispatch(this.convert(next)))\n            );\n        this.placeholder$ = this.store.select(buildConfigSelector(`archive.filters.default.${this.filterPath}`)) //TODO Reads default value from config if exists\n            .pipe(takeUntil(this.ngUnsubscribe$));\n\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    protected updateValue(value:any){\n\n    }\n\n    protected initFormGroup():FormGroup{\n        return null\n    }\n\n    protected convert(value:any):any{\n        return value;\n    }\n\n\n    private dispatch(value:any) {\n        this.store.dispatch(new UpdateArchiveFilter({filterPath: this.filterPath, filterValues: [value.filter]}));\n    }\n\n    protected isEqual(formA, formB):boolean{\n        return _.isEqual(formA, formB);\n    }\n\n    protected submitValue(){\n        alert('submitted');\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  base-filter works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  base-filter works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseSettingComponent.html":{"url":"components/BaseSettingComponent.html","title":"component - BaseSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/base-setting/base-setting.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-base-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./base-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/base-setting/base-setting.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {PatchSettings} from \"@ofActions/settings.actions\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, filter, first, map, takeUntil} from \"rxjs/operators\";\nimport {FormGroup} from \"@angular/forms\";\nimport * as _ from \"lodash\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Component({\n    selector: 'of-base-setting',\n    templateUrl: './base-setting.component.html'\n})\nexport class BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() public settingPath: string;\n    @Input() public messagePlaceholder: string;\n    @Input() public requiredField: boolean;\n    private ngUnsubscribe$ = new Subject();\n    protected setting$;\n    protected placeholder$;\n    form: FormGroup;\n    private baseSettings = {};\n\n    constructor(protected store: Store) {\n\n    }\n\n    ngOnInit() {\n        this.form = this.initFormGroup();\n        if(!this.form){\n            throw 'Trying to instanciate component without form';\n        }\n        this.setting$ = this.store.select(buildSettingsSelector(this.settingPath))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n            this.setting$.subscribe(next => this.updateValue(next));\n        this.setting$\n            .pipe(first())\n            .subscribe(()=>\n                this.form.valueChanges\n                    .pipe(\n                        takeUntil(this.ngUnsubscribe$),\n                        filter(()=>this.form.valid),\n                        distinctUntilChanged((formA, formB) => this.isEqual(formA, formB)),\n                        debounce(() => timer(500))\n                    )\n                    .subscribe(next=>this.dispatch(this.convert(next)))\n            );\n        this.placeholder$ = this.store.select(buildConfigSelector(`settings.${this.settingPath}`))\n            .pipe(takeUntil(this.ngUnsubscribe$));\n        this.store.select(selectIdentifier)\n            .pipe(\n                takeUntil(this.ngUnsubscribe$),\n                map(id=>{return {login:id}}))\n            .subscribe(next=>this.baseSettings = next);\n\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    protected updateValue(value:any){\n\n    }\n\n    protected initFormGroup():FormGroup{\n        return null\n    }\n\n    protected convert(value:any):any{\n        return value;\n    }\n\n\n    private dispatch(value:any) {\n        const settings = {...this.baseSettings};\n        settings[this.settingPath] = value.setting;\n        this.store.dispatch(new PatchSettings({settings: settings}));\n    }\n\n    protected isEqual(formA, formB):boolean{\n        return _.isEqual(formA, formB);\n    }\n\n    protected submitValue(){\n        alert('submitted');\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  base-setting works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  base-setting works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'BaseSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/CalcHeightDirective.html":{"url":"directives/CalcHeightDirective.html","title":"directive - CalcHeightDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  CalcHeightDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/utilities/calc-height.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [calcHeightDirective]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _resizeSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calcHeight\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                calcHeightClass\n                            \n                            \n                                fixedHeightClass\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/utilities/calc-height.directive.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        calcHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fixedHeightClass\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:21\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:45\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calcHeight\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fixedHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    calcHeightClass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/utilities/calc-height.directive.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _resizeSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/utilities/calc-height.directive.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Directive, ElementRef,\n    Input, HostListener, OnInit\n} from '@angular/core';\nimport {debounceTime} from \"rxjs/operators\";\nimport {Subject} from \"rxjs\";\n\n@Directive({\n    selector: '[calcHeightDirective]'\n})\nexport class CalcHeightDirective implements OnInit {\n\n    @Input()\n    parentId: any;\n\n    @Input()\n    fixedHeightClass: any;\n\n    @Input()\n    calcHeightClass: any;\n\n    private _resizeSubject$: Subject;\n\n    constructor(private el: ElementRef) {\n\n        this._resizeSubject$ = new Subject();\n        this._resizeSubject$.asObservable().pipe(\n            debounceTime(300),\n        ).subscribe(x => this.calcHeight(this.parentId, this.fixedHeightClass, this.calcHeightClass));\n\n    }\n\n    ngOnInit(): void {\n        this._resizeSubject$.next();\n    }\n\n    @HostListener('window:resize')\n    onResize() {\n        this._resizeSubject$.next();\n    }\n\n    private calcHeight(parentId: string, fixedHeightClass: string, calcHeightClass: string) {\n\n        let parent : HTMLElement;\n\n        parent = document.getElementById(this.parentId);\n\n        //If no parentId was provided or search didn't yield any element, fallback is element calling the directive\n        if(!parent){\n            parent = this.el.nativeElement;\n        }\n\n        if(!parent){\n            return;\n        }\n\n        //Get elements that should be allowed to define their own height (based on content), which are then \"fixed\" for this calculation\n        const fixedElements = parent.getElementsByClassName(fixedHeightClass);\n\n        //Get elements that for which the height should be calculated\n        //For now all elements bearing the calcHeightClass will have their height updated to the same calculated value\n        //Which makes sense if they're next to one another, but another option would be to divide the available height equally\n        const calcElements = parent.getElementsByClassName(calcHeightClass);\n\n        if (!calcElements) return;\n\n        //Sum heights of fixed elements\n        const sumFixElemHeights = Array.from(fixedElements)\n            .map(x => x.getBoundingClientRect().height).reduce((prev, curr) => {\n                return prev + curr;\n            }, 0);\n\n        // Calculate available height by subtracting the heights of fixed elements from the total window height\n        let availableHeight = parent.clientHeight - sumFixElemHeights;\n\n        //console.log(\"CalcHeightDirective \"+fixedHeightClass+\" \"+parent.clientHeight+\" \"+sumFixElemHeights+\" \"+availableHeight);\n\n        // Apply height and overflow\n        Array.from(calcElements)\n            .forEach((x: HTMLElement) => x.style.height = `${availableHeight}px`\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, process?: string, processId?: string, state?: string, lttd?: number, title?: I18n, summary?: I18n, data?: any, details?: Detail[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                        Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                currentPath\n                            \n                            \n                                dateToDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeDisplayedDates\n                            \n                            \n                                handleDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCard\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, translate: TranslateService, time: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card/card.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCard\n                    \n                \n                \n                    \n                        Type :         LightCard\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeDisplayedDates\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeDisplayedDates(config: string, lightCard: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lightCard\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleDate\n                        \n                        \n                    \n                \n            \n            \n                \nhandleDate(timeStamp: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStamp\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            select\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    select()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card/card.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateToDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:78\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Router} from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {map} from \"rxjs/operators\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Component({\n    selector: 'of-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit{\n\n    @Input() public open: boolean = false;\n    @Input() public lightCard: LightCard;\n    currentPath: any;\n    private _i18nPrefix: string;\n    dateToDisplay: string;\n\n    /* istanbul ignore next */\n    constructor(private router: Router,\n                private store: Store,\n                private translate: TranslateService,\n                private time: TimeService) {\n\n    }\n\n    public select() {\n        this.router.navigate(['/'+this.currentPath,'cards',this.lightCard.id]);\n        // this.open=true;\n    }\n\n    ngOnInit() {\n        this._i18nPrefix = this.lightCard.publisher+'.'+this.lightCard.publisherVersion+'.'\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/')[1];\n        });\n        // this.store.select(selectCardStateSelectedId)\n        //     .pipe(\n        //         map(id=>this.lightCard.id == id)\n        //     ).subscribe(open=>this.open = open)\n        // ;\n        // fetch configuration\n        this.store.select(buildConfigSelector('feed.card.time.display'))\n            // use configuration to compute date\n            .pipe(map(config => this.computeDisplayedDates(config, this.lightCard)))\n            .subscribe(computedDate => this.dateToDisplay=computedDate);\n    }\n\n    computeDisplayedDates(config:string,lightCard:LightCard):string{\n        switch (config) {\n            case 'NONE': return '';\n            case 'LTTD': return this.handleDate(lightCard.lttd);\n            case 'PUBLICATION': return this.handleDate(lightCard.publishDate);\n            case 'BUSINESS_START': return this.handleDate(lightCard.startDate);\n            default:return `${this.handleDate(lightCard.startDate)} - ${this.handleDate(lightCard.endDate)}`\n        }\n    }\n\n    handleDate(timeStamp:number):string{\n        return this.time.formatDateTime(timeStamp);\n    }\n\n\n    get i18nPrefix(): string {\n        return this._i18nPrefix;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n        \n        \n            {{i18nPrefix+lightCard.title.key}}\n            ({{this.dateToDisplay}})\n        \n    \n    \n        \n        \n            {{i18nPrefix+lightCard.summary.key}}\n        \n    \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.light-card-detail {\n  max-width: 400px;\n}\n\n.card {\n  margin-bottom: 5px;\n  word-break: break-all;\n}\n\n.card-title {\n  font-variant: small-caps;\n  font-size: larger;\n}\n\n.card-subtitle {\n  font-size: small;\n}\n\n.card-text {\n  font-size: small;\n}\n\n.badge-border {\n  width: 30px;\n  text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{i18nPrefix+lightCard.title.key}}            ({{this.dateToDisplay}})                                            {{i18nPrefix+lightCard.summary.key}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card-details/card-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-details\n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card-details/card-details.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Detail[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport * as cardSelectors from '@ofStore/selectors/card.selectors';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\n\n@Component({\n    selector: 'of-card-details',\n    templateUrl: './card-details.component.html',\n})\nexport class CardDetailsComponent implements OnInit {\n\n    card: Card;\n    details: Detail[];\n\n    constructor(private store: Store, private thirdsService: ThirdsService) {\n\n    }\n\n    ngOnInit() {\n        this.store.select(cardSelectors.selectCardStateSelected)\n            .subscribe(card => {\n                this.card = card;\n                if(card) {\n                    if(card.details) {\n                        this.details = [...card.details];\n                    }else{\n                        this.details = [];\n                    }\n                    this.thirdsService.queryThird(this.card.publisher, this.card.publisherVersion)\n                        .subscribe(third => {\n                            const state = third.extractState(this.card)\n                            if (state != null)\n                                this.details.push(...state.details);\n                        });\n                }\n            });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardEffects.html":{"url":"injectables/CardEffects.html","title":"injectable - CardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadArchivedById\n                            \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadArchivedById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadArchivedCard),\n            switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadArchivedCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadArchivedCardFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => this.service.loadCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadCardFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {CardService} from '@ofServices/card.service';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    CardActionTypes,\n    LoadArchivedCard, LoadArchivedCardFailure,\n    LoadArchivedCardSuccess,\n    LoadCard,\n    LoadCardFailure,\n    LoadCardSuccess\n} from \"@ofActions/card.actions\";\nimport {Card} from \"@ofModel/card.model\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class CardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService\n    ) {\n    }\n\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => this.service.loadCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadCardFailure(err));\n                return caught;\n            })\n        );\n\n    @Effect()\n    loadArchivedById: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadArchivedCard),\n            switchMap(action => this.service.loadArchivedCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadArchivedCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadArchivedCardFailure(err));\n                return caught;\n            })\n        );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFeedState.html":{"url":"interfaces/CardFeedState.html","title":"interface - CardFeedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardFeedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/feed.state.ts\n        \n\n            \n                Description\n            \n            \n                The Feed State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: whether there is an ongoing state modification\nmessage: last message during state processing\nfilters: a collection of filter to apply to the rendered feed\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filters\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:         Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:         LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard, severityOrdinal} from '@ofModel/light-card.model';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n/**\n * The Feed State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: whether there is an ongoing state modification\n *  * message: last message during state processing\n *  * filters: a collection of filter to apply to the rendered feed\n */\nexport interface CardFeedState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    filters: Map;\n}\n\nexport function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate\n}\n\nexport function compareBySeverity(card1: LightCard, card2: LightCard){\n    return severityOrdinal(card1.severity) - severityOrdinal(card2.severity);\n}\n\nexport function compareByLttd(card1: LightCard, card2: LightCard){\n    return card1.lttd - card2.lttd;\n}\n\nexport function compareByPublishDate(card1: LightCard, card2: LightCard){\n    return card1.publishDate - card2.publishDate;\n}\n\nexport function compareBySeverityLttdPublishDate(card1: LightCard, card2: LightCard){\n    let result = compareBySeverity(card1,card2);\n    if(result==0)\n        result = compareByLttd(card1,card2);\n    if(result == 0)\n        result = compareByPublishDate(card1,card2);\n    return result;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:compareBySeverityLttdPublishDate\n});\n\nexport const feedInitialState: CardFeedState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardListComponent.html":{"url":"components/CardListComponent.html","title":"component - CardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/card-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-list\n            \n\n            \n                styleUrls\n                ./card-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/card-list.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :         LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'of-card-list',\n  templateUrl: './card-list.component.html',\n  styleUrls: ['./card-list.component.scss']\n})\nexport class CardListComponent  {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: Observable;\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n  \n  \n    \n      \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./card-list.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.feed-content {\n  height: 100%;\n}\n\n.calc-height-feed-content {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CardOperation.html":{"url":"classes/CardOperation.html","title":"class - CardOperation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CardOperation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card-operation.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CardOperation\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                convertTypeIntoEnum\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(number: number, publicationDate: number, type: CardOperationType, cards?: LightCard[], cardIds?: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card-operation.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        number\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publicationDate\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        CardOperationType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cards\n                                                  \n                                                        \n                                                                        LightCard[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        cardIds\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertTypeIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTypeIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/card-operation.model.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from './light-card.model';\n\nexport class CardOperation implements CardOperation {\n    /* istanbul ignore next */\n    constructor(\n        readonly number: number,\n        readonly publicationDate: number,\n        readonly type: CardOperationType,\n        readonly cards?: LightCard[],\n        readonly cardIds?: string[]\n    ) {\n    }\n\n    static convertTypeIntoEnum(key:string, value:string){\n        if(key === 'type'){\n            return CardOperationType[value]\n        }\n        return value;\n    }\n\n}\n\nexport enum CardOperationType {\n    ADD , UPDATE, DELETE\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardOperationEffects.html":{"url":"injectables/CardOperationEffects.html","title":"injectable - CardOperationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardOperationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card-operation.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshIfSelectedCard\n                            \n                            \n                                subscribe\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card-operation.effects.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshIfSelectedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:73\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, filter, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport {\n    AddLightCardFailure,\n    HandleUnexpectedError,\n    LightCardActions,\n    LightCardActionTypes,\n    LoadLightCardsSuccess,\n    RemoveLightCard,\n    UpdatedSubscription\n} from '@ofActions/light-card.actions';\nimport {AuthenticationActionTypes} from '@ofActions/authentication.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ApplyFilter, FeedActionTypes} from \"@ofActions/feed.actions\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {CardOperationType} from \"@ofModel/card-operation.model\";\n\n@Injectable()\nexport class CardOperationEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    subscribe: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        switch (operation.type) {\n                            case CardOperationType.ADD:\n                                return new LoadLightCardsSuccess({lightCards: operation.cards});\n                            case CardOperationType.DELETE:\n                                return new RemoveLightCard({cards: operation.cardIds});\n                            default:\n                                return new AddLightCardFailure(\n                                    {error: new Error(`unhandled action type '${operation.type}'`)}\n                                );\n                        }\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n\n    @Effect()\n    updateSubscription: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af: ApplyFilter) => af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af: ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start, af.payload.status.end)\n                .pipe(\n                    map(() => {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error, caught) => {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        );\n\n    @Effect()\n    refreshIfSelectedCard: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            map((a: LoadLightCardsSuccess) => a.payload.lightCards), //retrieve list of added light cards from action payload\n            withLatestFrom(this.store.select(selectCardStateSelectedId)), //retrieve currently selected card\n            switchMap(([lightCards, selectedCardId]) => lightCards.filter(card => card.id.indexOf(selectedCardId) >= 0)), //keep only lightCards matching the process id of current selected card\n            map(lightCard => new LoadCard({id: lightCard.id})) //if any, trigger refresh by firing LoadCard\n        )\n    ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                archivesUrl\n                            \n                            \n                                    Readonly\n                                cardOperationsUrl\n                            \n                            \n                                    Readonly\n                                cardsUrl\n                            \n                            \n                                    Readonly\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchArchivedCards\n                            \n                            \n                                fetchCardOperation\n                            \n                            \n                                getCardOperation\n                            \n                            \n                                loadArchivedCard\n                            \n                            \n                                loadCard\n                            \n                            \n                                unsubscribeCardOperation\n                            \n                            \n                                    Public\n                                updateCardSubscriptionWithDates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authenticationService: AuthenticationService, guidService: GuidService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        guidService\n                                                  \n                                                        \n                                                                        GuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchArchivedCards\n                        \n                        \n                    \n                \n            \n            \n                \nfetchArchivedCards(filters: Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCardOperation(eventSource: EventSourcePolyfill)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventSource\n                                    \n                                            EventSourcePolyfill\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \ngetCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadArchivedCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadArchivedCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCard\n                        \n                        \n                    \n                \n            \n            \n                \nloadCard(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribeCardOperation\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribeCardOperation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCardSubscriptionWithDates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/card.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeStart\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeEnd\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            archivesUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardOperationsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, of, Subject} from 'rxjs';\nimport {CardOperation} from '@ofModel/card-operation.model';\nimport {EventSourcePolyfill} from 'ng-event-source';\nimport {AuthenticationService} from './authentication.service';\nimport {Card} from \"@ofModel/card.model\";\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {forEach} from \"@angular/router/src/utils/collection\";\n\n@Injectable()\nexport class CardService {\n    readonly unsubscribe$ = new Subject();\n    readonly cardOperationsUrl: string;\n    readonly cardsUrl: string;\n    readonly archivesUrl: string;\n\n\n    constructor(private httpClient:HttpClient, private authenticationService: AuthenticationService,private guidService: GuidService) {\n        const clientId = this.guidService.getCurrentGuidString();\n        this.cardOperationsUrl = `${environment.urls.cards}/cardSubscription?clientId=${clientId}`;\n        this.cardsUrl = `${environment.urls.cards}/cards`;\n        this.archivesUrl = `${environment.urls.cards}/archives`;\n    }\n\n    loadCard(id: string): Observable {\n        return this.httpClient.get(`${this.cardsUrl}/${id}`);\n    }\n\n    getCardOperation(): Observable {\n        let minus2Hour = new Date(new Date().valueOf()-2*60*60*1000);\n        let plus48Hours = new Date(minus2Hour.valueOf()+48*60*60*1000);\n        //security header needed here as SSE request are not intercepted by our header interceptor\n        return this.fetchCardOperation(new EventSourcePolyfill(\n            `${this.cardOperationsUrl}&notification=true&rangeStart=${minus2Hour.valueOf()}&rangeEnd=${plus48Hours.valueOf()}`\n            , {headers: AuthenticationService.getSecurityHeader(),\n                heartbeatTimeout: 600000}));\n    }\n\n    unsubscribeCardOperation(){\n        this.unsubscribe$.next();\n    }\n\n    fetchCardOperation(eventSource: EventSourcePolyfill): Observable {\n        return Observable.create(observer => {\n            try {\n                eventSource.onmessage = message => {\n                    if (!message) {\n                        return observer.error(message);\n                    }\n                    return observer.next(JSON.parse(message.data,CardOperation.convertTypeIntoEnum));\n                };\n                eventSource.onerror = error => {\n                    console.error(`error occurred from ES: ${error.toString()}`)\n                }\n\n            } catch (error) {\n                return observer.error(error);\n            }\n            return () => {\n                if (eventSource && eventSource.readyState !== eventSource.CLOSED) {\n                    eventSource.close();\n                }\n            };\n        })\n    }\n\n    public updateCardSubscriptionWithDates(rangeStart:number,rangeEnd:number):Observable{\n        return this.httpClient.post(\n            `${this.cardOperationsUrl}`,\n            {rangeStart:rangeStart,rangeEnd: rangeEnd});\n    }\n\n    loadArchivedCard(id: string): Observable {\n        return this.httpClient.get(`${this.archivesUrl}/${id}`);\n    }\n\n    fetchArchivedCards(filters: Map):Observable {\n\n        let params = new HttpParams();\n\n        filters.forEach((values, key) => {\n            values.forEach(\n                value => {\n                    params = params.append(key,value);\n                }\n            );\n        }\n        );\n\n        console.log(\"Send request \");\n\n        return this.httpClient.get(`${this.archivesUrl}/`,{params: params});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardState.html":{"url":"interfaces/CardState.html","title":"interface - CardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/card.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:         Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\n\nexport interface CardState{\n    selected: Card,\n    loading: boolean,\n    error: string\n}\n\nexport const cardInitialState: CardState = {\n    selected: null,\n    loading: false,\n    error: null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_imports\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/cards/cards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HandlebarsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/cards.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from \"./components/card/card.component\";\nimport {CardDetailsComponent} from \"./components/card-details/card-details.component\";\nimport {DetailsComponent} from \"./components/details/details.component\";\nimport {DetailComponent} from \"./components/detail/detail.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ThirdsService} from \"../../services/thirds.service\";\nimport {HandlebarsService} from \"./services/handlebars.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\n\n@NgModule({\n  declarations: [CardComponent, CardDetailsComponent, DetailsComponent, DetailComponent],\n  imports: [\n    CommonModule,\n      TranslateModule,\n      UtilitiesModule\n  ],\n    exports: [CardComponent, CardDetailsComponent, DetailsComponent, DetailComponent],\n    providers: [HandlebarsService]\n})\nexport class CardsModule {\n    static forRoot(): ModuleWithProviders{\n        return {\n            ngModule: CardsModule,\n            providers: [ThirdsService]\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckAuthenticationStatus.html":{"url":"classes/CheckAuthenticationStatus.html","title":"class - CheckAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckTokenResponse.html":{"url":"classes/CheckTokenResponse.html","title":"class - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class corresponding to the response of the web service checking jwt token when this token is a valid one.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Optional\n                                exp\n                            \n                            \n                                    Public\n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sub?: string, exp?: number, clientId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:303\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sub\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:307\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:306\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:305\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, switchMap, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\nimport {User} from \"@ofModel/user.model\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private userDataUrl = `${environment.urls.users}/users`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError),\n            switchMap((auth)=>this.loadUserData(auth))\n        );\n    }\n\n    public loadUserData(auth:PayloadForSuccessfulAuthentication):Observable {\n        return this.httpClient.get(`${this.userDataUrl}/${auth.identifier}`)\n            .pipe(\n                map(u => {\n                    auth.firstName = u.firstName;\n                    auth.lastName = u.lastName;\n                    return auth;\n                }),\n                catchError(e=>of(auth))\n            );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate)\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        if(!this.delegateUrl)\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        else{\n            window.location.href = `${this.delegateUrl}&redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        }\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCard.html":{"url":"classes/ClearCard.html","title":"class - ClearCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.ClearCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearLightCardSelection.html":{"url":"classes/ClearLightCardSelection.html","title":"class - ClearLightCardSelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearLightCardSelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:70\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.ClearLightCardSelection\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/config.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConfiguration\n                            \n                            \n                                retryConfigurationLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ConfigService, retryDelay: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/config.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryDelay\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConfiguration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:54\n                            \n                        \n\n                \n                    \n                        Manages configuration load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retryConfigurationLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:71\n                            \n                        \n\n                \n                    \n                        Manages load retry upon message\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, delay, filter, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {ConfigService} from '@ofServices/config.service';\nimport {AppState} from \"@ofStore/index\";\nimport {ConfigActionTypes, LoadConfig, LoadConfigFailure, LoadConfigSuccess} from \"@ofActions/config.actions\";\nimport {selectConfigRetry} from \"@ofSelectors/config.selectors\";\nimport {CONFIG_LOAD_MAX_RETRIES} from \"@ofStates/config.state\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class ConfigEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ConfigService,\n                @Inject('configRetryDelay')\n                private retryDelay: number = 5000,\n    ) {\n\n        if (this.retryDelay > 0)\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig()),\n                    delay(this.retryDelay)\n                );\n        else\n            this.retryConfigurationLoading = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig())\n                );\n    }\n\n    /**\n     * Manages configuration load -> service request -> success/message\n     */\n    @Effect()\n    loadConfiguration: Observable = this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * Manages load retry upon message\n     */\n    @Effect()\n    retryConfigurationLoading: Observable;\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nfetchConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/config.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\n\n@Injectable()\nexport class ConfigService {\n    private configUrl: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.configUrl = `${environment.urls.config}`;\n    }\n\n    fetchConfiguration(): Observable {\n        return this.httpClient.get(`${this.configUrl}`)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigState.html":{"url":"interfaces/ConfigState.html","title":"interface - ConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/config.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        retry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retry\n                                    \n                                \n                                \n                                    \n                                        retry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const CONFIG_LOAD_MAX_RETRIES = 5;\n\nexport interface ConfigState{\n    config:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string,\n    retry: number\n}\n\nexport const configInitialState: ConfigState = {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomRouterEffects.html":{"url":"injectables/CustomRouterEffects.html","title":"injectable - CustomRouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomRouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/custom-router.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAwayFromFeed\n                            \n                            \n                                navigateToArchivedCard\n                            \n                            \n                                navigateToCard\n                            \n                            \n                                navigateToMenuURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/custom-router.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateAwayFromFeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToArchivedCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToMenuURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:71\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\nThis will typically be triggered when clicking on a third-party menu link.\nIt then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {\n    ROUTER_NAVIGATED,\n    ROUTER_NAVIGATION,\n    ROUTER_REQUEST,\n    RouterNavigationAction,\n    RouterRequestAction\n} from \"@ngrx/router-store\";\nimport {filter, map, switchMap} from \"rxjs/operators\";\nimport {LoadArchivedCard, LoadCard} from \"@ofActions/card.actions\";\nimport {ClearLightCardSelection, SelectLightCard} from \"@ofActions/light-card.actions\";\nimport {SelectMenuLink} from \"@ofActions/menu.actions\";\nimport {SelectArchivedLightCard} from \"@ofActions/archive.actions\";\n\n@Injectable()\nexport class CustomRouterEffects {\n\n    constructor(private store: Store,\n                private actions$: Actions\n    ) {}\n\n    @Effect()\n    navigateToCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateToArchivedCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/archives/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadArchivedCard({id: routerState.params['cid']}),\n                new SelectArchivedLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    /**\n     * This {Observable} listens for {ROUTER_NAVIGATION} type, filtering only actions navigating to an url containing \"/thirdparty/\".\n     * This will typically be triggered when clicking on a third-party menu link.\n     * It then fires a {SelectMenuLink} action containing the route parameters (identifying the third-party menu entry that was clicked) as payload.\n\n     * @name navigateToMenuURL\n     */\n    @Effect()\n    navigateToMenuURL: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new SelectMenuLink({menu_id: routerState.params['menu_id'], menu_version: routerState.params['menu_version'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateAwayFromFeed: Observable = this.actions$.pipe(\n        ofType(ROUTER_REQUEST),\n        filter((action: RouterRequestAction, index)=> {\n            return (action.payload.routerState.url.indexOf(\"/feed/cards/\")>=0) && (action.payload.event.url.indexOf(\"/feed/\") new ClearLightCardSelection())\n    )\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractParams\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractParams(state: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Params\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/states/router.state.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titlePosition: TitlePosition, title: I18n, titleStyle: string, templateName: string, styles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titlePosition\n                                                  \n                                                        \n                                                                        TitlePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleStyle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _htmlContent\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Readonly\n                                hrefsOfCssLink\n                            \n                            \n                                    Private\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAction\n                            \n                            \n                                bindActions\n                            \n                            \n                                    Private\n                                initializeHandlebarsTemplates\n                            \n                            \n                                    Private\n                                initializeHrefsOfCssLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reinsertScripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                detail\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    htmlContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, thirds: ThirdsService, handlebars: HandlebarsService, sanitizer: DomSanitizer, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/detail/detail.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handlebars\n                                                  \n                                                        \n                                                                        HandlebarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        detail\n                    \n                \n                \n                    \n                        Type :         Detail\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attachAction\n                        \n                        \n                    \n                \n            \n            \n                \nattachAction(button: HTMLButtonElement, action: Action, actionId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            HTMLButtonElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bindActions\n                        \n                        \n                    \n                \n            \n            \n                \nbindActions(third: Third)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    third\n                                    \n                                                Third\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHandlebarsTemplates\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHandlebarsTemplates()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initializeHrefsOfCssLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeHrefsOfCssLink()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reinsertScripts\n                        \n                        \n                    \n                \n            \n            \n                \nreinsertScripts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/detail/detail.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hrefsOfCssLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n\n                \n                    \n                        gethtmlContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {ThirdsService} from \"../../../../services/thirds.service\";\nimport {HandlebarsService} from \"../../services/handlebars.service\";\nimport {DomSanitizer, SafeHtml, SafeResourceUrl} from \"@angular/platform-browser\";\nimport {Action, Third} from \"@ofModel/thirds.model\";\nimport {zip} from \"rxjs\";\nimport {DetailContext} from \"@ofModel/detail-context.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {selectAuthenticationState} from \"@ofSelectors/authentication.selectors\";\nimport {UserContext} from \"@ofModel/user-context.model\";\n\n@Component({\n    selector: 'of-detail',\n    templateUrl: './detail.component.html',\n})\nexport class DetailComponent implements OnInit {\n    public active = false;\n    @Input() detail: Detail;\n    @Input() card: Card;\n    readonly hrefsOfCssLink = new Array();\n    private _htmlContent: SafeHtml;\n    private userContext: UserContext;\n\n    constructor(private element: ElementRef,\n                private thirds: ThirdsService,\n                private handlebars: HandlebarsService,\n                private sanitizer: DomSanitizer,\n                private store: Store) {\n    }\n\n    ngOnInit() {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n        this.store.select(selectAuthenticationState)\n            .subscribe(authState=>{\n                this.userContext = new UserContext(\n                    authState.identifier,\n                    authState.token,\n                    authState.firstName,\n                    authState.lastName\n                )\n            });\n    }\n\n    private initializeHrefsOfCssLink() {\n        if (this.detail && this.detail.styles) {\n            const publisher = this.card.publisher;\n            const publisherVersion = this.card.publisherVersion;\n            this.detail.styles.forEach(style => {\n                const cssUrl = this.thirds.computeThirdCssUrl(publisher, style, publisherVersion);\n                //needed to instantiate href of link for css in component rendering\n                const safeCssUrl = this.sanitizer.bypassSecurityTrustResourceUrl(cssUrl);\n                this.hrefsOfCssLink.push(safeCssUrl);\n\n                console.log(`this is the safe resource Url for css '${safeCssUrl.toString()}' and with local version '${safeCssUrl.toLocaleString()}'`)\n            });\n        }\n    }\n\n    private initializeHandlebarsTemplates() {\n\n        zip(this.thirds.queryThird(this.card.publisher,this.card.publisherVersion),\n        this.handlebars.executeTemplate(this.detail.templateName, new DetailContext(this.card,null)))\n            .subscribe(\n                ([third,html]) => {\n                this._htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n                setTimeout(() => { // wait for DOM rendering\n                    this.reinsertScripts();\n                    this.bindActions(third);\n                });\n            }\n        );\n    }\n\n\n    get htmlContent() {\n        return this._htmlContent;\n    }\n\n    reinsertScripts(): void {\n        const scripts = this.element.nativeElement.getElementsByTagName('script');\n        const scriptsInitialLength = scripts.length;\n        for (let i = 0; i this.element.nativeElement.getElementsByTagName('button');\n\n        for (let button of buttons) {\n            if (button.attributes['action-id']) {\n                const actionId = button.attributes['action-id'].nodeValue;\n                if (actionId) {\n                    const state = third.extractState(this.card);\n                    if(!!state && !!state.actions[actionId])\n                        this.attachAction(button, state.actions[actionId], actionId);\n                }\n            }\n        }\n    }\n\n    attachAction(button: HTMLButtonElement, action: Action, actionId: string) {\n        button.classList.add('btn');\n        if (action.buttonStyle) {\n            for (let c of action.buttonStyle.split(' ')) {\n                button.classList.add(c);\n            }\n        } else {\n            button.classList.add('btn-light');\n        }\n        if (action.contentStyle) {\n            for (let c of action.contentStyle.split(' ')) {\n                button.children[0].classList.add(c);\n            }\n        } else {\n            button.children[0].classList.add('fa', 'fa-warning', 'text-dark');\n        }\n        button.addEventListener('click', (event: Event) => {\n            alert(`${actionId} was triggered.\\nAction handling is not yet implemented`);\n        });\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DetailContext.html":{"url":"classes/DetailContext.html","title":"class - DetailContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DetailContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/detail-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(card: Card, userContext: UserContext)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/detail-context.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                  \n                                                        \n                                                                        Card\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContext\n                                                  \n                                                        \n                                                                        UserContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\nimport {UserContext} from \"@ofModel/user-context.model\";\n\nexport class DetailContext{\n    constructor(readonly card:Card, readonly userContext: UserContext){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/details/details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-details\n            \n\n            \n                styleUrls\n                ./details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectDetail\n                            \n                            \n                                    Private\n                                updateAsync\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/details/details.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :         Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectDetail\n                        \n                        \n                    \n                \n            \n            \n                \nselectDetail(detail: DetailComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    detail\n                                    \n                                                DetailComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/components/details/details.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DetailComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:54\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, Input, OnChanges, QueryList, SimpleChanges} from '@angular/core';\nimport {DetailComponent} from \"../detail/detail.component\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Component({\n    selector: 'of-details',\n    templateUrl: './details.component.html',\n    styleUrls: ['./details.component.scss']\n})\nexport class DetailsComponent implements AfterViewInit, OnChanges {\n\n    @ContentChildren(DetailComponent) details: QueryList;\n    @Input() card: Card;\n    private _i18nPrefix: string;\n\n    constructor() {\n    }\n\n    ngAfterViewInit(): void {\n        this.updateAsync();\n        this.details.changes.subscribe(\n            () => {\n                this.updateAsync();\n            }\n        );\n    }\n\n    private updateAsync() {\n        setTimeout(() => {\n            let activeDetail = this.details.filter((tab) => tab.active)\n            // if there is no active tab set, activate the first\n            if (activeDetail.length === 0) {\n                this.selectDetail(this.details.first);\n            }\n        });\n    }\n\n    selectDetail(detail: DetailComponent) {\n        // deactivate all tabs\n        this.details.toArray().forEach(detail => detail.active = false);\n\n        // activate the tab the user has clicked on.\n        if (detail)\n            detail.active = true;\n    }\n\n    public get i18nPrefix(){\n        return this._i18nPrefix;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(changes['card'].currentValue)\n            this._i18nPrefix = changes['card'].currentValue.publisher+'.'+changes['card'].currentValue.publisherVersion+'.';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      {{i18nPrefix+detailC.detail.title.key}}\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./details.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.calc-height-details {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{i18nPrefix+detailC.detail.title.key}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/app-draggable.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDraggable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dragging\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragEnd\n                            \n                            \n                                dragMove\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                pointerdown\n                            \n                            \n                                pointermove\n                            \n                            \n                                pointerup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragMove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:7\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            pointerdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerdown(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:18\n                \n            \n\n\n            \n                \n                    if drag is true emit drag start event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointermove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointermove(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:28\n                \n            \n\n\n            \n                \n                    if drag is true emit drag move event\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pointerup\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \npointerup(event: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:40\n                \n            \n\n\n            \n                \n                    if drag is true emit drag end event\n\n\n                \n            \n        \n    \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[appDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter();\n  @Output() dragMove = new EventEmitter();\n  @Output() dragEnd = new EventEmitter();\n\n  private dragging = false;\n\n  /**\n   * if drag is true emit drag start event\n   * @param event\n   */\n  @HostListener('pointerdown', ['$event'])\n  onPointerDown(event: PointerEvent): void {\n    this.dragging = true;\n    this.dragStart.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag move event\n   * @param event\n   */\n  @HostListener('pointermove', ['$event'])\n  onPointerMove(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragMove.emit(event);\n  }\n\n  /**\n   * if drag is true emit drag end event\n   * @param event\n   */\n  @HostListener('pointerup', ['$event'])\n  onPointerUp(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n    this.dragging = false;\n    this.dragEnd.emit(event);\n  }\n\n  // Uncomment if you delete the unselection set inside css,\n  // this code will block the movement when u select some text\n  // !!! a little movement still appear !!!\n  /* @HostListener('document:dragstart', ['$event'])\n   onDragEnd(event: DragEvent): void {\n     if (!this.dragging) {\n       return;\n     }\n     this.dragging = false;\n   }*/\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailSettingComponent.html":{"url":"components/EmailSettingComponent.html","title":"component - EmailSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/email-setting/email-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                TextSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-email-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./email-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeTextValidators\n                            \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         TextSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         TextSettingComponent:21\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/email-setting/email-setting.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         TextSettingComponent\n\n                \n            \n            \n                \n                        Defined in         TextSettingComponent:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {TextSettingComponent} from \"../text-setting/text-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-email-setting',\n  templateUrl: './email-setting.component.html'\n})\nexport class EmailSettingComponent extends TextSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    computeTextValidators(){\n      let validators = super.computeTextValidators();\n      validators.push(Validators.email);\n      return validators;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyLightCards.html":{"url":"classes/EmptyLightCards.html","title":"class - EmptyLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.EmptyLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FailToUpdateTimeReference.html":{"url":"classes/FailToUpdateTimeReference.html","title":"class - FailToUpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FailToUpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Notify that something went wrong while changing the virtual time.\nNothing has been done and an error is reported\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.FailToUpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-cards\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideTimeLine\n                            \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/feed.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/feed.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideTimeLine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport {catchError} from \"rxjs/operators\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\n\n@Component({\n    selector: 'of-cards',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, AfterViewInit {\n\n    lightCards$: Observable;\n    selection$: Observable;\n    hideTimeLine: boolean;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFilteredFeed),\n            catchError(err => of([]))\n        );\n        this.selection$ = this.store.select(feedSelectors.selectLightCardSelection);\n        this.store.select(buildConfigSelector('feed.timeline.hide'))\n            .subscribe(v=>this.hideTimeLine = v);\n    }\n\n\n    ngAfterViewInit() {\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedFiltersEffects.html":{"url":"injectables/FeedFiltersEffects.html","title":"injectable - FeedFiltersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedFiltersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/feed-filters.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                elapsedSoFar\n                            \n                            \n                                    Private\n                                followClockTick\n                            \n                            \n                                initTagFilterOnLoadedSettings\n                            \n                            \n                                loadFeedFilterOnAuthenticationSuccess\n                            \n                            \n                                    Private\n                                refreshThreshold\n                            \n                            \n                                updateFilterOnClockTick\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/feed-filters.effects.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elapsedSoFar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            followClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTagFilterOnLoadedSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            refreshThreshold\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateFilterOnClockTick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:75\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable} from 'rxjs';\nimport {filter, map, withLatestFrom} from 'rxjs/operators';\nimport {AuthenticationActionTypes} from '@ofActions/authentication.actions';\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FilterService, FilterType} from \"@ofServices/filter.service\";\nimport {ApplyFilter, InitFilters} from \"@ofActions/feed.actions\";\nimport {LoadSettingsSuccess, SettingsActionTypes} from \"@ofActions/settings.actions\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {Tick, TimeActionTypes} from \"@ofActions/time.actions\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\n\n@Injectable()\nexport class FeedFiltersEffects {\n\n    private followClockTick = false;\n\n    //Constants used by the updateFilterOnClockTick effect if the feed.timeFilter.followClockTick property is set to true\n    private elapsedSoFar = 0;\n    /*The time filter should only be refreshed once the accumulated shift in time is 1m\n    (since the time filter component only displays the time up to minutes)*/\n    private refreshThreshold = 60000;\n\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: FilterService) {\n\n        this.store.select(buildConfigSelector('feed.timeFilter.followClockTick')).subscribe(x => this.followClockTick = x);\n\n    }\n\n    @Effect()\n    loadFeedFilterOnAuthenticationSuccess: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            // tap(v=>console.log(\"loadFeedFilterOnAuthenticationSuccess: action start\", v)),\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters()});\n            }));\n\n    @Effect()\n    initTagFilterOnLoadedSettings: Observable = this.actions$\n        .pipe(\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: action start\", v)),\n            ofType(SettingsActionTypes.LoadSettingsSuccess),\n            withLatestFrom(this.store.select(buildConfigSelector('settings.defaultTags'))),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: latest config\", v)),\n            map(([action,configTags])=>{\n                if(action.payload.settings.defaultTags && action.payload.settings.defaultTags.length>0)\n                    return action.payload.settings.defaultTags;\n                else if (configTags && configTags.length > 0)\n                    return configTags;\n                return null;\n            }),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped tag array\", v)),\n            filter(v=>!!v),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: filtered empty array\", v)),\n            map(v=>new ApplyFilter({name:FilterType.TAG_FILTER,active:true,status:{tags:v}})),\n            // tap(v=>console.log(\"initTagFilterOnLoadedSettings: mapped action\", v))\n        );\n\n    @Effect()\n    updateFilterOnClockTick: Observable = this.actions$\n        .pipe(\n            filter(x => this.followClockTick),\n            ofType(TimeActionTypes.Tick),\n            map( tick => {\n                const newElapsedSoFar = this.elapsedSoFar+tick.payload.elapsedSinceLast;\n                if(newElapsedSoFar>=this.refreshThreshold){\n                    this.elapsedSoFar = newElapsedSoFar - this.refreshThreshold;\n                    return this.refreshThreshold;\n                } else {\n                    this.elapsedSoFar = newElapsedSoFar;\n                    return newElapsedSoFar;\n                }\n            }),\n            filter(time => (time >= this.refreshThreshold)), //Only emit accumulation values that are above the threshold\n            withLatestFrom(this.store.select(buildFilterSelector(FilterType.TIME_FILTER))),\n            filter(([elapsedSinceLast, currentTimeFilter]) => (currentTimeFilter.active && (!!currentTimeFilter.status.start || !!currentTimeFilter.status.end))),\n            //updates should only be sent if the filter is active and if there is something to shift (start or end)\n            map(([elapsedSinceLast, currentTimeFilter]) => {\n                const start = currentTimeFilter.status.start == null ? null : currentTimeFilter.status.start + elapsedSinceLast;\n                const end = currentTimeFilter.status.end == null ? null : currentTimeFilter.status.end + elapsedSinceLast;\n                return new ApplyFilter({\n                    name: FilterType.TIME_FILTER,\n                    active: true,\n                    status: {\n                        start: start,\n                        end: end,\n                    }\n                })\n            }))\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\n\nCardListComponent\n\nCardListComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardListComponent\n                        \n                        \n                            CustomTimelineChartComponent\n                        \n                        \n                            DraggableDirective\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InitChartComponent\n                        \n                        \n                            MouseWheelDirective\n                        \n                        \n                            NoSelectionComponent\n                        \n                        \n                            TagsFilterComponent\n                        \n                        \n                            TimeFilterComponent\n                        \n                        \n                            TimeLineComponent\n                        \n                        \n                            TypeFilterComponent\n                        \n                        \n                            XAxisTickFormatPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            FeedRoutingModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardListComponent} from './components/card-list/card-list.component';\nimport {FeedComponent} from './feed.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FeedRoutingModule} from \"./feed-routing.module\";\nimport {NoSelectionComponent} from './components/no-selection/no-selection.component';\nimport {TimeLineComponent} from './components/time-line/time-line.component';\nimport {CardsModule} from \"../cards/cards.module\";\nimport {FiltersComponent} from './components/card-list/filters/filters.component';\nimport {TypeFilterComponent} from './components/card-list/filters/type-filter/type-filter.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TimeFilterComponent} from './components/card-list/filters/time-filter/time-filter.component';\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons\";\nimport {ChartCommonModule, NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CustomTimelineChartComponent} from \"./components/custom-timeline-chart/custom-timeline-chart.component\";\nimport {XAxisTickFormatPipe} from \"./components/time-line/x-axis-tick-format.pipe\";\nimport {MouseWheelDirective} from \"./components/time-line/mouse-wheel.directive\";\nimport {DraggableDirective} from \"./components/time-line/app-draggable\";\nimport {InitChartComponent} from \"./components/init-chart/init-chart.component\";\nimport {TagsFilterComponent} from './components/card-list/filters/tags-filter/tags-filter.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\n\nlibrary.add(faClock);\n\n@NgModule({\n    imports: [\n        TypeaheadModule,\n        CommonModule,\n        FormsModule,\n        NgxChartsModule,\n        ChartCommonModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgbModule.forRoot(),\n        CardsModule,\n        FeedRoutingModule,\n        FontAwesomeModule,\n        UtilitiesModule\n    ],\n    declarations: [CardListComponent, FeedComponent, NoSelectionComponent, TimeLineComponent, FiltersComponent, TypeFilterComponent, TimeFilterComponent,\n        InitChartComponent,\n        CustomTimelineChartComponent,\n        DraggableDirective,\n        MouseWheelDirective,\n        XAxisTickFormatPipe,\n        TagsFilterComponent],\n    exports: [FeedComponent],\n    providers: [ {provide: TimeService, useClass: TimeService}]\n})\nexport class FeedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {FeedComponent} from \"./feed.component\";\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedComponent,\n        // canActivate: [AuthenticationGuard],\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n            ]\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/feed-filter.model.ts\n        \n\n            \n                Description\n            \n            \n                A Filter gather both the feed filtering behaviour and the filter status for\nfiltering parametrization and component state\nThe function property funktion takes two arguments :\n\ncard: the card for which to evaluate filter\nstatus: the status of the current filter\n\nBeware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\nin Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\nfunktion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                chainFilter\n                            \n                            \n                                    Static\n                                chainFilter\n                            \n                            \n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(funktion: (undefined,undefined) => void, active: boolean, status: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/feed-filter.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        funktion\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(card: LightCard)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:43\n                \n            \n\n\n            \n                \n                    apply the filter to the card, returns true if the card passes the filter, false otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \nchainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:56\n                \n            \n\n\n            \n                \n                    Apply this filter to a card, then a chain of filter recursively.\nThe recursion stops when the card is filtered out\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            chainFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    chainFilter(card: LightCard, next: Filter[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:67\n                \n            \n\n\n            \n                \n                    Sequentially applies a chain of filters to a card\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                LightCard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Filter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/feed-filter.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Filter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\n/**\n * A Filter gather both the feed filtering behaviour and the filter status for\n * filtering parametrization and component state\n *\n * The function property funktion takes two arguments :\n *  * card: the card for which to evaluate filter\n *  * status: the status of the current filter\n *\n * Beware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\n * in Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\n * funktion\n */\nexport class Filter {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly funktion: (LightCard,any) => boolean,\n        public active:boolean,\n        public status: any\n    ) {\n    }\n\n    clone():Filter {\n        return new Filter(\n            this.funktion,\n            this.active,\n            this.status);\n    }\n\n    /**\n     * apply the filter to the card, returns true if the card passes the filter, false otherwise\n     * @param card\n     */\n    applyFilter(card: LightCard):boolean{\n        if(this.active){\n            return this.funktion(card,this.status);\n        }\n        return true;\n    }\n\n    /**\n     * Apply this filter to a card, then a chain of filter recursively.\n     * The recursion stops when the card is filtered out\n     * @param card\n     * @param next\n     */\n    chainFilter(card: LightCard, next: Filter[]){\n        if(this.applyFilter(card))\n            return !next || next.length == 0 || next[0].chainFilter(card,next.slice(1));\n        return false\n    }\n\n    /**\n     * Sequentially applies a chain of filters to a card\n     * @param card\n     * @param next\n     */\n    static chainFilter(card: LightCard, next: Filter[]){\n        return !next||next.length == 0 || next[0].chainFilter(card,next.slice(1));\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _defaultFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultFilters\n                            \n                            \n                                    Private\n                                initFilters\n                            \n                            \n                                    Private\n                                initRecipientFilter\n                            \n                            \n                                    Private\n                                initTagFilter\n                            \n                            \n                                    Private\n                                initTimeFilter\n                            \n                            \n                                    Private\n                                initTypeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter.service.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFilters()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Map\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initRecipientFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initRecipientFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTagFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTagFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTimeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTimeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initTypeFilter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initTypeFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filter.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {LightCard, Severity} from \"@ofModel/light-card.model\";\nimport * as _ from \"lodash\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterService {\n\n    private _defaultFilters = new Map();\n\n    constructor() {\n        this._defaultFilters = this.initFilters();\n    }\n\n    public defaultFilters(): Map {\n        return this._defaultFilters;\n    }\n\n\n    private initTypeFilter() {\n        const alarm = Severity.ALARM;\n        const action = Severity.ACTION;\n        const question = Severity.QUESTION;\n        const notification = Severity.NOTIFICATION;\n        return new Filter(\n            (card, status) => {\n                const result =\n                    status.alarm && card.severity == alarm ||\n                    status.action && card.severity == action ||\n                    status.question && card.severity == question ||\n                    status.notification && card.severity == notification;\n                return result;\n            },\n            true,\n            {\n                alarm: true,\n                action: true,\n                question: true,\n                notification: true\n            }\n        );\n    }\n\n    private initTagFilter() {\n        return new Filter(\n            (card, status) => _.intersection(card.tags,status.tags).length > 0,\n            false,\n            {tags:[]}\n        );\n    }\n\n    private initRecipientFilter() {\n        return new Filter(\n            (card, status) => false,\n            false,\n            {}\n        );\n    }\n\n    private initTimeFilter() {\n        return new Filter(\n            (card:LightCard, status) => {\n                if (!!status.start && !!status.end) {\n                    if (!card.endDate)\n                        return card.startDate  {\n        const filters = new Map();\n        filters.set(FilterType.TYPE_FILTER, this.initTypeFilter());\n        // filters.set(FilterType.RECIPIENT_FILTER, this.initRecipientFilter());\n        filters.set(FilterType.TIME_FILTER, this.initTimeFilter());\n        filters.set(FilterType.TAG_FILTER, this.initTagFilter());\n        return filters;\n    }\n}\n\nexport enum FilterType {\n    TYPE_FILTER,\n    RECIPIENT_FILTER,\n    TAG_FILTER,\n    TIME_FILTER,\n    TEST_FILTER\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidService.html":{"url":"classes/GuidService.html","title":"class - GuidService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guid.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                guid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentGuid\n                            \n                            \n                                getCurrentGuidString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            guid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Guid\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentGuidString\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentGuidString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/guid.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Inject} from \"@angular/core\";\nimport {Guid} from \"guid-typescript\";\n\n@Inject({\n    providedIn: 'root'\n})\nexport class GuidService {\n\n    private readonly guid: Guid;\n\n    constructor() {\n        this.guid = Guid.create();\n    }\n\n    getCurrentGuid(): Guid {\n        return this.guid;\n    }\n\n    getCurrentGuidString():string{\n        return this.getCurrentGuid().toString();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError.html":{"url":"classes/HandleUnexpectedError.html","title":"class - HandleUnexpectedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {LightCardActionTypes} from \"@ofActions/light-card.actions\";\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{filterPath: string, filterValues: string[]}){}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    /* istanbul ignore next */\n    constructor(public payload:{params: Map}){}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload:{lightCards: LightCard[]}){}\n}\n\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\n\n\n\nexport type ArchiveActions =\n    UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    |SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-1.html":{"url":"classes/HandleUnexpectedError-1.html","title":"class - HandleUnexpectedError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-2.html":{"url":"classes/HandleUnexpectedError-2.html","title":"class - HandleUnexpectedError-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-3.html":{"url":"classes/HandleUnexpectedError-3.html","title":"class - HandleUnexpectedError-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-4.html":{"url":"classes/HandleUnexpectedError-4.html","title":"class - HandleUnexpectedError-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-5.html":{"url":"classes/HandleUnexpectedError-5.html","title":"class - HandleUnexpectedError-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:64\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarsService.html":{"url":"injectables/HandlebarsService.html","title":"injectable - HandlebarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/cards/services/handlebars.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                templateCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                executeTemplate\n                            \n                            \n                                    Private\n                                queryTemplate\n                            \n                            \n                                    Private\n                                registerArrayAtIndex\n                            \n                            \n                                    Private\n                                registerArrayAtIndexLength\n                            \n                            \n                                    Private\n                                registerBool\n                            \n                            \n                                    Private\n                                registerCardAction\n                            \n                            \n                                    Private\n                                registerDateFormat\n                            \n                            \n                                    Private\n                                registerI18n\n                            \n                            \n                                    Private\n                                registerMath\n                            \n                            \n                                    Private\n                                registerNow\n                            \n                            \n                                    Private\n                                registerNumberFormat\n                            \n                            \n                                    Private\n                                registerPreserveSpace\n                            \n                            \n                                    Private\n                                registerSlice\n                            \n                            \n                                    Private\n                                registerSort\n                            \n                            \n                                    Private\n                                registerSplit\n                            \n                            \n                                    Private\n                                registerSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: TimeService, translate: TranslateService, thirds: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/services/handlebars.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            executeTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeTemplate(templateName: string, context: DetailContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                DetailContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            queryTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    queryTemplate(publisher: string, version: string, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerArrayAtIndexLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerArrayAtIndexLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerBool\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerBool()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerCardAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerCardAction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerDateFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerDateFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerI18n()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerMath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerMath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNow\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerNumberFormat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerNumberFormat()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerPreserveSpace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerPreserveSpace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSlice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSlice()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSort()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSplit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSplit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            registerSvg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerSvg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/cards/services/handlebars.service.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Card} from \"@ofModel/card.model\";\nimport * as Handlebars from \"handlebars/dist/handlebars.js\"\nimport {TimeService} from \"@ofServices/time.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport * as moment from 'moment';\nimport {Map} from \"@ofModel/map\";\nimport {Observable, of} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport {ThirdsService} from \"../../../services/thirds.service\";\nimport {Guid} from \"guid-typescript\";\nimport {DetailContext} from \"@ofModel/detail-context.model\";\n\n@Injectable()\nexport class HandlebarsService {\n\n    private templateCache:Map = new Map();\n\n    constructor(private time:TimeService,\n                private translate: TranslateService,\n                private thirds: ThirdsService){\n        this.registerPreserveSpace();\n        this.registerNumberFormat();\n        this.registerDateFormat();\n        this.registerCardAction();\n        this.registerSvg();\n        this.registerI18n();\n        this.registerSort();\n        this.registerSlice();\n        this.registerArrayAtIndex();\n        this.registerMath();\n        this.registerSplit();\n        this.registerArrayAtIndexLength();\n        this.registerBool();\n        this.registerNow();\n    }\n\n    public executeTemplate(templateName: string, context: DetailContext):Observable {\n        return this.queryTemplate(context.card.publisher,context.card.publisherVersion,templateName).pipe(\n            map(t=>t(context)));\n    }\n\n    private queryTemplate(publisher:string, version:string, name: string):Observable {\n        const locale = this.translate.getBrowserLang();\n        const key = `${publisher}.${version}.${name}.${locale}`;\n        let template = this.templateCache[key];\n        if(template){\n           return of(template);\n        }\n        return this.thirds.fetchHbsTemplate(publisher,version,name,locale).pipe(\n            map(s=>Handlebars.compile(s)),\n            tap(t=>this.templateCache[key]=t)\n        );\n    }\n\n    private registerBool() {\n        Handlebars.registerHelper('bool', function (v1, operator, v2, options) {\n            switch (operator) {\n                case '==':\n                    return (v1 == v2);\n                case '===':\n                    return (v1 === v2);\n                case '!=':\n                    return (v1 != v2);\n                case '!==':\n                    return (v1 !== v2);\n                case '':\n                    return (v1 > v2);\n                case '>=':\n                    return (v1 >= v2);\n                case '&&':\n                    return (v1 && v2);\n                case '||':\n                    return (v1 || v2);\n                default:\n                    return true;\n            }\n        });\n    }\n\n    private registerArrayAtIndexLength() {\n        Handlebars.registerHelper('arrayAtIndexLength', function (value, index, options) {\n            return value[index].length;\n        });\n    }\n\n    private registerSplit() {\n        Handlebars.registerHelper('split', function (...args: any[]) {\n            if(args.length === 3)\n                return args[0].split(args[1]);\n            if(args.length === 4)\n                return args[0].split(args[1])[args[2]];\n        });\n    }\n\n    private registerMath(){\n        Handlebars.registerHelper(\"math\", function(lvalue, operator, rvalue, options) {\n            let result;\n            switch(operator) {\n                case \"+\": result = lvalue + rvalue; break;\n                case \"-\": result = lvalue - rvalue; break;\n                case \"*\": result = lvalue * rvalue; break;\n                case \"/\": result = lvalue / rvalue; break;\n                case \"%\": result = lvalue % rvalue; break;\n            }\n            return result;\n        });\n    }\n\n    private registerArrayAtIndex() {\n        Handlebars.registerHelper('arrayAtIndex', function (value, index, options) {\n            return value[index];\n        });\n    }\n\n    private registerSlice() {\n        Handlebars.registerHelper('slice', function () {\n            let args = [];\n            for (let index = 0; index =3) {\n                to = args[2];\n                return value.slice(from, to);\n            }\n            return value.slice(from);\n        });\n    }\n\n    private registerSort() {\n        Handlebars.registerHelper('sort', function () {\n            let args = [];\n            for (let index = 0; index  {\n            let args = [],\n                options = fctArgs[fctArgs.length - 1];\n            for (let i = 0; i \n                    document.getElementById('${svgUid}').addEventListener('load', function(){\n                            svgPanZoom(document.getElementById('${svgUid}'));});\n                    `\n        });\n    }\n\n    private registerCardAction() {\n        Handlebars.registerHelper('action', function () {\n            let args = [];\n            for (let i = 0; i `\n        });\n    }\n\n    private registerDateFormat() {\n        Handlebars.registerHelper('dateFormat', (value, options) => {\n            const m = moment(new Date(value));\n            m.locale(this.translate.getBrowserLang());\n            return m.format(options.hash.format);\n        });\n    }\n\n    private registerNumberFormat() {\n        Handlebars.registerHelper('numberFormat', (value, options) => {\n            const formatter = new Intl.NumberFormat(this.translate.getBrowserLang(), options.hash);\n            return formatter.format(value);\n        });\n    }\n\n    private registerNow() {\n        const that = this;\n        Handlebars.registerHelper('now', function (options) {\n            return that.time.currentTime().valueOf();\n        })\n    }\n\n    private registerPreserveSpace() {\n        Handlebars.registerHelper(\"preserveSpace\", function (value, options) {\n            return value.replace(/ /g, '\\u00A0')\n        });\n    }\n}\n\nfunction sortOnKey(key){\n    return function(a,b){\n        if(typeof  a[key] == 'string' && typeof b[key] == 'string'){\n            if(a[key]b[key])\n                return 1\n            return 0;\n        }else if(typeof  a[key] == 'number' && typeof b[key] == 'number'){\n            return a[key]-b[key];\n        }\n        return 0;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/I18n.html":{"url":"classes/I18n.html","title":"class - I18n","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/i18n.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, parameters?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/i18n.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport class I18n {\n    /* istanbul ignore next */\n    constructor(\n        readonly key: string,\n        readonly parameters?: Map) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/I18nService.html":{"url":"injectables/I18nService.html","title":"injectable - I18nService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  I18nService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/i18n.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _locale\n                            \n                            \n                                    Private\n                                _timeZone\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLocale\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    locale\n                                \n                                \n                                    timeZone\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/i18n.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLocale(locale: string, timeZone: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/i18n.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeZone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _timeZone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/i18n.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        locale\n                    \n                \n\n                \n                    \n                        getlocale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        timeZone\n                    \n                \n\n                \n                    \n                        gettimeZone()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/i18n.service.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as moment from 'moment-timezone';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {combineLatest} from \"rxjs\";\n\n@Injectable()\nexport class I18nService {\n\n    private _locale:string;\n    private _timeZone:string;\n\n    constructor(private translate: TranslateService,private store: Store) {\n        combineLatest(\n        this.store.select(buildSettingsOrConfigSelector('locale')),\n        this.store.select(buildSettingsOrConfigSelector('timeZone' )))\n\n            .subscribe(([locale,timeZone]) =>this.changeLocale(locale, timeZone));\n    }\n\n    public changeLocale(locale:string, timeZone: string){\n        if(locale) {\n            this._locale = locale;\n        }else{\n            this._locale = this.translate.getBrowserLang();\n        }\n        moment.locale(this._locale);\n        this.translate.use(this._locale);\n        if(timeZone) {\n            this._timeZone = timeZone;\n        }else{\n            timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        moment.tz.setDefault(timeZone);\n    }\n\n    public get locale(){\n        return this._locale;\n    }\n\n    public get timeZone(){\n        return this._timeZone;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/icon/icon.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconPath\n                            \n                            \n                                size\n                            \n                            \n                                sprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                big\n                            \n                            \n                                dark\n                            \n                            \n                                icon\n                            \n                            \n                                light\n                            \n                            \n                                medium\n                            \n                            \n                                small\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        big\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dark\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        light\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        medium\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        small\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/icon/icon.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sprites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {PlatformLocation} from \"@angular/common\";\n\n@Component({\n  selector: 'of-icon',\n  templateUrl:'icon.component.html',\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon:string;\n  @Input() small:boolean;\n  @Input() medium:boolean;\n  @Input() big:boolean;\n  @Input() dark:boolean;\n  @Input() light:boolean;\n  size:string;\n  sprites:string;\n  iconPath:string;\n  constructor(platformLocation:PlatformLocation) {\n      let baseHref = platformLocation.getBaseHrefFromDOM();\n      this.iconPath = (baseHref?baseHref:'/')+'assets/images/icons/'\n  }\n\n  ngOnInit() {\n    this.big = this.big != undefined;\n    this.medium = this.medium != undefined && !this.big;\n    this.small = this.small != undefined && !this.medium;\n    this.dark = this.dark != undefined;\n    this.light = this.light != undefined && ! this.dark;\n    let size = this.big?'big':this.medium?'medium':'small'\n    switch (size) {\n        case 'big':\n          this.size = '64px';\n          break;\n        case 'medium':\n          this.size = '32px';\n          break;\n         default:\n          this.size = '16px';\n    }\n    if(this.dark||this.light){\n      this.sprites='sprites-mono.svg'\n    }else{\n      this.sprites='sprites.svg'\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n    \n                \n                    icon.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n.dark{\n  fill: $dark;\n}\n.light{\n  fill: $light;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IframeDisplayComponent.html":{"url":"components/IframeDisplayComponent.html","title":"component - IframeDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IframeDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/thirdparty/iframedisplay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-iframedisplay\n            \n\n            \n                styleUrls\n                ./iframedisplay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./iframedisplay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _selectedIframeURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selectedIframeURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframedisplay.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _selectedIframeURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeUrl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selectedIframeURL\n                    \n                \n\n                \n                    \n                        getselectedIframeURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:35\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {selectMenuStateSelectedIframeURL,} from \"@ofSelectors/menu.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'of-iframedisplay',\n  templateUrl: './iframedisplay.component.html',\n  styleUrls: ['./iframedisplay.component.scss']\n})\nexport class IframeDisplayComponent implements OnInit {\n\n  private _selectedIframeURL: SafeUrl;\n\n  constructor(private store: Store,\n              private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n\n    this.store.select(selectMenuStateSelectedIframeURL).subscribe( iframeURL => {\n      this._selectedIframeURL = this.sanitizer.bypassSecurityTrustResourceUrl(iframeURL);\n    })\n\n  }\n\n  get selectedIframeURL(): SafeUrl {\n    return this._selectedIframeURL;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n    \n\n\n    \n\n    \n                \n                    ./iframedisplay.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IframeDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/info/info.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-info\n            \n\n            \n                styleUrls\n                ./info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _description$\n                            \n                            \n                                    Private\n                                _time$\n                            \n                            \n                                    Private\n                                _userName$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userName$\n                                \n                                \n                                    description$\n                                \n                                \n                                    time$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/info/info.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _description$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _time$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _userName$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/info/info.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userName$\n                    \n                \n\n                \n                    \n                        getuserName$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description$\n                    \n                \n\n                \n                    \n                        getdescription$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        time$\n                    \n                \n\n                \n                    \n                        gettime$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/info/info.component.ts:52\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {selectUserNameOrIdentifier} from \"@ofSelectors/authentication.selectors\";\nimport {combineLatest, Observable} from \"rxjs\";\nimport {buildSettingsSelector} from \"@ofSelectors/settings.selectors\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {map} from \"rxjs/operators\";\nimport * as moment from \"moment\";\nimport {buildSettingsOrConfigSelector} from \"@ofSelectors/settings.x.config.selectors\";\nimport {selectCurrentDate} from \"@ofSelectors/time.selectors\";\n\n@Component({\n    selector: 'of-info',\n    templateUrl: './info.component.html',\n    styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n    private _userName$: Observable;\n    private _description$: Observable;\n    private _time$: Observable\n\n    constructor(private store: Store, private timeService: TimeService) {\n    }\n\n    ngOnInit() {\n        this._userName$ = this.store.select(selectUserNameOrIdentifier);\n        this._description$ = this.store.select(buildSettingsSelector('description'));\n        this._time$ = combineLatest(\n        this.store.select(selectCurrentDate),\n            this.store.select(buildSettingsOrConfigSelector('locale')),\n            this.store.select(buildSettingsOrConfigSelector('timeZone'))\n        ).pipe(\n            map(values => this.timeService.formatTime(moment(values[0])))\n        );\n    }\n    get userName$() {\n        return this._userName$;\n    }\n\n    get description$() {\n        return this._description$;\n    }\n\n    get time$() {\n        return this._time$;\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    {{userName$|async}}\n    {{description$|async}}\n    {{time$|async}}\n\n\n    \n\n    \n                \n                    ./info.component.scss\n                \n                .navbar-info-block {\n  display: inline-block;\n  line-height: 90%;\n\n  > .time {\n    font-size: small;\n  }\n\n  > .user-description {\n    font-size: small;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userName$|async}}    {{description$|async}}    {{time$|async}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAuthStatus.html":{"url":"classes/InitAuthStatus.html","title":"class - InitAuthStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAuthStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.InitAuthStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitFilters.html":{"url":"classes/InitFilters.html","title":"class - InitFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.InitFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitTimeline.html":{"url":"classes/InitTimeline.html","title":"class - InitTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.InitTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Input.html":{"url":"classes/Input.html","title":"class - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: InputType, name: string, label: I18n, value: string, mandatory: boolean, maxLength: number, rows: number, values: ParameterListItem[], selectedValues: string[], unSelectedValues: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        InputType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mandatory\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                        ParameterListItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unSelectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URL\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightCardEffects.html":{"url":"injectables/LightCardEffects.html","title":"injectable - LightCardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightCardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/light-card.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/light-card.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            switchMap((action:LoadLightCardsSuccess)=>\n                    this.thirdService.loadI18nForLightCards(action.payload.lightCards)\n                        .pipe(\n                            tap(test=>console.log(`loaded lightCards:${test}`)),\n                            catchError((err,caught)=>{\n                                console.error(`i18 loading failed for card publishers`);\n                                console.error(err);\n                                return of(false);\n                            })\n                        )),\n            map(\n                ()=>{\n                    return new LoadLightCardsExtendedData();\n                }\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {LightCardActionTypes, LoadLightCardsExtendedData, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {tap} from \"rxjs/internal/operators/tap\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class LightCardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            switchMap((action:LoadLightCardsSuccess)=>\n                    this.thirdService.loadI18nForLightCards(action.payload.lightCards)\n                        .pipe(\n                            tap(test=>console.log(`loaded lightCards:${test}`)),\n                            catchError((err,caught)=>{\n                                console.error(`i18 loading failed for card publishers`);\n                                console.error(err);\n                                return of(false);\n                            })\n                        )),\n            map(\n                ()=>{\n                    return new LoadLightCardsExtendedData();\n                }\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListFilterComponent.html":{"url":"components/ListFilterComponent.html","title":"component - ListFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/components/archive-list/filters/list-filter/list-filter.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseFilterComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-list-filter\n            \n\n            \n                styleUrls\n                ./list-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./list-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                            \n                                    Protected\n                                filter$\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeListValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Private\n                                valueInListValidator\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                values\n                            \n                            \n                                filterPath\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/components/archive-list/filters/list-filter/list-filter.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/list-filter/list-filter.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filterPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFilterComponent:25\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFilterComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFilterComponent:27\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeListValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeListValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/list-filter/list-filter.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/list-filter/list-filter.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/list-filter/list-filter.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/list-filter/list-filter.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/list-filter/list-filter.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            valueInListValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueInListValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/archives/components/archive-list/filters/list-filter/list-filter.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (control: any) => { valueInList: { valid: boolean; }; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFilterComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFilterComponent:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFilterComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFilterComponent:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFilterComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFilterComponent:71\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFilterComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFilterComponent:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFilterComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFilterComponent:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFilterComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFilterComponent:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFilterComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFilterComponent:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFilterComponent\n\n                \n            \n            \n                \n                        Defined in         BaseFilterComponent:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/archives/components/archive-list/filters/list-filter/list-filter.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            filter$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFilterComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFilterComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFilterComponent:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseFilterComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseFilterComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {BaseFilterComponent} from \"../base-filter/base-filter.component\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Observable, of} from \"rxjs\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-list-filter',\n  templateUrl: './list-filter.component.html',\n  styleUrls: ['./list-filter.component.scss']\n})\nexport class ListFilterComponent extends BaseFilterComponent implements OnInit {\n\n  @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n  preparedList: { value: string, label: Observable }[];\n\n  constructor(protected store: Store, private translateService: TranslateService) {\n    super(store);\n  }\n\n  ngOnInit() {\n    this.preparedList = [];\n    if (this.values) {\n      for (let v of this.values) {\n        if (typeof v == 'string') {\n          this.preparedList.push({value: v, label: of(v)});\n        } else if (typeof v.label == 'string') {\n          this.preparedList.push({value: v.value, label: of(v.label)});\n        } else {\n          this.preparedList.push({\n            value: v.value,\n            label: this.translateService.get(v.label.key, v.label.parameters)\n          });\n        }\n      }\n    }\n    super.ngOnInit();\n  }\n\n  initFormGroup() {\n    let validators = this.computeListValidators();\n    validators.push(this.valueInListValidator());\n    return new FormGroup({\n      filter: new FormControl('', validators)\n    }, {updateOn: 'change'});\n  }\n\n  protected computeListValidators() {\n    let validators = [];\n    if (this.requiredField)\n      validators.push(Validators.required);\n    return validators;\n  }\n\n  updateValue(value) {\n    this.form.get('filter').setValue(value?value:'', {emitEvent: false});\n  }\n\n  protected isEqual(formA, formB): boolean {\n    console.log('ListFilterComponent.isEqual called')\n    return formA.filter === formB.filter;\n  }\n\n  private valueInListValidator(){\n    return (control: AbstractControl)=>{\n      if(!!control.value && this.preparedList.map(e=>e.value).indexOf(control.value)\n    \n\n    \n        \n\n\n\n\n\n\n  \n    archive.filters.{{filterPath}}\n    \n      \n      {{v.label|async}}\n    \n    Incorrect submission\n  \n\n\n    \n\n    \n                \n                    ./list-filter.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      archive.filters.{{filterPath}}                {{v.label|async}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListSettingComponent.html":{"url":"components/ListSettingComponent.html","title":"component - ListSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/list-setting/list-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-list-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./list-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                preparedList\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeListValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Private\n                                valueInListValidator\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                values\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        values\n                    \n                \n                \n                    \n                        Type :     (literal type | string)[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeListValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeListValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            valueInListValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    valueInListValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (control: any) => { valueInList: { valid: boolean; }; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preparedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/list-setting/list-setting.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {AbstractControl, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Observable, of} from \"rxjs\";\n\n@Component({\n    selector: 'of-list-setting',\n    templateUrl: './list-setting.component.html'\n})\nexport class ListSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() values: ({ value: string, label: (I18n | string) } | string)[];\n    preparedList: { value: string, label: Observable }[];\n\n    constructor(protected store: Store, private translateService: TranslateService) {\n        super(store);\n    }\n\n    ngOnInit() {\n        this.preparedList = [];\n        if (this.values) {\n            for (let v of this.values) {\n                if (typeof v == 'string') {\n                    this.preparedList.push({value: v, label: of(v)});\n                } else if (typeof v.label == 'string') {\n                    this.preparedList.push({value: v.value, label: of(v.label)});\n                } else {\n                    this.preparedList.push({\n                        value: v.value,\n                        label: this.translateService.get(v.label.key, v.label.parameters)\n                    });\n                }\n            }\n        }\n        super.ngOnInit();\n    }\n\n    initFormGroup() {\n        let validators = this.computeListValidators();\n        validators.push(this.valueInListValidator());\n        return new FormGroup({\n            setting: new FormControl('', validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeListValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value) {\n        this.form.get('setting').setValue(value?value:'', {emitEvent: false});\n    }\n\n    protected isEqual(formA, formB): boolean {\n        console.log('ListSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n    private valueInListValidator(){\n        return (control: AbstractControl)=>{\n            if(!!control.value && this.preparedList.map(e=>e.value).indexOf(control.value)\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n      \n      {{v.label|async}}\n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}                {{v.label|async}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCard.html":{"url":"classes/LoadArchivedCard.html","title":"class - LoadArchivedCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardFailure.html":{"url":"classes/LoadArchivedCardFailure.html","title":"class - LoadArchivedCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadArchivedCardSuccess.html":{"url":"classes/LoadArchivedCardSuccess.html","title":"class - LoadArchivedCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadArchivedCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadArchivedCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCard.html":{"url":"classes/LoadCard.html","title":"class - LoadCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardFailure.html":{"url":"classes/LoadCardFailure.html","title":"class - LoadCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardSuccess.html":{"url":"classes/LoadCardSuccess.html","title":"class - LoadCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    LoadArchivedCard = '[Card] Load Archived Card',\n    LoadArchivedCardSuccess = '[Card] Load Archived Card Success',\n    LoadArchivedCardFailure = '[Card] Load Archived Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class LoadArchivedCard implements Action {\n    readonly type = CardActionTypes.LoadArchivedCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadArchivedCardFailure implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadArchivedCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadArchivedCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | LoadArchivedCard\n    | LoadArchivedCardSuccess\n    | LoadArchivedCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfig.html":{"url":"classes/LoadConfig.html","title":"class - LoadConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfig\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigFailure.html":{"url":"classes/LoadConfigFailure.html","title":"class - LoadConfigFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigSuccess.html":{"url":"classes/LoadConfigSuccess.html","title":"class - LoadConfigSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCards.html":{"url":"classes/LoadLightCards.html","title":"class - LoadLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsExtendedData.html":{"url":"classes/LoadLightCardsExtendedData.html","title":"class - LoadLightCardsExtendedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsExtendedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsExtendedData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsFailure.html":{"url":"classes/LoadLightCardsFailure.html","title":"class - LoadLightCardsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsSuccess.html":{"url":"classes/LoadLightCardsSuccess.html","title":"class - LoadLightCardsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenu.html":{"url":"classes/LoadMenu.html","title":"class - LoadMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuFailure.html":{"url":"classes/LoadMenuFailure.html","title":"class - LoadMenuFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuSuccess.html":{"url":"classes/LoadMenuSuccess.html","title":"class - LoadMenuSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettings.html":{"url":"classes/LoadSettings.html","title":"class - LoadSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsFailure.html":{"url":"classes/LoadSettingsFailure.html","title":"class - LoadSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSettingsSuccess.html":{"url":"classes/LoadSettingsSuccess.html","title":"class - LoadSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.LoadSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-login\n            \n\n\n            \n                styles\n                .btn-primary {margin-right: 8px;}\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeProvider\n                            \n                            \n                                hide\n                            \n                            \n                                loginMessage\n                            \n                            \n                                useCodeFlow$\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeFlow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, service: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            codeFlow\n                        \n                        \n                    \n                \n            \n            \n                \ncodeFlow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetForm\n                        \n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useCodeFlow$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {TryToLogIn} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {filter, map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {selectMessage} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\n\n@Component({\n    selector: 'of-login',\n    templateUrl: './login.component.html',\n    styles: ['.btn-primary {margin-right: 8px;}']\n})\nexport class LoginComponent implements OnInit {\n\n    hide: boolean;\n    userForm: FormGroup;\n    useCodeFlow$: Observable;\n    loginMessage: Message;\n    // codeProvider$: Observable;\n    codeProvider: any;\n    /* istanbul ignore next */\n    constructor( private store: Store, private service: AuthenticationService) {}\n\n    ngOnInit() {\n        this.useCodeFlow$ = this.store.select(buildConfigSelector('security.oauth2.flow.mode'))\n            .pipe(map(flowMode=>flowMode === 'CODE'));\n        this.store.select(selectMessage).pipe(filter(m=>m!=null && m.level==MessageLevel.ERROR))\n            .subscribe(m=>this.loginMessage=m);\n        this.store.select(buildConfigSelector('security.oauth2.flow.provider'))\n            .subscribe(provider=>this.codeProvider={name:provider});\n        this.hide = true;\n        this.userForm = new FormGroup({\n                identifier: new FormControl(''),\n                password: new FormControl('')\n            }\n        );\n    }\n\n    onSubmit(): void {\n        if (this.userForm.valid) {\n            const username = this.userForm.get('identifier').value;\n            const password = this.userForm.get('password').value;\n            this.store.dispatch(new TryToLogIn({username: username, password: password}));\n        }\n    }\n\n    resetForm(): void {\n        this.userForm.reset();\n    }\n\n    codeFlow(): void{\n        this.service.moveToCodeFlowLoginPage();\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n                    login.login\n                    \n                    \n                        login.password\n                        \n                    \n                    \n                        login.submit.password\n                        login.reset\n                    \n                \n                \n                    \n                    login.submit.code\n                    \n                \n            \n            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}\n        \n    \n\n\n    \n\n    \n            .btn-primary {margin-right: 8px;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            login.login                                                                login.password                                                                                        login.submit.password                        login.reset                                                                                            login.submit.code                                                            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/map.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/model/map.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class Map {\n    [key: string]: T;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuEffects.html":{"url":"injectables/MenuEffects.html","title":"injectable - MenuEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/menu.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                resolveThirdPartyLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ThirdsService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/menu.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            switchMap(menu=>zip(of(menu),this.service.loadI18nForMenuEntries(menu)\n                .pipe(\n                    catchError((err,caught)=>{\n                        console.error(err);\n                        return of(false);\n                    })\n                ))),\n            map(array =>\n                new LoadMenuSuccess({menu: array[0]})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveThirdPartyLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:68\n                            \n                        \n\n                \n                    \n                        This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\nIt then tries to get the corresponding menu link from the {ThirdsService}.\nIf successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\nIf not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of, zip} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {\n    LoadMenu,\n    LoadMenuFailure,\n    LoadMenuSuccess,\n    MenuActionTypes,\n    SelectMenuLink,\n    SelectMenuLinkFailure,\n    SelectMenuLinkSuccess\n} from \"@ofActions/menu.actions\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class MenuEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ThirdsService,\n                private router: Router\n    ) {\n    }\n\n    @Effect()\n    load: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action =>  this.service.computeThirdsMenu()),\n            switchMap(menu=>zip(of(menu),this.service.loadI18nForMenuEntries(menu)\n                .pipe(\n                    catchError((err,caught)=>{\n                        console.error(err);\n                        return of(false);\n                    })\n                ))),\n            map(array =>\n                new LoadMenuSuccess({menu: array[0]})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * This {Observable} listens for {MenuActionTypes.SelectMenuLink} type.\n     * It then tries to get the corresponding menu link from the {ThirdsService}.\n     * If successful, it fires a {SelectMenuLinkSuccess} action with the result as payload.\n     * If not, it fires a {SelectMenuLinkFailure} action with the error as payload and navigates back to the index page\n     *\n     * @name resolveThirdPartyLink\n     */\n    @Effect()\n    resolveThirdPartyLink: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.SelectMenuLink),\n            switchMap(action => this.service.queryMenuEntryURL(action.payload.menu_id, action.payload.menu_version, action.payload.menu_entry_id)),\n            map(url =>\n                new SelectMenuLinkSuccess({iframe_url: url})\n            ),\n            catchError(err => {\n                console.error(err);\n                this.router.navigate(['/']); //On error, redirect to index page\n                return of(new SelectMenuLinkFailure(err));\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuState.html":{"url":"interfaces/MenuState.html","title":"interface - MenuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        menu\n                                \n                                \n                                        selected_iframe_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     ThirdMenu[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThirdMenu[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_iframe_url\n                                    \n                                \n                                \n                                    \n                                        selected_iframe_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport interface MenuState{\n    menu: ThirdMenu[],\n    loading: boolean,\n    error:string,\n    selected_iframe_url: string\n}\n\nexport const menuInitialState: MenuState = {\n    menu:[],\n    loading: false,\n    error:null,\n    selected_iframe_url: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/message.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level, i18n?: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/message.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport class Message {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly message: string,\n        readonly level = MessageLevel.DEBUG,\n        readonly i18n?: I18n,\n    ){}\n}\n\nexport enum MessageLevel {\n    ERROR, INFO, DEBUG\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MouseWheelDirective.html":{"url":"directives/MouseWheelDirective.html","title":"directive - MouseWheelDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MouseWheelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/mouse-wheel.directive.ts\n        \n\n            \n                Description\n            \n            \n                Mousewheel directive\nhttps://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMouseWheel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelFunc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelDown\n                            \n                            \n                                mouseWheelUp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                DOMMouseScroll\n                            \n                            \n                                mousewheel\n                            \n                            \n                                onmousewheel\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseWheelDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseWheelUp\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:11\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            DOMMouseScroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nDOMMouseScroll(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:21\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:16\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onmousewheel\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nonmousewheel(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:26\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseWheelFunc\n                        \n                        \n                    \n                \n            \n            \n                \nmouseWheelFunc(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:34\n                \n            \n\n\n            \n                \n                    emit mouse wheel up or down event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, HostListener, Output} from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n * @export\n */\n@Directive({ selector: '[appMouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  /**\n   * emit mouse wheel up or down event\n   * @param event\n   */\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    let delta = 0;\n    delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n    if (delta > 0) {\n      this.mouseWheelUp.emit(event);\n    } else if (delta \n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultiSettingsComponent.html":{"url":"components/MultiSettingsComponent.html","title":"component - MultiSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MultiSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-multi-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./multi-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/multi-settings/multi-settings.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'of-multi-settings',\n  templateUrl: './multi-settings.component.html'\n})\nexport class MultiSettingsComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n      super(store)\n    }\n\n    initFormGroup(){\n        let validators = this.computeMultiValidators();\n        return new FormGroup({\n            setting: new FormControl([],validators)\n        }, {updateOn: 'change'});\n    }\n\n    protected computeMultiValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        return validators;\n    }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  multi-settings works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  multi-settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'MultiSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _thirdMenus\n                            \n                            \n                                currentPath\n                            \n                            \n                                expandedMenu\n                            \n                            \n                                expandedUserMenu\n                            \n                            \n                                navbarCollapsed\n                            \n                            \n                                navigationRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thirdMenus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMenu(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleUserMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _thirdMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedUserMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : navigationRoutes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thirdMenus\n                    \n                \n\n                \n                    \n                        getthirdMenus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/navbar.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {navigationRoutes} from '../../app-routing.module';\nimport {Store} from '@ngrx/store';\nimport {TryToLogOut} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl} from '@ofSelectors/router.selectors';\nimport {LoadMenu} from \"@ofActions/menu.actions\";\nimport {selectMenuStateMenu} from \"@ofSelectors/menu.selectors\";\nimport {Observable} from \"rxjs\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'of-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n    navbarCollapsed = true;\n    navigationRoutes = navigationRoutes;\n    currentPath: string[];\n    private _thirdMenus: Observable;\n    expandedMenu:boolean[]=[];\n    expandedUserMenu=false;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/');\n        });\n        this._thirdMenus=this.store.select(selectMenuStateMenu)\n            .pipe(tap(menus=>{\n                this.expandedMenu=new Array(menus.length);\n                _.fill(this.expandedMenu,false);\n            }));\n        this.store.dispatch(new LoadMenu());\n    }\n\n\n    logOut(){\n        this.store.dispatch(new TryToLogOut());\n    }\n\n    get thirdMenus(){\n        return this._thirdMenus;\n    }\n\n    toggleMenu(index:number){\n        this.expandedMenu[index]=!this.expandedMenu[index];\n        if(this.expandedMenu[index])\n            setTimeout(()=>this.expandedMenu[index]=false,5000);\n    }\n\n    toggleUserMenu(){\n        this.expandedUserMenu=!this.expandedUserMenu;\n        if(this.expandedUserMenu)\n            setTimeout(()=>this.expandedUserMenu=false,5000);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n  \n  \n    \n  \n  \n    \n      \n      \n        {{'menu.'+link.path}}\n      \n      \n      1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">\n        \n        1\"\n                translate\n        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}\n        1\"\n             [ngbCollapse]=\"!expandedMenu[index]\">\n          \n            \n              {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}\n            \n              \n            \n          \n        \n        \n        \n          {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}\n          \n            \n          \n        \n      \n    \n    \n      \n        \n        \n          \n            menu.settings\n          \n          \n            \n              \n                menu.logout&nbsp;\n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n.dropdown-item > .dropdown-item-external-link{\n  color:inherit;\n  padding-left: 0.5rem;\n}\n\n.single-third-menu-entry {\n\n  > .dropdown-item-internal-link{\n    color: inherit;\n    text-decoration: none;\n  }\n\n  > .dropdown-item-external-link{\n    color: inherit;\n    text-decoration: none;\n    padding-left: 0.5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{\\'menu.\\'+link.path}}                  1\" [class.thirds-dropdown]=\"tMenu.entries.length>1\">                1\"                translate        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}        1\"             [ngbCollapse]=\"!expandedMenu[index]\">                                    {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}                                                                                  {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}                                                                                                  menu.settings                                                              menu.logout                                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoSelectionComponent.html":{"url":"components/NoSelectionComponent.html","title":"component - NoSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/no-selection/no-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-no-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./no-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-no-selection',\n  templateUrl: './no-selection.component.html',\n})\nexport class NoSelectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  no-selection works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  no-selection works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterListItem.html":{"url":"classes/ParameterListItem.html","title":"class - ParameterListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, value: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URL\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettings.html":{"url":"classes/PatchSettings.html","title":"class - PatchSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettings\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsFailure.html":{"url":"classes/PatchSettingsFailure.html","title":"class - PatchSettingsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchSettingsSuccess.html":{"url":"classes/PatchSettingsSuccess.html","title":"class - PatchSettingsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchSettingsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/settings.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/settings.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SettingsActionTypes.PatchSettingsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/settings.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum SettingsActionTypes {\n    LoadSettings = '[Settings] Load Settings',\n    LoadSettingsSuccess = '[Settings] Load Settings Success',\n    LoadSettingsFailure = '[Settings] Load Settings Fail',\n\n    PatchSettings = '[Settings] Patch Settings',\n    PatchSettingsSuccess = '[Settings] Patch Settings Success',\n    PatchSettingsFailure = '[Settings] Patch Settings Fail',\n\n    HandleUnexpectedError = '[Settings] Handle unexpected error related to user settings issue'\n}\n// needed by NGRX entities\n\nexport class LoadSettings implements Action {\n    readonly type = SettingsActionTypes.LoadSettings;\n}\nexport class LoadSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.LoadSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class PatchSettings implements Action {\n    readonly type = SettingsActionTypes.PatchSettings;\n    constructor(public payload: {settings:any}){}\n}\nexport class PatchSettingsFailure implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class PatchSettingsSuccess implements Action {\n    readonly type = SettingsActionTypes.PatchSettingsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { settings: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = SettingsActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type SettingsActions =\n    LoadSettings\n    | LoadSettingsSuccess\n    | LoadSettingsFailure\n    | PatchSettings\n    | PatchSettingsSuccess\n    | PatchSettingsFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadForSuccessfulAuthentication.html":{"url":"classes/PayloadForSuccessfulAuthentication.html","title":"class - PayloadForSuccessfulAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadForSuccessfulAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Authentication success payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expirationDate\n                            \n                            \n                                    Public\n                                    Optional\n                                firstName\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                    Optional\n                                lastName\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, clientId: Guid, token: string, expirationDate: Date, firstName?: string, lastName?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Process.html":{"url":"classes/Process.html","title":"class - Process","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Process\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(states?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URL\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectLogIn.html":{"url":"classes/RejectLogIn.html","title":"class - RejectLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store that the authentication is not possible.\nEmmited by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogin;\nCheckAuthentication\nand in the handleRejectedLogin @method called by the ChecAuthentication {Observable}\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information and containing a message about login rejection\nby filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:111\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.RejectLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:111\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveLightCard.html":{"url":"classes/RemoveLightCard.html","title":"class - RemoveLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:104\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.RemoveLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:104\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouterStateUrl.html":{"url":"classes/RouterStateUrl.html","title":"class - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n            \n                Description\n            \n            \n                The RouterStateSerializer takes the current RouterStateSnapshot\nand returns any pertinent information needed. The snapshot contains\nall information about the state of the router at the given point in time.\nThe entire snapshot is complex and not always needed. In this case, you only\nneed the URL and query parameters from the snapshot in the store. Other items could be\nreturned such as route parameters and static route data.\nsource: https://github.com/briebug/ngrx-complex-forms\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, params: Params, queryParams: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/states/router.state.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                        Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectArchivedLightCard.html":{"url":"classes/SelectArchivedLightCard.html","title":"class - SelectArchivedLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectArchivedLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SelectArchivedLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {LightCardActionTypes} from \"@ofActions/light-card.actions\";\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{filterPath: string, filterValues: string[]}){}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    /* istanbul ignore next */\n    constructor(public payload:{params: Map}){}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload:{lightCards: LightCard[]}){}\n}\n\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\n\n\n\nexport type ArchiveActions =\n    UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    |SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectLightCard.html":{"url":"classes/SelectLightCard.html","title":"class - SelectLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.SelectLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:62\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLink.html":{"url":"classes/SelectMenuLink.html","title":"class - SelectMenuLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\nPayload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\nEmitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLink\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkFailure.html":{"url":"classes/SelectMenuLinkFailure.html","title":"class - SelectMenuLinkFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the error\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:81\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectMenuLinkSuccess.html":{"url":"classes/SelectMenuLinkSuccess.html","title":"class - SelectMenuLinkSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectMenuLinkSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\nPayload contains the computed url\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.SelectMenuLinkSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    SelectMenuLink = '[Menu] Select Menu Link',\n    SelectMenuLinkSuccess = '[Menu] Select Menu Link Success',\n    SelectMenuLinkFailure = '[Menu] Select Menu Link Failure',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action triggered by navigation to /thirparty/*** (for example by clicking on a third-party menu link)\n * Payload contains route parameters identifying the clicked menu entry (menu id, menu version and menu entry id)\n * Emitted by {CustomRouterEffects} in the following {Observable} @member: navigateToMenuURL\n */\nexport class SelectMenuLink implements Action {\n    readonly type = MenuActionTypes.SelectMenuLink;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_version: string, menu_entry_id: string}) {}\n}\n\n/**\n * Action triggered if menu link url was correctly computed from the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the computed url\n */\nexport class SelectMenuLinkSuccess implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: {iframe_url: string}) {}\n}\n\n/**\n * Action triggered if no menu entry was found for the given parameters (menu_id, menu_version and menu_entry_id)\n * Payload contains the error\n */\nexport class SelectMenuLinkFailure implements Action {\n    readonly type = MenuActionTypes.SelectMenuLinkFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | SelectMenuLink\n    | SelectMenuLinkSuccess\n    | SelectMenuLinkFailure;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendArchiveQuery.html":{"url":"classes/SendArchiveQuery.html","title":"class - SendArchiveQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendArchiveQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.SendArchiveQuery\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {LightCardActionTypes} from \"@ofActions/light-card.actions\";\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{filterPath: string, filterValues: string[]}){}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    /* istanbul ignore next */\n    constructor(public payload:{params: Map}){}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload:{lightCards: LightCard[]}){}\n}\n\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\n\n\n\nexport type ArchiveActions =\n    UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    |SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CardService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            FilterService\n                        \n                        \n                            I18nService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            ThirdsService\n                        \n                        \n                            TimeService\n                        \n                        \n                            TokenInjector\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/services.module.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthenticationService} from './authentication.service';\nimport {TokenInjector} from './interceptors.service';\nimport {CardService} from './card.service';\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {FilterService} from \"@ofServices/filter.service\";\nimport {ConfigService} from \"@ofServices/config.service\";\nimport {I18nService} from \"@ofServices/i18n.service\";\nimport {SettingsService} from \"@ofServices/settings.service\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ConfigService,\n        SettingsService,\n        CardService,\n        AuthenticationService,\n        TimeService,\n        ThirdsService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInjector,\n            multi: true\n        }   ,\n        GuidService,\n        FilterService,\n        I18nService\n\n    ]\n})\nexport class ServicesModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ServicesModule\n        };\n    }\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n            parentModule: ServicesModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ServicesModule is already loaded. Import it in the AppModule only'\n            );\n        }\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCardDataTimeline.html":{"url":"classes/SetCardDataTimeline.html","title":"class - SetCardDataTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCardDataTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.SetCardDataTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    SetCardDataTimeline = '[timeline] Set Card Data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class SetCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.SetCardDataTimeline\n    constructor(public payload:{cardsTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | SetCardDataTimeline;\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                locales$\n                            \n                            \n                                timeZones$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/settings.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/settings.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locales$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeZones$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/settings.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\n\n@Component({\n  selector: 'of-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  locales$:Observable;\n  timeZones$: Observable;\n\n  constructor(private store:Store) { }\n\n\n  ngOnInit() {\n    this.locales$ = this.store.select(buildConfigSelector('i18n.supported.locales'));\n    this.timeZones$ = this.store.select(buildConfigSelector('i10n.supported.time-zones'));\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/settings.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadSettings\n                            \n                            \n                                loadSettingsOnLogin\n                            \n                            \n                                patchSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: SettingsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/settings.effects.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SettingsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:41\n                            \n                        \n\n                \n                    \n                        Manages settings load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadSettingsOnLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n      ofType(AuthenticationActionTypes.AcceptLogIn),\n      map(a=>new LoadSettings())\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            patchSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/settings.effects.ts:59\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {\n    LoadSettings,\n    LoadSettingsFailure,\n    LoadSettingsSuccess,\n    PatchSettings,\n    PatchSettingsFailure,\n    PatchSettingsSuccess,\n    SettingsActionTypes\n} from \"@ofActions/settings.actions\";\nimport {AcceptLogIn, AuthenticationActionTypes} from \"@ofActions/authentication.actions\";\nimport {SettingsService} from \"@ofServices/settings.service\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class SettingsEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: SettingsService\n    ) {}\n\n\n    /**\n     * Manages settings load -> service request -> success/message\n     */\n    @Effect()\n    loadSettings: Observable = this.actions$\n        .pipe(\n            ofType(SettingsActionTypes.LoadSettings),\n            switchMap(action => this.service.fetchUserSettings()),\n            map((settings: any) => {\n                return new LoadSettingsSuccess({settings: settings});\n            }),\n            catchError((err, caught) => of(new LoadSettingsFailure(err)))\n        );\n\n\n    @Effect()\n    loadSettingsOnLogin: Observable = this.actions$.pipe(\n      ofType(AuthenticationActionTypes.AcceptLogIn),\n      map(a=>new LoadSettings())\n    );\n\n    @Effect()\n    patchSettings: Observable = this.actions$.pipe(\n        ofType(SettingsActionTypes.PatchSettings),\n        switchMap((action:PatchSettings)=>this.service.patchUserSettings(action.payload.settings)),\n        map(settings => new PatchSettingsSuccess({settings:settings})),\n        catchError((err, caught) => of(new PatchSettingsFailure(err)))\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BaseSettingComponent\n                        \n                        \n                            EmailSettingComponent\n                        \n                        \n                            ListSettingComponent\n                        \n                        \n                            MultiSettingsComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TextSettingComponent\n                        \n                        \n                            TypeAheadSettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SettingsRoutingModule} from \"./settings-routing.module\";\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {BaseSettingComponent} from './components/settings/base-setting/base-setting.component';\nimport {TextSettingComponent} from './components/settings/text-setting/text-setting.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {EmailSettingComponent} from './components/settings/email-setting/email-setting.component';\nimport {ListSettingComponent} from \"./components/settings/list-setting/list-setting.component\";\nimport {MultiSettingsComponent} from './components/settings/multi-settings/multi-settings.component';\nimport {TypeAheadSettingsComponent} from './components/settings/type-ahead-settings/type-ahead-settings.component';\nimport {TypeaheadModule} from \"ngx-type-ahead\";\n\n@NgModule({\n    declarations: [SettingsComponent, BaseSettingComponent, TextSettingComponent, EmailSettingComponent, ListSettingComponent, MultiSettingsComponent, TypeAheadSettingsComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        TypeaheadModule,\n        SettingsRoutingModule,\n        TranslateModule,\n    ]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"./components/settings/settings.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SettingsComponent,\n        // canActivate: [AuthenticationGuard],\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/settings.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userId\n                            \n                            \n                                    Private\n                                usersUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchUserSettings\n                            \n                            \n                                patchUserSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            patchUserSettings\n                        \n                        \n                    \n                \n            \n            \n                \npatchUserSettings(settings: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/settings.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            usersUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/settings.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\nimport {selectIdentifier} from \"@ofSelectors/authentication.selectors\";\n\n@Injectable()\nexport class SettingsService {\n    private usersUrl: string;\n    private userId: string;\n\n    constructor(private httpClient: HttpClient,\n                private store: Store) {\n        this.usersUrl = `${environment.urls.users}`;\n        this.store.select(selectIdentifier).subscribe(id=>this.userId=id);\n    }\n\n    fetchUserSettings(): Observable {\n        return this.httpClient.get(`${this.usersUrl}/users/${this.userId}/settings`);\n    }\n\n    patchUserSettings(settings:any): Observable {\n        return this.httpClient.patch(`${this.usersUrl}/users/${this.userId}/settings`, settings);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/settings.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState{\n    settings:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string\n}\n\nexport const settingsInitialState: SettingsState = {\n    settings:{},\n    loading: false,\n    loaded: false,\n    error: null\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(details?: Detail[], actions?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                        Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URL\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateModule.html":{"url":"modules/StateModule.html","title":"module - StateModule","body":"\n                   \n\n\n\n\n    Modules\n    StateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\n\n!environment\n\n!environment\n\n\n\nStateModule\n\nStateModule\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/store/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/app/store/state.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {appEffects, appReducer, storeConfig} from './index';\nimport {environment} from '@env/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {NavigationActionTiming, RouterStateSerializer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {CustomRouterStateSerializer} from '@ofStore/states/router.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducer, storeConfig),\n    StoreRouterConnectingModule.forRoot({\n        navigationActionTiming: NavigationActionTiming.PostActivation,\n        serializer: CustomRouterStateSerializer\n    }),\n    EffectsModule.forRoot(appEffects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  declarations: [],\n    providers:[{provide:'configRetryDelay',useValue:5000}]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule\n      ,\n      providers: [\n        /**\n         * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n         * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n         * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n         */\n        {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsFilterComponent.html":{"url":"components/TagsFilterComponent.html","title":"component - TagsFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagsFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-tags-filter\n            \n\n            \n                styleUrls\n                ./tags-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tags-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                tagFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/tags-filter/tags-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\n\n@Component({\n    selector: 'of-tags-filter',\n    templateUrl: './tags-filter.component.html',\n    styleUrls: ['./tags-filter.component.scss']\n})\nexport class TagsFilterComponent implements OnInit, OnDestroy {\n\n    tagFilterForm: FormGroup;\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    constructor(private formBuilder: FormBuilder,private store: Store) {\n        this.tagFilterForm = this.createFormGroup()\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TAG_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.tagFilterForm.get('tags').setValue(next.active?next.status.tags:[], {emitEvent: false});\n            } else {\n                this.tagFilterForm.get('tags').setValue([], {emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.tagFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.difference(formA.tags,formB.tags).length===0 && _.difference(formB.tags,formA.tags).length===0;\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TAG_FILTER,\n                        active: form.tags.length>0,\n                        status: form\n                    }))\n                );\n        });\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    private createFormGroup() {\n        return this.formBuilder.group({\n                tags: []\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n    \n\n    \n                \n                    ./tags-filter.component.scss\n                \n                .tags-field {\n  /deep/ .dropdown-toggle {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TagsFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSettingComponent.html":{"url":"components/TextSettingComponent.html","title":"component - TextSettingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextSettingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/text-setting/text-setting.component.ts\n\n\n\n    \n        Extends\n    \n    \n                BaseSettingComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-text-setting\n            \n\n\n\n\n            \n                templateUrl\n                ./text-setting.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeTextValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                pattern\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        pattern\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeTextValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTextValidators()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/components/settings/text-setting/text-setting.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {BaseSettingComponent} from \"../base-setting/base-setting.component\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n\n@Component({\n    selector: 'of-text-setting',\n    templateUrl: './text-setting.component.html'\n})\nexport class TextSettingComponent extends BaseSettingComponent implements OnInit, OnDestroy {\n\n    @Input() pattern:string;\n\n    constructor(protected store: Store) {\n        super(store);\n    }\n\n    initFormGroup(){\n        let validators = this.computeTextValidators();\n        return new FormGroup({\n            setting: new FormControl(null,validators)\n        }, {updateOn: 'submit'});\n    }\n\n    protected computeTextValidators() {\n        let validators = [];\n        if (this.requiredField)\n            validators.push(Validators.required);\n        if (this.pattern)\n            validators.push(Validators.pattern(this.pattern));\n        return validators;\n    }\n\n// ngOnInit() {\n    // }\n\n    updateValue(value){\n        this.form.get('setting').setValue(value,{emitEvent:false});\n    }\n\n    protected isEqual(formA, formB):boolean{\n        console.log('TextSettingComponent.isEqual called')\n        return formA.setting === formB.setting;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    settings.{{settingPath}}\n    \n    Incorrect submission\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      settings.{{settingPath}}        Incorrect submission  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSettingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Third.html":{"url":"classes/Third.html","title":"class - Third","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Third\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, version: string, i18nLabelKey: string, templates?: string[], csses?: string[], locales?: string[], menuEntries?: ThirdMenuEntry[], processes?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nLabelKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templates\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        csses\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        locales\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuEntries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processes\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            extractState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractState(card: Card)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/thirds.model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    card\n                                    \n                                                Card\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         State\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URL\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenu.html":{"url":"classes/ThirdMenu.html","title":"class - ThirdMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, version: string, label: string, entries: ThirdMenuEntry[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URL\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenuEntry.html":{"url":"classes/ThirdMenuEntry.html","title":"class - ThirdMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, label: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URL\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyModule.html":{"url":"modules/ThirdpartyModule.html","title":"module - ThirdpartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IframeDisplayComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThirdpartyRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IframeDisplayComponent} from './iframedisplay.component';\nimport {ThirdpartyRoutingModule} from \"./thirdparty-routing.module\";\n\n@NgModule({\n  declarations: [IframeDisplayComponent],\n  imports: [\n    CommonModule,\n    ThirdpartyRoutingModule\n  ]\n})\nexport class ThirdpartyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyRoutingModule.html":{"url":"modules/ThirdpartyRoutingModule.html","title":"module - ThirdpartyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {IframeDisplayComponent} from \"./iframedisplay.component\";\n\nconst routes: Routes = [\n    {\n        path: ':menu_id/:menu_version/:menu_entry_id',\n        component: IframeDisplayComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThirdpartyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsI18nLoader.html":{"url":"classes/ThirdsI18nLoader.html","title":"class - ThirdsI18nLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsI18nLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:214\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                        ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {EMPTY, from, merge, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader, TranslateService} from \"@ngx-translate/core\";\nimport {catchError, filter, map, mergeMap, reduce, switchMap, tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../store/index\";\nimport {LightCard} from \"../model/light-card.model\";\nimport {Third, ThirdMenu} from \"@ofModel/thirds.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private loadedI18n: string[] = [];\n    private loadingI18n: string[] = [];\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n                private authenticationService: AuthenticationService,\n                private store: Store,\n                private $injector: Injector,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThird(thirdName:string, version:string):Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if(third){\n            return of(third);\n        }\n        return this.fetchThird(thirdName,version)\n            .pipe(\n                tap(t=>Object.setPrototypeOf(t,Third.prototype)),\n                tap(t=>this.thirdCache.set(key,t))\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`,{\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId,thirdMenuVersion).pipe(\n            //filter((third :Third)=>!(!third.menuEntries)),\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if(entry.length==1){\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map( menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`,{\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string){\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version',version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    fetchI18nJson(publisher: string, version: string, locales: string[]): Observable {\n        let previous: Observable;\n        for (let locale of locales) {\n            const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n            const httpCall = this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {\n                params\n            }).pipe(\n                map(r => {\n                        const object = {};\n                        object[locale] = {};\n                        object[locale][publisher] = {};\n                        object[locale][publisher][version] = r;\n                        return object;\n                    }\n                ));\n            if (previous) {\n                previous = merge(previous, httpCall);\n            } else {\n                previous = httpCall;\n            }\n        }\n        if (previous == null) {\n            return EMPTY;\n        }\n        const result = previous.pipe(\n            reduce((acc, val) => _.merge(acc,val))\n        );\n\n        return result;\n    }\n\n    computeThirdsMenu(): Observable{\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts=>from(ts)),\n            filter((t:Third)=>!(!t.menuEntries)),\n            map(t=>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus:ThirdMenu[],menu:ThirdMenu)=>{\n                menus.push(menu);\n                return menus;\n            },[])\n        );\n    }\n\n    loadI18nForLightCards(cards:LightCard[]){\n        let observable = from(cards).pipe(\n            map(card=> card.publisher + '###' + card.publisherVersion));\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    loadI18nForMenuEntries(menus:ThirdMenu[]){\n        const observable = from(menus).pipe(\n            map(menu=> menu.id + '###' + menu.version)\n        );\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    private subscribeToLoadI18n(observable) {\n        return observable\n            .pipe(\n                reduce((ids: string[], id: string) => {\n                    ids.push(id);\n                    return ids;\n                }, []),\n                switchMap((ids:string[]) => {\n                    let work = _.uniq(ids);\n                    work = _.difference(work, this.loadingI18n)\n                    return from(_.difference(work, this.loadedI18n))\n                }),\n                mergeMap((id: string) => {\n                    this.loadingI18n.push(id);\n                    const input = id.split('###');\n\n                    let publisher = input[0];\n                    let version = input[1];\n                    return this.fetchI18nJson(publisher, version, this.translate().getLangs())\n                        .pipe(map(trans => {\n                                return {id: id, translation: trans};\n                            }),\n                            catchError(err => {\n                                _.remove(this.loadingI18n, id);\n                                return throwError(err);\n                            })\n                        );\n                }),\n                reduce((acc, val) => _.merge(acc,val)),\n                map(\n                    (result:any) => {\n                        const langs = this.translate().getLangs();\n                        const currentLang = this.translate().currentLang;\n                        for (let lang of langs) {\n                            let translationElement = result.translation[lang];\n                            if (translationElement) {\n                                this.translate().setTranslation(lang, translationElement, true);\n                                // needed otherwise only one translation apply\n                                this.translate().use(lang);\n                            }\n                        }\n                        this.translate().use(currentLang);\n                        _.remove(this.loadingI18n, result.id);\n                        this.loadedI18n.push(result.id);\n                        return true;\n                    }\n                ),\n                catchError((error,caught )=>{\n                    console.error('something went wrong during translation',error);\n                    return caught;\n                })\n            )\n    }\n\n    private translate(): TranslateService {\n        return this.$injector.get(TranslateService);\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {}\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdsService.html":{"url":"injectables/ThirdsService.html","title":"injectable - ThirdsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadedI18n\n                            \n                            \n                                    Private\n                                loadingI18n\n                            \n                            \n                                    Private\n                                thirdCache\n                            \n                            \n                                    Readonly\n                                thirdsUrl\n                            \n                            \n                                    Private\n                                urlCleaner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdCssUrl\n                            \n                            \n                                computeThirdsMenu\n                            \n                            \n                                fetchHbsTemplate\n                            \n                            \n                                fetchI18nJson\n                            \n                            \n                                    Private\n                                fetchThird\n                            \n                            \n                                loadI18nForLightCards\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                            \n                                queryMenuEntryURL\n                            \n                            \n                                queryThird\n                            \n                            \n                                    Private\n                                subscribeToLoadI18n\n                            \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authenticationService: AuthenticationService, store: Store, $injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        $injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdCssUrl\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdCssUrl(publisher: string, styleName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    styleName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchHbsTemplate\n                        \n                        \n                    \n                \n            \n            \n                \nfetchHbsTemplate(publisher: string, version: string, name: string, locale: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchI18nJson\n                        \n                        \n                    \n                \n            \n            \n                \nfetchI18nJson(publisher: string, version: string, locales: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    locales\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            fetchThird\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchThird(publisher: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publisher\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForLightCards\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForLightCards(cards: LightCard[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cards\n                                    \n                                                LightCard[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries(menus: ThirdMenu[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                            ThirdMenu[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryMenuEntryURL\n                        \n                        \n                    \n                \n            \n            \n                \nqueryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdMenuId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuVersion\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thirdMenuEntryId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            queryThird\n                        \n                        \n                    \n                \n            \n            \n                \nqueryThird(thirdName: string, version: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    thirdName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribeToLoadI18n\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeToLoadI18n(observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            translate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    translate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/thirds.service.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TranslateService\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadedI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            thirdCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thirdsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlCleaner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpUrlEncodingCodec\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {EMPTY, from, merge, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader, TranslateService} from \"@ngx-translate/core\";\nimport {catchError, filter, map, mergeMap, reduce, switchMap, tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../store/index\";\nimport {LightCard} from \"../model/light-card.model\";\nimport {Third, ThirdMenu} from \"@ofModel/thirds.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private loadedI18n: string[] = [];\n    private loadingI18n: string[] = [];\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n                private authenticationService: AuthenticationService,\n                private store: Store,\n                private $injector: Injector,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThird(thirdName:string, version:string):Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if(third){\n            return of(third);\n        }\n        return this.fetchThird(thirdName,version)\n            .pipe(\n                tap(t=>Object.setPrototypeOf(t,Third.prototype)),\n                tap(t=>this.thirdCache.set(key,t))\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`,{\n            params\n        });\n    }\n\n    queryMenuEntryURL(thirdMenuId: string, thirdMenuVersion: string, thirdMenuEntryId: string): Observable {\n        return this.queryThird(thirdMenuId,thirdMenuVersion).pipe(\n            //filter((third :Third)=>!(!third.menuEntries)),\n            switchMap(third => {\n                const entry = third.menuEntries.filter(entry => entry.id === thirdMenuEntryId)\n                if(entry.length==1){\n                    return entry;\n                } else {\n                    throwError(new Error('No such menu entry.'))\n                }\n            }),\n            catchError((err, caught) => {\n                console.log(err)\n                return throwError(err);\n            }),\n            map( menuEntry => menuEntry.url)\n        )\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n            .set(\"locale\", locale)\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`,{\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string){\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version',version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    fetchI18nJson(publisher: string, version: string, locales: string[]): Observable {\n        let previous: Observable;\n        for (let locale of locales) {\n            const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n            const httpCall = this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {\n                params\n            }).pipe(\n                map(r => {\n                        const object = {};\n                        object[locale] = {};\n                        object[locale][publisher] = {};\n                        object[locale][publisher][version] = r;\n                        return object;\n                    }\n                ));\n            if (previous) {\n                previous = merge(previous, httpCall);\n            } else {\n                previous = httpCall;\n            }\n        }\n        if (previous == null) {\n            return EMPTY;\n        }\n        const result = previous.pipe(\n            reduce((acc, val) => _.merge(acc,val))\n        );\n\n        return result;\n    }\n\n    computeThirdsMenu(): Observable{\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts=>from(ts)),\n            filter((t:Third)=>!(!t.menuEntries)),\n            map(t=>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus:ThirdMenu[],menu:ThirdMenu)=>{\n                menus.push(menu);\n                return menus;\n            },[])\n        );\n    }\n\n    loadI18nForLightCards(cards:LightCard[]){\n        let observable = from(cards).pipe(\n            map(card=> card.publisher + '###' + card.publisherVersion));\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    loadI18nForMenuEntries(menus:ThirdMenu[]){\n        const observable = from(menus).pipe(\n            map(menu=> menu.id + '###' + menu.version)\n        );\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    private subscribeToLoadI18n(observable) {\n        return observable\n            .pipe(\n                reduce((ids: string[], id: string) => {\n                    ids.push(id);\n                    return ids;\n                }, []),\n                switchMap((ids:string[]) => {\n                    let work = _.uniq(ids);\n                    work = _.difference(work, this.loadingI18n)\n                    return from(_.difference(work, this.loadedI18n))\n                }),\n                mergeMap((id: string) => {\n                    this.loadingI18n.push(id);\n                    const input = id.split('###');\n\n                    let publisher = input[0];\n                    let version = input[1];\n                    return this.fetchI18nJson(publisher, version, this.translate().getLangs())\n                        .pipe(map(trans => {\n                                return {id: id, translation: trans};\n                            }),\n                            catchError(err => {\n                                _.remove(this.loadingI18n, id);\n                                return throwError(err);\n                            })\n                        );\n                }),\n                reduce((acc, val) => _.merge(acc,val)),\n                map(\n                    (result:any) => {\n                        const langs = this.translate().getLangs();\n                        const currentLang = this.translate().currentLang;\n                        for (let lang of langs) {\n                            let translationElement = result.translation[lang];\n                            if (translationElement) {\n                                this.translate().setTranslation(lang, translationElement, true);\n                                // needed otherwise only one translation apply\n                                this.translate().use(lang);\n                            }\n                        }\n                        this.translate().use(currentLang);\n                        _.remove(this.loadingI18n, result.id);\n                        this.loadedI18n.push(result.id);\n                        return true;\n                    }\n                ),\n                catchError((error,caught )=>{\n                    console.error('something went wrong during translation',error);\n                    return caught;\n                })\n            )\n    }\n\n    private translate(): TranslateService {\n        return this.$injector.get(TranslateService);\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {}\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsServiceMock.html":{"url":"classes/ThirdsServiceMock.html","title":"class - ThirdsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/mocks/thirds.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdsMenu\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeThirdsMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeThirdsMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadI18nForMenuEntries\n                        \n                        \n                    \n                \n            \n            \n                \nloadI18nForMenuEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/tests/mocks/thirds.service.mock.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\nexport class ThirdsServiceMock {\n    computeThirdsMenu(): Observable{\n        return of([new ThirdMenu('t1', '1', 'tLabel1', [\n            new ThirdMenuEntry('id1', 'label1', 'link1'),\n            new ThirdMenuEntry('id2', 'label2', 'link2'),\n        ]),\n            new ThirdMenu('t2', '1', 'tLabel2', [\n                new ThirdMenuEntry('id3', 'label3', 'link3'),\n            ])])\n    }\n    loadI18nForMenuEntries(){return of(true)}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tick.html":{"url":"classes/Tick.html","title":"class - Tick","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tick\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Heart beat of the application change current date\nContains the elapsed virtual time since the previous heart beat so any components following the clock\ncan shift their timespan accordingly\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: TickPayload)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        TickPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TickPayload\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.Tick\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TickPayload.html":{"url":"classes/TickPayload.html","title":"class - TickPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TickPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Clock tick (heart beat) payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                elapsedSinceLast\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currentTime: moment.Moment, elapsedSinceLast: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currentTime\n                                                  \n                                                        \n                                                                    moment.Moment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elapsedSinceLast\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     moment.Moment\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elapsedSinceLast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeEffects.html":{"url":"injectables/TimeEffects.html","title":"injectable - TimeEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/time.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTimeReference\n                            \n                            \n                                heartBeat\n                            \n                            \n                                stickToVirtualTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/time.effects.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                        Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentTimeReference\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TimeReference\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heartBeat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:35\n                            \n                        \n\n                \n                    \n                        This Observable send a tick corresponding to the heart beat of the application.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stickToVirtualTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/time.effects.ts:49\n                            \n                        \n\n                \n                    \n                        This Observable update the way time is managed in the application.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {AppState} from \"@ofStore/index\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {Observable, of} from \"rxjs\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {AuthenticationActionTypes} from \"@ofActions/authentication.actions\";\nimport {catchError, map, switchMap} from \"rxjs/operators\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {FailToUpdateTimeReference, Tick, UpdateTimeReference} from \"@ofActions/time.actions\";\nimport {selectTimeReference} from \"@ofSelectors/time.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\n\n@Injectable()\nexport class TimeEffects {\n\n    private currentTimeReference: TimeReference;\n\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: TimeService\n    ) {\n        this.store.select(selectTimeReference).subscribe(\n            timeRef => this.currentTimeReference = timeRef\n        );\n    }\n\n    /**\n     *This Observable send a tick corresponding to the heart beat of the application.\n     *\n     */\n    @Effect()\n    heartBeat: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.pulsate()\n                .pipe(map(pulse => {\n                        return new Tick(pulse);\n                    })\n                ))\n        );\n    /**\n     *This Observable update the way time is managed in the application.\n     *\n     */\n    @Effect()\n    stickToVirtualTime: Observable = this.actions$\n        .pipe(\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(\n                () => this.service.fetchTimeReferences().pipe(\n                    map(timeRef => new UpdateTimeReference({timeReference: timeRef})),\n                    catchError(error => {\n                                console.error(error);\n                                const i18nParameters = new Map();\n                                i18nParameters['message'] = error;\n\n                                return of(new FailToUpdateTimeReference(\n                                    {\n                                        error: new Message(\n                                            'something went wrong during Time Reference update from Time service',\n                                            MessageLevel.ERROR,\n                                            new I18n('time.error', i18nParameters))\n                                    }))\n                        }\n                    )\n                )\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeFilterComponent.html":{"url":"components/TimeFilterComponent.html","title":"component - TimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./time-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                timeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Component({\n    selector: 'of-time-filter',\n    templateUrl: './time-filter.component.html'\n})\nexport class TimeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    get filter$(): Observable {\n        return this._filter$;\n    }\n\n    timeFilterForm: FormGroup;\n\n    constructor(private store: Store,\n                private timeService: TimeService) {\n        this.timeFilterForm = this.createFormGroup();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TIME_FILTER));\n\n        //Update the values of the filter form if the state of the filter has been changed by other means (timeline, followClockTick, etc.)\n        //With {emitEvent:false}, this update won't trigger a valueChanges, so no ApplyFilter action will be dispatched\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                if (this.timeService.parseString(this.timeFilterForm.get('start').value).valueOf() != next.status.start) {\n                    if(!!next.status.start)\n                        this.timeFilterForm.get('start').setValue(this.timeService.asInputString(next.status.start), {emitEvent:false});\n                    else\n                        this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                }\n                if (this.timeService.parseString(this.timeFilterForm.get('end').value).valueOf() != next.status.end) {\n                    if(!!next.status.end)\n                        this.timeFilterForm.get('end').setValue(this.timeService.asInputString(next.status.end), {emitEvent: false});\n                    else\n                        this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n                }\n            } else {\n                if (!!this.timeFilterForm.get('start').value)\n                    this.timeFilterForm.get('start').setValue(null, {emitEvent: false});\n                if (!!this.timeFilterForm.get('end').value)\n                    this.timeFilterForm.get('end').setValue(null, {emitEvent: false});\n            }\n        });\n\n        this._filter$.pipe(first(), takeUntil(this.ngUnsubscribe$)).subscribe(() => {\n            this.timeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB) => {\n                        return _.isEqual(formA, formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TIME_FILTER,\n                        active: !!form.start || !!form.end,\n                        status: {\n                            start: form.start ? this.timeService.parseString(form.start).valueOf() : null,\n                            end: form.end ? this.timeService.parseString(form.end).valueOf() : null\n                        }\n                    }))\n                );\n        });\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            start: new FormControl(),\n            end: new FormControl()\n        }, {updateOn: 'change'});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        feed.filters.time.start.label\n        \n      \n      \n        feed.filters.time.end.label\n        \n      \n    \n  \n  feed.filters.time.title\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    feed.filters.time.start.label                            feed.filters.time.end.label                      feed.filters.time.title        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeLineComponent.html":{"url":"components/TimeLineComponent.html","title":"component - TimeLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/time-line/time-line.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-line\n            \n\n\n\n\n            \n                templateUrl\n                ./time-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conf\n                            \n                            \n                                    Public\n                                confZoom\n                            \n                            \n                                lightCards$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateWithSpaceBeforeMoment\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                periodStartToEnd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dateWithSpaceBeforeMoment\n                        \n                        \n                    \n                \n            \n            \n                \ndateWithSpaceBeforeMoment(date, clusterLevel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:352\n                \n            \n\n\n            \n                \n                    make start of domain begins 4 ticks before actual date (moment())\neach cluster level had a different treatment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:389\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            periodStartToEnd\n                        \n                        \n                    \n                \n            \n            \n                \nperiodStartToEnd(conf, future: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:328\n                \n            \n\n\n            \n                \n                    return an array of two moments\nfirst moment equal to start of domain, second moment equal to end of domain\nset spaceBeforeMoment to true for start the domain 4 ticks before the actual moment\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conf\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    future\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confZoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {Observable, of, Subscription} from 'rxjs';\nimport { LightCard } from '@ofModel/light-card.model';\nimport { select, Store } from '@ngrx/store';\nimport {catchError, debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport { AppState } from '@ofStore/index';\nimport {InitTimeline, SetCardDataTimeline} from '@ofActions/timeline.actions';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\n\n@Component({\n  selector: 'of-time-line',\n  templateUrl: './time-line.component.html',\n})\nexport class TimeLineComponent implements OnInit, OnDestroy {\n    lightCards$: Observable;\n    subscription: Subscription;\n\n    public conf: any;\n    public confZoom: any;\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        // set start of Week to saturday on moment locale used\n        moment.updateLocale('en', { week: {\n                dow: 6, // First day of week is Saturday\n                doy: 12 // First week of year must contain 1 January (7 + 6 - 1)\n            }});\n\n        // DOMAIN CONF from moment() to our conf\n\n        const domainYearConf = {\n            year: 2,\n            month: 0,\n            week: 0,\n            day: 0,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            startOf: ['year'],\n        };\n\n        const domainMonthConf = {\n            year: 0,\n            month: 2,\n            week: 0,\n            day: 0,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            startOf: ['month'],\n        };\n\n        const domainWeekConf = {\n            year: 0,\n            month: 0,\n            week: 2,\n            day: 0,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            startOf: ['week'],\n        };\n\n        const domain7DayConf = {\n            year: 0,\n            month: 0,\n            week: 0,\n            day: 8,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            startOf: ['day'],\n        };\n\n        const currentMoment = moment();\n\n        const startDomain = this.dateWithSpaceBeforeMoment(moment(currentMoment), 'W');\n        const endDomain = this.periodStartToEnd(domainWeekConf, true);\n        const startDomain2 = this.dateWithSpaceBeforeMoment(moment(currentMoment), 'M');\n        const endDomain2 = this.periodStartToEnd(domainMonthConf, true);\n        const startDomain3 = this.dateWithSpaceBeforeMoment(moment(currentMoment), 'Y');\n        const endDomain3 = this.periodStartToEnd(domainYearConf, true);\n        const startDomain4 = this.dateWithSpaceBeforeMoment(moment(currentMoment), '7D');\n        const endDomain4 = this.periodStartToEnd(domain7DayConf, true);\n\n        // FORWARD CONF (movement on domain)\n\n        const forwardYearConf = {\n            start: {\n                year: 1,\n                month: 0,\n                week: 0,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n            end: {\n                year: 1,\n                month: 0,\n                week: 0,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n        };\n\n        const forwardMonthConf = {\n            start: {\n                year: 0,\n                month: 1,\n                week: 0,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n            end: {\n                year: 0,\n                month: 1,\n                week: 0,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n        };\n\n        const forwardWeekConf = {\n            start: {\n                year: 0,\n                month: 0,\n                week: 1,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n            end: {\n                year: 0,\n                month: 0,\n                week: 1,\n                day: 0,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n        };\n\n        const forwardDayConf = {\n            start: {\n                year: 0,\n                month: 0,\n                week: 0,\n                day: 1,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n            end: {\n                year: 0,\n                month: 0,\n                week: 0,\n                day: 1,\n                hour: 0,\n                minute: 0,\n                second: 0,\n            },\n        };\n\n        // TICKS CONF\n\n        const ticks4HoursConf = {\n            year: 0,\n            month: 0,\n            week: 0,\n            day: 0,\n            hour: 4,\n            minute: 0,\n            second: 0,\n        };\n\n        const ticksDayConf = {\n            year: 0,\n            month: 0,\n            week: 0,\n            day: 1,\n            hour: 0,\n            minute: 0,\n            second: 0,\n        };\n\n        const ticksHalfMonthConf = {\n            year: 0,\n            month: 0,\n            week: 0,\n            day: 0,\n            hour: 0,\n            minute: 0,\n            second: 0,\n            date: [1, 16],\n        };\n\n        this.conf = {\n            enableDrag: false,\n            enableZoom: true,\n            autoScale: false,\n            animations: false,\n            showGridLines: true,\n            realTimeBar: true,\n        };\n        this.confZoom = [{\n            startDomain: startDomain.valueOf(),\n            endDomain: endDomain.valueOf(),\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n            buttonTitle: 'W',\n            forwardConf: forwardWeekConf,\n            backwardConf: forwardWeekConf,\n            ticksConf: ticks4HoursConf,\n            followClockTick: true,\n            firstMoveStartOfUnit: true,\n        },\n        {\n            startDomain: startDomain4.valueOf(),\n            endDomain: endDomain4.valueOf(),\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n            buttonTitle: '7D',\n            forwardConf: forwardDayConf,\n            ticksConf: ticks4HoursConf,\n            followClockTick: true,\n            firstMoveStartOfUnit: true,\n        },\n        {\n            startDomain: startDomain2.valueOf(),\n            endDomain: endDomain2.valueOf(),\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n            buttonTitle: 'M',\n            forwardConf: forwardMonthConf,\n            ticksConf: ticksDayConf,\n            // formatTicks: 'DD',\n            // formatTooltipsDate: 'DD/MM',\n            followClockTick: true,\n            firstMoveStartOfUnit: true,\n        },\n        {\n            startDomain: startDomain3.valueOf(),\n            endDomain: endDomain3.valueOf(),\n            centeredOnTicks: true,\n            clusterTicksToTicks: true,\n            buttonTitle: 'Y',\n            forwardConf: forwardYearConf,\n            ticksConf: ticksHalfMonthConf,\n            followClockTick: true,\n            firstMoveStartOfUnit: true,\n        }];\n\n        // timeline state is same than feed state (not filtered Feed)\n        // select all the feed\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFeed),\n            catchError(err => of([]))\n        );\n\n        // init timeline state\n        this.store.dispatch(new InitTimeline({\n            data: [],\n        }));\n\n        // add a card data to the timeline state for each new card received\n        this.subscription = this.lightCards$.pipe(debounceTime(300), distinctUntilChanged())\n            .subscribe(value => {\n            const tmp = _.cloneDeep(value);\n            this.store.dispatch(new InitTimeline({\n                data: [],\n            }));\n            const myCardsTimeline = [];\n            for (const val of tmp) {\n                if (val.timeSpans && val.timeSpans.length > 0) {\n                    val.timeSpans.forEach(d => {\n                        const myCardTimelineTimespans = {\n                            publishDate: d.start,\n                            startDate: d.start, // useless\n                            endDate: d.end, // useless\n                            severity: val.severity,\n                            summary: val.title.parameters.value,\n                        };\n                        myCardsTimeline.push(myCardTimelineTimespans);\n                    });\n                } else {\n                    // val.endDate val.startDate val.severity\n                    const myCardTimeline = {\n                        publishDate: val.publishDate,\n                        startDate: val.startDate, // useless\n                        endDate: val.endDate, // useless\n                        severity: val.severity,\n                        summary: val.title.parameters.value,\n                    };\n                    myCardsTimeline.push(myCardTimeline);\n                }\n            }\n            this.store.dispatch(new SetCardDataTimeline({\n                cardsTimeline: myCardsTimeline,\n            }));\n        });\n    }\n\n    /**\n     * return an array of two moments\n     * first moment equal to start of domain, second moment equal to end of domain\n     * set spaceBeforeMoment to true for start the domain 4 ticks before the actual moment\n     * @param level\n     * @param spaceBeforeMoment\n     */\n    periodStartToEnd(conf, future: boolean): moment.Moment {\n        const tmpMoment = moment();\n        const newDate = _.cloneDeep(tmpMoment);\n        Object.keys(conf).forEach(key => {\n            if (key === 'startOf') {\n                conf[key].forEach(value => {\n                    newDate.startOf(value);\n                });\n            } else if (conf[key] > 0) {\n                if (future) {\n                    newDate.add(conf[key], key);\n                } else {\n                    newDate.subtract(conf[key], key);\n                }\n            }\n        });\n        return newDate;\n    }\n\n    /**\n     * make start of domain begins 4 ticks before actual date (moment())\n     * each cluster level had a different treatment\n     * @param clusterLevel\n     */\n    dateWithSpaceBeforeMoment(date, clusterLevel) {\n        date.minutes(0).seconds(0).millisecond(0);\n        switch (clusterLevel) {\n            case 'W' : case '7D': {\n                // align date hours by subtract exceeded hours for stay on ticks (every 4 hours)\n                for (let i = 0; i = 16) {\n                    date.startOf('month');\n                        date.subtract(1, 'months');\n                } else {\n                    // start at middle of month (16th)\n                    date.date(16);\n                    date.subtract(2, 'months');\n                }\n                return date;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeReference.html":{"url":"classes/TimeReference.html","title":"class - TimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/time.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                computeNow\n                            \n                            \n                                    Private\n                                computeNowMoment\n                            \n                            \n                                    Static\n                                convertSpeedIntoEnum\n                            \n                            \n                                    Private\n                                isVirtualTimeUndefine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(referenceTime: number, virtualTime: number, computedNow: number, speed: TimeSpeed)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/time.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        referenceTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        virtualTime\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        computedNow\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        speed\n                                                  \n                                                        \n                                                                        TimeSpeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(timeStampNow: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeStampNow\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(momentNow: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    momentNow\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            computeNow\n                        \n                        \n                    \n                \n            \n            \n                \ncomputeNow(realNow: number | moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNow\n                                    \n                                            number | moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     moment.Moment\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            computeNowMoment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeNowMoment(realNowMoment: moment.Moment)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    realNowMoment\n                                    \n                                            moment.Moment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            convertSpeedIntoEnum\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertSpeedIntoEnum(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVirtualTimeUndefine\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVirtualTimeUndefine()\n                \n            \n\n\n            \n                \n                    Defined in src/app/model/time.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as moment from 'moment-timezone';\nimport {isMoment} from \"moment\";\n\nexport class TimeReference {\n    constructor(readonly referenceTime: number,\n                readonly  virtualTime: number,\n                readonly  computedNow: number,\n                readonly speed: TimeSpeed) {\n    }\n\n    static convertSpeedIntoEnum(key: string, value: string) {\n        if (key === 'speed') {\n            return TimeSpeed[value]\n        }\n        return value;\n    }\n\n\n    computeNow(timeStampNow:number):moment.Moment;\n    computeNow(momentNow:moment.Moment):moment.Moment;\n    computeNow(realNow:number|moment.Moment):moment.Moment{\n\n        let realNowMoment = null;\n        if(isMoment(realNow)){\n            realNowMoment=realNow\n        }else{\n            realNowMoment=moment(realNow);\n        }\n        return this.computeNowMoment(realNowMoment);\n\n    }\n\n    private computeNowMoment(realNowMoment: moment.Moment) {\n        /**\n         *   no computation for real time at normal speed with no virtualTime\n         *   or if the referenceTime doesn't exist\n         */\n\n        if (typeof this.referenceTime === 'undefined' || this.referenceTime == null) {\n                return realNowMoment;\n        }else if(this.speed === TimeSpeed.X1 && this.isVirtualTimeUndefine()){\n            return realNowMoment;\n        }\n        const ref = moment(this.referenceTime);\n        const duration = moment.duration(realNowMoment.diff(ref));\n        const computedOffsetInMilliseconds = duration.asMilliseconds() * this.speed;\n        const computedOffsetDuration = moment.duration(computedOffsetInMilliseconds)\n        let baseMoment=moment(this.virtualTime);\n        if(this.isVirtualTimeUndefine()) {\n            baseMoment=ref;\n        }\n        const result = baseMoment.add(computedOffsetDuration);\n        return result;\n    }\n\n    private isVirtualTimeUndefine(){\n        return typeof this.virtualTime === 'undefined' || this.virtualTime == null;\n    }\n}\n\n\nexport enum TimeSpeed {\n    X1 = 1,\n    X2 = 2,\n    X10 = 10,\n    X60 = 60,\n    X3600 = 3600,\n    HALF = 0.5\n}\n\nexport const neutralTimeReference:TimeReference=new TimeReference(null,null,null,TimeSpeed.X1);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeSpan.html":{"url":"classes/TimeSpan.html","title":"class - TimeSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/light-card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(start: number, end?: number, display)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/light-card.model.ts:82\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        end\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        display\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport interface LightCard {\n    readonly uid: string;\n    readonly id: string;\n    readonly publisher: string;\n    readonly publisherVersion: string;\n    readonly mainRecipient: string;\n    readonly publishDate: number;\n    readonly startDate: number;\n    readonly endDate: number;\n    readonly severity: Severity;\n    readonly processId?: string;\n    readonly lttd?: number;\n    readonly title?: I18n;\n    readonly summary?: I18n;\n    readonly tags?: string[];\n    readonly timeSpans?: TimeSpan[];\n\n}\n\nexport class LightCard implements LightCard {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly processId?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly tags?: string[],\n        readonly timeSpans?: TimeSpan[]\n    ) {\n    }\n}\n\nexport enum Severity {\n    ALARM = \"ALARM\", ACTION = \"ACTION\", NOTIFICATION = \"NOTIFICATION\", QUESTION = \"QUESTION\"\n}\n\nexport function severityOrdinal(severity: Severity) {\n    let result;\n    switch (severity) {\n        case Severity.ALARM:\n            result = 0;\n            break;\n        case Severity.ACTION:\n            result = 1;\n            break;\n        case Severity.QUESTION:\n            result = 2;\n            break;\n        case Severity.NOTIFICATION:\n            result = 3;\n            break;\n    }\n    return result;\n}\n\nexport enum Sound {\n    NOTIFICATION, QUESTION\n}\n\nexport enum Display {\n    BUBBLE, LINE\n}\n\nexport class TimeSpan {\n    constructor(\n        readonly start: number,\n        readonly end?: number,\n        readonly display = Display.BUBBLE) {\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimeState.html":{"url":"interfaces/TimeState.html","title":"interface - TimeState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimeState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/time.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentDate\n                                \n                                \n                                        error\n                                \n                                \n                                        timeReference\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentDate\n                                    \n                                \n                                \n                                    \n                                        currentDate:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeReference\n                                    \n                                \n                                \n                                    \n                                        timeReference:         TimeReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TimeReference\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as moment from 'moment-timezone'\nimport {neutralTimeReference, TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface TimeState {\n\n    timeReference: TimeReference;\n    currentDate: moment.Moment;\n    error: Message;\n}\n\nexport const timeInitialState: TimeState = {\n    timeReference:neutralTimeReference,\n    currentDate: moment(),\n    error: null\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimelineState.html":{"url":"interfaces/TimelineState.html","title":"interface - TimelineState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimelineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/timeline.state.ts\n        \n\n            \n                Description\n            \n            \n                The Timeline State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: weather there is an ongoing state modification\nerror: last message during state processing before error\ndata: an array of data Card (less information than lightCard)\nwhich are use for display on the chart the number of card on timescale\n\n\n            \n\n            \n                Extends\n            \n            \n                        EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:         LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {LightCardAdapter} from \"@ofStates/feed.state\";\n\n\n/**\n * The Timeline State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * error: last message during state processing before error\n *  * data: an array of data Card (less information than lightCard)\n *   which are use for display on the chart the number of card on timescale\n */\nexport interface TimelineState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    data: any[];\n}\n\n/*export function compareByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:compareByStartDate\n});*/\n\nexport const timelineInitialState: TimelineState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        data: []\n    });\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInjector.html":{"url":"interceptors/TokenInjector.html","title":"interceptor - TokenInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeadersIfNecessary\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addAuthHeadersIfNecessary\n                        \n                        \n                    \n                \n            \n            \n                \naddAuthHeadersIfNecessary(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/interceptors.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from './authentication.service';\n\n@Injectable()\nexport class TokenInjector implements HttpInterceptor {\n    /* istanbul ignore next */\n    constructor(private authenticationService: AuthenticationService) {\n    }\n\n    /* istanbul ignore next */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(this.addAuthHeadersIfNecessary(request));\n    }\n\n\n    addAuthHeadersIfNecessary(request: HttpRequest): HttpRequest {\n        const url = request.url;\n\n        const notCheckTokenRequest = !(url.endsWith('/auth/check_token') || url.endsWith('/auth/token') || url.endsWith('/auth/code'));\n        if (notCheckTokenRequest) {\n            const update = {setHeaders: AuthenticationService.getSecurityHeader()};\n            request = request.clone(update);\n        }\n        return request;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogIn.html":{"url":"classes/TryToLogIn.html","title":"class - TryToLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to push login/password pair to the authentication service\nEmitted by {LoginComponent} in the onSubmit @method which is called\nwhen the user click on the Login button of the login page form.\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:80\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogOut.html":{"url":"classes/TryToLogOut.html","title":"class - TryToLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used when the user logout\nEmitted by {NavbarComponent} win the logOut @method which is called\nwhen the user click on the logOut button of the navbar\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:94\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date,\n                public firstName?:string,\n                public lastName?:string) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeAheadSettingsComponent.html":{"url":"components/TypeAheadSettingsComponent.html","title":"component - TypeAheadSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeAheadSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts\n\n\n\n    \n        Extends\n    \n    \n                MultiSettingsComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-ahead-settings\n            \n\n            \n                styleUrls\n                ./type-ahead-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-ahead-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                            \n                                    Private\n                                baseSettings\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                    Protected\n                                placeholder$\n                            \n                            \n                                    Protected\n                                setting$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                computeMultiValidators\n                            \n                            \n                                initFormGroup\n                            \n                            \n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                            \n                                    Protected\n                                convert\n                            \n                            \n                                    Private\n                                dispatch\n                            \n                            \n                                    Protected\n                                initFormGroup\n                            \n                            \n                                    Protected\n                                isEqual\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                submitValue\n                            \n                            \n                                    Protected\n                                updateValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                            \n                                messagePlaceholder\n                            \n                            \n                                requiredField\n                            \n                            \n                                settingPath\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/components/settings/type-ahead-settings/type-ahead-settings.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:26\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messagePlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:27\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        requiredField\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:28\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settingPath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:26\n\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            computeMultiValidators\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    computeMultiValidators()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ninitFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \nupdateValue(value)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         MultiSettingsComponent\n\n                \n            \n            \n                \n                        Defined in         MultiSettingsComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            convert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convert(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            dispatch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dispatch(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:87\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            initFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isEqual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEqual(formA, formB)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formA\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formB\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:69\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            submitValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitValue()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:97\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseSettingComponent\n\n                \n            \n            \n                \n                        Defined in         BaseSettingComponent:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         MultiSettingsComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         MultiSettingsComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            baseSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            placeholder$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            setting$\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseSettingComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseSettingComponent:30\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MultiSettingsComponent} from \"../multi-settings/multi-settings.component\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\n\n@Component({\n  selector: 'of-type-ahead-settings',\n  templateUrl: './type-ahead-settings.component.html',\n  styleUrls: ['./type-ahead-settings.component.scss']\n})\nexport class TypeAheadSettingsComponent extends MultiSettingsComponent implements OnInit, OnDestroy {\n\n    constructor(protected store: Store) {\n        super(store)\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        settings.{{settingPath}}\n        \n    \n\n\n    \n\n    \n                \n                    ./type-ahead-settings.component.scss\n                \n                .tags-field {\n    /deep/ .dropdown-toggle {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            settings.{{settingPath}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeAheadSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeFilterComponent.html":{"url":"components/TypeFilterComponent.html","title":"component - TypeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-filter\n            \n\n            \n                styleUrls\n                ./type-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                typeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport * as _ from 'lodash';\nimport {FilterType} from \"@ofServices/filter.service\";\n\n\n@Component({\n    selector: 'of-type-filter',\n    templateUrl: './type-filter.component.html',\n    styleUrls: ['./type-filter.component.scss']\n})\nexport class TypeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    typeFilterForm: FormGroup;\n\n    private _filter$: Observable;\n\n    get filter$(): Observable{\n        return this._filter$;\n    }\n\n    // set filter$(filter: Observable) {\n    //     this._filter$ = filter;\n    // }\n\n    constructor(private store: Store) {\n        this.typeFilterForm = this.createFormGroup();\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            alarm: new FormControl(),\n            action: new FormControl(),\n            question: new FormControl(),\n            notification: new FormControl()\n        },{updateOn: 'change'});\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TYPE_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.typeFilterForm.get('alarm').setValue(!next.active || next.status.alarm, {emitEvent: false});\n                this.typeFilterForm.get('action').setValue(!next.active || next.status.action, {emitEvent: false});\n                this.typeFilterForm.get('question').setValue(!next.active || next.status.question, {emitEvent: false});\n                this.typeFilterForm.get('notification').setValue(!next.active || next.status.notification, {emitEvent: false});\n            } else {\n                this.typeFilterForm.get('alarm').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('action').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('question').setValue(true,{emitEvent: false});\n                this.typeFilterForm.get('notification').setValue(true,{emitEvent: false});\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.typeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.isEqual(formA,formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TYPE_FILTER,\n                        active: !(form.alarm && form.action && form.question && form.notification),\n                        status: form\n                    }))\n                );\n        });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n        \n            \n                \n                feed.filters.type.alarm.label\n            \n            \n                \n                feed.filters.type.action.label\n            \n            \n                \n                feed.filters.type.question.label\n            \n            \n                \n                feed.filters.type.notification.label\n            \n        \n    \n    feed.filters.type.title\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./type-filter.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n$cell-width: 10;\n\n.type-selections {\n  display: table;\n  width: $cell-width * 2px;\n  height: $cell-width * 2px;\n}\n\n.type-row {\n  display: table-row;\n}\n\n.type-cell {\n  display: table-cell;\n}\n\n/deep/ .popover {\n  background-color: $dark;\n  .popover-header {\n    color: $light;\n    background-color: $dark;\n  }\n  .popover-body {\n    color: $light;\n  }\n  .arrow::after{\n    border-right-color: $dark;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        feed.filters.type.alarm.label                                                        feed.filters.type.action.label                                                        feed.filters.type.question.label                                                        feed.filters.type.notification.label                            feed.filters.type.title                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchiveFiltersComponent', 'selector': 'of-archive-filters'},{'name': 'ArchiveListComponent', 'selector': 'of-archive-list'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'BaseFilterComponent', 'selector': 'of-base-filter'},{'name': 'BaseSettingComponent', 'selector': 'of-base-setting'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'EmailSettingComponent', 'selector': 'of-email-setting'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InfoComponent', 'selector': 'of-info'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'ListFilterComponent', 'selector': 'of-list-filter'},{'name': 'ListSettingComponent', 'selector': 'of-list-setting'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'MultiSettingsComponent', 'selector': 'of-multi-settings'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'SettingsComponent', 'selector': 'of-settings'},{'name': 'TagsFilterComponent', 'selector': 'of-tags-filter'},{'name': 'TextSettingComponent', 'selector': 'of-text-setting'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeAheadSettingsComponent', 'selector': 'of-type-ahead-settings'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'CalcHeightDirective', 'selector': '[calcHeightDirective]'},{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArchiveFilter.html":{"url":"classes/UpdateArchiveFilter.html","title":"class - UpdateArchiveFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArchiveFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/archive.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/archive.actions.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ArchiveActionTypes.UpdateArchiveFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/archive.actions.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {LightCardActionTypes} from \"@ofActions/light-card.actions\";\n\nexport enum ArchiveActionTypes {\n    UpdateArchiveFilter = '[Archive] Update Filter',\n    SendArchiveQuery = '[Archive] Send Query',\n    ArchiveQuerySuccess = '[Archive] Query was successful',\n    HandleUnexpectedError = '[Archive] Handle unexpected error related to archived card issue',\n    SelectArchivedLightCard = '[Archive] Select one archived light card'\n\n}\n\nexport class UpdateArchiveFilter implements Action {\n    readonly type = ArchiveActionTypes.UpdateArchiveFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{filterPath: string, filterValues: string[]}){}\n}\n\nexport class SendArchiveQuery implements Action {\n    readonly type = ArchiveActionTypes.SendArchiveQuery;\n    /* istanbul ignore next */\n    constructor(public payload:{params: Map}){}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport class ArchiveQuerySuccess implements Action {\n    readonly type = ArchiveActionTypes.ArchiveQuerySuccess;\n    /* istanbul ignore next */\n    constructor(public payload:{lightCards: LightCard[]}){}\n}\n\nexport class SelectArchivedLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = ArchiveActionTypes.SelectArchivedLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\n\n\n\nexport type ArchiveActions =\n    UpdateArchiveFilter\n    | SendArchiveQuery\n    | HandleUnexpectedError\n    | ArchiveQuerySuccess\n    |SelectArchivedLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTimeReference.html":{"url":"classes/UpdateTimeReference.html","title":"class - UpdateTimeReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTimeReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/time.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action dispatch to update the current virtual time of the application\n\n            \n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/time.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeActionTypes.UpdateTimeReference\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/time.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from \"@ngrx/store\";\nimport {TimeReference} from \"@ofModel/time.model\";\nimport {Message} from \"@ofModel/message.model\";\nimport * as moment from \"moment-timezone\";\n\nexport enum TimeActionTypes{\n    Tick='[Time] tick',\n    UpdateTimeReference='[Time] try to update the time reference',\n    FailToUpdateTimeReference='[Time] fail to update the time reference'\n}\n\n/**\n * Heart beat of the application change current date\n * Contains the elapsed virtual time since the previous heart beat so any components following the clock\n * can shift their timespan accordingly\n */\nexport class Tick implements  Action{\n    readonly type=TimeActionTypes.Tick;\n    constructor(public payload:TickPayload){}\n}\n\n/**\n * Clock tick (heart beat) payload\n */\nexport class TickPayload {\n    constructor(public currentTime: moment.Moment,\n                public elapsedSinceLast: number) {\n    }\n}\n\n/**\n * Action dispatch to update the current virtual time of the application\n */\n\nexport class UpdateTimeReference implements Action{\n    readonly type=TimeActionTypes.UpdateTimeReference;\n    constructor(public payload:{timeReference:TimeReference}){};\n}\n\n\n/**\n * Notify that something went wrong while changing the virtual time.\n * Nothing has been done and an error is reported\n */\nexport class FailToUpdateTimeReference implements Action{\n    readonly type = TimeActionTypes.FailToUpdateTimeReference;\n    constructor(public payload:{ error: Message;}){}\n}\n\n\nexport type TimeActions =\n      Tick\n    | UpdateTimeReference\n    | FailToUpdateTimeReference;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedSubscription.html":{"url":"classes/UpdatedSubscription.html","title":"class - UpdatedSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:84\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdatedSubscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:84\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    ClearLightCardSelection = '[LCard] Clear Light Card Selection',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n    RemoveLightCard = '[LCard] Remove a card'\n}\n\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class ClearLightCardSelection implements Action {\n\n    readonly type = LightCardActionTypes.ClearLightCardSelection;\n    constructor() {\n    }\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n\n\n}\n\nexport class RemoveLightCard implements Action {\n\n    readonly  type = LightCardActionTypes.RemoveLightCard;\n\n    constructor(public  payload: {cards: string[]}){\n\n    }\n}\n\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | ClearLightCardSelection\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards\n    | RemoveLightCard;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(login: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n    public constructor(\n    readonly login:string,\n    readonly firstName:string,\n    readonly lastName:string\n){}\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserContext.html":{"url":"classes/UserContext.html","title":"class - UserContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(login: string, token: string, firstName: string, lastName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/user-context.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        login\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserContext{\n    constructor(\n        readonly login:string,\n        readonly token:string,\n        readonly firstName:string,\n        readonly lastName:string,\n    ){}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilitiesModule.html":{"url":"modules/UtilitiesModule.html","title":"module - UtilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/utilities/utilities.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalcHeightDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalcHeightDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalcHeightDirective } from \"./calc-height.directive\";\n//TODO Find out where directive would be best put\n\n@NgModule({\n  declarations: [CalcHeightDirective],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n      CalcHeightDirective\n  ]\n})\nexport class UtilitiesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/XAxisTickFormatPipe.html":{"url":"pipes/XAxisTickFormatPipe.html","title":"pipe - XAxisTickFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  XAxisTickFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        xAxisTickFormat\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts:79\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformAdvanced\n                        \n                        \n                    \n                \n            \n            \n                \ntransformAdvanced(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts:55\n                \n            \n\n\n            \n                \n                    special format function used for wrote all ticks on one horizontal line\nif cluster level is correct return a string formatted from value\nelse return an empty string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transformHovered\n                        \n                        \n                    \n                \n            \n            \n                \ntransformHovered(value: any, clusterLevel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts:16\n                \n            \n\n\n            \n                \n                    return a string formatted from value by the according cluster level\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    clusterLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport * as moment from 'moment';\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Pipe({\n  name: 'xAxisTickFormat'\n})\nexport class XAxisTickFormatPipe implements PipeTransform {\n  constructor(private timeService: TimeService) {\n  }\n  /**\n   * return a string formatted from value by the according cluster level\n   * @param value\n   * @param clusterLevel\n   */\n  transformHovered(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n      const date = moment(value);\n      switch (clusterLevel) {\n        case 'Min':\n        case 'Sec': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') +\n              'h' + this.timeService.predefinedFormat(date, 'minutesOnly');\n        }\n        case 'Hou': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsWeek') + 'h';\n        }\n        case 'Day':\n        case 'Dat':\n        case 'Wee':\n        case 'Mon':\n        case 'Yea':\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * special format function used for wrote all ticks on one horizontal line\n   * if cluster level is correct return a string formatted from value\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transformAdvanced(value: any, clusterLevel: string): string {\n    if (clusterLevel) {\n      const date = moment(value);\n      if (date) {\n        if (clusterLevel === 'Hou') {\n          return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n        } else if (clusterLevel === 'Min') {\n          return this.timeService.predefinedFormat(date, 'minutesOnly');\n        } else if (clusterLevel === 'Sec') {\n          return this.timeService.predefinedFormat(date, 'secondedsOnly');\n        } else if (clusterLevel === 'nbW') {\n          return this.timeService.predefinedFormat(date, 'weekNumberOnly');\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * return a string formatted from value by the according cluster level\n   * else return an empty string\n   * @param value\n   * @param clusterLevel\n   */\n  transform(value: any, clusterLevel: string): string {\n    if (typeof value === 'string') {\n      return value;\n    }\n    if (clusterLevel) {\n    const date = moment(value);\n    const startYear = moment(date).startOf('year');\n      switch (clusterLevel) {\n        case 'Hou' : {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateInsideTooltipsMonth');\n          }\n          if (date.hours() === 0) {\n            return this.timeService.predefinedFormat(date, 'dateOnDay');\n          } else {\n            return this.timeService.predefinedFormat(date, 'hoursOnly');\n          }\n        }\n        case 'Min': {\n          if (date.minutes() === 0) {\n            if (date.hour() === 0) {\n              return this.timeService.predefinedFormat(date, 'dateOnDay');\n            } else {\n              return this.timeService.predefinedFormat(date, 'hoursOnly');\n            }\n          }\n        }\n        case 'Sec': {\n          if (date.seconds() === 0) {\n            if (date.minutes() === 0) {\n              if (date.hour() === 0) {\n                return this.timeService.predefinedFormat(date, 'dateOnDay');\n              } else {\n                return this.timeService.predefinedFormat(date, 'hoursOnly') + 'h';\n              }\n            } else {\n              return this.timeService.predefinedFormat(date, 'minutesOnly');\n            }\n          }\n        }\n        case 'Day': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateOnDay');\n        }\n        case 'Dat': {\n          if (date.valueOf() === startYear.valueOf()) {\n            return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDayNewYear');\n          }\n          return this.timeService.predefinedFormat(date, 'dateSimplifliedOnDay');\n        }\n        case 'Wee': {\n          return this.timeService.predefinedFormat(date, 'dateOnWeek');\n        }\n        case 'Mon': {\n          return this.timeService.predefinedFormat(date, 'dateOnMonth');\n        }\n        case 'Yea': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        case 'nbW': {\n          return this.timeService.predefinedFormat(date, 'dateOnYear');\n        }\n        default: {\n          return date.format(clusterLevel);\n        }\n      }\n    } else {\n      return '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.2\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.2\n        \n            @angular/compiler : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.17\n        \n            @fortawesome/free-solid-svg-icons : ^5.8.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.0\n        \n            @ngrx/effects : ^7.1.0\n        \n            @ngrx/entity : ^7.1.0\n        \n            @ngrx/router-store : ^7.1.0\n        \n            @ngrx/store : ^7.1.0\n        \n            @ngrx/store-devtools : ^7.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @swimlane/ngx-charts : ^10.1.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.6.3\n        \n            guid-typescript : ^1.0.9\n        \n            handlebars : ^4.0.14\n        \n            jwt-decode : ^2.2.0\n        \n            lodash : ^4.17.15\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.25\n        \n            ng-event-source : ^1.0.14\n        \n            ngrx-router : ^2.0.1\n        \n            ngx-type-ahead : ^2.0.1\n        \n            rxjs : ^6.3.3\n        \n            svg-pan-zoom : ^3.6.0\n        \n            tslib : ^1.9.3\n        \n            zone.js : ^0.8.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../thirds.model.ts)\n                        \n                        \n                            ArchiveActionTypes   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActionTypes   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActionTypes   (src/.../card.actions.ts)\n                        \n                        \n                            CardOperationType   (src/.../card-operation.model.ts)\n                        \n                        \n                            ConfigActionTypes   (src/.../config.actions.ts)\n                        \n                        \n                            Display   (src/.../light-card.model.ts)\n                        \n                        \n                            FeedActionTypes   (src/.../feed.actions.ts)\n                        \n                        \n                            FilterType   (src/.../filter.service.ts)\n                        \n                        \n                            InputType   (src/.../thirds.model.ts)\n                        \n                        \n                            LightCardActionTypes   (src/.../light-card.actions.ts)\n                        \n                        \n                            LocalStorageAuthContent   (src/.../authentication.service.ts)\n                        \n                        \n                            MenuActionTypes   (src/.../menu.actions.ts)\n                        \n                        \n                            MessageLevel   (src/.../message.model.ts)\n                        \n                        \n                            SettingsActionTypes   (src/.../settings.actions.ts)\n                        \n                        \n                            Severity   (src/.../light-card.model.ts)\n                        \n                        \n                            Sound   (src/.../light-card.model.ts)\n                        \n                        \n                            TimeActionTypes   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActionTypes   (src/.../timeline.actions.ts)\n                        \n                        \n                            TimeSpeed   (src/.../time.model.ts)\n                        \n                        \n                            TitlePosition   (src/.../card.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/thirds.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                 JNLP\n                            \n                        \n                        \n                            \n                                 URL\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InputType\n                    \n                \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                 LIST_RADIO\n                            \n                        \n                        \n                            \n                                 SWITCH_LIST\n                            \n                        \n                        \n                            \n                                 LONGTEXT\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n            \n        \n\n    src/app/store/actions/archive.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ArchiveActionTypes\n                    \n                \n                        \n                            \n                                 UpdateArchiveFilter\n                            \n                        \n                        \n                            \n                                Value : [Archive] Update Filter\n                            \n                        \n                        \n                            \n                                 SendArchiveQuery\n                            \n                        \n                        \n                            \n                                Value : [Archive] Send Query\n                            \n                        \n                        \n                            \n                                 ArchiveQuerySuccess\n                            \n                        \n                        \n                            \n                                Value : [Archive] Query was successful\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Archive] Handle unexpected error related to archived card issue\n                            \n                        \n                        \n                            \n                                 SelectArchivedLightCard\n                            \n                        \n                        \n                            \n                                Value : [Archive] Select one archived light card\n                            \n                        \n            \n        \n\n    src/app/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 InitAuthStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Init Authentication Status\n                            \n                        \n                        \n                            \n                                 CheckAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status\n                            \n                        \n                        \n                            \n                                 AcceptLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log in attempt\n                            \n                        \n                        \n                            \n                                 RejectLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Reject the user log in attempt\n                            \n                        \n                        \n                            \n                                 TryToLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user in\n                            \n                        \n                        \n                            \n                                 TryToLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user out\n                            \n                        \n                        \n                            \n                                 AcceptLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 AcceptLogOutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Success Accept the user log out attempt\n                            \n                        \n            \n        \n\n    src/app/store/actions/card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CardActionTypes\n                    \n                \n                        \n                            \n                                 ClearCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Clear\n                            \n                        \n                        \n                            \n                                 LoadCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card\n                            \n                        \n                        \n                            \n                                 LoadCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Success\n                            \n                        \n                        \n                            \n                                 LoadCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Fail\n                            \n                        \n                        \n                            \n                                 LoadArchivedCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Success\n                            \n                        \n                        \n                            \n                                 LoadArchivedCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Archived Card Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Card] Handle unexpected error related to card issue\n                            \n                        \n            \n        \n\n    src/app/model/card-operation.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardOperationType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/store/actions/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActionTypes\n                    \n                \n                        \n                            \n                                 LoadConfig\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config\n                            \n                        \n                        \n                            \n                                 LoadConfigSuccess\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Success\n                            \n                        \n                        \n                            \n                                 LoadConfigFailure\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Config] Handle unexpected error related to configuration issue\n                            \n                        \n            \n        \n\n    src/app/model/light-card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Display\n                    \n                \n                        \n                            \n                                 BUBBLE\n                            \n                        \n                        \n                            \n                                 LINE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                        \n                            \n                                 ALARM\n                            \n                        \n                        \n                            \n                                Value : ALARM\n                            \n                        \n                        \n                            \n                                 ACTION\n                            \n                        \n                        \n                            \n                                Value : ACTION\n                            \n                        \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n                        \n                            \n                                Value : QUESTION\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n            \n        \n\n    src/app/store/actions/feed.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeedActionTypes\n                    \n                \n                        \n                            \n                                 ApplyFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change filter Status\n                            \n                        \n                        \n                            \n                                 InitFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Init filter\n                            \n                        \n            \n        \n\n    src/app/services/filter.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterType\n                    \n                \n                        \n                            \n                                 TYPE_FILTER\n                            \n                        \n                        \n                            \n                                 RECIPIENT_FILTER\n                            \n                        \n                        \n                            \n                                 TAG_FILTER\n                            \n                        \n                        \n                            \n                                 TIME_FILTER\n                            \n                        \n                        \n                            \n                                 TEST_FILTER\n                            \n                        \n            \n        \n\n    src/app/store/actions/light-card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LightCardActionTypes\n                    \n                \n                        \n                            \n                                 LoadLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load\n                            \n                        \n                        \n                            \n                                 EmptyLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Empty\n                            \n                        \n                        \n                            \n                                 LoadLightCardsSuccess\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Success\n                            \n                        \n                        \n                            \n                                 LoadLightCardsExtendedData\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Extended Data\n                            \n                        \n                        \n                            \n                                 LoadLightCardsFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Fail\n                            \n                        \n                        \n                            \n                                 SelectLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Select One\n                            \n                        \n                        \n                            \n                                 ClearLightCardSelection\n                            \n                        \n                        \n                            \n                                Value : [LCard] Clear Light Card Selection\n                            \n                        \n                        \n                            \n                                 AddLightCardFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Add Light Card Fail\n                            \n                        \n                        \n                            \n                                 UpdatedSubscription\n                            \n                        \n                        \n                            \n                                Value : [LCard] UpdateSubscription\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [LCard] Handle unexpected error related to authentication issue\n                            \n                        \n                        \n                            \n                                 RemoveLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Remove a card\n                            \n                        \n            \n        \n\n    src/app/services/authentication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageAuthContent\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 expirationDate\n                            \n                        \n                        \n                            \n                                Value : expirationDate\n                            \n                        \n                        \n                            \n                                 identifier\n                            \n                        \n                        \n                            \n                                Value : identifier\n                            \n                        \n                        \n                            \n                                 clientId\n                            \n                        \n                        \n                            \n                                Value : clientId\n                            \n                        \n            \n        \n\n    src/app/store/actions/menu.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuActionTypes\n                    \n                \n                        \n                            \n                                 LoadMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu\n                            \n                        \n                        \n                            \n                                 LoadMenuSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Success\n                            \n                        \n                        \n                            \n                                 LoadMenuFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Menu] Handle unexpected error\n                            \n                        \n                        \n                            \n                                 SelectMenuLink\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Success\n                            \n                        \n                        \n                            \n                                 SelectMenuLinkFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Select Menu Link Failure\n                            \n                        \n            \n        \n\n    src/app/model/message.model.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageLevel\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n    src/app/store/actions/settings.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        SettingsActionTypes\n                    \n                \n                        \n                            \n                                 LoadSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings\n                            \n                        \n                        \n                            \n                                 LoadSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Success\n                            \n                        \n                        \n                            \n                                 LoadSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Load Settings Fail\n                            \n                        \n                        \n                            \n                                 PatchSettings\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings\n                            \n                        \n                        \n                            \n                                 PatchSettingsSuccess\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Success\n                            \n                        \n                        \n                            \n                                 PatchSettingsFailure\n                            \n                        \n                        \n                            \n                                Value : [Settings] Patch Settings Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Settings] Handle unexpected error related to user settings issue\n                            \n                        \n            \n        \n\n    src/app/store/actions/time.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeActionTypes\n                    \n                \n                        \n                            \n                                 Tick\n                            \n                        \n                        \n                            \n                                Value : [Time] tick\n                            \n                        \n                        \n                            \n                                 UpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] try to update the time reference\n                            \n                        \n                        \n                            \n                                 FailToUpdateTimeReference\n                            \n                        \n                        \n                            \n                                Value : [Time] fail to update the time reference\n                            \n                        \n            \n        \n\n    src/app/store/actions/timeline.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimelineActionTypes\n                    \n                \n                        \n                            \n                                 InitTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Init timeline\n                            \n                        \n                        \n                            \n                                 SetCardDataTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Set Card Data\n                            \n                        \n            \n        \n\n    src/app/model/time.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeSpeed\n                    \n                \n                        \n                            \n                                 X1\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 X2\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 X10\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 X60\n                            \n                        \n                        \n                            \n                                Value : 60\n                            \n                        \n                        \n                            \n                                 X3600\n                            \n                        \n                        \n                            \n                                Value : 3600\n                            \n                        \n                        \n                            \n                                 HALF\n                            \n                        \n                        \n                            \n                                Value : 0.5\n                            \n                        \n            \n        \n\n    src/app/model/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TitlePosition\n                    \n                \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_declarations\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nInfoComponent\n\nInfoComponent\n\nAppModule -->\n\nInfoComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nUtilitiesModule->CardsModule\n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nUtilitiesModule->FeedModule\n\n\n\n\n\nCalcHeightDirective \n\nCalcHeightDirective \n\nCalcHeightDirective  -->\n\nUtilitiesModule->CalcHeightDirective \n\n\n\n\n\nArchiveFiltersComponent\n\nArchiveFiltersComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchiveFiltersComponent->ArchivesModule\n\n\n\n\n\nArchiveListComponent\n\nArchiveListComponent\n\nArchivesModule -->\n\nArchiveListComponent->ArchivesModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nBaseFilterComponent\n\nBaseFilterComponent\n\nArchivesModule -->\n\nBaseFilterComponent->ArchivesModule\n\n\n\n\n\nListFilterComponent\n\nListFilterComponent\n\nArchivesModule -->\n\nListFilterComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\nArchivesModule -->\n\nCardsModule->ArchivesModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\nCardListComponent\n\nCardListComponent\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTagsFilterComponent\n\nTagsFilterComponent\n\nFeedModule -->\n\nTagsFilterComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nI18nService\n\nI18nService\n\nServicesModule -->\n\nI18nService->ServicesModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nServicesModule -->\n\nSettingsService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\nBaseSettingComponent\n\nBaseSettingComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nBaseSettingComponent->SettingsModule\n\n\n\n\n\nEmailSettingComponent\n\nEmailSettingComponent\n\nSettingsModule -->\n\nEmailSettingComponent->SettingsModule\n\n\n\n\n\nListSettingComponent\n\nListSettingComponent\n\nSettingsModule -->\n\nListSettingComponent->SettingsModule\n\n\n\n\n\nMultiSettingsComponent\n\nMultiSettingsComponent\n\nSettingsModule -->\n\nMultiSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nTextSettingComponent\n\nTextSettingComponent\n\nSettingsModule -->\n\nTextSettingComponent->SettingsModule\n\n\n\n\n\nTypeAheadSettingsComponent\n\nTypeAheadSettingsComponent\n\nSettingsModule -->\n\nTypeAheadSettingsComponent->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\n!environment\n\n!environment\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\nCalcHeightDirective\n\nCalcHeightDirective\n\nUtilitiesModule -->\n\nCalcHeightDirective->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    32 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    86 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        30 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArchiveActions   (src/.../archive.actions.ts)\n                        \n                        \n                            AuthenticationActions   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActions   (src/.../card.actions.ts)\n                        \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActions   (src/.../feed.actions.ts)\n                        \n                        \n                            LightCardActions   (src/.../light-card.actions.ts)\n                        \n                        \n                            MenuActions   (src/.../menu.actions.ts)\n                        \n                        \n                            SettingsActions   (src/.../settings.actions.ts)\n                        \n                        \n                            TimeActions   (src/.../time.actions.ts)\n                        \n                        \n                            TimelineActions   (src/.../timeline.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/archive.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ArchiveActions\n                \n            \n            \n                \n                        UpdateArchiveFilter | SendArchiveQuery | HandleUnexpectedError | ArchiveQuerySuccess | SelectArchivedLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/authentication.actions.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationActions\n                \n            \n            \n                \n                        InitAuthStatus | AcceptLogIn | RejectLogIn | TryToLogIn | TryToLogOut | CheckAuthenticationStatus | AcceptLogOut | AcceptLogOutSuccess\n\n                \n            \n        \n    \n    src/app/store/actions/card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    CardActions\n                \n            \n            \n                \n                        ClearCard | LoadCard | LoadCardSuccess | LoadCardFailure | LoadArchivedCard | LoadArchivedCardSuccess | LoadArchivedCardFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/config.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigActions\n                \n            \n            \n                \n                        LoadConfig | LoadConfigSuccess | LoadConfigFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/feed.actions.ts\n    \n    \n        \n            \n                \n                    \n                    FeedActions\n                \n            \n            \n                \n                        InitFilters | ApplyFilter\n\n                \n            \n        \n    \n    src/app/store/actions/light-card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    LightCardActions\n                \n            \n            \n                \n                        LoadLightCards | LoadLightCardsSuccess | LoadLightCardsFailure | SelectLightCard | ClearLightCardSelection | AddLightCardFailure | UpdatedSubscription | HandleUnexpectedError | EmptyLightCards | RemoveLightCard\n\n                \n            \n        \n    \n    src/app/store/actions/menu.actions.ts\n    \n    \n        \n            \n                \n                    \n                    MenuActions\n                \n            \n            \n                \n                        LoadMenu | LoadMenuSuccess | LoadMenuFailure | HandleUnexpectedError | SelectMenuLink | SelectMenuLinkSuccess | SelectMenuLinkFailure\n\n                \n            \n        \n    \n    src/app/store/actions/settings.actions.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsActions\n                \n            \n            \n                \n                        LoadSettings | LoadSettingsSuccess | LoadSettingsFailure | PatchSettings | PatchSettingsSuccess | PatchSettingsFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/time.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimeActions\n                \n            \n            \n                \n                        Tick | UpdateTimeReference | FailToUpdateTimeReference\n\n                \n            \n        \n    \n    src/app/store/actions/timeline.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimelineActions\n                \n            \n            \n                \n                        InitTimeline | SetCardDataTimeline\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
