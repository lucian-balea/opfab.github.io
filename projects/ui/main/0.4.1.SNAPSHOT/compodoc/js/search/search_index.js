var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/AcceptLogIn.html",[0,0.236,1,2.13]],["body/classes/AcceptLogIn.html",[0,0.42,1,3.078,2,0.518,3,0.047,4,0.047,5,0.102,6,1.643,7,1.397,8,1.396,9,3.564,10,2.164,11,2.038,12,2.625,13,3.698,14,3.847,15,2.305,16,3.696,17,2.114,18,3.696,19,3.356,20,3.193,21,2.768,22,2.659,23,3.532,24,2.645,25,3.417,26,3.696,27,3.417,28,1.576,29,3.325,30,3.55,31,3.696,32,0.352,33,1.276,34,0.2,35,0.513,36,0.936,37,1.883,38,1.364,39,0.349,40,1.152,41,3.411,42,0.289,43,4.79,44,0.361,45,0.009,46,0.322,47,0.351,48,3.188,49,0.543,50,0.403,51,0.109,52,0.469,53,2.681,54,1.486,55,2.251,56,1.643,57,0.138,58,0.625,59,1.587,60,2.769,61,0.969,62,2.038,63,2.769,64,1.486,65,3.193,66,3.509,67,3.997,68,3.417,69,2.769,70,1.77,71,2.383,72,2.981,73,2.379,74,3.299,75,2.769,76,1.388,77,1.852,78,1.44,79,1.086,80,1.486,81,1.486,82,1.535,83,1.535,84,2.768,85,2.768,86,2.305,87,2.659,88,1.843,89,1.188,90,1.188,91,1.131,92,1.843,93,1.77,94,1.843,95,1.843,96,1.704,97,1.319,98,0.969,99,1.77,100,2.448,101,2.768,102,2.769,103,2.468,104,1.77,105,1.017,106,1.77,107,1.77,108,1.643,109,3.417,110,0.992,111,1.843,112,1.704,113,1.77,114,2.768,115,1.236,116,1.843,117,1.843,118,3.696,119,1.77,120,1.843,121,2.768,122,1.843,123,2.659,124,0.685,125,1.843,126,1.77,127,1.843,128,1.77,129,1.843,130,2.659,131,2.659,132,1.843,133,1.843,134,1.704,135,0.003,136,0.005,137,0.003]],["title/classes/AcceptLogOut.html",[0,0.236,74,2.13]],["body/classes/AcceptLogOut.html",[0,0.423,1,2.813,2,0.532,3,0.049,4,0.049,5,0.096,6,1.687,7,1.435,8,1.402,9,3.532,10,1.479,11,1.835,12,2.624,13,3.626,14,3.885,15,1.576,16,3.746,17,2.193,18,3.746,19,3.231,20,2.712,21,1.892,22,1.817,23,3.339,24,2.417,25,3.123,26,3.378,27,3.123,28,1.44,29,2.824,30,3.244,31,2.824,32,0.346,33,1.285,34,0.205,35,0.523,36,0.798,37,1.634,38,1.373,39,0.426,41,2.431,42,0.246,45,0.009,49,0.558,50,0.413,51,0.111,52,0.482,53,2.724,54,1.526,55,2.286,56,1.687,57,0.139,58,0.642,59,1.629,60,2.813,61,0.995,62,2.079,63,2.813,64,1.526,65,3.244,66,3.585,67,4.037,68,3.462,69,2.813,70,1.817,71,2.431,72,3.231,73,2.417,74,3.626,75,2.813,76,1.416,77,1.873,78,1.479,79,1.099,80,1.526,81,1.526,82,1.576,83,1.576,84,2.824,85,2.824,86,2.351,87,2.712,88,1.892,89,1.198,90,1.198,91,1.14,92,1.892,93,1.817,94,1.892,95,1.892,96,1.749,97,1.354,98,0.995,99,1.817,100,2.487,101,2.824,102,2.813,103,2.517,104,1.817,105,1.044,106,1.817,107,1.817,108,1.687,109,3.704,110,1.019,111,1.892,112,1.749,113,1.817,114,2.824,115,1.261,116,1.892,117,1.892,118,4.203,119,1.817,120,1.892,121,2.824,122,1.892,123,2.712,124,0.703,125,2.824,126,2.712,127,2.824,128,2.712,129,2.824,130,3.244,131,3.244,132,1.892,133,1.892,134,1.749,135,0.003,136,0.005,137,0.003,138,4.885]],["title/classes/AcceptLogOutSuccess.html",[0,0.236,75,2.13]],["body/classes/AcceptLogOutSuccess.html",[0,0.423,1,2.811,2,0.531,3,0.049,4,0.049,5,0.103,6,1.685,7,1.433,8,1.402,9,3.584,10,1.477,11,1.962,12,2.633,13,3.726,14,3.884,15,1.574,16,3.376,17,2.132,18,3.376,19,3.23,20,2.71,21,1.89,22,1.815,23,3.337,24,2.679,25,3.461,26,3.744,27,3.461,28,1.596,29,2.821,30,3.595,31,2.821,32,0.349,33,1.285,34,0.205,35,0.523,36,0.797,37,1.633,38,1.372,39,0.239,41,2.429,42,0.165,45,0.009,49,0.557,50,0.413,51,0.111,52,0.482,53,2.722,54,1.524,55,2.285,56,1.685,57,0.139,58,0.641,59,1.627,60,2.811,61,0.994,62,2.078,63,2.811,64,1.524,65,3.242,66,3.531,67,4.035,68,3.461,69,2.811,70,1.815,71,2.429,72,3.019,73,2.415,74,3.499,75,3.117,76,1.415,77,1.873,78,1.477,79,1.098,80,1.524,81,1.524,82,1.574,83,1.574,84,2.821,85,2.821,86,2.349,87,2.71,88,1.89,89,1.198,90,1.198,91,1.14,92,1.89,93,1.815,94,1.89,95,1.89,96,1.747,97,1.352,98,0.994,99,1.815,100,2.486,101,2.821,102,2.811,103,2.515,104,1.815,105,1.043,106,1.815,107,1.815,108,1.685,109,3.461,110,1.018,111,1.89,112,1.747,113,1.815,114,3.376,115,1.507,116,1.89,117,1.89,118,4.005,119,1.815,120,1.89,121,3.376,122,1.89,123,2.71,124,0.703,125,1.89,126,1.815,127,1.89,128,1.815,129,1.89,130,3.242,131,3.242,132,2.821,133,2.821,134,1.747,135,0.003,136,0.005,137,0.003,139,3.27]],["title/classes/Action.html",[0,0.236,8,0.719]],["body/classes/Action.html",[0,0.439,2,0.661,3,0.061,4,0.061,5,0.061,8,0.929,11,1.153,32,0.294,36,0.556,38,1.587,39,0.609,42,0.205,44,0.461,45,0.009,46,0.578,47,0.449,50,0.723,51,0.126,57,0.143,58,1.121,79,1.412,89,1.272,90,1.272,91,1.21,100,2.815,135,0.004,136,0.006,137,0.004,140,2.26,141,3.596,142,4.148,143,4.859,144,3.654,145,3.992,146,3.282,147,3.992,148,3.992,149,3.292,150,3.145,151,3.992,152,3.992,153,3.992,154,3.992,155,3.992,156,4.071,157,0.645,158,1.839,159,1.593,160,2.098,161,1.126,162,2.457,163,2.026,164,1.959,165,2.457,166,2.353,167,2.457,168,2.457,169,2.457,170,2.457,171,2.457,172,2.457,173,2.457,174,2.457,175,3.452,176,1.003,177,2.948,178,2.457,179,3.452,180,1.229,181,1.593,182,2.948,183,2.457,184,1.684,185,1.593,186,1.471,187,2.098,188,2.457,189,2.457,190,2.457,191,2.457,192,2.353,193,2.353,194,2.353,195,2.91,196,3.307,197,1.959,198,2.26,199,2.353,200,2.353,201,2.353,202,1.784,203,2.457,204,2.457,205,2.366,206,2.457,207,2.457,208,3.176,209,2.457,210,2.457]],["title/classes/AddCardDataTimeline.html",[0,0.236,211,2.797]],["body/classes/AddCardDataTimeline.html",[0,0.394,2,0.969,3,0.089,4,0.089,5,0.089,8,1.355,32,0.371,33,1.297,34,0.374,35,0.789,36,1.006,37,2.015,38,1.421,39,0.435,40,2.157,42,0.402,44,0.676,45,0.009,46,0.603,47,0.658,49,1.017,50,0.754,51,0.114,52,0.879,57,0.141,58,1.17,61,1.814,77,1.991,135,0.006,136,0.007,137,0.006,157,0.946,211,5.274,212,4.196,213,2.964,214,7.367,215,5.969,216,6.507,217,4.812,218,5.051,219,2.888,220,2.873,221,2.335,222,5.272,223,5.272,224,5.272,225,4.812]],["title/classes/AddLightCardFailure.html",[0,0.236,226,2.13]],["body/classes/AddLightCardFailure.html",[0,0.449,2,0.677,3,0.062,4,0.062,5,0.062,8,1.396,12,1.238,32,0.366,33,1.382,34,0.261,35,0.623,36,0.795,37,2.086,38,1.465,39,0.489,40,1.508,42,0.337,44,0.473,45,0.009,46,0.422,47,0.46,49,0.711,50,0.527,51,0.111,52,0.614,57,0.146,58,0.818,76,1.209,77,2.062,89,1.33,90,1.33,91,1.266,124,1.742,135,0.004,136,0.006,137,0.004,157,0.661,213,2.486,220,2.008,221,1.633,226,3.491,227,3.737,228,2.15,229,5.821,230,4.173,231,3.364,232,2.407,233,1.726,234,1.633,235,2.229,236,3.336,237,4.664,238,2.491,239,3.226,240,2.15,241,3.124,242,2.897,243,2.316,244,3.336,245,2.104,246,3.226,247,1.945,248,1.238,249,2.008,250,3.226,251,2.229,252,2.037,253,1.47,254,1.47,255,1.726,256,1.726,257,1.331,258,1.398,259,1.548,260,2.412,261,2.412,262,2.412,263,2.15,264,2.412,265,2.412,266,2.412,267,2.412,268,2.412,269,2.412,270,2.229]],["title/components/AppComponent.html",[271,1.091,272,1.731]],["body/components/AppComponent.html",[0,0.192,3,0.053,4,0.078,5,0.078,8,1.002,12,2.011,17,1.747,32,0.325,33,0.849,34,0.225,35,0.56,36,0.49,39,0.262,42,0.408,44,0.407,45,0.009,46,0.685,47,0.396,49,1.154,50,0.856,51,0.161,52,0.529,57,0.061,60,1.729,61,1.875,62,2.885,64,2.438,66,1.574,79,0.569,86,3.262,98,1.092,103,1.851,105,1.146,110,1.118,115,1.94,135,0.003,136,0.005,137,0.003,146,2.717,157,0.829,161,0.993,176,0.885,184,2.552,195,2.717,219,1.298,247,1.674,248,1.066,271,1.52,272,2.652,273,2.226,274,1.529,275,1.994,276,1.574,277,1.574,278,3.173,279,2.875,280,1.445,281,3.709,282,4.218,283,3.306,284,6.17,285,2.293,286,5.231,287,6.17,288,4.975,289,6.17,290,6.17,291,2.416,292,6.17,293,4.62,294,1.447,295,6.778,296,3.159,297,1.574,298,4.337,299,5.075,300,5.231,301,3.592,302,1.414,303,1.89,304,3.592,305,4.218,306,4.218,307,5.231,308,5.231,309,5.231,310,5.231,311,6.17,312,3.592,313,3.592,314,3.592,315,3.592,316,5.231,317,3.592,318,0.688,319,1.203,320,1.368,321,2.168,322,1.203,323,1.405,324,2.525,325,2.896,326,3.173,327,2.896,328,2.896,329,2.168,330,2.168,331,3.173,332,2.525,333,2.904,334,2.896,335,2.896,336,2.896,337,2.525,338,1.234,339,3.592,340,3.592,341,3.592,342,3.592,343,3.592,344,3.173,345,3.592,346,3.592,347,3.592,348,3.592,349,3.592,350,1.994,351,3.157,352,3.592,353,2.896,354,3.592,355,2.896,356,3.592,357,3.592,358,3.592,359,3.592,360,3.592,361,5.231,362,3.592,363,3.592,364,3.592,365,2.69,366,3.592,367,3.592,368,2.525,369,5.394,370,2.896,371,3.592,372,3.157,373,4.62,374,5.231,375,5.231,376,5.231,377,5.231,378,1.529,379,1.486,380,1.529,381,1.529,382,1.529,383,1.529,384,1.265,385,1.445,386,1.529,387,1.529,388,1.529,389,1.486,390,1.529,391,1.486,392,1.529,393,1.529,394,1.529,395,1.529,396,2.896,397,2.69,398,3.173,399,1.265,400,2.293,401,2.293,402,1.368,403,2.971,404,1.574,405,1.574,406,1.368,407,1.574,408,1.405,409,1.574,410,1.368,411,2.293,412,1.405,413,1.574,414,1.445,415,1.529,416,2.293,417,1.368,418,1.574,419,1.405,420,1.368,421,1.574,422,1.405,423,1.574,424,1.405,425,1.574,426,1.368,427,1.574,428,1.445,429,1.574,430,1.574,431,1.405,432,1.574,433,1.405,434,1.94,435,1.574,436,1.405,437,1.574,438,1.405,439,1.118,440,1.445,441,1.368,442,1.574,443,1.368,444,1.529,445,1.574]],["title/modules/AppModule.html",[446,1.83,447,3.111]],["body/modules/AppModule.html",[0,0.256,3,0.071,4,0.095,5,0.095,36,0.655,45,0.009,51,0.174,57,0.081,73,1.984,98,2.504,105,1.53,110,2.565,135,0.005,136,0.006,137,0.005,248,1.423,272,3.473,305,3.868,318,0.919,329,2.894,330,2.894,378,2.041,379,1.984,380,2.041,381,2.041,382,2.041,383,2.041,384,1.689,385,1.929,386,2.041,387,2.041,388,2.041,389,1.984,390,2.041,391,1.984,392,2.041,393,2.041,394,2.041,395,2.041,399,1.689,424,3.224,446,1.984,447,6.424,448,2.309,449,2.663,450,4.348,451,4.444,452,3.863,453,2.471,454,4.237,455,4.237,456,4.237,457,4.237,458,5.792,459,5.631,460,5.631,461,3.7,462,2.894,463,4.797,464,3.421,465,6.402,466,4.794,467,3.372,468,3.421,469,6.402,470,4.797,471,6.402,472,2.772,473,4.046,474,6.402,475,6.402,476,2.663,477,5.654,478,5.654,479,3.189,480,4.797,481,5.654,482,3.592,483,3.868,484,4.797,485,3.372,486,4.797,487,4.797,488,4.237,489,4.797,490,3.868,491,3.868,492,4.797,493,5.654,494,3.868,495,3.868,496,4.237,497,3.868,498,4.794,499,3.868,500,4.797,501,3.868,502,3.868,503,3.868,504,4.797,505,4.797,506,4.797,507,4.797,508,3.592,509,3.868]],["title/modules/AppRoutingModule.html",[446,1.83,458,3.111]],["body/modules/AppRoutingModule.html",[0,0.297,3,0.083,4,0.105,5,0.105,36,0.758,45,0.009,51,0.16,57,0.119,98,2.35,102,2.672,105,1.77,112,2.966,135,0.005,136,0.007,137,0.005,176,1.735,248,1.647,271,1.735,318,1.063,378,2.363,379,2.296,380,2.363,381,2.363,382,2.363,383,2.363,384,1.955,385,2.232,386,2.363,387,2.363,388,2.363,389,2.296,390,2.363,391,2.296,392,2.363,393,2.363,394,2.363,395,2.363,448,2.672,453,2.86,458,4.949,464,2.966,468,3.762,488,4.903,510,5.551,511,4.157,512,7.041,513,5.272,514,5.139,515,3.209,516,6.089,517,4.476,518,2.86,519,3.509,520,6.522,521,4.069,522,7.732,523,5.551,524,6.234,525,4.157,526,5.551,527,4.903,528,5.551,529,4.903,530,3.509,531,4.476,532,5.551,533,5.551,534,5.551,535,4.903,536,5.551,537,3.902,538,5.551,539,5.551,540,4.157,541,5.551]],["title/interfaces/AppState.html",[322,1.482,542,2.063]],["body/interfaces/AppState.html",[3,0.07,4,0.07,5,0.07,12,2.365,15,3.05,25,4.384,32,0.343,34,0.296,35,0.679,45,0.009,51,0.176,52,0.696,57,0.135,115,1.845,135,0.005,136,0.006,137,0.005,157,1.263,176,1.883,219,2.88,258,2.123,322,2.123,518,2.435,519,2.987,521,4.607,540,3.538,542,2.202,543,2.851,544,3.81,545,4.607,546,4.424,547,5.057,548,5.372,549,5.372,550,5.372,551,5.372,552,5.372,553,7.642,554,5.372,555,4.725,556,4.213,557,3.322,558,4.174,559,5.598,560,4.725,561,5.598,562,5.598,563,5.598,564,4.725,565,4.455,566,4.725,567,4.455,568,4.725,569,4.725,570,4.725,571,5.598,572,4.174,573,5.598,574,4.725,575,5.598,576,4.725,577,4.725,578,5.598,579,4.725,580,5.598,581,4.725,582,5.598,583,4.725,584,4.725,585,4.725,586,4.455,587,4.725,588,4.725,589,4.725,590,4.455,591,4.725,592,4.455,593,4.725,594,4.725,595,4.455,596,4.725,597,4.725,598,4.174,599,4.455,600,4.725,601,4.725,602,3.538,603,3.538,604,4.174,605,5.11,606,3.538,607,4.174,608,3.322,609,4.174]],["title/classes/ApplyFilter.html",[0,0.236,610,2.457]],["body/classes/ApplyFilter.html",[0,0.384,2,0.931,3,0.085,4,0.085,5,0.085,8,1.336,32,0.369,33,1.274,34,0.359,35,0.769,36,0.981,37,1.979,38,1.401,39,0.418,40,2.071,42,0.395,44,0.649,45,0.009,46,0.579,47,0.631,49,0.976,50,0.724,51,0.149,52,0.844,57,0.139,58,1.123,61,1.742,62,3.057,77,1.941,89,1.111,90,1.111,91,1.058,135,0.006,136,0.007,137,0.006,146,2.071,161,1.585,213,2.91,439,2.442,521,4.152,610,4.566,611,4.029,612,7.184,613,5.732,614,6.345,615,3.81,616,3.81,617,4.335,618,3.459,619,4.292,620,4.029,621,4.621,622,5.062,623,3.623,624,4.54,625,5.062,626,5.062,627,4.292]],["title/components/ArchivesComponent.html",[271,1.091,406,1.685]],["body/components/ArchivesComponent.html",[0,0.272,3,0.076,4,0.099,5,0.099,32,0.209,33,1.082,34,0.319,36,0.696,39,0.542,42,0.335,45,0.009,46,0.75,51,0.097,57,0.086,61,1.549,98,1.549,105,1.625,110,1.587,135,0.005,136,0.006,137,0.005,157,1.056,219,1.842,248,1.513,271,1.83,272,1.994,273,2.836,274,2.169,275,2.829,276,2.234,277,2.234,279,3.46,280,2.05,281,3.831,283,4.212,285,2.921,294,1.843,296,3.67,302,1.377,303,1.842,318,0.976,378,2.169,379,2.108,380,2.169,381,2.169,382,2.169,383,2.169,384,1.795,385,2.05,386,2.169,387,2.169,388,2.169,389,2.108,390,2.169,391,2.108,392,2.169,393,2.169,394,2.169,395,2.169,399,1.795,400,2.921,401,2.921,402,1.941,403,3.451,404,2.234,405,2.234,406,2.999,407,2.234,408,1.994,409,2.234,410,1.941,411,2.921,412,1.994,413,2.234,414,2.05,415,2.169,416,2.921,417,1.941,418,2.234,419,1.994,420,1.941,421,2.234,422,1.994,423,2.234,424,1.994,425,2.234,426,1.941,427,2.234,428,2.05,429,2.234,430,2.234,431,1.994,432,2.234,433,1.994,434,2.472,435,2.234,436,1.994,437,2.234,438,1.994,439,1.587,440,2.05,441,1.941,442,2.234,443,1.941,444,2.169,445,2.234,525,5.896,628,4.502,629,7.425,630,6.664,631,5.097,632,5.097,633,5.373]],["title/modules/ArchivesModule.html",[446,1.83,634,3.314]],["body/modules/ArchivesModule.html",[0,0.321,3,0.089,4,0.11,5,0.11,36,0.819,45,0.009,51,0.159,57,0.102,73,2.482,105,1.914,135,0.006,136,0.007,137,0.006,248,1.781,318,1.149,378,2.555,379,2.482,380,2.555,381,2.555,382,2.555,383,2.555,384,2.114,385,2.414,386,2.555,387,2.555,388,2.555,389,2.482,390,2.555,391,2.482,392,2.555,393,2.555,394,2.555,395,2.555,399,2.114,406,3.33,446,2.482,448,2.889,449,3.332,450,4.834,451,3.469,452,3.622,453,3.093,461,4.273,462,3.622,464,3.95,468,3.95,473,4.673,476,3.332,485,4.219,525,4.495,634,6.7,635,5.302,636,5.302,637,5.302,638,6.146,639,6.003,640,5.302]],["title/modules/ArchivesRoutingModule.html",[446,1.83,638,3.111]],["body/modules/ArchivesRoutingModule.html",[0,0.332,3,0.092,4,0.112,5,0.112,36,0.848,45,0.009,51,0.161,57,0.105,105,1.982,135,0.006,136,0.007,137,0.006,176,1.531,248,1.844,271,1.531,318,1.19,378,2.645,379,2.57,380,2.645,381,2.645,382,2.645,383,2.645,384,2.189,385,2.499,386,2.645,387,2.645,388,2.645,389,2.57,390,2.645,391,2.57,392,2.645,393,2.645,394,2.645,395,2.645,406,2.876,448,2.991,453,3.202,464,3.32,468,4.035,511,4.653,513,5.655,514,5.141,515,3.592,516,5.655,517,5.01,520,4.653,524,5.01,638,5.308,640,5.488,641,6.214,642,5.01]],["title/classes/AuthObject.html",[0,0.236,643,3.314]],["body/classes/AuthObject.html",[0,0.338,2,0.379,3,0.035,4,0.035,5,0.035,7,1.023,9,1.646,12,2.389,13,1.808,17,1.883,23,2.429,24,0.965,27,1.247,28,1.847,32,0.3,34,0.146,35,0.402,36,1.11,37,0.947,39,0.394,41,3.311,42,0.298,44,0.264,45,0.009,46,0.236,47,0.519,51,0.148,52,0.344,53,2.949,54,1.087,55,1.469,57,0.107,58,0.457,64,1.75,66,1.023,71,2.346,78,3.126,79,1.349,80,3.666,81,3.948,82,3.202,83,2.6,96,2.887,97,2.954,102,2.6,105,1.503,108,2.784,115,1.633,124,0.501,135,0.002,136,0.004,137,0.002,146,1.703,161,0.645,176,1.939,180,1.846,181,2.114,184,1.949,186,1.357,195,1.703,202,3.213,205,3.032,221,0.913,248,1.603,258,0.782,291,2.333,303,0.843,318,0.447,319,0.782,320,0.889,321,1.408,322,0.782,323,0.913,337,1.64,338,0.801,369,1.747,384,1.903,434,2.196,472,1.349,518,1.202,519,1.475,643,4.435,644,1.64,645,3.317,646,5.589,647,4.772,648,5.231,649,2.333,650,2.333,651,1.408,652,2.333,653,2.333,654,2.333,655,2.333,656,1.089,657,3.415,658,2.061,659,1.747,660,1.202,661,1.408,662,3.415,663,1.747,664,1.747,665,2.061,666,6.156,667,1.881,668,1.408,669,1.349,670,1.881,671,2.812,672,1.881,673,1.202,674,2.061,675,2.061,676,4.163,677,2.061,678,2.061,679,2.061,680,2.061,681,2.061,682,2.061,683,5.49,684,2.061,685,2.061,686,2.061,687,2.061,688,2.061,689,2.061,690,2.061,691,5.589,692,5.231,693,3.317,694,5.231,695,2.061,696,2.061,697,2.061,698,3.317,699,2.061,700,3.317,701,3.317,702,3.317,703,2.061,704,3.317,705,2.061,706,1.881,707,3.028,708,2.061,709,3.317,710,1.881,711,1.747,712,2.061,713,3.317,714,2.061,715,3.415,716,2.061,717,3.317,718,2.061,719,4.163,720,2.061,721,5.579,722,4.163,723,4.163,724,4.163,725,4.163,726,4.163,727,4.163,728,2.061,729,2.061,730,2.061,731,2.061,732,3.317,733,1.881,734,3.53,735,3.317,736,3.317,737,3.317,738,2.061,739,2.061,740,2.061,741,4.163,742,4.163,743,3.317,744,2.266,745,2.061,746,3.317,747,2.061,748,3.028,749,3.317,750,3.317,751,2.061,752,2.061,753,3.317,754,3.317,755,2.061,756,2.061,757,2.061,758,2.061,759,2.061,760,2.061,761,2.061,762,2.061,763,2.061,764,2.061,765,2.061,766,2.061,767,2.061,768,2.061,769,3.028,770,5.231,771,2.061,772,3.317,773,2.269,774,4.046,775,3.53,776,2.061,777,1.881,778,2.061,779,2.061,780,3.317,781,2.061,782,3.317,783,2.061,784,3.317,785,2.061,786,2.061,787,2.061,788,2.061,789,1.349,790,2.061,791,2.061,792,2.061,793,2.061,794,2.812,795,2.061,796,2.061,797,2.061,798,2.061,799,2.061,800,2.061,801,2.061,802,2.061,803,2.061,804,2.061,805,2.061,806,2.061,807,2.061,808,2.061,809,2.061,810,2.061,811,2.061,812,4.163,813,3.317,814,2.061,815,2.061,816,3.317,817,3.317,818,2.061,819,1.054,820,2.061,821,2.061,822,2.061,823,2.061,824,2.061,825,2.061,826,2.061,827,2.061,828,1.747,829,2.061,830,2.061,831,2.061,832,2.061,833,2.061,834,2.061,835,2.061,836,3.317,837,2.061,838,2.061,839,2.061,840,2.061,841,2.061,842,2.061,843,2.061,844,2.061,845,2.061,846,2.061,847,2.061,848,1.881,849,4.163,850,2.061,851,2.061,852,1.64,853,2.061,854,2.061,855,3.317,856,3.317,857,2.085,858,1.881,859,2.061,860,2.061,861,2.061]],["title/interfaces/AuthState.html",[542,2.063,548,3.111]],["body/interfaces/AuthState.html",[3,0.089,4,0.089,5,0.089,28,1.476,32,0.358,34,0.375,35,0.791,45,0.009,51,0.14,53,3.999,54,2.792,55,3.527,56,3.087,57,0.125,78,3.877,79,1.429,80,3.999,81,3.999,82,4.13,83,3.853,135,0.006,136,0.007,137,0.006,176,1.476,181,3.357,384,3.023,542,2.792,543,3.615,548,5.627,862,4.831,863,4.831,864,5.292]],["title/injectables/AuthenticationEffects.html",[15,2.13,656,1.283]],["body/injectables/AuthenticationEffects.html",[0,0.106,1,2.623,3,0.03,4,0.03,5,0.03,7,1.448,8,1.331,11,1.392,12,2.476,13,3.133,14,1.765,15,1.59,17,2.406,19,2.899,20,2.73,22,1.833,23,2.534,28,2.056,32,0.328,34,0.125,35,0.354,37,1.702,39,0.241,42,0.35,44,0.705,45,0.009,46,0.658,47,0.466,49,1.06,50,0.742,51,0.149,52,0.294,55,2.723,56,1.027,57,0.034,59,0.992,62,1.406,63,2.035,64,2.292,66,3.258,68,1.765,69,2.035,72,2.899,74,3.578,75,2.035,79,0.523,81,3.327,83,1.59,86,2.828,89,0.511,90,0.511,91,0.486,93,1.833,97,2.792,100,2.093,102,3.511,103,1.702,104,3.261,106,1.833,109,1.765,113,1.833,115,1.742,119,2.73,123,1.833,124,0.428,126,2.73,128,2.73,130,3.026,131,1.833,134,4.037,135,0.004,136,0.003,137,0.002,144,0.929,160,1.027,161,1.721,163,0.992,176,1.533,180,1.802,239,0.959,254,0.702,291,1.936,294,0.913,297,0.874,302,1.143,303,0.72,306,3.965,318,0.382,319,0.668,320,0.759,321,1.203,322,0.668,323,0.78,328,1.607,334,1.607,338,0.685,368,2.322,369,4.081,370,1.607,384,1.732,397,2.473,515,1.152,547,4.402,656,0.957,660,1.027,661,2.551,673,3.353,683,3.682,706,2.663,707,2.663,710,4.737,715,2.087,733,2.663,744,1.993,769,2.663,774,2.473,775,4.399,789,2.842,819,0.901,852,1.401,865,0.929,866,1.761,867,3.303,868,4.229,869,3.303,870,4.918,871,3.596,872,4.918,873,3.596,874,1.994,875,3.303,876,3.303,877,3.303,878,3.303,879,3.303,880,4.918,881,3.303,882,1.994,883,3.303,884,1.994,885,3.303,886,3.303,887,1.994,888,3.303,889,1.994,890,4.343,891,3.303,892,2.917,893,3.303,894,3.396,895,5.035,896,1.994,897,6.509,898,5.875,899,3.303,900,5.189,901,3.303,902,3.303,903,3.303,904,3.713,905,2.575,906,3.303,907,2.444,908,3.303,909,3.303,910,3.303,911,3.303,912,3.303,913,4.918,914,4.918,915,4.918,916,3.303,917,5.875,918,4.918,919,6.221,920,3.303,921,3.303,922,4.229,923,3.303,924,5.451,925,4.229,926,3.303,927,3.303,928,2.473,929,2.087,930,2.663,931,3.303,932,3.303,933,3.303,934,3.303,935,1.994,936,3.303,937,3.303,938,2.663,939,3.303,940,4.918,941,3.303,942,2.322,943,2.663,944,3.303,945,1.994,946,3.303,947,3.303,948,3.303,949,4.918,950,3.303,951,1.994,952,2.663,953,3.303,954,4.918,955,3.303,956,3.303,957,3.303,958,3.303,959,1.994,960,3.303,961,3.303,962,3.303,963,4.229,964,4.229,965,3.303,966,3.303,967,3.303,968,3.303,969,3.303,970,3.303,971,2.347,972,1.994,973,3.303,974,2.917,975,1.203,976,1.107,977,1.994,978,1.607,979,1.26,980,1.607,981,1.493,982,1.493,983,1.493,984,1.493,985,1.493,986,5.451,987,1.994,988,1.994,989,3.269,990,1.607,991,1.994,992,2.972,993,1.994,994,1.994,995,2.663,996,1.994,997,1.994,998,1.994,999,1.994,1000,1.994,1001,1.994,1002,1.994,1003,3.303,1004,1.994,1005,1.994,1006,1.994,1007,1.994,1008,1.994]],["title/classes/Card.html",[0,0.236,157,0.701]],["body/classes/Card.html",[0,0.352,2,0.814,3,0.075,4,0.075,5,0.075,11,2.086,32,0.205,38,1.573,39,0.537,42,0.252,44,0.568,45,0.009,46,0.507,47,0.553,51,0.14,57,0.125,58,0.983,79,1.475,89,1.02,90,1.02,91,0.971,135,0.005,136,0.006,137,0.005,144,4.023,157,1.045,158,3.535,160,2.585,161,1.387,163,2.496,177,3.796,186,2.662,205,3.696,221,2.882,233,2.075,234,1.963,275,2.785,293,5.86,651,5.208,1009,3.756,1010,5.017,1011,4.897,1012,5.94,1013,6.507,1014,5.94,1015,5.94,1016,5.979,1017,6.507,1018,6.507,1019,6.507,1020,6.507,1021,5.179,1022,5.017,1023,5.825,1024,5.94,1025,4.045,1026,4.045,1027,4.045,1028,4.431,1029,4.045]],["title/components/CardComponent.html",[271,1.091,408,1.731]],["body/components/CardComponent.html",[0,0.207,3,0.058,4,0.082,5,0.082,32,0.316,33,0.898,34,0.243,35,0.592,36,1.054,39,0.283,42,0.408,44,0.44,45,0.009,46,0.71,47,0.428,49,0.661,50,0.49,51,0.154,52,0.572,57,0.066,61,1.18,79,1.021,89,0.6,90,0.6,91,0.572,98,1.18,105,1.238,110,1.208,115,2.05,135,0.004,136,0.005,137,0.004,146,1.999,149,2.753,150,2.825,157,1.31,158,1.754,161,1.074,180,0.834,186,1.403,195,1.999,197,2.663,219,1.403,232,3.192,233,1.605,234,1.519,247,3.274,248,1.152,249,1.868,271,1.588,272,1.519,273,2.354,274,1.652,275,2.155,276,1.701,277,1.701,279,3.004,280,1.561,281,3.739,283,3.496,285,2.425,288,5.197,291,2.187,293,2.907,294,1.53,296,3.274,302,1.495,303,1.999,318,0.743,320,1.478,322,1.3,323,1.519,324,2.729,338,1.333,355,3.13,378,1.652,379,1.605,380,1.652,381,1.652,382,1.652,383,1.652,384,1.367,385,1.561,386,1.652,387,1.652,388,1.652,389,1.605,390,1.652,391,1.605,392,1.652,393,1.652,394,1.652,395,1.652,396,3.13,399,1.367,400,2.425,401,2.425,402,1.478,403,3.079,404,1.701,405,1.701,406,1.478,407,1.701,408,2.748,409,1.701,410,1.478,411,2.425,412,1.519,413,1.701,414,1.561,415,1.652,416,2.425,417,1.478,418,1.701,419,1.519,420,1.478,421,1.701,422,1.519,423,1.701,424,1.519,425,1.701,426,1.478,427,1.701,428,1.561,429,1.701,430,1.701,431,1.519,432,1.701,433,1.519,434,2.052,435,1.701,436,1.519,437,1.701,438,1.519,439,1.208,440,1.561,441,1.478,442,1.701,443,1.478,444,1.652,445,1.701,515,2.244,547,4.658,905,1.701,1030,3.429,1031,6.445,1032,5.532,1033,5.693,1034,7.025,1035,3.338,1036,5.693,1037,3.882,1038,5.532,1039,3.882,1040,3.882,1041,3.882,1042,3.882,1043,3.882,1044,3.429,1045,3.882,1046,3.882,1047,3.13,1048,3.882,1049,3.882,1050,3.882,1051,4.886,1052,3.882,1053,3.429,1054,3.429,1055,3.429,1056,3.882,1057,3.882,1058,3.882,1059,5.532,1060,3.882,1061,3.882,1062,5.532,1063,3.882,1064,4.886,1065,3.882,1066,3.882,1067,3.882,1068,7.025,1069,3.882,1070,5.693,1071,3.882,1072,5.693,1073,3.882,1074,3.882,1075,3.882,1076,3.429,1077,3.882,1078,3.882,1079,3.882,1080,3.882,1081,3.882]],["title/components/CardDetailsComponent.html",[271,1.091,410,1.685]],["body/components/CardDetailsComponent.html",[0,0.247,3,0.069,4,0.069,5,0.069,11,1.768,32,0.31,33,1.014,34,0.289,35,0.669,39,0.337,42,0.381,44,0.524,45,0.009,46,0.765,47,0.509,51,0.155,52,0.681,57,0.078,61,1.405,98,1.405,110,1.439,115,2.103,135,0.004,136,0.006,137,0.004,157,1.408,158,3.195,159,1.808,176,1.139,181,1.808,219,1.67,271,1.743,272,1.808,273,2.658,274,1.967,276,2.026,277,2.026,279,3.296,280,1.859,281,3.8,285,2.737,291,1.439,294,1.727,296,3.53,297,2.026,302,1.249,303,1.67,318,0.885,322,1.548,323,1.808,338,1.587,399,1.628,400,2.737,401,2.737,402,1.76,403,3.32,404,2.026,405,2.026,406,1.76,407,2.026,408,1.808,409,2.026,410,2.884,411,2.737,412,1.808,413,2.026,414,1.859,415,1.967,416,2.737,417,1.76,418,2.026,419,1.808,420,1.76,421,2.026,422,1.808,423,2.026,424,1.808,425,2.026,426,1.76,427,2.026,428,1.859,429,2.026,430,2.026,431,1.808,432,2.026,433,1.808,434,2.316,435,2.026,436,1.808,437,2.026,438,1.808,439,1.439,440,1.859,441,1.76,442,2.026,443,1.76,444,1.967,445,2.026,1021,5.561,1082,6.987,1083,5.924,1084,4.082,1085,5.515,1086,4.294,1087,6.245,1088,4.622,1089,4.622,1090,4.622,1091,4.622,1092,3.461,1093,4.622,1094,4.622,1095,4.082,1096,4.622,1097,4.622,1098,6.245,1099,4.622,1100,4.622,1101,4.082,1102,4.622,1103,4.082,1104,4.622]],["title/injectables/CardEffects.html",[565,3.111,656,1.283]],["body/injectables/CardEffects.html",[0,0.286,3,0.08,4,0.08,5,0.08,8,0.868,17,2.151,28,1.694,32,0.281,34,0.335,35,0.736,39,0.39,42,0.346,44,0.606,45,0.009,46,0.54,47,0.589,49,0.91,50,0.675,51,0.168,52,0.787,57,0.091,89,0.827,90,0.827,91,0.787,97,3.142,115,2.191,135,0.005,136,0.007,137,0.005,157,1.315,159,2.091,161,1.478,180,1.723,291,2.139,297,2.343,318,1.024,319,1.791,320,2.036,322,1.791,323,2.091,338,1.836,351,4.147,565,4.831,656,1.992,660,2.754,857,2.967,865,2.491,871,4.991,873,4.634,894,3.09,895,4.584,904,4.344,905,3.012,907,3.09,928,5.147,929,5.068,975,3.226,976,2.967,982,4.003,985,4.003,1105,4.722,1106,6.125,1107,5.346,1108,6.873,1109,5.147,1110,6.873,1111,6.873,1112,6.873,1113,6.873,1114,5.346,1115,3.379,1116,2.66,1117,2.967,1118,2.967,1119,4.31,1120,4.31,1121,4.31]],["title/interfaces/CardFeedState.html",[542,2.063,551,3.111]],["body/interfaces/CardFeedState.html",[3,0.074,4,0.074,5,0.074,7,2.192,11,2.36,24,2.068,28,1.232,32,0.332,34,0.313,35,0.705,45,0.009,51,0.149,55,3.058,57,0.132,79,1.321,124,1.745,135,0.005,136,0.006,137,0.005,146,2.658,157,1.043,161,2.162,176,1.622,180,1.074,181,1.956,186,2.378,195,1.807,232,3.567,233,2.068,234,1.956,370,5.306,372,5.129,439,2.29,521,4.819,542,2.331,543,3.017,551,5.171,615,3.324,616,3.324,617,3.017,618,3.017,942,4.626,1122,4.032,1123,6.581,1124,7.173,1125,6.853,1126,3.804,1127,6.853,1128,7.816,1129,4.626,1130,6.581,1131,5.813,1132,6.581,1133,6.581,1134,6.581,1135,5.306,1136,6.581,1137,5.975,1138,6.581,1139,6.581,1140,5.813,1141,5.306,1142,5.306,1143,4.032,1144,4.417,1145,4.417,1146,4.417,1147,4.417,1148,3.745,1149,4.032,1150,4.032,1151,4.032]],["title/components/CardListComponent.html",[271,1.091,412,1.731]],["body/components/CardListComponent.html",[0,0.279,3,0.078,4,0.078,5,0.078,32,0.307,34,0.327,36,0.924,39,0.548,42,0.378,45,0.009,46,0.759,51,0.129,57,0.088,61,1.587,79,1.073,98,1.587,110,1.626,135,0.005,136,0.007,137,0.005,149,3.369,150,3.293,157,1.337,198,3.758,219,1.887,232,3.107,233,2.16,234,2.043,263,3.871,271,1.851,272,2.043,273,2.881,274,2.223,276,2.289,277,2.289,280,2.1,281,3.839,285,2.967,318,1,399,1.84,400,2.967,401,2.967,402,1.989,403,3.484,404,2.289,405,2.289,406,1.989,407,2.289,408,2.043,409,2.289,410,1.989,411,2.967,412,3.11,413,2.289,414,2.1,415,2.223,416,2.967,417,1.989,418,2.289,419,2.043,420,1.989,421,2.289,422,2.043,423,2.289,424,2.043,425,2.289,426,1.989,427,2.289,428,2.1,429,2.289,430,2.289,431,2.043,432,2.289,433,2.043,434,2.511,435,2.289,436,2.043,437,2.289,438,2.043,439,1.626,440,2.1,441,1.989,442,2.289,443,1.989,444,2.223,445,2.289,1152,5.587,1153,6.408,1154,4.613,1155,6.771,1156,6.057,1157,6.771,1158,5.223]],["title/injectables/CardOperationEffects.html",[567,3.111,656,1.283]],["body/injectables/CardOperationEffects.html",[0,0.218,3,0.061,4,0.061,5,0.061,8,0.931,12,2.133,17,2.143,28,2.028,32,0.31,34,0.256,35,0.614,39,0.298,42,0.333,44,0.463,45,0.009,46,0.413,47,0.45,49,1.337,50,0.724,51,0.163,52,0.602,57,0.069,59,2.034,66,3.151,89,0.632,90,0.632,91,0.602,97,2.742,115,2.025,124,1.768,135,0.004,136,0.006,137,0.004,157,1.139,161,1.833,176,1.414,180,1.858,220,2.761,226,3.191,241,1.905,250,3.191,251,3.542,252,1.242,270,2.184,291,1.786,297,1.791,318,0.783,319,1.369,320,1.556,321,2.466,322,1.369,323,1.599,338,1.404,351,4.737,439,1.272,567,4.033,610,2.269,617,2.466,618,2.466,619,3.06,656,1.663,660,2.106,865,1.905,871,4.66,873,4.155,894,3.316,895,4.568,904,4.543,905,3.607,907,3.832,929,5.201,938,5.796,975,2.466,976,2.269,982,3.06,983,3.06,984,3.06,1159,6.349,1160,3.61,1161,5.855,1162,4.087,1163,6.349,1164,6.349,1165,5.067,1166,5.737,1167,5.737,1168,5.737,1169,7.188,1170,5.737,1171,7.188,1172,5.737,1173,5.737,1174,5.737,1175,5.737,1176,5.737,1177,5.796,1178,7.188,1179,4.087,1180,5.737,1181,5.737,1182,5.067,1183,5.737,1184,5.737,1185,4.087,1186,3.295,1187,3.06]],["title/injectables/CardService.html",[656,1.283,873,2.558]],["body/injectables/CardService.html",[0,0.23,3,0.064,4,0.089,5,0.064,17,2.36,28,1.812,32,0.327,34,0.27,35,0.637,36,0.931,38,1.441,39,0.314,42,0.426,44,0.833,45,0.009,46,0.743,47,0.81,49,0.734,50,0.544,51,0.161,55,2.329,57,0.073,71,2.144,79,1.297,80,2.008,124,1.279,135,0.004,136,0.006,137,0.004,157,0.683,159,1.686,176,1.062,180,1.791,186,1.557,205,3.042,257,1.374,291,1.341,294,1.646,302,2.086,303,1.557,318,0.825,319,1.443,338,1.48,385,2.742,472,2.49,482,3.226,518,2.22,519,2.723,656,1.725,657,4.648,662,5.17,663,3.226,673,4.112,721,3.474,828,4.457,848,3.474,865,2.008,873,3.44,1116,2.962,1188,3.805,1189,6.819,1190,6.819,1191,6.819,1192,5.952,1193,7.355,1194,7.355,1195,5.952,1196,3.474,1197,5.952,1198,5.952,1199,7.718,1200,4.309,1201,5.952,1202,4.309,1203,5.952,1204,4.309,1205,4.309,1206,4.309,1207,6.819,1208,4.309,1209,4.309,1210,4.309,1211,4.309,1212,4.309,1213,4.309,1214,4.309,1215,3.029,1216,3.474,1217,4.309,1218,4.309,1219,4.309,1220,5.952,1221,4.309,1222,4.309,1223,4.309,1224,4.309,1225,4.309,1226,4.309,1227,4.309,1228,4.309,1229,4.309,1230,4.309,1231,4.309,1232,4.309,1233,4.309,1234,3.474,1235,4.309,1236,3.474,1237,4.309,1238,4.309,1239,3.805,1240,4.309,1241,4.309,1242,4.309,1243,4.309,1244,4.309,1245,4.309,1246,4.309,1247,4.309,1248,4.309,1249,4.309,1250,4.309,1251,4.309,1252,4.309,1253,4.309,1254,4.309,1255,4.309,1256,4.309,1257,4.309,1258,4.309]],["title/interfaces/CardState.html",[542,2.063,549,3.111]],["body/interfaces/CardState.html",[3,0.096,4,0.096,5,0.096,32,0.339,34,0.405,35,0.828,45,0.009,51,0.123,57,0.131,79,1.312,124,1.884,135,0.006,136,0.007,137,0.006,146,2.991,157,1.359,159,2.53,176,1.594,181,3.026,195,2.337,372,5.29,542,3.014,543,3.902,549,5.818,1126,5.067,1259,5.214,1260,5.214]],["title/modules/CardsModule.html",[446,1.83,1261,3.111]],["body/modules/CardsModule.html",[0,0.27,3,0.075,4,0.099,5,0.099,36,0.69,42,0.254,45,0.009,51,0.166,57,0.086,73,2.091,105,1.612,135,0.005,136,0.006,137,0.005,180,1.086,202,2.906,248,1.501,294,1.398,302,1.366,318,0.968,329,3.051,330,3.051,378,2.152,379,2.091,380,2.152,381,2.152,382,2.152,383,2.152,384,1.781,385,2.033,386,2.152,387,2.152,388,2.152,389,2.091,390,2.152,391,2.091,392,2.152,393,2.152,394,2.152,395,2.152,399,1.781,408,3.501,410,3.408,417,3.408,419,3.501,446,2.091,448,2.434,449,2.807,450,4.463,451,2.922,452,4.737,453,3.811,461,3.831,462,3.051,464,2.702,468,3.952,473,4.19,476,2.807,490,5.345,1083,3.786,1086,3.416,1261,6.457,1262,4.466,1263,4.466,1264,4.466,1265,4.466,1266,5.559,1267,5.056,1268,5.963,1269,5.056,1270,5.963,1271,5.056,1272,4.466,1273,4.466,1274,5.056,1275,5.056,1276,4.077,1277,4.466]],["title/classes/CheckAuthenticationStatus.html",[0,0.236,63,2.13]],["body/classes/CheckAuthenticationStatus.html",[0,0.425,1,2.848,2,0.543,3,0.05,4,0.05,5,0.097,6,1.722,7,1.465,8,1.398,9,3.489,10,1.51,11,1.854,12,2.631,13,3.527,14,3.737,15,1.609,16,3.42,17,2.074,18,3.42,19,3.26,20,2.754,21,1.932,22,1.856,23,3.373,24,2.447,25,3.161,26,3.42,27,3.161,28,1.458,29,2.868,30,3.284,31,2.868,32,0.347,33,1.292,34,0.209,35,0.531,36,0.808,37,1.651,38,1.38,39,0.244,41,2.469,42,0.168,45,0.009,49,0.569,50,0.422,51,0.113,52,0.492,53,2.758,54,1.558,55,2.315,56,1.722,57,0.139,58,0.655,59,1.663,60,2.848,61,1.016,62,2.112,63,3.151,64,1.558,65,3.284,66,3.55,67,4.068,68,3.498,69,2.848,70,1.856,71,2.469,72,3.051,73,2.447,74,3.366,75,2.848,76,1.438,77,1.89,78,1.51,79,1.108,80,1.558,81,1.558,82,1.609,83,1.609,84,3.42,85,3.42,86,2.848,87,3.284,88,1.932,89,1.205,90,1.205,91,1.147,92,1.932,93,2.754,94,1.932,95,1.932,96,1.786,97,1.382,98,1.016,99,1.856,100,2.518,101,2.868,102,2.848,103,2.556,104,1.856,105,1.066,106,1.856,107,1.856,108,1.722,109,3.498,110,1.041,111,1.932,112,1.786,113,1.856,114,2.868,115,1.28,116,1.932,117,1.932,118,3.784,119,1.856,120,1.932,121,2.868,122,1.932,123,2.754,124,0.718,125,1.932,126,1.856,127,1.932,128,1.856,129,1.932,130,2.754,131,2.754,132,1.932,133,1.932,134,1.786,135,0.003,136,0.005,137,0.003,1278,3.343]],["title/classes/CheckTokenResponse.html",[0,0.236,852,3.111]],["body/classes/CheckTokenResponse.html",[0,0.338,2,0.38,3,0.035,4,0.035,5,0.035,7,1.026,9,1.026,12,2.365,13,1.812,17,1.886,23,2.433,24,0.968,27,1.25,28,1.848,32,0.293,34,0.146,35,0.403,36,1.088,37,0.949,39,0.395,41,3.315,42,0.272,44,0.265,45,0.009,46,0.236,47,0.734,51,0.148,52,0.345,53,2.201,54,1.091,55,1.473,57,0.107,58,0.459,64,1.755,66,1.026,71,1.873,78,2.445,79,1.35,80,3.669,81,3.988,82,3.206,83,2.605,96,2.892,97,2.957,102,2.273,105,1.506,108,2.788,115,1.635,124,0.503,135,0.002,136,0.004,137,0.002,146,1.707,161,0.647,176,1.94,180,1.846,181,2.117,184,1.953,186,1.36,195,1.707,202,3.216,205,3.035,221,0.916,248,1.76,258,0.784,291,2.335,303,0.846,318,0.448,319,0.784,320,0.891,321,1.412,322,0.784,323,0.916,337,1.645,338,0.804,369,1.752,384,1.906,434,2.2,472,1.353,518,1.206,519,1.479,643,4.053,644,1.645,645,2.067,646,5.596,647,2.067,648,2.067,651,2.85,656,1.091,657,3.421,658,2.067,659,1.752,660,1.206,661,1.412,662,3.421,663,1.752,664,1.752,665,2.067,666,6.26,667,1.887,668,1.412,669,1.353,670,1.887,671,2.819,672,1.887,673,1.206,674,2.067,675,2.067,676,4.172,677,2.067,678,2.067,679,2.067,680,2.067,681,2.067,682,2.067,683,5.495,684,2.067,685,2.067,686,2.067,687,2.067,688,2.067,689,2.067,690,2.067,691,5.596,692,5.238,693,3.325,694,5.238,695,2.067,696,2.067,697,2.067,698,3.325,699,2.067,700,3.325,701,5.238,702,3.325,703,2.067,704,5.596,705,2.067,706,1.887,707,3.808,708,2.067,709,3.325,710,1.887,711,1.752,712,2.067,713,3.325,714,2.067,715,3.421,716,2.067,717,3.325,718,2.067,719,4.172,720,2.067,721,5.586,722,4.172,723,4.172,724,4.172,725,4.172,726,4.172,727,4.172,728,2.067,729,2.067,730,2.067,731,2.067,732,3.325,733,1.887,734,3.537,735,3.325,736,3.325,737,3.325,738,2.067,739,2.067,740,2.067,741,4.172,742,4.172,743,3.325,744,2.272,745,2.067,746,3.325,747,2.067,748,3.035,749,3.325,750,3.325,751,2.067,752,2.067,753,3.325,754,3.325,755,2.067,756,2.067,757,2.067,758,2.067,759,2.067,760,2.067,761,2.067,762,2.067,763,2.067,764,2.067,765,2.067,766,2.067,767,2.067,768,2.067,769,3.035,770,5.238,771,2.067,772,3.325,773,2.273,774,4.053,775,3.537,776,2.067,777,1.887,778,2.067,779,2.067,780,3.325,781,2.067,782,3.325,783,2.067,784,3.325,785,2.067,786,2.067,787,2.067,788,2.067,789,1.353,790,2.067,791,2.067,792,2.067,793,2.067,794,2.819,795,2.067,796,2.067,797,2.067,798,2.067,799,2.067,800,2.067,801,2.067,802,2.067,803,2.067,804,2.067,805,2.067,806,2.067,807,2.067,808,2.067,809,2.067,810,2.067,811,2.067,812,4.172,813,3.325,814,2.067,815,2.067,816,3.325,817,3.325,818,2.067,819,1.057,820,2.067,821,2.067,822,2.067,823,2.067,824,2.067,825,2.067,826,2.067,827,2.067,828,1.752,829,2.067,830,2.067,831,2.067,832,2.067,833,2.067,834,2.067,835,2.067,836,3.325,837,2.067,838,2.067,839,2.067,840,2.067,841,2.067,842,2.067,843,2.067,844,2.067,845,2.067,846,2.067,847,2.067,848,1.887,849,4.78,850,3.325,851,3.325,852,2.646,853,2.067,854,2.067,855,3.325,856,3.325,857,2.09,858,1.887,859,2.067,860,2.067,861,2.067,1279,2.34,1280,2.34,1281,2.34,1282,2.34,1283,2.34]],["title/classes/ClearCard.html",[0,0.236,971,2.457]],["body/classes/ClearCard.html",[0,0.437,2,0.832,3,0.076,4,0.076,5,0.076,8,1.388,32,0.355,33,1.363,34,0.321,35,0.716,37,1.989,38,1.456,42,0.258,45,0.009,49,0.872,50,0.647,51,0.127,52,0.754,57,0.145,58,1.004,76,1.484,77,2.132,79,0.812,89,1.266,90,1.266,91,1.205,124,1.758,135,0.005,136,0.006,137,0.005,157,1.421,159,2.004,186,1.851,238,2.556,245,1.851,252,2.262,253,1.804,254,1.804,255,2.118,256,2.118,257,1.633,258,1.716,259,1.9,789,2.96,971,4.379,1115,3.237,1116,3.703,1117,4.131,1118,4.131,1284,3.09,1285,4.699,1286,5.122,1287,3.6,1288,3.6,1289,3.6,1290,3.6,1291,3.405]],["title/injectables/ConfigEffects.html",[599,3.111,656,1.283]],["body/injectables/ConfigEffects.html",[0,0.249,3,0.069,4,0.069,5,0.069,8,0.756,17,2.245,28,1.872,32,0.29,34,0.291,35,0.672,39,0.34,42,0.357,44,0.528,45,0.009,46,0.47,47,0.513,49,0.793,50,0.588,51,0.165,52,0.686,55,2.455,57,0.079,89,0.72,90,0.72,91,0.686,97,3.28,115,2.108,135,0.004,136,0.006,137,0.004,161,1.288,180,1.632,205,2.936,238,2.609,291,2.21,297,2.041,318,0.892,319,1.56,320,1.773,322,1.56,323,1.822,333,3.94,334,3.754,337,3.273,338,1.599,351,3.787,439,1.449,545,3.627,598,4.112,599,4.411,656,1.819,660,2.399,819,2.103,857,2.585,865,2.17,871,4.826,894,3.627,895,4.785,904,4.801,905,3.329,907,2.691,928,4.699,929,4.801,975,2.81,976,2.585,978,3.754,979,2.943,1106,5.723,1109,4.699,1119,3.754,1120,3.754,1121,3.754,1234,5.06,1292,4.112,1293,6.936,1294,5.05,1295,7.098,1296,4.656,1297,6.276,1298,6.276,1299,6.276,1300,6.276,1301,6.276,1302,4.656,1303,7.597,1304,6.276,1305,4.656,1306,5.543,1307,4.112,1308,4.656,1309,4.112,1310,2.691,1311,2.691,1312,3.754,1313,3.487,1314,4.656,1315,4.656,1316,4.656,1317,6.276,1318,6.276,1319,6.276,1320,6.276,1321,4.656]],["title/injectables/ConfigService.html",[656,1.283,1294,2.942]],["body/injectables/ConfigService.html",[0,0.325,3,0.091,4,0.091,5,0.091,17,2.282,32,0.305,34,0.381,35,0.798,39,0.444,42,0.405,44,0.689,45,0.009,46,0.615,47,0.67,51,0.169,52,0.896,57,0.103,79,1.181,115,1.57,135,0.006,136,0.007,137,0.006,180,1.307,291,2.509,294,2.061,302,1.644,318,1.165,319,2.038,322,2.038,323,2.38,332,4.276,338,2.089,472,3.516,518,3.134,519,3.845,656,2.16,657,5.544,673,3.134,865,2.835,1196,4.905,1294,4.955,1322,5.373,1323,8.059,1324,8.4,1325,7.454,1326,6.083,1327,4.905,1328,4.905,1329,4.905,1330,6.083,1331,6.083,1332,6.083]],["title/interfaces/ConfigState.html",[542,2.063,550,3.111]],["body/interfaces/ConfigState.html",[3,0.092,4,0.092,5,0.092,32,0.354,34,0.387,35,0.806,45,0.009,51,0.118,57,0.137,79,1.286,124,1.86,135,0.006,136,0.007,137,0.006,146,3.181,157,0.979,159,2.417,176,1.854,181,2.417,195,2.719,205,3.356,353,4.981,365,6.482,372,5.223,542,2.879,543,3.728,545,4.881,550,5.704,819,2.791,1293,6.98,1313,4.626,1333,4.981,1334,6.178,1335,4.981]],["title/injectables/CustomRouterEffects.html",[586,3.111,656,1.283]],["body/injectables/CustomRouterEffects.html",[0,0.257,3,0.072,4,0.072,5,0.072,8,0.781,17,2.27,28,2.033,32,0.295,34,0.502,35,0.687,39,0.351,42,0.363,44,0.545,45,0.009,46,0.486,47,0.53,49,1.093,50,0.81,51,0.168,52,0.708,57,0.082,89,0.744,90,0.744,91,0.708,97,2.984,115,2.172,135,0.005,136,0.006,137,0.005,176,1.897,180,1.838,246,2.316,291,1.997,297,2.109,318,0.921,319,1.612,320,1.832,322,1.612,323,1.882,338,1.652,439,1.498,556,3.198,586,4.509,656,1.859,865,2.242,871,4.866,873,4.449,890,6.799,894,3.708,895,4.838,907,2.781,975,2.903,976,2.671,982,3.603,983,3.603,984,3.603,985,3.603,1109,5.764,1116,2.394,1336,6.799,1337,4.249,1338,7.217,1339,7.217,1340,4.811,1341,7.698,1342,7.698,1343,8.019,1344,6.415,1345,7.698,1346,7.698,1347,6.415,1348,7.698,1349,6.415,1350,4.811,1351,6.415,1352,6.415,1353,6.415,1354,6.415,1355,4.811,1356,4.811,1357,2.671,1358,3.879]],["title/classes/CustomRouterStateSerializer.html",[0,0.236,1359,3.111]],["body/classes/CustomRouterStateSerializer.html",[0,0.354,2,0.821,3,0.075,4,0.099,5,0.075,11,2.094,13,3.191,28,1.246,32,0.271,33,1.076,34,0.317,38,1.26,39,0.369,42,0.333,44,0.889,45,0.009,46,0.67,47,0.73,51,0.126,57,0.125,79,0.801,86,2.434,89,0.782,90,0.782,91,0.744,115,1.71,135,0.005,136,0.006,137,0.005,176,1.935,180,1.424,184,3.246,202,2.216,221,1.978,257,2.114,291,2.302,294,1.833,302,1.998,434,1.875,515,2.922,547,3.051,556,3.361,557,5.199,608,3.554,711,3.786,734,3.786,744,5.454,794,3.786,819,2.284,992,3.554,1359,4.66,1360,3.786,1361,6.329,1362,6.629,1363,6.629,1364,5.855,1365,6.933,1366,5.056,1367,5.855,1368,6.571,1369,5.056,1370,5.855,1371,4.077,1372,6.329,1373,4.077,1374,4.077,1375,4.466,1376,5.963,1377,4.466,1378,4.466,1379,5.345,1380,4.077,1381,4.466,1382,4.466,1383,4.466,1384,4.466,1385,5.855,1386,4.466,1387,4.466,1388,4.466,1389,4.466,1390,4.466,1391,4.466,1392,4.466,1393,4.466,1394,4.466]],["title/classes/Detail.html",[0,0.236,158,1.999]],["body/classes/Detail.html",[0,0.373,2,0.89,3,0.082,4,0.082,5,0.082,11,1.553,32,0.224,38,1.584,39,0.561,42,0.276,44,0.621,45,0.009,46,0.554,47,0.604,51,0.146,57,0.13,58,1.075,79,1.46,89,1.081,90,1.081,91,1.029,135,0.005,136,0.007,137,0.005,144,3.983,157,0.869,158,3.473,160,2.826,161,1.517,163,2.729,177,2.826,186,1.982,205,3.348,221,2.146,233,2.268,234,2.146,275,4.268,293,6.062,1009,4.107,1011,3.646,1012,4.422,1013,4.844,1014,4.422,1015,4.422,1016,5.404,1017,4.844,1018,4.844,1019,4.844,1020,4.844,1021,3.855,1023,4.844,1024,6.891,1025,4.422,1026,4.422,1027,4.422,1028,6.791,1029,6.199,1395,5.484,1396,5.484]],["title/components/DetailComponent.html",[271,1.091,417,1.685]],["body/components/DetailComponent.html",[0,0.178,3,0.05,4,0.05,5,0.05,8,1.231,11,0.945,28,1.222,32,0.31,33,0.805,34,0.209,35,0.531,36,0.807,38,1.007,39,0.244,42,0.423,44,0.67,45,0.009,46,0.74,47,0.651,49,0.844,50,0.626,51,0.144,57,0.057,61,1.015,79,0.937,98,1.015,103,2.554,110,1.039,135,0.003,136,0.005,137,0.003,149,2.467,150,2.592,157,1.235,158,3.519,159,1.306,164,3.149,176,1.92,180,0.717,184,1.381,186,1.207,187,1.72,195,1.792,197,1.607,219,1.207,249,1.607,257,1.065,271,1.613,272,1.306,273,2.11,274,1.421,276,2.173,277,1.464,279,2.756,280,1.343,281,3.678,285,2.173,291,2.589,294,1.371,296,3.05,302,1.979,303,2.74,318,0.639,319,1.118,338,1.147,379,2.05,399,1.176,400,2.173,401,2.868,402,1.272,403,2.868,404,1.464,405,1.464,406,1.272,407,1.464,408,1.306,409,1.464,410,1.272,411,2.173,412,1.306,413,1.464,414,1.343,415,1.421,416,2.173,417,2.492,418,1.464,419,1.306,420,1.272,421,1.464,422,1.306,423,1.464,424,1.306,425,1.464,426,1.272,427,1.464,428,1.343,429,1.464,430,1.464,431,1.306,432,1.464,433,1.306,434,1.839,435,1.464,436,1.306,437,1.464,438,1.306,439,1.039,440,1.343,441,1.272,442,1.464,443,1.272,444,1.421,445,1.464,466,2.5,467,2.347,623,3.737,819,1.508,1011,2.22,1012,3.997,1035,2.992,1086,3.372,1095,2.949,1101,2.949,1103,2.949,1161,2.949,1215,3.485,1266,4.35,1276,2.692,1277,2.949,1397,2.949,1398,4.958,1399,5.913,1400,5.913,1401,4.958,1402,4.958,1403,6.544,1404,6.544,1405,6.544,1406,5.913,1407,3.339,1408,6.544,1409,4.768,1410,4.768,1411,5.223,1412,5.78,1413,4.958,1414,3.339,1415,3.339,1416,4.958,1417,5.913,1418,7.325,1419,3.339,1420,3.339,1421,3.339,1422,3.339,1423,3.339,1424,3.339,1425,3.339,1426,5.913,1427,3.339,1428,4.379,1429,3.339,1430,3.339,1431,3.339,1432,3.339,1433,1.72,1434,2.949,1435,3.339,1436,3.339,1437,3.339,1438,3.339,1439,3.339,1440,3.339,1441,3.339,1442,3.339,1443,3.339,1444,3.339,1445,3.339,1446,3.339,1447,4.379,1448,4.958,1449,3.339,1450,3.339,1451,3.339,1452,3.339,1453,3.339,1454,3.339,1455,3.339,1456,3.339,1457,3.339,1458,3.339,1459,3.339,1460,3.339,1461,4.958,1462,3.339,1463,2.949,1464,3.339,1465,3.339,1466,3.339,1467,3.339,1468,3.339,1469,3.339,1470,3.339,1471,3.339,1472,3.339,1473,4.958,1474,3.339,1475,3.339,1476,4.958,1477,3.339,1478,4.958,1479,3.339,1480,3.339,1481,3.339,1482,3.339,1483,3.339,1484,3.339,1485,3.339,1486,3.339,1487,3.339,1488,2.692,1489,3.339,1490,3.339,1491,3.339,1492,3.339,1493,3.339]],["title/components/DetailsComponent.html",[271,1.091,419,1.731]],["body/components/DetailsComponent.html",[0,0.224,3,0.062,4,0.062,5,0.062,32,0.324,33,0.949,34,0.263,35,0.626,36,0.573,39,0.49,42,0.423,44,0.662,45,0.009,46,0.772,47,0.644,51,0.128,57,0.071,61,1.275,66,1.839,79,0.926,98,1.275,110,1.306,135,0.004,136,0.006,137,0.004,149,2.907,150,2.561,157,1.313,158,2.639,159,1.641,180,0.901,195,1.516,219,1.516,271,1.657,272,1.641,273,2.487,274,1.785,276,1.839,277,1.839,280,1.687,281,3.767,285,2.561,291,2.464,294,1.616,302,1.965,303,2.86,318,0.803,368,2.949,399,1.477,400,2.561,401,2.561,402,1.598,403,3.187,404,1.839,405,1.839,406,1.598,407,1.839,408,1.641,409,1.839,410,1.598,411,2.561,412,1.641,413,1.839,414,1.687,415,1.785,416,2.561,417,2.911,418,1.839,419,2.844,420,1.598,421,1.839,422,1.641,423,1.839,424,1.641,425,1.839,426,1.598,427,1.839,428,1.687,429,1.839,430,1.839,431,1.641,432,1.839,433,1.641,434,2.167,435,1.839,436,1.641,437,1.839,438,1.641,439,1.306,440,1.687,441,1.598,442,1.839,443,1.598,444,1.785,445,1.839,623,2.651,773,2.019,819,1.895,894,2.425,974,3.705,1021,5.373,1033,5.938,1035,3.525,1036,5.938,1044,3.705,1051,5.16,1085,5.16,1463,3.705,1494,3.705,1495,5.938,1496,6.723,1497,6.421,1498,5.843,1499,5.843,1500,7.271,1501,5.843,1502,4.195,1503,4.195,1504,5.843,1505,7.271,1506,4.195,1507,4.195,1508,5.843,1509,4.195,1510,4.195,1511,6.723,1512,5.843,1513,4.195,1514,4.195,1515,4.195,1516,4.195,1517,5.843,1518,4.195,1519,4.195,1520,4.195,1521,4.195,1522,5.843,1523,3.141,1524,5.843,1525,4.195,1526,4.195,1527,4.195,1528,4.195,1529,4.195,1530,5.843,1531,4.195,1532,4.195,1533,5.843]],["title/directives/DraggableDirective.html",[402,1.685,441,1.685]],["body/directives/DraggableDirective.html",[0,0.267,3,0.074,4,0.074,5,0.074,28,1.813,32,0.301,34,0.313,35,0.705,42,0.428,45,0.009,49,0.852,50,0.631,51,0.095,57,0.085,135,0.005,136,0.006,137,0.005,180,1.58,195,2.824,197,2.407,247,2.331,280,2.011,281,2.722,291,2.29,303,2.824,318,0.958,384,1.761,402,2.506,440,2.011,441,2.506,773,2.407,777,4.032,1215,5.975,1447,4.417,1523,3.745,1534,6.063,1535,6.955,1536,4.417,1537,6.581,1538,7.356,1539,5.813,1540,7.356,1541,7.356,1542,7.356,1543,5.813,1544,6.581,1545,6.581,1546,6.581,1547,7.507,1548,5.001,1549,5.001,1550,5.001,1551,5.931,1552,5.001,1553,8.338,1554,5.001,1555,5.001,1556,5.001,1557,5.001,1558,5.001,1559,5.001,1560,4.417,1561,6.903,1562,5.001,1563,5.001,1564,8.338,1565,5.001,1566,5.001,1567,5.001,1568,5.001,1569,5.001,1570,5.001,1571,5.001,1572,5.001,1573,4.417,1574,5.001,1575,5.001,1576,5.001,1577,6.581,1578,5.001,1579,5.001,1580,5.001,1581,5.001,1582,5.001,1583,5.001]],["title/classes/EmptyLightCards.html",[0,0.236,239,2.13]],["body/classes/EmptyLightCards.html",[0,0.452,2,0.701,3,0.064,4,0.064,5,0.064,8,1.405,12,1.282,32,0.357,33,1.391,34,0.27,35,0.639,37,1.948,38,1.474,39,0.435,42,0.217,45,0.009,49,0.736,50,0.546,51,0.113,52,0.636,57,0.147,58,0.847,76,1.252,77,2.088,89,1.339,90,1.339,91,1.275,124,1.759,135,0.004,136,0.006,137,0.004,157,0.685,220,2.079,221,1.69,226,3.287,227,3.072,228,2.226,231,2.497,232,2.466,233,1.787,234,1.69,235,2.308,236,3.398,237,4.7,238,2.529,239,3.544,240,2.226,241,3.182,242,2.967,243,2.398,244,3.398,245,2.155,246,3.287,247,2.013,248,1.282,249,2.079,250,3.287,251,2.308,252,2.075,253,1.522,254,1.522,255,1.787,256,1.787,257,1.378,258,1.447,259,1.602,260,2.497,261,3.447,262,2.497,263,2.226,264,2.497,265,2.497,266,2.497,267,2.497,268,2.497,269,2.497,270,2.308,1584,4.32]],["title/components/FeedComponent.html",[271,1.091,420,1.685]],["body/components/FeedComponent.html",[0,0.244,3,0.068,4,0.092,5,0.092,17,2.231,32,0.308,33,1.006,34,0.286,35,0.663,36,0.624,39,0.333,42,0.396,44,0.518,45,0.009,46,0.761,47,0.503,51,0.158,52,0.673,57,0.077,61,1.389,98,1.389,105,1.457,110,1.422,115,2.096,135,0.004,136,0.006,137,0.004,157,0.982,219,1.651,232,1.89,233,1.89,234,1.788,247,2.129,248,1.356,263,3.622,271,1.733,272,1.788,273,2.637,274,1.945,275,2.536,276,2.003,277,2.003,279,3.276,280,1.837,281,3.797,283,3.916,285,2.716,294,1.714,296,3.513,297,2.003,302,1.674,303,2.239,318,0.875,319,1.53,320,1.74,322,1.53,323,1.788,338,1.569,378,1.945,379,1.89,380,1.945,381,1.945,382,1.945,383,1.945,384,1.609,385,1.837,386,1.945,387,1.945,388,1.945,389,1.89,390,1.945,391,1.89,392,1.945,393,1.945,394,1.945,395,1.945,399,1.609,400,2.716,401,2.716,402,1.74,403,3.304,404,2.003,405,2.003,406,1.74,407,2.003,408,1.788,409,2.003,410,1.74,411,2.716,412,1.788,413,2.003,414,1.837,415,1.945,416,2.716,417,1.74,418,2.003,419,1.788,420,2.871,421,2.003,422,1.788,423,2.003,424,1.788,425,2.003,426,1.74,427,2.003,428,1.837,429,2.003,430,2.003,431,1.788,432,2.003,433,1.788,434,2.298,435,2.003,436,1.788,437,2.003,438,1.788,439,1.422,440,1.837,441,1.74,442,2.003,443,1.74,444,1.945,445,2.003,660,2.354,1129,4.355,1156,5.668,1495,6.209,1497,6.658,1585,4.035,1586,7.03,1587,6.196,1588,6.196,1589,4.569,1590,4.569,1591,4.569,1592,4.035,1593,3.421,1594,4.035,1595,4.035,1596,4.035,1597,3.421,1598,4.569,1599,4.569]],["title/injectables/FeedFiltersEffects.html",[595,3.111,656,1.283]],["body/injectables/FeedFiltersEffects.html",[0,0.297,3,0.083,4,0.083,5,0.083,12,2.089,17,2.189,28,1.735,32,0.288,34,0.347,35,0.754,39,0.405,42,0.354,44,0.629,45,0.009,46,0.561,47,0.612,49,1.317,50,0.701,51,0.169,52,0.817,57,0.094,59,2.763,66,3.086,89,0.859,90,0.859,91,0.817,97,3.198,115,2.212,135,0.005,136,0.007,137,0.005,157,1.116,161,1.535,180,1.513,291,2.192,297,2.433,318,1.063,319,1.859,320,2.114,321,3.35,322,1.859,323,2.172,338,1.906,595,4.949,618,3.35,624,3.509,627,4.157,656,2.041,865,2.587,871,5.034,892,6.218,894,3.209,895,4.666,904,4.45,905,3.086,938,5.677,975,3.35,976,3.082,1163,6.218,1164,6.218,1165,6.218,1187,4.157,1600,6.829,1601,4.903,1602,7.732,1603,5.405,1604,5.551,1605,7.041,1606,5.551]],["title/modules/FeedModule.html",[446,1.83,1607,3.314]],["body/modules/FeedModule.html",[0,0.229,3,0.064,4,0.088,5,0.088,36,0.586,45,0.009,51,0.174,57,0.073,73,1.775,105,1.368,135,0.004,136,0.006,137,0.004,219,2.145,248,1.273,318,0.822,329,2.589,330,2.589,378,1.826,379,1.775,380,1.826,381,1.826,382,1.826,383,1.826,384,1.511,385,1.726,386,1.826,387,1.826,388,1.826,389,1.775,390,1.826,391,1.775,392,1.826,393,1.826,394,1.826,395,1.826,399,1.511,412,3.119,414,3.205,420,3.321,422,3.119,428,3.205,431,3.119,433,3.119,436,3.119,438,3.119,441,3.036,443,3.036,446,1.775,448,2.065,449,2.382,450,4.106,451,3.43,452,2.589,453,3.506,461,3.43,462,2.589,464,3.171,468,3.171,473,3.751,476,2.382,477,5.242,478,5.242,479,2.853,481,3.79,482,3.213,483,3.46,485,3.016,490,4.786,493,5.242,494,3.46,495,3.46,496,3.79,497,3.46,498,4.445,499,3.46,501,3.46,502,3.46,503,3.46,521,2.48,1153,3.46,1261,5.603,1272,6.484,1535,3.46,1607,6.944,1608,3.79,1609,3.79,1610,3.79,1611,3.79,1612,5.603,1613,5.603,1614,4.291,1615,4.291,1616,3.79,1617,4.291,1618,3.46,1619,4.291,1620,7.342,1621,3.46,1622,4.291,1623,4.291,1624,4.291,1625,3.46,1626,3.46,1627,5.935,1628,3.46,1629,3.46,1630,4.291,1631,5.935,1632,5.935,1633,3.79,1634,3.79,1635,4.291,1636,3.79,1637,5.935,1638,3.46,1639,3.46,1640,3.46,1641,4.291,1642,3.46,1643,4.291,1644,4.291,1645,4.291,1646,3.79,1647,4.291,1648,4.291]],["title/modules/FeedRoutingModule.html",[446,1.83,1613,3.111]],["body/modules/FeedRoutingModule.html",[0,0.301,3,0.084,4,0.106,5,0.106,36,0.77,45,0.009,51,0.164,57,0.096,105,1.799,135,0.005,136,0.007,137,0.005,176,1.39,248,1.674,271,2.015,318,1.08,378,2.4,379,2.332,380,2.4,381,2.4,382,2.4,383,2.4,384,1.987,385,2.268,386,2.4,387,2.4,388,2.4,389,2.332,390,2.4,391,2.332,392,2.4,393,2.4,394,2.4,395,2.4,410,2.966,417,2.708,420,2.708,448,2.715,453,2.906,464,3.013,468,3.8,511,4.223,513,5.325,514,4.923,515,3.26,516,5.325,517,4.548,520,6.447,524,4.548,529,4.981,642,4.548,1083,4.223,1129,4.999,1273,4.981,1613,4.999,1616,4.981,1649,5.64,1650,5.64,1651,5.64,1652,7.789,1653,5.64,1654,5.64,1655,5.64,1656,5.64]],["title/classes/Filter.html",[0,0.236,439,1.378]],["body/classes/Filter.html",[0,0.207,2,0.63,3,0.058,4,0.058,5,0.058,7,1.701,11,1.989,24,2.665,28,0.957,30,3.9,32,0.316,34,0.243,35,0.592,36,1.054,38,0.661,39,0.512,42,0.4,44,0.796,45,0.009,46,0.71,47,0.774,51,0.074,57,0.066,62,3.677,73,2.288,86,2.663,89,0.6,90,0.6,91,1.234,115,1.427,135,0.004,136,0.005,137,0.004,146,2.683,157,1.42,180,1.659,195,2.329,202,2.825,232,3.418,233,1.605,234,1.519,271,1.363,294,1.53,302,2.086,303,1.403,306,4.46,391,2.288,439,2.854,521,3.197,610,3.071,623,4.44,683,5.561,715,3.496,748,4.46,773,3.102,819,2.499,942,4.938,1137,4.938,1306,4.886,1374,4.46,1551,4.46,1657,7.173,1658,3.429,1659,5.532,1660,5.532,1661,5.532,1662,5.532,1663,5.532,1664,8.121,1665,5.532,1666,5.532,1667,5.532,1668,5.532,1669,5.532,1670,5.532,1671,5.532,1672,5.532,1673,5.532,1674,5.532,1675,5.532,1676,7.025,1677,6.445,1678,3.882,1679,3.882,1680,3.882,1681,3.882,1682,3.882,1683,5.532,1684,3.882,1685,5.532,1686,7.025,1687,3.882,1688,7.025,1689,5.532,1690,5.532,1691,5.532,1692,5.532,1693,3.882,1694,5.532,1695,5.532,1696,3.882,1697,3.882,1698,3.882,1699,3.882,1700,3.882,1701,3.882,1702,3.882,1703,3.882,1704,3.882,1705,3.882,1706,3.882,1707,3.882,1708,5.532,1709,3.882]],["title/injectables/FilterService.html",[656,1.283,1603,2.942]],["body/injectables/FilterService.html",[0,0.255,3,0.071,4,0.071,5,0.071,8,1.166,28,2.027,34,0.298,35,0.683,39,0.524,42,0.423,45,0.009,49,0.812,50,0.602,51,0.137,57,0.108,58,0.934,62,3.057,135,0.007,136,0.006,137,0.005,157,1.011,161,2.211,176,2.027,180,1.805,195,2.596,232,1.972,233,1.972,234,1.865,282,3.844,291,2.792,294,1.763,302,2.073,318,0.913,439,2.387,615,3.169,616,3.169,617,2.877,624,4.54,656,1.848,773,3.691,865,2.222,1016,3.352,1035,3.847,1137,4.482,1603,4.239,1710,3.844,1711,7.184,1712,7.67,1713,7.67,1714,7.67,1715,7.184,1716,6.376,1717,4.768,1718,4.768,1719,4.768,1720,4.768,1721,4.768,1722,4.768,1723,4.211,1724,6.376,1725,4.768,1726,5.792,1727,4.768,1728,4.768,1729,5.792,1730,4.768,1731,5.792,1732,4.768,1733,4.768,1734,7.67,1735,4.768,1736,4.768,1737,4.768,1738,4.768,1739,4.768,1740,4.768,1741,4.768,1742,4.768,1743,4.768,1744,4.768,1745,4.768,1746,4.768,1747,4.768,1748,4.768,1749,4.211,1750,4.211,1751,4.211,1752,4.211]],["title/components/FiltersComponent.html",[271,1.091,422,1.731]],["body/components/FiltersComponent.html",[0,0.288,3,0.08,4,0.08,5,0.08,32,0.221,33,1.123,34,0.338,39,0.557,42,0.348,45,0.009,46,0.771,51,0.103,57,0.092,61,1.641,98,1.641,110,1.681,135,0.005,136,0.007,137,0.005,157,1.096,219,1.951,271,1.881,272,2.113,273,2.944,274,2.298,276,2.367,277,2.367,279,3.557,280,2.172,281,3.848,285,3.032,294,1.913,296,3.751,302,1.459,303,1.951,318,1.034,399,1.902,400,3.032,401,3.032,402,2.057,403,3.528,404,2.367,405,2.367,406,2.057,407,2.367,408,2.113,409,2.367,410,2.057,411,3.032,412,2.113,413,2.367,414,2.172,415,2.298,416,3.032,417,2.057,418,2.367,419,2.113,420,2.057,421,2.367,422,3.149,423,2.367,424,2.113,425,2.367,426,2.057,427,2.367,428,2.172,429,2.367,430,2.367,431,2.113,432,2.367,433,2.113,434,2.566,435,2.367,436,2.113,437,2.367,438,2.113,439,1.681,440,2.172,441,2.057,442,2.367,443,2.057,444,2.298,445,2.367,1137,4.863,1152,5.366,1753,4.77,1754,6.918,1755,5.4,1756,5.4]],["title/classes/GuidService.html",[0,0.236,662,2.797]],["body/classes/GuidService.html",[0,0.331,2,1.005,3,0.092,4,0.092,5,0.092,32,0.253,34,0.387,35,0.807,38,1.383,39,0.592,42,0.425,45,0.009,51,0.143,53,4.224,54,2.885,57,0.105,79,0.981,135,0.006,136,0.007,137,0.006,180,1.619,282,4.991,291,2.528,294,2.083,302,2.036,318,1.185,662,4.761,1307,6.654,1723,5.467,1757,5.467,1758,8.451,1759,8.121,1760,7.533,1761,6.19,1762,6.19,1763,7.533,1764,6.19,1765,6.19,1766,6.19]],["title/classes/HandleUnexpectedError.html",[0,0.236,252,1.345]],["body/classes/HandleUnexpectedError.html",[0,0.432,2,0.801,3,0.073,4,0.073,5,0.073,8,1.375,32,0.367,33,1.348,34,0.309,35,0.698,36,0.89,37,2.136,38,1.443,39,0.36,40,1.782,42,0.367,44,0.559,45,0.009,46,0.498,47,0.543,49,0.84,50,0.623,51,0.124,52,0.726,57,0.144,58,0.966,76,1.429,77,2.1,79,0.781,89,1.25,90,1.25,91,1.19,124,1.737,135,0.005,136,0.006,137,0.005,157,1.413,159,1.929,186,1.782,213,2.709,238,2.509,245,1.782,252,2.362,253,1.737,254,1.737,255,2.039,256,2.039,257,1.572,258,1.652,259,1.829,789,2.85,971,4.055,1115,3.116,1116,3.635,1117,4.055,1118,4.055,1284,2.975,1285,3.466,1287,3.466,1288,3.466,1289,3.466,1290,4.583,1291,3.278,1767,6.52,1768,4.931]],["title/classes/HandleUnexpectedError-1.html",[0,0.197,252,1.12,350,2.046]],["body/classes/HandleUnexpectedError-1.html",[0,0.423,2,0.84,3,0.077,4,0.077,5,0.077,8,1.366,32,0.367,33,1.333,34,0.324,35,0.72,36,0.918,37,2.122,38,1.433,39,0.377,40,1.869,42,0.376,44,0.586,45,0.009,46,0.522,47,0.57,49,0.881,50,0.653,51,0.098,52,0.761,57,0.143,58,1.014,76,1.499,77,2.02,89,1.225,90,1.225,91,1.166,124,1.764,135,0.005,136,0.006,137,0.005,213,2.773,238,2.568,245,1.869,252,2.406,253,1.822,254,1.822,255,2.139,256,2.139,257,1.649,258,1.732,259,1.918,333,4.151,545,5.021,979,3.269,1310,4.322,1311,4.322,1769,3.269,1770,6.728,1771,5.172,1772,5.038,1773,3.635,1774,3.873,1775,3.873,1776,3.873,1777,3.635]],["title/classes/HandleUnexpectedError-2.html",[0,0.197,252,1.12,537,2.59]],["body/classes/HandleUnexpectedError-2.html",[0,0.449,2,0.677,3,0.062,4,0.062,5,0.062,8,1.396,12,1.238,32,0.366,33,1.382,34,0.261,35,0.623,36,0.795,37,2.086,38,1.465,39,0.489,40,1.508,42,0.337,44,0.473,45,0.009,46,0.422,47,0.46,49,0.711,50,0.527,51,0.111,52,0.614,57,0.146,58,0.818,76,1.209,77,2.062,89,1.33,90,1.33,91,1.266,124,1.742,135,0.004,136,0.006,137,0.004,157,0.661,213,2.486,220,2.008,221,1.633,226,3.226,227,3.737,228,2.15,231,2.412,232,2.407,233,1.726,234,1.633,235,2.229,236,3.336,237,4.664,238,2.491,239,3.226,240,2.15,241,3.124,242,2.897,243,2.316,244,3.336,245,2.104,246,3.226,247,1.945,248,1.238,249,2.008,250,3.226,251,2.229,252,2.204,253,1.47,254,1.47,255,1.726,256,1.726,257,1.331,258,1.398,259,1.548,260,2.412,261,2.412,262,2.412,263,2.15,264,2.412,265,2.412,266,2.412,267,2.412,268,2.412,269,3.364,270,2.229,1778,5.821,1779,4.173]],["title/classes/HandleUnexpectedError-3.html",[0,0.197,252,1.12,1780,2.759]],["body/classes/HandleUnexpectedError-3.html",[0,0.427,2,0.776,3,0.071,4,0.071,5,0.071,8,1.387,9,2.096,10,2.886,11,1.354,12,1.419,32,0.365,33,1.337,34,0.299,35,0.684,36,0.872,37,2.12,38,1.432,39,0.466,40,1.728,42,0.362,44,0.542,45,0.009,46,0.483,47,0.527,49,0.814,50,0.604,51,0.122,52,0.704,57,0.142,58,0.937,76,1.386,77,2.075,79,1.013,89,1.238,90,1.238,91,1.178,124,1.719,135,0.005,136,0.006,137,0.005,185,2.5,213,2.669,238,2.471,245,1.728,252,2.334,253,1.684,254,1.684,257,1.525,258,1.602,259,1.774,530,3.023,546,4.891,1126,3.693,1357,3.994,1433,2.464,1781,2.886,1782,6.389,1783,4.782,1784,4.491,1785,3.023,1786,3.994,1787,3.994,1788,3.994,1789,3.362,1790,3.362,1791,3.362,1792,3.362,1793,3.362,1794,3.362,1795,3.023,1796,3.362,1797,3.179,1798,3.179,1799,3.179]],["title/injectables/HandlebarsService.html",[656,1.283,1266,2.942]],["body/injectables/HandlebarsService.html",[0,0.153,3,0.043,4,0.043,5,0.043,17,1.525,24,3.277,28,1.328,32,0.248,34,0.465,35,0.473,36,0.736,39,0.209,42,0.428,44,0.61,45,0.009,46,0.698,47,0.594,49,0.752,50,0.909,51,0.151,53,2.058,54,1.336,57,0.049,79,1.256,135,0.007,136,0.004,137,0.003,157,1.095,159,1.121,161,1.809,163,1.426,166,1.657,176,1.611,180,1.901,187,2.276,205,1.826,274,1.22,291,2.855,294,1.221,298,3.788,299,4.534,302,2.266,303,2.976,318,0.549,319,0.96,320,1.091,329,1.729,330,1.729,338,0.984,344,2.531,350,2.452,434,1.063,656,1.28,661,1.729,773,1.379,819,3.121,857,2.452,865,1.336,989,1.905,990,2.311,992,5.725,995,5.272,1011,1.905,1029,2.311,1086,3.119,1266,2.936,1276,2.311,1409,4.344,1410,2.311,1780,2.146,1800,2.531,1801,4.417,1802,4.417,1803,4.417,1804,6.054,1805,6.054,1806,6.054,1807,6.054,1808,6.054,1809,5.388,1810,6.054,1811,6.054,1812,6.054,1813,6.054,1814,6.054,1815,6.054,1816,6.054,1817,5.388,1818,2.866,1819,3.406,1820,4.417,1821,4.417,1822,2.866,1823,2.866,1824,2.866,1825,2.866,1826,2.866,1827,2.866,1828,2.866,1829,2.866,1830,2.866,1831,2.866,1832,2.866,1833,2.866,1834,2.866,1835,2.866,1836,2.866,1837,2.866,1838,2.866,1839,2.866,1840,2.311,1841,2.866,1842,2.866,1843,2.866,1844,2.866,1845,2.866,1846,2.866,1847,2.866,1848,2.866,1849,2.866,1850,2.866,1851,2.866,1852,2.866,1853,2.866,1854,2.866,1855,2.866,1856,2.866,1857,2.866,1858,2.866,1859,2.866,1860,2.866,1861,2.866,1862,2.311,1863,2.866,1864,2.866,1865,2.866,1866,2.866,1867,2.866,1868,2.866,1869,2.866,1870,2.866,1871,7.625,1872,5.388,1873,7.625,1874,7.787,1875,2.866,1876,2.866,1877,2.866,1878,2.866,1879,2.866,1880,2.866,1881,2.866,1882,6.908,1883,2.866,1884,6.539,1885,2.866,1886,2.866,1887,2.866,1888,6.054,1889,2.866,1890,4.417,1891,2.866,1892,2.866,1893,2.866,1894,2.866,1895,2.866,1896,2.866,1897,2.311,1898,2.866,1899,2.866,1900,2.866,1901,2.866,1902,2.866,1903,2.866,1904,2.866,1905,2.866,1906,2.866,1907,2.866,1908,2.866,1909,2.866,1910,2.866,1911,2.866,1912,2.866,1913,2.866,1914,2.866,1915,4.417,1916,5.388,1917,4.417,1918,5.388,1919,2.866]],["title/classes/I18n.html",[0,0.236,144,2.063]],["body/classes/I18n.html",[0,0.353,2,1.074,3,0.098,4,0.098,5,0.098,32,0.271,38,1.335,39,0.572,42,0.333,44,0.979,45,0.009,46,0.668,47,0.729,51,0.126,57,0.112,79,1.324,89,1.023,90,1.023,91,0.974,135,0.006,136,0.008,137,0.006,144,3.654,161,2.39,163,3.292,651,3.992,989,5.212,1920,5.843,1921,6.615,1922,6.615]],["title/components/IconComponent.html",[271,1.091,424,1.731]],["body/components/IconComponent.html",[0,0.215,3,0.06,4,0.084,5,0.084,32,0.35,33,0.921,34,0.252,35,0.608,36,0.549,39,0.294,42,0.43,44,0.456,45,0.009,46,0.721,47,0.443,49,0.685,51,0.125,57,0.068,61,1.223,79,1.132,98,1.223,105,1.283,110,1.253,135,0.004,136,0.005,137,0.004,146,2.72,149,2.824,150,3.518,157,0.899,219,1.454,248,1.194,249,3.436,271,1.62,272,1.575,273,2.415,274,1.713,275,2.234,276,1.764,277,1.764,279,3.064,280,1.618,281,3.752,283,3.587,285,1.764,294,1.57,296,3.327,302,1.088,303,1.454,318,0.771,378,1.713,379,1.664,380,1.713,381,1.713,382,1.713,383,1.713,384,1.418,385,1.618,386,1.713,387,1.713,388,1.713,389,1.664,390,1.713,391,1.664,392,1.713,393,1.713,394,1.713,395,1.713,399,1.418,400,2.488,401,2.488,402,1.533,403,3.129,404,1.764,405,1.764,406,1.533,407,1.764,408,1.575,409,1.764,410,1.533,411,2.488,412,1.575,413,1.764,414,1.618,415,1.713,416,2.488,417,1.533,418,1.764,419,1.575,420,1.533,421,1.764,422,1.575,423,1.764,424,2.793,425,1.764,426,1.533,427,1.764,428,1.618,429,1.764,430,1.764,431,1.575,432,1.764,433,1.575,434,2.105,435,1.764,436,1.575,437,1.764,438,1.575,439,1.253,440,1.618,441,1.533,442,1.764,443,1.533,444,1.713,445,1.764,476,2.234,990,3.245,992,3.99,995,4.576,1070,5.013,1072,6.306,1488,5.757,1923,3.555,1924,7.14,1925,6.574,1926,4.025,1927,5.676,1928,5.676,1929,6.574,1930,6.574,1931,4.025,1932,7.14,1933,5.676,1934,4.025,1935,4.025,1936,4.025,1937,4.025,1938,4.025,1939,4.025,1940,4.025,1941,4.025,1942,4.025,1943,4.025,1944,4.025,1945,4.025,1946,4.025,1947,4.025,1948,4.025,1949,4.025,1950,4.025,1951,4.025,1952,4.025,1953,4.025,1954,4.025,1955,4.025,1956,4.025,1957,4.025,1958,6.574,1959,6.649,1960,6.574,1961,5.676,1962,6.574,1963,5.676,1964,4.025,1965,6.574,1966,4.025,1967,4.025,1968,4.025,1969,4.025,1970,4.025,1971,4.025,1972,4.025,1973,3.555,1974,5.676]],["title/components/IframeDisplayComponent.html",[271,1.091,426,1.685]],["body/components/IframeDisplayComponent.html",[0,0.172,3,0.048,4,0.072,5,0.072,14,1.721,17,2.307,24,1.332,32,0.307,33,0.784,34,0.202,35,0.517,36,0.44,39,0.235,42,0.42,44,0.656,45,0.009,46,0.73,47,0.638,50,0.407,51,0.153,52,0.474,57,0.055,61,1.467,79,1.188,87,2.679,98,0.979,105,1.027,110,1.003,115,1.865,135,0.003,136,0.005,137,0.003,157,0.765,161,0.891,164,3.479,180,1.793,182,3.724,184,1.996,185,3.324,186,2.612,219,1.164,220,1.55,248,0.956,253,1.134,271,1.426,272,1.26,273,2.054,274,1.371,275,1.788,276,1.412,277,1.412,279,2.697,280,1.295,281,3.663,283,3.05,285,2.115,291,2.498,294,1.335,296,2.996,297,1.412,302,1.564,303,1.164,318,0.617,319,1.079,320,1.227,322,1.079,323,1.26,338,1.106,350,1.788,378,1.371,379,1.332,380,1.371,381,1.371,382,1.371,383,1.371,384,1.134,385,1.295,386,1.371,387,1.371,388,1.371,389,1.332,390,1.371,391,1.332,392,1.371,393,1.371,394,1.371,395,1.371,399,1.134,400,2.115,401,2.115,402,1.227,403,2.817,404,1.412,405,1.412,406,1.227,407,1.412,408,1.26,409,1.412,410,1.227,411,2.115,412,1.26,413,1.412,414,1.295,415,1.371,416,2.115,417,1.227,418,1.412,419,1.26,420,1.227,421,1.412,422,1.26,423,1.412,424,1.26,425,1.412,426,2.448,427,1.412,428,1.295,429,1.412,430,1.412,431,1.26,432,1.412,433,1.26,434,2.147,435,1.412,436,1.26,437,1.412,438,1.26,439,1.003,440,1.295,441,1.227,442,1.412,443,1.227,444,1.371,445,1.412,466,2.412,467,2.264,530,2.036,546,4.012,819,1.455,900,2.845,905,1.412,943,3.891,978,2.597,1035,2.912,1131,2.845,1411,5.112,1412,5.677,1428,2.845,1433,1.659,1797,4.577,1798,4.982,1959,6.384,1975,2.845,1976,4.826,1977,5.788,1978,4.826,1979,5.788,1980,5.788,1981,5.788,1982,4.826,1983,4.826,1984,7.707,1985,7.882,1986,5.788,1987,5.788,1988,4.826,1989,4.826,1990,6.081,1991,3.221,1992,4.826,1993,3.221,1994,3.221,1995,3.221,1996,3.221,1997,3.221,1998,3.221,1999,3.221,2000,3.221,2001,3.221,2002,3.221,2003,3.221,2004,3.221,2005,3.221,2006,3.221,2007,3.221,2008,3.221,2009,3.614,2010,2.597,2011,2.597,2012,2.845,2013,3.221,2014,3.221,2015,3.221,2016,3.221,2017,3.221,2018,3.221,2019,3.221,2020,3.221,2021,3.221,2022,3.221,2023,3.221,2024,3.221,2025,3.221,2026,3.221,2027,3.221,2028,3.221,2029,3.221,2030,3.221,2031,7.228,2032,3.221,2033,3.221,2034,3.221,2035,3.221,2036,3.221,2037,3.221,2038,3.221,2039,3.221,2040,3.221,2041,3.221,2042,3.221,2043,3.221,2044,3.221,2045,3.221,2046,3.221,2047,3.221,2048,3.221,2049,4.826,2050,7.228,2051,4.826,2052,4.826,2053,6.428]],["title/classes/InitAuthStatus.html",[0,0.236,60,2.13]],["body/classes/InitAuthStatus.html",[0,0.422,1,2.806,2,0.529,3,0.049,4,0.049,5,0.096,6,1.68,7,1.429,8,1.392,9,3.466,10,1.473,11,1.831,12,2.623,13,3.495,14,3.698,15,1.569,16,3.37,17,2.056,18,3.37,19,3.226,20,2.704,21,1.884,22,1.81,23,3.332,24,2.411,25,3.115,26,3.37,27,3.115,28,1.437,29,2.815,30,3.236,31,2.815,32,0.357,33,1.284,34,0.204,35,0.522,36,0.945,37,1.897,38,1.371,39,0.355,40,1.178,41,2.424,42,0.293,44,0.369,45,0.009,46,0.329,47,0.359,49,0.555,50,0.412,51,0.111,52,0.48,53,2.717,54,1.519,55,2.281,56,1.68,57,0.138,58,0.639,59,1.622,60,3.113,61,0.991,62,2.073,63,2.806,64,1.519,65,3.236,66,3.529,67,4.03,68,3.455,69,2.806,70,1.81,71,2.424,72,3.014,73,2.411,74,3.331,75,2.806,76,1.412,77,1.87,78,1.473,79,1.097,80,1.519,81,1.519,82,1.569,83,1.569,84,3.37,85,3.37,86,2.806,87,3.236,88,2.815,89,1.196,90,1.196,91,1.139,92,1.884,93,1.81,94,1.884,95,1.884,96,1.742,97,1.348,98,0.991,99,1.81,100,2.481,101,2.815,102,2.806,103,2.509,104,1.81,105,1.04,106,1.81,107,1.81,108,1.68,109,3.455,110,1.015,111,1.884,112,1.742,113,1.81,114,2.815,115,1.257,116,1.884,117,1.884,118,3.738,119,1.81,120,1.884,121,2.815,122,1.884,123,2.704,124,0.7,125,1.884,126,1.81,127,1.884,128,1.81,129,1.884,130,2.704,131,2.704,132,1.884,133,1.884,134,1.742,135,0.003,136,0.005,137,0.003,213,2.162,2054,4.87,2055,3.26]],["title/classes/InitFilters.html",[0,0.236,624,2.797]],["body/classes/InitFilters.html",[0,0.384,2,0.931,3,0.085,4,0.085,5,0.085,8,1.336,32,0.369,33,1.274,34,0.359,35,0.769,36,0.981,37,1.979,38,1.401,39,0.418,40,2.071,42,0.395,44,0.649,45,0.009,46,0.579,47,0.631,49,0.976,50,0.724,51,0.149,52,0.844,57,0.139,58,1.123,61,1.742,62,3.057,77,1.941,89,1.111,90,1.111,91,1.058,135,0.006,136,0.007,137,0.006,146,2.071,161,1.585,213,2.91,439,2.442,521,4.152,610,4.356,611,4.029,614,5.062,615,3.81,616,3.81,617,4.335,618,3.459,619,4.292,620,4.029,621,4.621,622,5.062,623,3.623,624,4.959,625,6.345,626,5.062,627,4.292,2056,7.184,2057,5.732]],["title/classes/InitTimeline.html",[0,0.236,218,2.797]],["body/classes/InitTimeline.html",[0,0.394,2,0.969,3,0.089,4,0.089,5,0.089,8,1.355,32,0.371,33,1.297,34,0.374,35,0.789,36,1.006,37,2.015,38,1.421,39,0.435,40,2.157,42,0.402,44,0.676,45,0.009,46,0.603,47,0.658,49,1.017,50,0.754,51,0.114,52,0.879,57,0.141,58,1.17,61,1.814,77,1.991,135,0.006,136,0.007,137,0.006,157,0.946,211,5.051,212,4.196,213,2.964,216,5.272,217,4.812,218,5.274,219,2.888,220,2.873,221,2.335,222,6.507,223,5.272,224,5.272,225,4.812,2058,7.367,2059,5.969]],["title/classes/Input.html",[0,0.236,150,1.94]],["body/classes/Input.html",[0,0.44,2,0.668,3,0.061,4,0.061,5,0.061,8,0.668,11,1.164,32,0.295,36,0.562,38,1.588,39,0.611,42,0.207,44,0.466,45,0.009,46,0.728,47,0.453,50,0.91,51,0.127,57,0.144,58,1.129,79,1.434,89,1.275,90,1.275,91,1.214,100,1.751,135,0.004,136,0.006,137,0.004,140,2.283,141,3.633,142,3.331,143,4.874,144,3.666,145,2.482,146,3.1,147,2.482,148,2.482,149,2.047,150,2.916,151,2.482,152,2.482,153,2.482,154,2.482,155,2.482,157,0.652,158,1.858,159,1.609,160,2.119,161,1.138,162,2.482,163,2.047,164,1.98,165,2.482,166,2.377,167,2.482,168,2.482,169,2.482,170,2.482,171,2.482,172,2.482,173,2.482,174,2.482,175,3.477,176,1.014,177,2.969,178,2.482,179,3.477,180,1.238,181,1.609,182,2.969,183,2.482,184,1.701,185,1.609,186,1.486,187,2.119,188,2.482,189,2.482,190,2.482,191,2.482,192,2.377,193,2.377,194,2.377,195,2.919,196,4.166,197,1.98,198,2.283,199,2.377,200,2.377,201,2.377,202,1.803,203,4.014,204,4.014,205,3.253,206,4.014,207,4.014,208,4.001,209,4.014,210,4.014,2060,4.113]],["title/injectables/LightCardEffects.html",[592,3.111,656,1.283]],["body/injectables/LightCardEffects.html",[0,0.282,3,0.079,4,0.079,5,0.079,8,0.858,17,2.139,28,1.681,32,0.279,34,0.331,35,0.73,39,0.385,42,0.343,44,0.599,45,0.009,46,0.534,47,0.582,49,0.9,50,0.667,51,0.168,52,0.778,57,0.09,89,0.817,90,0.817,91,0.778,115,2.184,135,0.005,136,0.007,137,0.005,157,1.081,161,2.089,180,1.715,235,2.823,241,2.462,242,3.759,291,2.123,297,2.316,318,1.012,319,1.77,320,2.012,322,1.77,323,2.067,338,1.814,372,4.116,592,4.795,656,1.977,660,2.722,661,3.188,857,2.933,865,2.462,871,4.977,894,3.054,895,4.558,904,4.311,905,3.499,907,3.054,930,5.5,975,3.188,976,2.933,983,3.956,984,3.956,1086,4.113,1092,3.956,1106,6.091,1119,4.26,1120,4.26,1121,4.26,2061,6.672,2062,4.667,2063,7.554,2064,5.284,2065,6.821,2066,6.821,2067,6.821,2068,6.821,2069,6.821,2070,6.025,2071,6.821,2072,6.821,2073,6.821,2074,6.025,2075,5.284,2076,5.284]],["title/classes/LoadCard.html",[0,0.236,1116,2.202]],["body/classes/LoadCard.html",[0,0.432,2,0.801,3,0.073,4,0.073,5,0.073,8,1.375,32,0.367,33,1.348,34,0.309,35,0.698,36,0.89,37,2.136,38,1.443,39,0.36,40,1.782,42,0.367,44,0.559,45,0.009,46,0.498,47,0.543,49,0.84,50,0.623,51,0.124,52,0.726,57,0.144,58,0.966,76,1.429,77,2.1,79,0.781,89,1.25,90,1.25,91,1.19,124,1.737,135,0.005,136,0.006,137,0.005,157,1.413,159,1.929,186,1.782,213,2.709,238,2.509,245,1.782,252,2.22,253,1.737,254,1.737,255,2.039,256,2.039,257,1.572,258,1.652,259,1.829,789,2.85,971,4.055,1115,3.116,1116,3.868,1117,4.055,1118,4.055,1284,2.975,1285,3.466,1287,4.583,1288,3.466,1289,3.466,1290,3.466,1291,3.278,2077,6.52,2078,4.931]],["title/classes/LoadCardFailure.html",[0,0.236,1117,2.457]],["body/classes/LoadCardFailure.html",[0,0.432,2,0.801,3,0.073,4,0.073,5,0.073,8,1.375,32,0.367,33,1.348,34,0.309,35,0.698,36,0.89,37,2.136,38,1.443,39,0.36,40,1.782,42,0.367,44,0.559,45,0.009,46,0.498,47,0.543,49,0.84,50,0.623,51,0.124,52,0.726,57,0.144,58,0.966,76,1.429,77,2.1,79,0.781,89,1.25,90,1.25,91,1.19,124,1.737,135,0.005,136,0.006,137,0.005,157,1.413,159,1.929,186,1.782,213,2.709,238,2.509,245,1.782,252,2.22,253,1.737,254,1.737,255,2.039,256,2.039,257,1.572,258,1.652,259,1.829,789,2.85,971,4.055,1115,3.116,1116,3.635,1117,4.315,1118,4.055,1284,2.975,1285,3.466,1287,3.466,1288,4.583,1289,3.466,1290,3.466,1291,3.278,2079,6.52,2080,4.931]],["title/classes/LoadCardSuccess.html",[0,0.236,1118,2.457]],["body/classes/LoadCardSuccess.html",[0,0.432,2,0.801,3,0.073,4,0.073,5,0.073,8,1.375,32,0.367,33,1.348,34,0.309,35,0.698,36,0.89,37,2.136,38,1.443,39,0.36,40,1.782,42,0.367,44,0.559,45,0.009,46,0.498,47,0.543,49,0.84,50,0.623,51,0.124,52,0.726,57,0.144,58,0.966,76,1.429,77,2.1,79,0.781,89,1.25,90,1.25,91,1.19,124,1.737,135,0.005,136,0.006,137,0.005,157,1.413,159,1.929,186,1.782,213,2.709,238,2.509,245,1.782,252,2.22,253,1.737,254,1.737,255,2.039,256,2.039,257,1.572,258,1.652,259,1.829,789,2.85,971,4.055,1115,3.116,1116,3.635,1117,4.055,1118,4.315,1284,2.975,1285,3.466,1287,3.466,1288,3.466,1289,4.583,1290,3.466,1291,3.278,2081,6.52,2082,4.931]],["title/classes/LoadConfig.html",[0,0.236,333,2.457]],["body/classes/LoadConfig.html",[0,0.429,2,0.874,3,0.08,4,0.08,5,0.08,8,1.381,32,0.354,33,1.35,34,0.337,35,0.739,37,1.922,38,1.449,42,0.271,45,0.009,49,0.917,50,0.68,51,0.102,52,0.792,57,0.144,58,1.055,76,1.56,77,2.059,89,1.243,90,1.243,91,1.184,124,1.786,135,0.005,136,0.007,137,0.005,238,2.617,245,1.945,252,2.316,253,1.896,254,1.896,255,2.226,256,2.226,257,1.716,258,1.803,259,1.996,333,4.462,545,5.063,979,3.402,1310,4.405,1311,4.405,1769,3.402,1772,4.03,1773,3.783,1774,5.169,1775,4.03,1776,4.03,1777,3.783,2083,5.382]],["title/classes/LoadConfigFailure.html",[0,0.236,1310,2.558]],["body/classes/LoadConfigFailure.html",[0,0.423,2,0.84,3,0.077,4,0.077,5,0.077,8,1.366,32,0.367,33,1.333,34,0.324,35,0.72,36,0.918,37,2.122,38,1.433,39,0.377,40,1.869,42,0.376,44,0.586,45,0.009,46,0.522,47,0.57,49,0.881,50,0.653,51,0.098,52,0.761,57,0.143,58,1.014,76,1.499,77,2.02,89,1.225,90,1.225,91,1.166,124,1.764,135,0.005,136,0.006,137,0.005,213,2.773,238,2.568,245,1.869,252,2.272,253,1.822,254,1.822,255,2.139,256,2.139,257,1.649,258,1.732,259,1.918,333,4.151,545,5.021,979,3.269,1310,4.577,1311,4.322,1769,3.269,1772,3.873,1773,3.635,1774,3.873,1775,5.038,1776,3.873,1777,3.635,2084,6.728,2085,5.172]],["title/classes/LoadConfigSuccess.html",[0,0.236,1311,2.558]],["body/classes/LoadConfigSuccess.html",[0,0.423,2,0.84,3,0.077,4,0.077,5,0.077,8,1.366,32,0.367,33,1.333,34,0.324,35,0.72,36,0.918,37,2.122,38,1.433,39,0.377,40,1.869,42,0.376,44,0.586,45,0.009,46,0.522,47,0.57,49,0.881,50,0.653,51,0.098,52,0.761,57,0.143,58,1.014,76,1.499,77,2.02,89,1.225,90,1.225,91,1.166,124,1.764,135,0.005,136,0.006,137,0.005,213,2.773,238,2.568,245,1.869,252,2.272,253,1.822,254,1.822,255,2.139,256,2.139,257,1.649,258,1.732,259,1.918,333,4.151,545,5.021,979,3.269,1310,4.322,1311,4.577,1769,3.269,1772,3.873,1773,3.635,1774,3.873,1775,3.873,1776,5.038,1777,3.635,2086,6.728,2087,5.172]],["title/classes/LoadLightCards.html",[0,0.236,236,2.202]],["body/classes/LoadLightCards.html",[0,0.452,2,0.701,3,0.064,4,0.064,5,0.064,8,1.405,12,1.282,32,0.357,33,1.391,34,0.27,35,0.639,37,1.948,38,1.474,39,0.435,42,0.217,45,0.009,49,0.736,50,0.546,51,0.113,52,0.636,57,0.147,58,0.847,76,1.252,77,2.088,89,1.339,90,1.339,91,1.275,124,1.759,135,0.004,136,0.006,137,0.004,157,0.685,220,2.079,221,1.69,226,3.287,227,3.072,228,2.226,231,2.497,232,2.466,233,1.787,234,1.69,235,2.308,236,3.664,237,4.7,238,2.529,239,3.287,240,2.226,241,3.182,242,2.967,243,2.398,244,3.398,245,2.155,246,3.287,247,2.013,248,1.282,249,2.079,250,3.287,251,2.308,252,2.075,253,1.522,254,1.522,255,1.787,256,1.787,257,1.378,258,1.447,259,1.602,260,3.447,261,2.497,262,2.497,263,2.226,264,2.497,265,2.497,266,2.497,267,2.497,268,2.497,269,2.497,270,2.308,2088,4.32]],["title/classes/LoadLightCardsExtendedData.html",[0,0.236,242,2.202]],["body/classes/LoadLightCardsExtendedData.html",[0,0.452,2,0.697,3,0.064,4,0.064,5,0.064,8,1.404,12,1.273,32,0.357,33,1.39,34,0.269,35,0.636,37,1.943,38,1.472,39,0.535,42,0.299,45,0.009,49,0.731,50,0.542,51,0.113,52,0.632,57,0.146,58,0.841,76,1.244,77,2.083,89,1.337,90,1.337,91,1.273,124,1.756,135,0.004,136,0.006,137,0.004,157,0.68,220,2.065,221,1.679,226,3.275,227,3.506,228,2.211,231,2.48,232,2.455,233,1.775,234,1.679,235,2.293,236,3.386,237,4.693,238,2.521,239,3.275,240,2.211,241,3.171,242,3.386,243,2.382,244,3.386,245,2.145,246,3.275,247,2,248,1.273,249,2.065,250,3.275,251,2.293,252,2.068,253,1.511,254,1.511,255,1.775,256,1.775,257,1.368,258,1.437,259,1.592,260,2.48,261,2.48,262,2.48,263,2.211,264,3.43,265,2.48,266,2.48,267,2.48,268,2.48,269,2.48,270,2.293,2089,5.935]],["title/classes/LoadLightCardsFailure.html",[0,0.236,244,2.202]],["body/classes/LoadLightCardsFailure.html",[0,0.449,2,0.677,3,0.062,4,0.062,5,0.062,8,1.396,12,1.238,32,0.366,33,1.382,34,0.261,35,0.623,36,0.795,37,2.086,38,1.465,39,0.489,40,1.508,42,0.337,44,0.473,45,0.009,46,0.422,47,0.46,49,0.711,50,0.527,51,0.111,52,0.614,57,0.146,58,0.818,76,1.209,77,2.062,89,1.33,90,1.33,91,1.266,124,1.742,135,0.004,136,0.006,137,0.004,157,0.661,213,2.486,220,2.008,221,1.633,226,3.226,227,3.737,228,2.15,231,2.412,232,2.407,233,1.726,234,1.633,235,2.229,236,3.336,237,4.664,238,2.491,239,3.226,240,2.15,241,3.124,242,2.897,243,2.316,244,3.61,245,2.104,246,3.226,247,1.945,248,1.238,249,2.008,250,3.226,251,2.229,252,2.037,253,1.47,254,1.47,255,1.726,256,1.726,257,1.331,258,1.398,259,1.548,260,2.412,261,2.412,262,2.412,263,2.15,264,2.412,265,3.364,266,2.412,267,2.412,268,2.412,269,2.412,270,2.229,2090,5.821,2091,4.173]],["title/classes/LoadLightCardsSuccess.html",[0,0.236,241,2.063]],["body/classes/LoadLightCardsSuccess.html",[0,0.449,2,0.677,3,0.062,4,0.062,5,0.062,8,1.396,12,1.238,32,0.366,33,1.382,34,0.261,35,0.623,36,0.795,37,2.086,38,1.465,39,0.489,40,1.508,42,0.337,44,0.473,45,0.009,46,0.422,47,0.46,49,0.711,50,0.527,51,0.111,52,0.614,57,0.146,58,0.818,76,1.209,77,2.062,89,1.33,90,1.33,91,1.266,124,1.742,135,0.004,136,0.006,137,0.004,157,0.661,213,2.486,220,2.008,221,1.633,226,3.226,227,3.737,228,2.15,231,2.412,232,2.407,233,1.726,234,1.633,235,2.229,236,3.336,237,4.664,238,2.491,239,3.226,240,2.15,241,3.381,242,2.897,243,2.316,244,3.336,245,2.104,246,3.226,247,1.945,248,1.238,249,2.008,250,3.226,251,2.229,252,2.037,253,1.47,254,1.47,255,1.726,256,1.726,257,1.331,258,1.398,259,1.548,260,2.412,261,2.412,262,3.364,263,2.15,264,2.412,265,2.412,266,2.412,267,2.412,268,2.412,269,2.412,270,2.229,2092,5.821,2093,4.173]],["title/classes/LoadMenu.html",[0,0.236,1786,2.457]],["body/classes/LoadMenu.html",[0,0.432,2,0.801,3,0.073,4,0.073,5,0.073,8,1.396,9,2.161,10,2.946,11,1.396,12,1.463,32,0.352,33,1.348,34,0.309,35,0.698,37,1.96,38,1.443,39,0.533,42,0.328,45,0.009,49,0.84,50,0.623,51,0.124,52,0.726,57,0.144,58,0.966,76,1.429,77,2.1,79,1.033,89,1.25,90,1.25,91,1.19,124,1.737,135,0.005,136,0.006,137,0.005,185,2.551,238,2.509,245,1.782,252,2.22,253,1.737,254,1.737,257,1.572,258,1.652,259,1.829,530,3.116,546,4.916,1126,3.769,1357,4.055,1433,2.54,1781,2.975,1784,3.466,1785,3.116,1786,4.315,1787,4.055,1788,4.055,1789,4.583,1790,3.466,1791,3.466,1792,3.466,1793,3.466,1794,3.466,1795,3.116,1796,3.466,1797,3.278,1798,3.278,1799,3.278,2094,6.52]],["title/classes/LoadMenuFailure.html",[0,0.236,1788,2.457]],["body/classes/LoadMenuFailure.html",[0,0.427,2,0.776,3,0.071,4,0.071,5,0.071,8,1.387,9,2.096,10,2.886,11,1.354,12,1.419,32,0.365,33,1.337,34,0.299,35,0.684,36,0.872,37,2.12,38,1.432,39,0.466,40,1.728,42,0.362,44,0.542,45,0.009,46,0.483,47,0.527,49,0.814,50,0.604,51,0.122,52,0.704,57,0.142,58,0.937,76,1.386,77,2.075,79,1.013,89,1.238,90,1.238,91,1.178,124,1.719,135,0.005,136,0.006,137,0.005,185,2.5,213,2.669,238,2.471,245,1.728,252,2.187,253,1.684,254,1.684,257,1.525,258,1.602,259,1.774,530,3.023,546,4.891,1126,3.693,1357,3.994,1433,2.464,1781,2.886,1784,3.362,1785,3.023,1786,3.994,1787,3.994,1788,4.263,1789,3.362,1790,4.491,1791,3.362,1792,3.362,1793,3.362,1794,3.362,1795,3.023,1796,3.362,1797,3.179,1798,3.179,1799,3.179,2095,6.389,2096,4.782]],["title/classes/LoadMenuSuccess.html",[0,0.236,1787,2.457]],["body/classes/LoadMenuSuccess.html",[0,0.427,2,0.776,3,0.071,4,0.071,5,0.071,8,1.387,9,2.096,10,2.886,11,1.354,12,1.419,32,0.365,33,1.337,34,0.299,35,0.684,36,0.872,37,2.12,38,1.432,39,0.466,40,1.728,42,0.362,44,0.542,45,0.009,46,0.483,47,0.527,49,0.814,50,0.604,51,0.122,52,0.704,57,0.142,58,0.937,76,1.386,77,2.075,79,1.013,89,1.238,90,1.238,91,1.178,124,1.719,135,0.005,136,0.006,137,0.005,185,2.5,213,2.669,238,2.471,245,1.728,252,2.187,253,1.684,254,1.684,257,1.525,258,1.602,259,1.774,530,3.023,546,4.891,1126,3.693,1357,3.994,1433,2.464,1781,2.886,1784,3.362,1785,3.023,1786,3.994,1787,4.263,1788,3.994,1789,3.362,1790,3.362,1791,4.491,1792,3.362,1793,3.362,1794,3.362,1795,3.023,1796,3.362,1797,3.179,1798,3.179,1799,3.179,2097,6.389,2098,4.782]],["title/components/LoginComponent.html",[98,1.345,271,1.091]],["body/components/LoginComponent.html",[0,0.213,3,0.059,4,0.059,5,0.059,17,2.011,19,1.855,28,1.61,32,0.327,33,0.914,34,0.249,35,0.603,39,0.411,42,0.424,44,0.451,45,0.009,46,0.718,47,0.438,51,0.162,52,0.586,55,2.556,56,2.05,57,0.067,61,1.209,78,1.798,89,0.616,90,0.616,91,0.586,97,2.702,98,2.159,99,3.943,102,2.71,107,3.125,108,3.66,110,1.239,115,2.008,135,0.004,136,0.005,137,0.004,146,2.035,157,0.892,161,1.101,176,1.387,219,1.438,271,1.61,272,1.557,273,2.396,274,1.694,275,3.627,276,1.744,277,1.744,279,3.045,280,1.6,281,3.748,285,2.468,291,1.753,294,1.557,296,3.311,297,1.744,302,1.92,303,2.891,318,0.762,319,1.333,320,1.515,321,2.401,322,1.333,323,1.557,328,3.208,332,2.797,337,2.797,351,2.401,384,1.402,396,5.268,397,4.893,398,5.771,399,1.402,400,2.468,401,2.468,402,1.515,403,3.114,404,1.744,405,1.744,406,1.515,407,1.744,408,1.557,409,1.744,410,1.515,411,2.468,412,1.557,413,1.744,414,1.6,415,1.694,416,2.468,417,1.515,418,1.744,419,1.557,420,1.515,421,1.744,422,1.557,423,1.744,424,1.557,425,1.744,426,1.515,427,1.744,428,1.6,429,1.744,430,1.744,431,1.557,432,1.744,433,1.557,434,2.088,435,1.744,436,1.557,437,1.744,438,1.557,439,1.753,440,1.6,441,1.515,442,1.744,443,1.515,444,1.694,445,1.744,479,2.645,664,2.98,673,3.66,773,1.915,981,2.98,2099,3.515,2100,6.534,2101,6.534,2102,5.63,2103,7.104,2104,6.534,2105,6.534,2106,6.534,2107,6.534,2108,7.104,2109,7.104,2110,5.63,2111,3.979,2112,3.979,2113,3.979,2114,3.979,2115,3.979,2116,3.979,2117,3.979,2118,5.728,2119,3.979,2120,5.268,2121,3.208,2122,3.979,2123,3.979,2124,3.979,2125,3.979,2126,3.979,2127,3.979,2128,3.979,2129,3.979,2130,3.979,2131,3.979,2132,3.979,2133,3.979,2134,3.979,2135,3.979,2136,3.979,2137,3.979,2138,5.63,2139,5.63,2140,5.63,2141,5.63,2142,5.63,2143,5.63]],["title/classes/Map.html",[0,0.236,161,1.224]],["body/classes/Map.html",[0,0.373,2,1.133,3,0.104,4,0.104,5,0.104,42,0.351,45,0.008,57,0.118,79,1.282,135,0.007,136,0.008,137,0.007,161,2.237,989,5.378,2144,6.164,2145,6.979,2146,8.09,2147,6.979]],["title/injectables/MenuEffects.html",[590,3.111,656,1.283]],["body/injectables/MenuEffects.html",[0,0.282,3,0.079,4,0.079,5,0.079,8,0.858,17,2.139,28,1.681,32,0.279,34,0.331,35,0.73,39,0.385,42,0.343,44,0.599,45,0.009,46,0.534,47,0.582,49,0.9,50,0.667,51,0.168,52,0.778,57,0.09,89,0.817,90,0.817,91,0.778,97,3.124,115,2.184,135,0.005,136,0.007,137,0.005,161,1.461,180,1.715,238,2.594,291,2.123,297,2.316,318,1.012,319,1.77,320,2.012,322,1.77,323,2.067,338,1.814,351,4.116,590,4.795,656,1.977,660,2.722,865,2.462,871,4.977,894,3.054,895,4.558,904,4.311,905,3.499,907,3.054,928,5.108,929,5.046,930,6.437,975,3.188,976,2.933,985,3.956,1086,4.113,1092,3.956,1109,5.108,1116,2.629,1358,4.26,1434,4.667,1785,3.339,1787,2.933,1788,2.933,2070,6.025,2074,6.025,2148,4.667,2149,5.284,2150,6.821,2151,6.821,2152,6.821,2153,6.821,2154,6.821,2155,6.821,2156,6.821,2157,5.284]],["title/interfaces/MenuState.html",[542,2.063,552,3.111]],["body/interfaces/MenuState.html",[3,0.093,4,0.093,5,0.093,32,0.355,34,0.39,35,0.81,45,0.009,51,0.118,57,0.128,79,1.428,124,1.749,135,0.006,136,0.007,137,0.006,146,2.942,176,1.534,181,2.958,185,3.313,195,2.25,372,5.235,542,2.902,543,3.757,546,4.816,552,5.723,1433,3.208,2158,5.02,2159,7.662,2160,7.662,2161,6.226,2162,5.02,2163,5.499]],["title/classes/Message.html",[0,0.236,55,1.731]],["body/classes/Message.html",[0,0.344,2,1.046,3,0.115,4,0.096,5,0.096,32,0.264,38,1.407,39,0.563,42,0.324,44,0.73,45,0.009,46,0.651,47,0.71,51,0.123,55,3.351,57,0.131,58,1.262,79,1.309,89,0.996,90,0.996,91,0.948,124,1.384,135,0.006,136,0.007,137,0.006,144,4.189,160,3.318,651,3.886,981,4.823,2164,5.193,2165,6.441,2166,8.262,2167,6.441,2168,6.441,2169,5.689]],["title/directives/MouseWheelDirective.html",[402,1.685,443,1.685]],["body/directives/MouseWheelDirective.html",[0,0.28,3,0.078,4,0.078,5,0.078,7,2.297,28,1.672,32,0.308,34,0.328,42,0.425,44,0.594,45,0.009,46,0.529,47,0.577,51,0.1,57,0.115,135,0.005,136,0.007,137,0.005,176,1.291,280,2.107,281,2.806,294,1.876,302,1.416,303,2.979,318,1.003,350,2.909,402,3.031,440,2.107,443,2.584,444,2.888,819,2.367,1215,6.124,1534,6.042,1539,5.993,1543,5.993,1547,7.281,1551,6.067,1560,4.628,1561,6.646,1642,6.93,1795,3.312,2170,4.628,2171,7.958,2172,6.785,2173,6.785,2174,6.785,2175,7.525,2176,7.525,2177,6.785,2178,6.785,2179,5.24,2180,5.24,2181,5.24,2182,5.24,2183,5.24,2184,5.24,2185,5.24,2186,5.24,2187,6.785,2188,5.24,2189,5.24,2190,5.24,2191,7.525,2192,5.24,2193,5.24,2194,5.24,2195,5.24,2196,6.785,2197,7.525,2198,5.24,2199,5.24,2200,5.24,2201,5.24,2202,5.24]],["title/components/NavbarComponent.html",[110,1.378,271,1.091]],["body/components/NavbarComponent.html",[0,0.222,3,0.062,4,0.062,5,0.062,17,1.895,32,0.323,33,0.943,34,0.364,35,0.622,39,0.304,42,0.428,44,0.658,45,0.009,46,0.77,47,0.64,49,1.14,50,0.845,51,0.165,52,0.613,57,0.071,61,1.265,72,2.708,98,1.265,109,3.871,110,2.255,112,3.104,115,2.037,135,0.004,136,0.006,137,0.004,146,1.504,157,0.921,180,0.894,185,1.628,205,2.403,219,1.504,271,1.65,272,1.628,273,2.473,274,1.771,276,1.824,277,1.824,279,3.12,280,1.674,281,3.764,285,2.547,288,5.398,291,2.084,294,1.607,296,3.377,297,1.824,298,4.084,302,1.809,303,2.419,305,3.356,318,0.797,319,1.394,320,1.585,321,2.511,322,1.394,323,1.628,324,2.926,326,3.676,338,1.429,350,4.383,351,3.506,355,3.356,399,1.466,400,2.547,401,2.547,402,1.585,403,3.176,404,1.824,405,1.824,406,1.585,407,1.824,408,1.628,409,1.824,410,1.585,411,2.547,412,1.628,413,1.824,414,1.674,415,1.771,416,2.547,417,1.585,418,1.824,419,1.628,420,1.585,421,1.824,422,1.628,423,1.824,424,1.628,425,1.824,426,1.585,427,1.824,428,1.674,429,1.824,430,1.824,431,1.628,432,1.824,433,1.628,434,2.155,435,1.824,436,1.628,437,1.824,438,1.628,439,1.295,440,1.674,441,1.585,442,1.824,443,1.585,444,1.771,445,1.824,485,2.926,535,6.973,661,2.511,668,2.511,669,2.405,773,2.797,1035,3.506,1053,3.676,1054,3.676,1055,3.676,1358,3.356,1433,2.144,1786,3.225,1990,5.913,2009,3.117,2012,3.676,2203,3.676,2204,5.811,2205,6.695,2206,5.811,2207,6.695,2208,5.811,2209,5.811,2210,4.162,2211,4.162,2212,4.162,2213,4.162,2214,4.162,2215,4.162,2216,4.162,2217,4.162,2218,4.162,2219,4.162,2220,4.162,2221,4.162,2222,4.162,2223,4.162,2224,4.162,2225,4.162,2226,4.162,2227,4.162,2228,4.162,2229,4.162,2230,4.162,2231,4.162,2232,5.811,2233,5.811,2234,5.811,2235,5.811,2236,5.811,2237,4.162]],["title/components/NoSelectionComponent.html",[271,1.091,431,1.731]],["body/components/NoSelectionComponent.html",[0,0.286,3,0.08,4,0.08,5,0.08,32,0.219,33,1.116,34,0.335,39,0.554,42,0.346,45,0.009,46,0.767,51,0.102,57,0.091,61,1.625,98,1.625,110,1.664,135,0.005,136,0.007,137,0.005,157,1.089,219,1.932,271,1.872,272,2.091,273,2.925,274,2.275,276,2.343,277,2.343,279,3.54,280,2.15,281,3.845,285,3.012,294,1.901,296,3.737,302,1.445,303,1.932,318,1.024,399,1.883,400,3.012,401,3.012,402,2.036,403,3.514,404,2.343,405,2.343,406,2.036,407,2.343,408,2.091,409,2.343,410,2.036,411,3.012,412,2.091,413,2.343,414,2.15,415,2.275,416,3.012,417,2.036,418,2.343,419,2.091,420,2.036,421,2.343,422,2.091,423,2.343,424,2.091,425,2.343,426,2.036,427,2.343,428,2.15,429,2.343,430,2.343,431,3.137,432,2.343,433,2.091,434,2.549,435,2.343,436,2.091,437,2.343,438,2.091,439,1.664,440,2.15,441,2.036,442,2.343,443,2.036,444,2.275,445,2.343,633,5.542,1156,6.465,1618,6.125,2238,6.709,2239,4.722,2240,6.873,2241,5.346,2242,5.346]],["title/classes/ParameterListItem.html",[0,0.236,208,2.457]],["body/classes/ParameterListItem.html",[0,0.445,2,0.697,3,0.064,4,0.064,5,0.064,8,0.697,11,1.215,32,0.278,36,0.586,38,1.592,39,0.617,42,0.216,44,0.486,45,0.009,46,0.6,47,0.473,50,0.927,51,0.129,57,0.145,58,1.163,79,1.408,89,1.288,90,1.288,91,1.226,100,1.826,135,0.004,136,0.006,137,0.004,140,2.382,142,3.43,143,4.81,144,3.715,145,2.589,146,3.055,147,2.589,148,2.589,149,2.135,150,2.601,151,2.589,152,2.589,153,2.589,154,2.589,155,2.589,157,0.68,158,1.939,159,1.679,160,2.211,161,1.187,162,2.589,163,2.135,164,2.065,165,2.589,166,2.48,167,2.589,168,2.589,169,2.589,170,2.589,171,2.589,172,2.589,173,2.589,174,2.589,175,3.581,176,1.058,177,3.058,178,2.589,179,3.581,180,1.275,181,1.679,182,3.058,183,2.589,184,1.775,185,1.679,186,1.551,187,2.211,188,2.589,189,2.589,190,2.589,191,2.589,192,2.48,193,2.48,194,2.48,195,2.953,196,3.43,197,2.065,198,2.382,199,2.48,200,2.48,201,2.48,202,1.881,203,2.589,204,2.589,205,2.455,206,2.589,207,2.589,208,3.777,209,2.589,210,2.589,2243,4.291,2244,4.291]],["title/classes/PayloadForSuccessfulAuthentication.html",[0,0.236,41,2.202]],["body/classes/PayloadForSuccessfulAuthentication.html",[0,0.42,1,2.769,2,0.518,3,0.047,4,0.047,5,0.095,6,1.643,7,1.397,8,1.377,9,3.445,10,1.44,11,1.811,12,2.615,13,3.465,14,3.663,15,1.535,16,3.325,17,2.038,18,3.325,19,3.195,20,2.659,21,1.843,22,1.77,23,3.295,24,2.379,25,3.074,26,3.325,27,3.074,28,1.418,29,2.768,30,3.193,31,2.768,32,0.352,33,1.248,34,0.2,35,0.513,36,1.11,37,1.729,38,1.309,39,0.349,41,2.863,42,0.345,44,0.361,45,0.009,46,0.322,47,0.351,51,0.109,52,0.469,53,3.356,54,1.486,55,2.251,56,1.643,57,0.138,58,0.625,59,1.587,60,2.769,61,0.969,62,2.038,63,2.769,64,1.486,65,3.193,66,3.509,67,3.997,68,3.417,69,2.769,70,1.77,71,2.383,72,2.981,73,2.379,74,3.299,75,2.769,76,1.667,77,1.852,78,2.889,79,1.289,80,3.195,81,3.195,82,3.299,83,3.078,84,2.768,85,2.768,86,2.305,87,2.659,88,1.843,89,1.188,90,1.188,91,1.131,92,1.843,93,1.77,94,1.843,95,1.843,96,1.704,97,1.319,98,0.969,99,1.77,100,2.448,101,2.768,102,2.769,103,2.468,104,1.77,105,1.017,106,1.77,107,1.77,108,1.643,109,3.417,110,0.992,111,1.843,112,1.704,113,1.77,114,2.768,115,1.236,116,1.843,117,1.843,118,3.696,119,1.77,120,1.843,121,2.768,122,1.843,123,2.659,124,0.685,125,1.843,126,1.77,127,1.843,128,1.77,129,1.843,130,2.659,131,2.659,132,1.843,133,1.843,134,1.704,135,0.003,136,0.005,137,0.003,2245,3.188,2246,3.188,2247,3.188,2248,3.188,2249,3.188,2250,3.188]],["title/classes/Process.html",[0,0.236,177,2.28]],["body/classes/Process.html",[0,0.445,2,0.7,3,0.064,4,0.064,5,0.064,8,0.7,11,1.22,32,0.279,36,0.588,38,1.592,39,0.617,42,0.217,44,0.488,45,0.009,46,0.601,47,0.475,50,0.752,51,0.13,57,0.145,58,1.166,79,1.393,89,1.289,90,1.289,91,1.227,100,1.834,135,0.004,136,0.006,137,0.004,140,2.392,142,3.44,143,4.657,144,3.428,145,2.6,146,3.058,147,2.6,148,2.6,149,2.144,150,2.609,151,2.6,152,2.6,153,2.6,154,2.6,155,2.6,157,0.683,158,1.946,159,1.686,160,2.22,161,1.192,162,4.115,163,2.144,164,2.074,165,2.6,166,2.49,167,2.6,168,2.6,169,2.6,170,2.6,171,2.6,172,2.6,173,2.6,174,2.6,175,3.592,176,1.062,177,3.513,178,2.6,179,3.592,180,1.279,181,1.686,182,3.067,183,2.6,184,1.782,185,1.686,186,1.557,187,2.22,188,2.6,189,2.6,190,2.6,191,2.6,192,2.49,193,2.49,194,2.49,195,2.956,196,3.44,197,2.074,198,2.392,199,2.49,200,2.49,201,2.49,202,1.888,203,2.6,204,2.6,205,2.461,206,2.6,207,2.6,208,3.304,209,2.6,210,2.6,651,2.6,2251,4.309,2252,4.309,2253,4.309]],["title/classes/RejectLogIn.html",[0,0.236,69,2.13]],["body/classes/RejectLogIn.html",[0,0.419,1,2.754,2,0.513,3,0.047,4,0.047,5,0.102,6,1.628,7,1.385,8,1.394,9,3.556,10,1.427,11,1.933,12,2.622,13,3.584,14,3.649,15,1.521,16,3.68,17,2.169,18,3.68,19,3.344,20,3.176,21,1.826,22,1.754,23,3.518,24,2.633,25,3.402,26,3.68,27,3.402,28,1.569,29,3.307,30,3.534,31,2.75,32,0.357,33,1.273,34,0.198,35,0.509,36,0.932,37,1.878,38,1.361,39,0.347,40,1.142,41,2.367,42,0.288,44,0.358,45,0.009,46,0.319,47,0.348,49,0.538,50,0.399,51,0.109,52,0.465,53,2.666,54,1.473,55,2.491,56,1.628,57,0.137,58,0.619,59,1.572,60,2.754,61,0.96,62,2.025,63,2.754,64,1.473,65,3.176,66,3.501,67,3.983,68,3.402,69,3.064,70,1.754,71,2.367,72,2.967,73,2.366,74,3.287,75,2.754,76,1.379,77,1.845,78,1.427,79,1.082,80,1.473,81,1.473,82,1.521,83,1.521,84,2.75,85,2.75,86,2.29,87,2.641,88,1.826,89,1.185,90,1.185,91,1.128,92,1.826,93,1.754,94,1.826,95,1.826,96,1.688,97,1.307,98,0.96,99,1.754,100,2.71,101,2.75,102,3.064,103,2.451,104,1.754,105,1.008,106,1.754,107,1.754,108,1.628,109,3.402,110,0.984,111,1.826,112,1.688,113,1.754,114,3.307,115,1.476,116,2.75,117,2.75,118,3.947,119,2.641,120,2.75,121,3.307,122,2.75,123,3.534,124,0.679,125,1.826,126,1.754,127,1.826,128,1.754,129,1.826,130,2.641,131,2.641,132,1.826,133,1.826,134,1.688,135,0.003,136,0.005,137,0.003,213,2.122,2254,4.757,2255,3.16]],["title/classes/RouterStateUrl.html",[0,0.236,557,3.111]],["body/classes/RouterStateUrl.html",[0,0.346,2,0.793,3,0.073,4,0.108,5,0.073,7,2.141,11,2.059,13,3.727,28,1.204,32,0.2,33,0.793,38,1.238,39,0.473,42,0.246,44,0.913,45,0.009,46,0.494,47,0.538,51,0.123,57,0.123,79,1.152,86,3.119,89,0.756,90,0.756,91,0.719,115,1.876,135,0.005,136,0.006,137,0.005,176,1.909,180,1.392,184,3.426,202,2.84,221,2.535,257,2.47,291,1.521,302,1.751,434,2.403,515,2.824,547,3.91,556,3.247,557,5.112,608,3.434,711,4.853,734,4.853,744,5.524,794,4.853,819,2.207,992,4.555,1359,3.434,1360,3.658,1361,6.244,1364,4.315,1365,5.724,1367,4.315,1368,6.244,1370,4.315,1371,3.939,1372,6.679,1373,3.939,1374,5.225,1375,5.724,1376,6.679,1377,5.724,1378,5.724,1379,6.244,1380,5.225,1381,5.724,1382,5.724,1383,5.724,1384,5.724,1385,6.84,1386,5.724,1387,5.724,1388,4.315,1389,4.315,1390,4.315,1391,4.315,1392,4.315,1393,4.315,1394,4.315,2256,4.885,2257,4.885]],["title/classes/SelectLightCard.html",[0,0.236,246,2.13]],["body/classes/SelectLightCard.html",[0,0.449,2,0.677,3,0.062,4,0.062,5,0.062,8,1.396,12,1.238,32,0.366,33,1.382,34,0.261,35,0.623,36,0.795,37,2.086,38,1.465,39,0.489,40,1.508,42,0.337,44,0.473,45,0.009,46,0.422,47,0.46,49,0.711,50,0.527,51,0.111,52,0.614,57,0.146,58,0.818,76,1.209,77,2.062,89,1.33,90,1.33,91,1.266,124,1.742,135,0.004,136,0.006,137,0.004,157,0.661,213,2.486,220,2.008,221,1.633,226,3.226,227,3.737,228,2.15,231,2.412,232,2.407,233,1.726,234,1.633,235,2.229,236,3.336,237,4.664,238,2.491,239,3.226,240,2.15,241,3.124,242,2.897,243,2.316,244,3.336,245,2.104,246,3.491,247,1.945,248,1.238,249,2.008,250,3.226,251,2.229,252,2.037,253,1.47,254,1.47,255,1.726,256,1.726,257,1.331,258,1.398,259,1.548,260,2.412,261,2.412,262,2.412,263,2.15,264,2.412,265,2.412,266,3.364,267,2.412,268,2.412,269,2.412,270,2.229,2258,5.821,2259,4.173]],["title/modules/ServicesModule.html",[446,1.83,459,3.111]],["body/modules/ServicesModule.html",[0,0.264,3,0.074,4,0.097,5,0.097,28,1.217,36,0.674,39,0.36,42,0.248,45,0.009,47,0.719,51,0.171,57,0.084,73,2.042,105,1.575,124,1.061,135,0.005,136,0.006,137,0.005,180,1.061,202,2.861,248,1.466,294,1.366,302,1.334,318,0.946,365,3.698,378,2.102,379,2.042,380,2.102,381,2.102,382,2.102,383,2.102,384,1.739,385,1.986,386,2.102,387,2.102,388,2.102,389,2.042,390,2.102,391,2.042,392,2.102,393,2.102,394,2.102,395,2.102,399,1.739,446,2.042,447,3.471,448,2.377,449,2.741,450,2.98,451,2.854,452,4.411,453,2.544,459,6.471,461,3.772,462,2.98,464,2.639,468,3.906,472,2.854,473,4.125,476,2.741,508,3.698,509,3.982,516,3.698,618,2.98,662,4.125,663,3.698,673,4.281,773,2.377,873,4.802,1086,4.281,1092,3.698,1216,3.982,1268,5.895,1270,5.895,1294,5.523,1309,4.362,1603,5.523,1819,5.251,1840,3.982,2260,4.362,2261,4.362,2262,5.84,2263,4.939,2264,4.939,2265,6.527,2266,6.527,2267,4.939,2268,4.939,2269,4.939,2270,4.939,2271,6.527,2272,4.939,2273,4.939]],["title/classes/State.html",[0,0.236,11,1.253]],["body/classes/State.html",[0,0.445,2,0.695,3,0.064,4,0.064,5,0.064,8,0.695,11,1.677,32,0.278,36,0.584,38,1.591,39,0.616,42,0.215,44,0.485,45,0.009,46,0.598,47,0.471,50,0.748,51,0.129,57,0.145,58,1.161,79,1.391,89,1.287,90,1.287,91,1.225,100,1.821,135,0.004,136,0.006,137,0.004,140,2.376,142,3.424,143,4.646,144,3.418,145,2.582,146,3.053,147,2.582,148,2.582,149,2.13,150,2.597,151,2.582,152,2.582,153,2.582,154,2.582,155,2.582,157,0.678,158,3.069,159,1.674,160,2.205,161,1.184,162,4.1,163,2.13,164,2.06,165,2.582,166,2.474,167,2.582,168,2.582,169,2.582,170,2.582,171,2.582,172,2.582,173,2.582,174,2.582,175,3.575,176,1.055,177,3.052,178,2.582,179,3.575,180,1.273,181,1.674,182,3.052,183,2.582,184,1.77,185,1.674,186,1.547,187,2.205,188,2.582,189,2.582,190,2.582,191,2.582,192,2.474,193,2.474,194,2.474,195,2.951,196,3.424,197,2.06,198,2.376,199,2.474,200,2.474,201,2.474,202,1.876,203,2.582,204,2.582,205,2.45,206,2.582,207,2.582,208,3.289,209,2.582,210,2.582,651,3.575,871,3.424,1021,3.008,2274,4.28,2275,4.28]],["title/modules/StateModule.html",[446,1.83,460,3.111]],["body/modules/StateModule.html",[0,0.28,3,0.078,4,0.101,5,0.101,9,2.3,34,0.329,36,0.717,42,0.264,45,0.009,51,0.168,52,1,57,0.089,73,2.171,105,1.674,115,1.753,135,0.005,136,0.007,137,0.005,180,1.128,202,2.977,248,1.558,294,1.452,302,1.418,318,1.005,378,2.234,379,2.171,380,2.234,381,2.234,382,2.234,383,2.234,384,1.849,385,2.111,386,2.234,387,2.234,388,2.234,389,2.171,390,2.234,391,2.171,392,2.234,393,2.234,394,2.234,395,2.234,399,1.849,415,2.234,446,2.171,448,2.526,449,2.913,450,4.098,451,3.034,452,4.098,453,2.704,460,6.044,461,3.926,462,3.167,464,3.629,468,4.023,473,4.293,476,2.913,508,3.93,509,4.232,518,4.249,519,3.317,540,3.93,547,3.167,556,4.515,558,4.636,602,3.93,603,3.93,606,5.086,976,2.913,1268,6.072,1270,6.072,1359,5.293,1361,6.072,1368,5.476,1376,4.232,1379,4.232,2276,4.636,2277,4.636,2278,5.249,2279,5.249,2280,5.249,2281,5.249,2282,5.249,2283,4.636,2284,6.792,2285,5.249,2286,5.249,2287,5.249,2288,5.249,2289,5.249,2290,5.249,2291,5.249,2292,5.249,2293,6.792,2294,5.249,2295,5.249,2296,5.249,2297,5.249,2298,5.249,2299,5.249]],["title/classes/Third.html",[0,0.236,164,2.13]],["body/classes/Third.html",[0,0.438,2,0.653,3,0.06,4,0.06,5,0.06,8,0.653,11,1.605,32,0.292,34,0.252,36,0.897,38,1.586,39,0.608,42,0.285,44,0.642,45,0.009,46,0.721,47,0.625,50,0.716,51,0.125,57,0.143,58,1.111,79,1.444,89,1.267,90,1.267,91,1.207,100,1.711,135,0.004,136,0.005,137,0.004,140,2.231,142,3.277,143,4.54,144,3.326,145,2.425,146,3.011,147,2.425,148,2.425,149,2,150,2.485,151,2.425,152,2.425,153,2.425,154,2.425,155,2.425,157,1.131,158,1.816,159,1.573,160,2.071,161,1.112,162,3.964,163,2,164,2.729,165,2.425,166,2.323,167,3.964,168,2.425,169,2.425,170,2.425,171,2.425,172,2.425,173,2.425,174,2.425,175,3.422,176,0.991,177,2.922,178,2.425,179,3.422,180,1.218,181,1.573,182,3.676,183,2.425,184,1.662,185,1.573,186,1.453,187,3.385,188,2.425,189,2.425,190,2.425,191,2.425,192,2.323,193,2.323,194,2.323,195,2.9,196,3.277,197,1.935,198,2.231,199,2.323,200,2.323,201,2.323,202,1.762,203,2.425,204,2.425,205,2.345,206,2.425,207,2.425,208,3.148,209,2.425,210,2.425,294,1.568,302,1.086,651,4.54,2300,5.671,2301,4.02,2302,5.671,2303,5.671,2304,4.572,2305,5.671,2306,5.671,2307,4.02,2308,4.02,2309,4.02]],["title/classes/ThirdMenu.html",[0,0.236,185,1.731]],["body/classes/ThirdMenu.html",[0,0.444,2,0.689,3,0.063,4,0.063,5,0.063,8,0.689,11,1.202,32,0.277,36,0.58,38,1.591,39,0.615,42,0.214,44,0.481,45,0.009,46,0.595,47,0.468,50,0.744,51,0.129,57,0.145,58,1.155,79,1.43,89,1.285,90,1.285,91,1.223,100,1.807,135,0.004,136,0.006,137,0.004,140,2.357,142,3.405,143,4.916,144,3.406,145,2.562,146,3.048,147,2.562,148,2.562,149,2.113,150,2.582,151,2.562,152,2.562,153,2.562,154,2.562,155,2.562,157,0.673,158,1.918,159,1.661,160,2.187,161,1.174,162,2.562,163,2.113,164,2.043,165,2.562,166,2.454,167,2.562,168,2.562,169,2.562,170,2.562,171,2.562,172,2.562,173,2.562,174,2.562,175,3.555,176,1.046,177,3.035,178,2.562,179,3.555,180,1.266,181,1.661,182,3.765,183,2.562,184,1.756,185,2.305,186,2.129,187,3.486,188,4.082,189,2.562,190,2.562,191,2.562,192,2.454,193,2.454,194,2.454,195,2.944,196,3.405,197,2.043,198,2.357,199,2.454,200,2.454,201,2.454,202,1.861,203,2.562,204,2.562,205,2.436,206,2.562,207,2.562,208,3.27,209,2.562,210,2.562,2310,3.75,2311,4.245]],["title/classes/ThirdMenuEntry.html",[0,0.236,182,2.28]],["body/classes/ThirdMenuEntry.html",[0,0.444,2,0.693,3,0.064,4,0.064,5,0.064,8,0.693,11,1.208,32,0.278,36,0.583,38,1.591,39,0.616,42,0.215,44,0.484,45,0.009,46,0.597,47,0.47,50,0.747,51,0.129,57,0.145,58,1.159,79,1.43,89,1.287,90,1.287,91,1.225,100,1.816,135,0.004,136,0.006,137,0.004,140,2.369,142,3.418,143,4.924,144,3.414,145,2.575,146,3.052,147,2.575,148,2.575,149,2.124,150,2.592,151,2.575,152,2.575,153,2.575,154,2.575,155,2.575,157,0.676,158,1.928,159,1.67,160,2.199,161,1.18,162,2.575,163,2.124,164,2.054,165,2.575,166,2.467,167,2.575,168,2.575,169,2.575,170,2.575,171,2.575,172,2.575,173,2.575,174,2.575,175,3.568,176,1.052,177,3.047,178,2.575,179,3.568,180,1.27,181,1.67,182,3.496,183,2.575,184,2.806,185,1.67,186,2.137,187,2.199,188,2.575,189,2.575,190,2.575,191,2.575,192,2.467,193,2.467,194,2.467,195,2.949,196,3.418,197,2.054,198,2.369,199,2.467,200,2.467,201,2.467,202,1.871,203,2.575,204,2.575,205,2.445,206,2.575,207,2.575,208,3.282,209,2.575,210,2.575,2310,3.77,2312,4.268]],["title/modules/ThirdpartyModule.html",[446,1.83,2313,3.314]],["body/modules/ThirdpartyModule.html",[0,0.317,3,0.088,4,0.109,5,0.109,36,0.81,45,0.009,51,0.158,57,0.101,73,2.455,105,1.893,135,0.006,136,0.007,137,0.006,248,1.761,318,1.137,378,2.526,379,2.455,380,2.526,381,2.526,382,2.526,383,2.526,384,2.09,385,2.387,386,2.526,387,2.526,388,2.526,389,2.455,390,2.526,391,2.455,392,2.526,393,2.526,394,2.526,395,2.526,399,2.09,426,3.321,446,2.455,448,2.857,449,3.295,450,4.81,451,3.43,452,3.581,453,3.058,461,4.243,462,3.581,464,3.923,468,3.923,473,4.64,476,3.295,485,4.172,527,5.242,2313,6.686,2314,5.242,2315,5.242,2316,5.242,2317,6.129,2318,5.935,2319,5.242]],["title/modules/ThirdpartyRoutingModule.html",[446,1.83,2317,3.111]],["body/modules/ThirdpartyRoutingModule.html",[0,0.337,3,0.094,4,0.113,5,0.113,36,0.86,45,0.009,51,0.156,57,0.107,105,2.009,135,0.006,136,0.007,137,0.006,176,1.553,248,1.87,271,1.553,318,1.206,378,2.681,379,2.605,380,2.681,381,2.681,382,2.681,383,2.681,384,2.219,385,2.533,386,2.681,387,2.681,388,2.681,389,2.605,390,2.681,391,2.605,392,2.681,393,2.681,394,2.681,395,2.681,426,2.9,448,3.032,453,3.246,464,3.366,468,4.068,511,4.718,513,5.702,514,5.172,515,3.641,520,4.718,642,5.08,2317,5.353,2319,5.564,2320,6.3,2321,6.3]],["title/classes/ThirdsI18nLoader.html",[0,0.236,2322,3.314]],["body/classes/ThirdsI18nLoader.html",[0,0.266,2,0.546,3,0.05,4,0.05,5,0.05,17,2.329,24,1.39,28,1.923,32,0.204,33,0.809,34,0.21,38,0.572,39,0.245,42,0.251,44,0.564,45,0.009,46,0.6,47,0.549,51,0.158,52,0.495,57,0.101,79,1.401,115,1.531,135,0.006,136,0.005,137,0.003,150,1.473,161,1.642,164,2.397,176,2.028,180,1.912,181,1.315,184,1.39,185,1.315,186,2.372,187,4.107,197,1.617,232,1.39,234,1.315,240,2.566,248,0.997,257,1.072,291,2.525,294,1.378,298,2.362,299,3.73,302,0.908,318,0.644,319,1.126,320,1.28,322,1.126,329,2.028,330,2.028,332,2.362,338,1.154,439,1.046,472,1.942,518,1.731,531,2.709,656,1.444,657,3.751,659,2.516,660,1.731,661,2.028,668,2.028,669,1.942,673,3.058,715,2.124,744,4.43,773,2.397,905,2.601,907,1.942,929,2.124,942,2.362,952,2.709,989,2.234,1011,2.234,1086,3.783,1135,2.709,1177,2.709,1327,4.786,1328,5.293,1329,4.786,1433,1.731,1597,2.516,1862,5.293,2304,4.016,2322,3.73,2323,2.709,2324,5.293,2325,4.981,2326,4.399,2327,3.36,2328,4.399,2329,3.36,2330,4.399,2331,2.968,2332,2.968,2333,2.968,2334,2.968,2335,2.968,2336,2.968,2337,2.968,2338,2.968,2339,2.968,2340,2.968,2341,2.968,2342,2.968,2343,2.968,2344,2.968,2345,2.968,2346,2.968,2347,2.968,2348,2.968,2349,2.968,2350,2.968,2351,2.968,2352,2.968,2353,2.968,2354,2.968,2355,5.242,2356,2.968,2357,2.968,2358,4.399,2359,2.968,2360,2.968,2361,2.968,2362,2.968,2363,2.968,2364,2.968,2365,2.968,2366,2.968,2367,2.968,2368,2.968,2369,2.968,2370,2.968,2371,6.191,2372,5.242,2373,2.968,2374,2.968,2375,4.016,2376,2.968,2377,2.968,2378,2.968,2379,2.968,2380,2.968,2381,2.968,2382,4.399,2383,4.016,2384,4.399,2385,2.709,2386,2.968,2387,2.968,2388,2.968,2389,2.968,2390,2.968,2391,2.968,2392,2.968,2393,2.968,2394,2.968,2395,2.968,2396,2.968,2397,2.968,2398,2.968,2399,2.968,2400,2.968,2401,2.968,2402,4.399,2403,2.968,2404,2.968,2405,2.968,2406,2.968,2407,2.968,2408,2.968,2409,2.968,2410,2.968,2411,2.968,2412,2.968,2413,4.399,2414,2.968,2415,2.968,2416,2.968,2417,2.968,2418,2.968,2419,2.968,2420,2.968,2421,2.968,2422,2.968,2423,2.968,2424,2.968,2425,4.399,2426,2.968,2427,4.399,2428,2.968,2429,4.399,2430,2.968,2431,2.968,2432,4.399,2433,5.242,2434,2.968,2435,2.968,2436,2.968,2437,2.968,2438,2.968,2439,2.968,2440,2.968,2441,2.968,2442,2.968,2443,2.968,2444,2.968]],["title/injectables/ThirdsService.html",[656,1.283,1086,2.28]],["body/injectables/ThirdsService.html",[0,0.225,3,0.04,4,0.04,5,0.04,17,2.348,24,1.117,28,1.846,32,0.324,33,0.438,34,0.169,35,0.452,38,0.884,39,0.197,42,0.417,44,0.849,45,0.009,46,0.801,47,0.825,49,0.884,50,0.655,51,0.151,52,0.398,57,0.088,79,1.452,115,1.817,135,0.005,136,0.004,137,0.003,150,1.184,161,1.622,164,2.03,176,1.923,180,1.86,181,1.056,184,1.117,185,2.03,186,2.119,187,4.368,197,1.3,232,2.146,234,1.056,240,2.173,248,0.801,257,0.861,291,2.706,294,1.166,298,4.122,299,3.885,302,2.07,318,0.517,319,0.904,320,1.028,322,0.904,329,1.629,330,1.629,332,1.898,338,0.927,439,0.841,472,1.561,518,1.391,531,2.177,656,1.222,657,4.261,659,2.022,660,1.391,661,1.629,668,1.629,669,1.561,673,3.629,715,1.707,744,4.068,773,2.03,865,1.258,905,2.274,907,1.561,929,1.707,942,1.898,952,2.177,989,1.795,1011,4.228,1086,3.021,1129,1.898,1135,2.177,1177,2.177,1196,2.177,1327,5.679,1328,4.728,1329,4.728,1433,1.391,1597,2.022,1862,5.436,2304,4.728,2322,2.022,2323,2.177,2324,4.184,2326,2.385,2328,2.385,2330,2.385,2331,2.385,2332,2.385,2333,2.385,2334,2.385,2335,2.385,2336,2.385,2337,4.583,2338,4.583,2339,4.583,2340,4.583,2341,4.583,2342,2.385,2343,2.385,2344,2.385,2345,2.385,2346,2.385,2347,2.385,2348,2.385,2349,2.385,2350,2.385,2351,2.385,2352,2.385,2353,2.385,2354,3.725,2355,4.583,2356,2.385,2357,3.725,2358,3.725,2359,2.385,2360,2.385,2361,3.725,2362,4.583,2363,2.385,2364,2.385,2365,2.385,2366,2.385,2367,2.385,2368,2.385,2369,2.385,2370,3.725,2371,5.618,2372,4.583,2373,2.385,2374,2.385,2375,3.4,2376,2.385,2377,2.385,2378,2.385,2379,2.385,2380,2.385,2381,2.385,2382,3.725,2383,3.4,2384,3.725,2385,4.728,2386,2.385,2387,2.385,2388,2.385,2389,2.385,2390,2.385,2391,2.385,2392,2.385,2393,2.385,2394,2.385,2395,2.385,2396,3.725,2397,2.385,2398,2.385,2399,2.385,2400,2.385,2401,2.385,2402,3.725,2403,2.385,2404,2.385,2405,2.385,2406,2.385,2407,2.385,2408,3.725,2409,2.385,2410,2.385,2411,2.385,2412,2.385,2413,3.725,2414,2.385,2415,2.385,2416,2.385,2417,2.385,2418,2.385,2419,2.385,2420,2.385,2421,2.385,2422,2.385,2423,2.385,2424,2.385,2425,3.725,2426,2.385,2427,3.725,2428,2.385,2429,3.725,2430,2.385,2431,2.385,2432,3.725,2433,4.583,2434,2.385,2435,2.385,2436,2.385,2437,2.385,2438,2.385,2439,2.385,2440,2.385,2441,2.385,2442,2.385,2443,2.385,2444,2.385,2445,4.217,2446,4.217,2447,4.217,2448,4.217,2449,4.217,2450,3.725,2451,4.217,2452,4.217,2453,4.217,2454,2.7,2455,2.7,2456,2.7,2457,2.7,2458,2.7,2459,2.7,2460,2.7,2461,2.7,2462,2.7,2463,2.7,2464,2.7,2465,2.7,2466,2.7,2467,2.7,2468,2.7,2469,2.7,2470,2.7,2471,2.7]],["title/classes/ThirdsServiceMock.html",[0,0.236,2472,3.568]],["body/classes/ThirdsServiceMock.html",[0,0.339,2,1.029,3,0.094,4,0.094,5,0.094,17,2.323,28,2.099,34,0.397,42,0.384,45,0.009,51,0.145,57,0.107,135,0.006,136,0.007,137,0.006,180,1.362,182,3.265,185,2.48,294,2.114,302,2.065,319,2.123,350,4.242,1433,3.265,2385,6.868,2450,7.247,2472,6.162,2473,5.598,2474,6.338,2475,6.338,2476,6.338,2477,6.338,2478,6.338,2479,6.338,2480,6.338,2481,6.338,2482,6.338,2483,6.338,2484,6.338,2485,6.338,2486,6.338,2487,6.338,2488,6.338,2489,6.338,2490,6.338,2491,6.338]],["title/components/TimeFilterComponent.html",[271,1.091,433,1.731]],["body/components/TimeFilterComponent.html",[0,0.198,3,0.055,4,0.055,5,0.055,17,1.947,28,1.873,32,0.281,33,0.869,34,0.232,35,0.573,39,0.27,42,0.403,44,0.42,45,0.009,46,0.737,47,0.408,49,0.631,50,0.468,51,0.162,52,0.546,57,0.063,61,1.126,62,1.577,91,0.546,98,1.126,110,1.153,115,1.961,135,0.004,136,0.005,137,0.004,157,0.848,180,1.349,181,2.093,219,1.339,271,1.548,272,1.45,273,2.277,274,1.577,276,1.624,277,1.624,279,2.927,280,1.49,281,3.721,285,2.345,291,2.583,294,1.48,296,3.205,297,1.624,302,1.697,303,1.933,318,0.71,319,1.241,320,1.411,322,1.241,323,1.45,338,1.273,368,2.605,385,2.525,399,1.305,400,2.345,401,2.345,402,1.411,403,3.014,404,1.624,405,1.624,406,1.411,407,1.624,408,1.45,409,1.624,410,1.411,411,2.345,412,1.45,413,1.624,414,1.49,415,1.577,416,2.345,417,1.411,418,1.624,419,1.45,420,1.411,421,1.624,422,1.45,423,1.624,424,1.45,425,1.624,426,1.411,427,1.624,428,1.49,429,1.624,430,1.624,431,1.45,432,1.624,433,2.69,434,2.819,435,1.624,436,1.45,437,1.624,438,1.45,439,2.497,440,1.49,441,1.411,442,1.624,443,1.411,444,1.577,445,1.624,479,2.463,610,2.97,615,2.463,616,2.463,617,2.236,618,2.236,620,2.605,623,2.342,668,2.236,669,2.142,905,1.624,1035,3.228,1152,5.744,1182,3.273,1186,2.988,1187,2.775,1593,2.775,1628,6.589,1629,6.589,1819,4.952,1840,2.988,2118,5.545,2120,5.063,2492,2.988,2493,5.546,2494,4.726,2495,5.546,2496,5.546,2497,6.28,2498,6.074,2499,6.074,2500,5.35,2501,3.705,2502,3.705,2503,3.705,2504,3.273,2505,3.705,2506,3.273,2507,3.705,2508,2.988,2509,3.273,2510,4.726,2511,3.273,2512,4.726,2513,5.35,2514,3.273,2515,3.273,2516,3.273,2517,3.705,2518,3.273,2519,3.705,2520,3.705,2521,3.705,2522,3.705,2523,5.35,2524,3.705,2525,3.705,2526,3.705,2527,3.705,2528,5.35,2529,3.705,2530,3.705,2531,3.705,2532,3.705,2533,3.273,2534,3.273,2535,3.273,2536,4.726,2537,3.705,2538,3.273,2539,3.273,2540,3.273,2541,5.35,2542,5.35,2543,4.726,2544,3.705,2545,4.726,2546,3.705,2547,3.273,2548,5.35,2549,5.35,2550,5.35]],["title/components/TimeLineComponent.html",[271,1.091,436,1.731]],["body/components/TimeLineComponent.html",[0,0.189,3,0.053,4,0.053,5,0.053,17,1.73,32,0.293,33,0.839,34,0.221,35,0.553,36,1.02,39,0.258,42,0.36,44,0.4,45,0.009,46,0.679,47,0.389,50,0.446,51,0.16,52,0.52,57,0.06,61,1.073,64,1.646,98,1.073,110,1.1,115,1.929,135,0.003,136,0.005,137,0.003,157,0.819,176,1.99,195,2.701,211,3.266,218,3.862,219,2.208,221,2.022,232,1.461,233,1.461,234,1.382,247,1.646,263,3.148,271,1.506,272,1.382,273,2.199,274,1.503,276,1.548,277,1.548,279,2.848,280,1.42,281,3.702,285,2.265,294,1.429,296,3.134,297,1.548,302,0.954,303,1.276,318,0.676,319,1.183,320,1.345,322,1.183,323,1.382,338,1.213,350,1.961,351,3.687,399,1.244,400,2.265,401,2.265,402,1.345,403,2.947,404,1.548,405,1.548,406,1.345,407,1.548,408,1.382,409,1.548,410,1.345,411,2.265,412,1.382,413,1.548,414,1.42,415,1.503,416,2.265,417,1.345,418,1.548,419,1.382,420,1.345,421,1.548,422,1.382,423,1.548,424,1.382,425,1.548,426,1.345,427,1.548,428,1.42,429,1.548,430,1.548,431,1.382,432,1.548,433,1.382,434,2.772,435,1.548,436,2.631,437,1.548,438,1.382,439,1.1,440,1.42,441,1.345,442,1.548,443,1.345,444,1.503,445,1.548,537,2.483,633,4.167,660,1.82,668,2.131,669,2.042,773,3.236,857,3.972,1014,2.848,1015,2.848,1016,2.483,1523,2.645,1534,5.254,1592,3.12,1593,2.645,1594,3.12,1595,3.12,1596,3.12,1597,2.645,1621,6.026,1780,2.645,1795,4.522,1897,2.848,2383,2.848,2543,3.12,2545,3.12,2551,3.12,2552,5.168,2553,5.168,2554,7.474,2555,6.111,2556,5.168,2557,3.532,2558,3.532,2559,3.532,2560,3.532,2561,3.532,2562,5.168,2563,3.532,2564,3.532,2565,3.532,2566,3.532,2567,3.532,2568,3.532,2569,3.532,2570,3.532,2571,3.532,2572,3.532,2573,3.532,2574,3.532,2575,3.532,2576,3.532,2577,3.532,2578,6.724,2579,3.532,2580,6.724,2581,3.532,2582,3.532,2583,3.532,2584,3.532,2585,3.532,2586,3.532,2587,6.111,2588,3.532,2589,3.532,2590,3.532,2591,3.532,2592,3.532,2593,3.532,2594,3.532,2595,3.532,2596,3.532,2597,3.532,2598,3.532,2599,3.532,2600,3.532,2601,3.532,2602,3.532,2603,5.168,2604,3.532,2605,3.532,2606,3.532,2607,3.532,2608,3.532,2609,3.532,2610,3.532,2611,3.532,2612,5.168,2613,3.532,2614,3.532,2615,3.532,2616,3.532,2617,3.532,2618,3.532,2619,6.724,2620,3.12,2621,3.532,2622,3.532,2623,3.532,2624,3.532,2625,3.532,2626,3.532,2627,3.532,2628,3.532,2629,3.532,2630,3.532,2631,3.532,2632,6.111,2633,3.532,2634,3.532,2635,3.532,2636,3.532,2637,3.12,2638,3.532,2639,3.532,2640,3.532,2641,5.168,2642,5.168,2643,5.168,2644,5.168,2645,3.532]],["title/injectables/TimeService.html",[656,1.283,1819,2.797]],["body/injectables/TimeService.html",[0,0.315,3,0.088,4,0.088,5,0.088,32,0.299,34,0.369,36,1.228,39,0.58,42,0.418,44,0.829,45,0.009,46,0.739,47,0.806,50,0.924,51,0.139,57,0.1,79,1.354,135,0.006,136,0.007,137,0.006,180,1.708,205,3.288,294,2.023,302,2.149,318,1.13,656,2.12,857,4.414,865,2.751,1819,4.624,2646,5.213,2647,7.316,2648,8.312,2649,7.316,2650,5.902,2651,7.316,2652,5.902,2653,5.902,2654,8.312,2655,7.316,2656,5.902,2657,5.213,2658,5.902,2659,7.316,2660,5.902,2661,5.902,2662,5.902]],["title/interfaces/TimelineState.html",[542,2.063,554,3.111]],["body/interfaces/TimelineState.html",[3,0.087,4,0.087,5,0.087,24,2.418,32,0.349,34,0.366,35,0.779,45,0.009,51,0.151,57,0.14,79,1.377,124,1.831,135,0.006,136,0.007,137,0.006,146,2.861,176,1.793,180,1.256,181,2.288,195,2.113,221,3.334,232,3.593,233,2.418,234,2.288,372,5.142,542,2.725,543,3.529,554,5.566,572,5.165,1124,6.994,1125,6.871,1127,6.871,1140,6.425,1141,5.865,1142,5.865,1143,4.715,1144,5.165,1145,5.165,1146,5.165,1147,5.165,1148,5.447,1149,4.715,1151,4.715,2663,4.715,2664,4.715]],["title/interceptors/TokenInjector.html",[1236,3.568,2262,3.111]],["body/interceptors/TokenInjector.html",[0,0.298,3,0.083,4,0.083,5,0.083,10,2.521,17,2.194,32,0.317,33,0.906,34,0.349,39,0.407,42,0.39,44,0.878,45,0.009,46,0.783,47,0.854,51,0.155,57,0.095,89,1.093,90,1.093,91,1.237,135,0.005,136,0.007,137,0.005,176,1.91,180,1.518,184,2.308,294,1.954,302,1.909,318,1.069,319,1.869,338,1.917,472,3.225,656,2.047,673,4.424,1216,4.5,1234,6.569,1239,4.929,2262,4.966,2665,5.581,2666,4.929,2667,7.064,2668,7.064,2669,5.581,2670,5.581,2671,7.064,2672,8.905,2673,5.581,2674,7.064,2675,8.147,2676,5.581,2677,5.581,2678,7.064,2679,5.581,2680,5.581,2681,7.064,2682,5.581,2683,5.581,2684,5.581,2685,5.581,2686,5.581]],["title/classes/TryToLogIn.html",[0,0.236,19,2.063]],["body/classes/TryToLogIn.html",[0,0.421,1,2.782,2,0.522,3,0.048,4,0.048,5,0.096,6,1.656,7,1.409,8,1.398,9,3.516,10,1.452,11,1.818,12,2.618,13,3.476,14,3.859,15,1.547,16,3.341,17,2.045,18,3.341,19,3.366,20,2.675,21,1.858,22,1.784,23,3.544,24,2.391,25,3.088,26,3.341,27,3.088,28,1.425,29,2.785,30,3.209,31,2.785,32,0.356,33,1.279,34,0.201,35,0.516,36,0.939,37,1.888,38,1.366,39,0.351,40,1.161,41,2.398,42,0.291,44,0.364,45,0.009,46,0.325,47,0.354,49,0.547,50,0.406,51,0.11,52,0.473,53,2.694,54,1.498,55,2.262,56,1.656,57,0.138,58,0.63,59,1.599,60,2.782,61,0.977,62,2.051,63,2.782,64,1.498,65,3.209,66,3.57,67,4.009,68,3.431,69,2.782,70,1.784,71,2.398,72,2.993,73,2.391,74,3.311,75,2.782,76,1.397,77,1.859,78,1.452,79,1.09,80,1.498,81,1.498,82,1.547,83,1.547,84,2.785,85,2.785,86,2.319,87,2.675,88,1.858,89,1.191,90,1.191,91,1.134,92,1.858,93,1.784,94,2.785,95,2.785,96,2.575,97,1.993,98,1.464,99,2.675,100,2.733,101,3.341,102,3.311,103,2.978,104,2.675,105,1.537,106,2.675,107,1.784,108,1.656,109,3.431,110,1,111,1.858,112,1.717,113,1.784,114,2.785,115,1.243,116,1.858,117,1.858,118,3.711,119,1.784,120,1.858,121,2.785,122,1.858,123,2.675,124,0.691,125,1.858,126,1.784,127,1.858,128,1.784,129,1.858,130,2.675,131,2.675,132,1.858,133,1.858,134,1.717,135,0.003,136,0.005,137,0.003,213,2.144,2687,4.819,2688,3.214]],["title/classes/TryToLogOut.html",[0,0.236,72,2.063]],["body/classes/TryToLogOut.html",[0,0.424,1,2.83,2,0.537,3,0.049,4,0.049,5,0.097,6,1.704,7,1.45,8,1.405,9,3.541,10,1.494,11,1.844,12,2.617,13,3.513,14,3.9,15,1.592,16,3.399,17,2.067,18,3.399,19,3.245,20,2.733,21,1.912,22,1.836,23,3.588,24,2.432,25,3.142,26,3.399,27,3.142,28,1.449,29,2.846,30,3.264,31,2.846,32,0.346,33,1.289,34,0.207,35,0.527,36,0.803,37,1.642,38,1.376,39,0.241,41,2.45,42,0.166,45,0.009,49,0.563,50,0.418,51,0.112,52,0.487,53,2.741,54,1.542,55,2.301,56,1.704,57,0.139,58,0.648,59,1.646,60,2.83,61,1.005,62,2.095,63,2.83,64,1.542,65,3.264,66,3.638,67,4.052,68,3.48,69,2.83,70,1.836,71,2.45,72,3.245,73,2.432,74,3.351,75,2.83,76,1.427,77,1.882,78,1.494,79,1.104,80,1.542,81,1.542,82,1.592,83,1.592,84,2.846,85,2.846,86,2.37,87,2.733,88,1.912,89,1.202,90,1.202,91,1.144,92,1.912,93,1.836,94,1.912,95,1.912,96,1.767,97,1.368,98,1.005,99,1.836,100,2.772,101,3.399,102,2.83,103,3.03,104,1.836,105,1.055,106,1.836,107,1.836,108,1.704,109,4.039,110,1.532,111,2.846,112,2.63,113,2.733,114,2.846,115,1.27,116,1.912,117,1.912,118,3.765,119,1.836,120,1.912,121,2.846,122,1.912,123,2.733,124,0.711,125,1.912,126,1.836,127,1.912,128,1.836,129,1.912,130,2.733,131,2.733,132,1.912,133,1.912,134,1.767,135,0.003,136,0.005,137,0.003,2689,3.308]],["title/components/TypeFilterComponent.html",[271,1.091,438,1.731]],["body/components/TypeFilterComponent.html",[0,0.179,3,0.05,4,0.074,5,0.074,8,0.544,17,1.982,28,1.921,32,0.347,33,0.807,34,0.21,35,0.532,36,0.457,39,0.244,42,0.392,44,0.38,45,0.009,46,0.707,47,0.369,49,0.571,50,0.423,51,0.158,52,0.493,57,0.057,61,1.018,62,1.426,91,0.493,98,1.018,105,1.585,110,1.043,115,1.892,135,0.003,136,0.005,137,0.003,157,0.788,180,1.273,219,1.21,248,0.994,249,2.392,271,1.46,272,1.311,273,2.115,274,1.426,275,1.859,276,1.468,277,1.468,279,2.761,280,1.347,281,3.68,283,3.141,285,2.178,291,2.479,294,1.374,296,3.054,297,1.468,302,1.601,303,1.796,318,0.641,319,1.122,320,1.276,322,1.122,323,1.311,338,1.15,368,2.355,378,1.426,379,1.385,380,1.426,381,1.426,382,1.426,383,1.426,384,1.18,385,2.635,386,1.426,387,1.426,388,1.426,389,1.385,390,1.426,391,1.385,392,1.426,393,1.426,394,1.426,395,1.426,397,2.508,399,1.18,400,2.178,401,2.178,402,1.276,403,2.873,404,1.468,405,1.468,406,1.276,407,1.468,408,1.311,409,1.468,410,1.276,411,2.178,412,1.311,413,1.468,414,1.347,415,1.426,416,2.178,417,1.276,418,1.468,419,1.311,420,1.276,421,1.468,422,1.311,423,1.468,424,1.311,425,1.468,426,1.276,427,1.468,428,1.347,429,1.468,430,1.468,431,1.311,432,1.468,433,1.311,434,1.843,435,1.468,436,1.311,437,1.468,438,2.564,439,2.479,440,1.347,441,1.276,442,1.468,443,1.276,444,1.426,445,1.468,479,2.227,610,2.759,615,2.227,616,2.227,617,2.021,618,2.021,620,2.355,623,2.117,668,2.021,669,1.936,828,2.508,905,1.468,943,4.777,1035,2.999,1064,5.789,1076,2.959,1152,5.599,1186,2.701,1187,2.508,1488,4.777,1523,2.508,1593,2.508,1625,6.422,1626,6.422,1726,2.701,1729,2.701,1731,2.701,1973,2.959,2118,5.284,2120,5.644,2492,2.701,2493,5.232,2494,4.389,2495,5.232,2496,5.232,2498,5.789,2499,5.789,2504,2.959,2506,2.959,2508,2.701,2509,2.959,2510,4.389,2511,2.959,2512,5.232,2514,2.959,2515,2.959,2516,2.959,2518,2.959,2533,2.959,2534,2.959,2535,2.959,2536,2.959,2538,2.959,2539,2.959,2540,2.959,2547,2.959,2690,5.924,2691,5.924,2692,3.35,2693,3.35,2694,3.35,2695,3.35,2696,3.35,2697,3.35,2698,3.35,2699,3.35,2700,4.97,2701,3.35,2702,3.35,2703,3.35,2704,3.35,2705,3.35,2706,3.35,2707,3.35,2708,3.35,2709,3.35,2710,3.35,2711,3.35,2712,3.35,2713,3.35,2714,3.35,2715,3.35,2716,3.35,2717,3.35,2718,3.35,2719,3.35,2720,3.35,2721,4.97,2722,4.97,2723,4.97,2724,4.97,2725,4.97,2726,7,2727,2.959,2728,3.35,2729,5.232,2730,4.97,2731,3.35,2732,4.97,2733,3.35,2734,5.924,2735,4.97,2736,7,2737,3.35,2738,3.35]],["title/classes/UpdateSelectedMenu.html",[0,0.236,1357,2.457]],["body/classes/UpdateSelectedMenu.html",[0,0.426,2,0.768,3,0.07,4,0.07,5,0.07,7,2.074,8,1.401,9,2.781,10,3.233,11,1.796,12,1.404,32,0.365,33,1.333,34,0.296,35,0.679,36,0.866,37,2.114,38,1.428,39,0.463,40,1.71,42,0.36,44,0.536,45,0.009,46,0.478,47,0.521,49,0.806,50,0.598,51,0.121,52,0.697,57,0.142,58,0.927,76,1.372,77,2.066,79,1.005,89,1.233,90,1.233,91,1.174,124,1.713,135,0.005,136,0.006,137,0.005,185,2.482,213,2.654,238,2.458,245,1.71,252,2.175,253,1.667,254,1.667,257,1.509,258,1.585,259,1.755,530,2.991,546,4.918,1126,4.137,1357,4.245,1433,2.438,1781,2.856,1784,3.327,1785,2.991,1786,3.973,1787,3.973,1788,3.973,1789,3.327,1790,3.327,1791,3.327,1792,3.327,1793,3.327,1794,3.327,1795,2.991,1796,4.46,1797,3.146,1798,3.146,1799,3.146,2739,6.345,2740,4.732]],["title/classes/UpdatedSubscription.html",[0,0.236,250,2.13]],["body/classes/UpdatedSubscription.html",[0,0.452,2,0.697,3,0.064,4,0.064,5,0.064,8,1.404,12,1.273,32,0.357,33,1.39,34,0.269,35,0.636,37,1.943,38,1.472,39,0.535,42,0.299,45,0.009,49,0.731,50,0.542,51,0.113,52,0.632,57,0.146,58,0.841,76,1.244,77,2.083,89,1.337,90,1.337,91,1.273,124,1.756,135,0.004,136,0.006,137,0.004,157,0.68,220,2.065,221,1.679,226,3.275,227,3.506,228,2.211,231,2.48,232,2.455,233,1.775,234,1.679,235,2.293,236,3.386,237,4.693,238,2.521,239,3.275,240,2.211,241,3.171,242,2.954,243,2.382,244,3.386,245,2.145,246,3.275,247,2,248,1.273,249,2.065,250,3.534,251,2.293,252,2.068,253,1.511,254,1.511,255,1.775,256,1.775,257,1.368,258,1.437,259,1.592,260,2.48,261,2.48,262,2.48,263,2.211,264,2.48,265,2.48,266,2.48,267,2.48,268,3.43,269,2.48,270,2.293,2741,5.935]],["title/pipes/XAxisTickFormatPipe.html",[905,1.94,1612,3.111]],["body/pipes/XAxisTickFormatPipe.html",[0,0.235,3,0.065,4,0.065,5,0.065,28,1.084,32,0.18,33,0.714,42,0.221,44,0.498,45,0.009,46,0.696,47,0.485,50,0.762,51,0.131,57,0.075,79,1.388,83,2.117,135,0.007,136,0.006,137,0.004,176,1.979,180,1.906,280,1.769,294,1.216,302,1.188,318,0.842,350,3.351,476,2.441,537,3.092,819,3.512,857,3.826,905,2.646,1534,4.244,1612,5.215,1638,4.867,1639,4.867,1640,4.867,1780,3.293,1897,3.546,2620,3.885,2637,3.885,2742,4.398,2743,3.885,2744,6.037,2745,4.398,2746,6.037,2747,7.775,2748,8.378,2749,4.398,2750,6.037,2751,6.037,2752,4.398,2753,4.398,2754,4.398,2755,4.398,2756,4.398,2757,6.037,2758,4.398,2759,6.893,2760,4.398,2761,8.032,2762,4.398,2763,4.398,2764,6.893,2765,8.378,2766,6.893,2767,6.893,2768,6.893,2769,6.037,2770,4.398,2771,4.398,2772,6.037,2773,6.037,2774,6.037,2775,6.037,2776,4.398,2777,4.398,2778,6.037,2779,4.398,2780,4.398,2781,4.398,2782,6.037,2783,4.398,2784,4.398,2785,4.398,2786,8.032,2787,6.893,2788,4.398,2789,4.398,2790,4.398,2791,4.398,2792,4.398,2793,4.398,2794,4.398,2795,4.398,2796,4.398,2797,4.398,2798,4.398,2799,4.398]],["title/coverage.html",[2800,5.355]],["body/coverage.html",[0,0.48,1,0.916,5,0.028,6,3.418,8,0.309,11,0.539,15,0.916,19,0.887,24,3.566,25,3.068,28,0.469,32,0.078,41,0.947,45,0.009,55,0.745,60,0.916,63,0.916,69,0.916,72,0.887,74,0.916,75,0.916,78,0.86,98,0.579,110,0.593,135,0.002,136,0.003,137,0.002,140,3.545,144,0.887,150,0.834,157,0.302,158,0.86,161,0.527,164,0.916,177,0.981,182,0.981,185,0.745,208,1.057,211,1.203,212,2.235,218,1.203,219,1.149,226,0.916,227,3.418,228,3.418,236,0.947,239,0.916,241,0.887,242,0.947,244,0.947,246,0.916,250,0.916,252,1.452,271,1.954,272,0.745,278,1.682,322,0.638,324,1.338,325,1.535,327,1.535,331,1.682,333,1.057,335,1.535,336,1.535,402,1.211,406,0.725,408,0.745,410,0.725,412,0.745,414,0.766,417,0.725,419,0.745,420,0.725,422,0.745,424,0.745,426,0.725,428,0.766,431,0.745,433,0.745,436,0.745,438,0.745,439,0.593,441,0.725,443,0.725,491,1.535,518,2.108,542,2.84,544,4.284,548,1.338,549,1.338,550,1.338,551,1.338,552,1.338,554,1.338,557,1.338,565,1.338,567,1.338,586,1.338,590,1.338,592,1.338,595,1.338,599,1.338,602,1.426,603,1.426,605,1.535,606,1.426,608,1.338,610,1.057,611,2.235,624,1.203,628,1.682,643,1.426,644,3.735,656,2.195,662,1.203,664,1.426,671,1.426,673,0.981,819,4.247,852,1.338,862,2.563,863,1.535,866,1.682,873,1.1,905,0.834,971,1.057,980,1.535,1009,2.38,1030,1.682,1047,1.535,1082,1.682,1083,1.426,1084,1.682,1086,0.981,1105,1.682,1116,0.947,1117,1.057,1118,1.057,1122,3.853,1148,1.426,1150,1.535,1152,3.359,1153,1.535,1154,1.682,1159,1.682,1160,1.682,1188,1.682,1236,1.535,1259,2.563,1260,1.535,1266,1.266,1284,3.206,1292,1.682,1294,1.266,1310,1.1,1311,1.1,1312,1.535,1313,1.426,1322,1.682,1333,3.299,1335,1.535,1336,1.682,1337,1.682,1357,1.057,1359,1.338,1360,3.064,1397,1.682,1494,1.682,1534,3.359,1535,1.535,1536,1.682,1585,1.682,1600,1.682,1601,1.682,1603,1.266,1612,1.338,1618,1.535,1621,1.535,1625,1.535,1626,1.535,1628,1.535,1629,1.535,1636,1.682,1638,1.535,1639,1.535,1640,1.535,1642,1.535,1646,1.682,1657,1.682,1658,1.682,1710,1.535,1753,1.682,1757,1.682,1769,3.02,1781,3.206,1786,1.057,1787,1.057,1788,1.057,1800,2.808,1819,1.203,1920,1.682,1923,1.682,1975,1.682,2009,1.426,2010,1.535,2011,1.535,2061,1.682,2062,1.682,2099,1.682,2121,1.535,2144,1.682,2148,1.682,2158,2.563,2162,1.535,2164,1.535,2170,1.682,2203,1.682,2238,1.682,2239,1.682,2262,1.338,2322,1.426,2323,3.299,2472,1.535,2473,1.682,2492,2.563,2508,1.535,2551,1.682,2646,1.682,2663,2.563,2664,1.535,2666,1.682,2727,1.682,2729,1.682,2743,1.682,2800,1.682,2801,1.904,2802,1.904,2803,1.904,2804,1.904,2805,1.904,2806,3.179,2807,7.575,2808,5.742,2809,1.904,2810,9.228,2811,7.462,2812,4.092,2813,5.742,2814,1.904,2815,1.904,2816,1.904,2817,1.904,2818,8.28,2819,1.904,2820,3.179,2821,1.904,2822,1.904,2823,1.904,2824,1.904,2825,1.904,2826,1.904,2827,1.904,2828,5.314,2829,4.092,2830,4.092,2831,1.904,2832,1.904,2833,1.904,2834,1.904,2835,3.179,2836,3.179,2837,9.013,2838,3.179,2839,1.904,2840,1.904,2841,5.314,2842,5.314,2843,1.904,2844,1.904,2845,4.779,2846,1.904,2847,1.904,2848,1.904,2849,5.072,2850,1.682,2851,1.682,2852,1.682,2853,1.682,2854,1.682,2855,2.808,2856,2.808,2857,1.904,2858,1.904,2859,1.904,2860,2.808,2861,1.904,2862,4.221,2863,1.682,2864,4.221,2865,1.682,2866,1.682,2867,1.682,2868,5.072,2869,1.682,2870,1.682,2871,5.64,2872,1.682,2873,1.682,2874,1.682,2875,1.682,2876,2.808,2877,1.682,2878,4.221,2879,1.682,2880,2.808,2881,4.693,2882,1.682,2883,1.682,2884,1.682,2885,1.904,2886,4.221,2887,1.682,2888,1.682,2889,1.682,2890,1.682,2891,1.682,2892,1.682,2893,2.808,2894,1.682,2895,1.682,2896,8.125,2897,1.904,2898,1.904,2899,1.904,2900,1.904,2901,1.904,2902,1.904,2903,1.904,2904,1.904,2905,1.904,2906,1.904,2907,1.904,2908,1.904,2909,1.904,2910,1.904,2911,1.904,2912,1.904,2913,1.904,2914,1.904,2915,1.904,2916,1.904,2917,1.904,2918,1.904,2919,1.904]],["title/dependencies.html",[449,2.958,2920,3.685]],["body/dependencies.html",[4,0.082,45,0.009,52,1.034,53,2.578,54,2.578,115,1.427,135,0.005,136,0.007,137,0.005,258,1.853,318,1.059,319,1.853,329,4.239,330,3.338,449,3.071,451,4.06,461,3.197,466,5.261,467,4.938,476,3.071,479,3.677,482,5.261,483,4.46,494,4.46,495,4.46,497,4.46,498,5.781,499,5.664,501,4.46,502,4.46,503,4.46,515,3.197,547,3.338,556,3.677,666,4.46,667,5.664,669,3.197,857,3.9,976,3.071,1143,4.46,1215,3.889,1410,4.46,1633,4.886,1634,4.886,2283,4.886,2657,4.886,2921,5.532,2922,8.892,2923,5.532,2924,5.532,2925,5.532,2926,5.532,2927,5.532,2928,5.532,2929,5.532,2930,5.532,2931,7.025,2932,8.383,2933,5.532,2934,5.532,2935,4.886,2936,5.532,2937,5.532,2938,5.532,2939,5.532,2940,5.532,2941,5.532,2942,5.532,2943,5.532,2944,5.532,2945,5.532,2946,5.532,2947,5.532,2948,5.532,2949,5.532,2950,5.532,2951,5.532,2952,5.532,2953,5.532,2954,5.532,2955,5.532,2956,5.532]],["title/miscellaneous/enumerations.html",[2957,2.45,2958,4.707]],["body/miscellaneous/enumerations.html",[1,1.864,3,0.058,6,1.995,8,0.897,10,2.908,12,2.516,19,1.805,34,0.242,45,0.009,50,1.177,59,2.748,60,1.864,61,1.956,62,2.739,63,1.864,64,1.805,65,3.573,66,3.381,67,4.282,68,3.749,69,1.864,70,2.15,71,2.748,72,1.805,73,2.662,74,1.864,75,1.864,76,2.15,78,2.495,80,2.574,81,2.574,82,2.658,124,1.594,135,0.004,136,0.005,137,0.004,140,2.15,142,3.192,146,1.399,157,1.344,192,2.238,193,2.238,194,2.238,196,3.192,197,1.864,198,2.15,199,2.238,200,2.238,201,2.238,202,1.697,211,2.448,212,2.722,217,4.453,218,2.448,219,2.326,220,3.377,221,2.161,226,1.864,227,1.995,228,2.845,235,2.951,236,1.927,237,4.585,238,2.966,239,1.864,240,1.995,241,1.805,242,1.927,243,2.15,244,1.927,245,2.681,246,1.864,247,1.805,248,1.149,249,1.864,250,1.864,251,2.069,252,2.133,253,2.472,254,2.472,255,2.662,256,2.662,333,2.15,439,1.719,521,3.192,545,4.588,546,4.585,610,2.15,611,2.722,617,3.332,619,4.135,620,2.722,621,3.122,644,2.722,670,4.453,789,2.238,971,2.15,979,3.49,981,4.135,1009,2.9,1016,3.882,1024,4.453,1025,3.122,1026,3.122,1027,3.122,1115,3.49,1116,1.927,1117,2.15,1118,2.15,1126,2.238,1284,2.337,1310,2.238,1311,2.238,1357,2.15,1573,4.878,1710,3.122,1726,4.453,1729,5.19,1731,5.19,1749,3.42,1750,3.42,1751,3.42,1752,3.42,1769,2.448,1773,2.722,1781,2.337,1785,3.49,1786,2.15,1787,2.15,1788,2.15,2164,3.122,2169,3.42,2957,2.574,2958,3.42,2959,5.523,2960,3.42,2961,3.42,2962,5.523,2963,3.873,2964,5.523,2965,3.42,2966,3.42,2967,3.873,2968,5.685,2969,3.42,2970,3.42,2971,3.873,2972,6.437,2973,5.523,2974,3.42,2975,3.873,2976,3.873,2977,3.873]],["title/index.html",[34,0.277,2978,3.909]],["body/index.html",[2,0.681,45,0.009,73,1.735,98,2.043,110,2.093,135,0.004,136,0.006,137,0.004,272,3.177,273,1.785,350,2.329,399,1.477,406,2.56,408,3.177,410,3.093,412,2.63,414,2.703,417,3.093,419,3.177,420,3.093,422,2.63,424,2.63,426,2.56,428,2.703,431,2.63,433,2.63,436,2.63,438,2.63,440,1.687,441,2.56,443,2.56,446,1.735,447,6.285,448,2.019,449,2.329,450,2.531,451,2.425,452,2.531,453,2.161,454,3.705,455,3.705,456,3.705,457,3.705,458,4.726,459,6.285,460,5.373,461,3.377,462,2.531,514,2.651,518,3.464,537,2.949,543,2.531,634,5.927,635,3.705,636,3.705,637,3.705,638,4.726,673,3.464,865,1.955,873,3.886,905,1.839,1086,3.464,1261,6.285,1262,3.705,1263,3.705,1264,3.705,1265,3.705,1266,4.469,1294,4.469,1603,4.469,1607,6.916,1608,3.705,1609,3.705,1610,3.705,1611,3.705,1612,4.726,1613,4.726,1819,4.249,2260,3.705,2261,3.705,2262,4.726,2276,3.705,2277,3.705,2313,5.927,2314,3.705,2315,3.705,2316,3.705,2317,4.726,2978,3.705,2979,4.195,2980,5.843,2981,4.195,2982,4.195,2983,4.195]],["title/modules.html",[448,2.918]],["body/modules.html",[45,0.007,135,0.006,136,0.007,137,0.006,373,7.595,447,4.583,448,3.138,458,4.583,459,4.583,460,4.583,467,6.333,498,6.747,634,4.882,638,4.583,1261,4.583,1607,4.882,1613,4.583,2313,4.882,2317,4.583,2984,9.01,2985,9.223,2986,8.599]],["title/routes.html",[514,3.832]],["body/routes.html",[45,0.008,135,0.007,136,0.008,137,0.007,514,4.603]],["title/miscellaneous/typealiases.html",[2957,2.45,2987,5.329]],["body/miscellaneous/typealiases.html",[1,2.884,6,3.087,19,2.792,32,0.245,34,0.375,45,0.009,60,2.884,63,2.884,69,2.884,72,2.792,74,2.884,75,2.884,134,3.945,135,0.006,136,0.007,137,0.006,211,3.787,212,4.211,218,3.787,225,5.954,226,2.884,227,3.087,228,3.805,236,2.981,239,2.884,241,2.792,244,2.981,246,2.884,250,2.884,252,2.539,270,3.945,333,3.326,610,3.326,611,4.211,624,3.787,627,5.53,971,3.326,1116,2.981,1117,3.326,1118,3.326,1284,3.615,1291,4.909,1310,3.463,1311,3.463,1357,3.326,1769,3.787,1777,5.191,1781,3.615,1786,3.326,1787,3.326,1788,3.326,1799,4.909,2957,3.983,2960,5.292,2961,5.292,2965,5.292,2966,5.292,2968,5.292,2970,5.292,2974,5.292,2988,5.991]],["title/miscellaneous/variables.html",[2957,2.45,2989,4.707]],["body/miscellaneous/variables.html",[11,2.262,12,1.665,15,1.2,28,0.976,32,0.348,34,0.156,45,0.009,49,1.563,50,1.159,55,0.975,78,1.126,79,0.628,80,1.162,81,2.296,82,2.371,124,1.205,135,0.005,136,0.004,137,0.002,157,0.395,161,0.689,176,0.976,180,1.608,181,3.086,184,1.031,195,2.561,205,2.037,219,0.901,221,0.975,322,0.835,324,2.783,325,3.193,327,3.193,335,3.193,336,3.193,353,2.01,365,1.867,372,3.693,384,0.878,389,1.031,434,1.469,491,3.193,508,1.867,518,3.357,521,2.289,525,3.689,540,1.867,544,2.01,545,3.766,546,2.198,547,3.385,548,4.303,549,1.752,550,1.752,551,3.463,552,1.752,554,1.752,559,2.202,561,2.202,562,2.202,563,2.202,565,1.752,567,1.752,571,2.202,573,2.202,575,2.202,578,2.202,580,2.202,582,2.202,586,1.752,590,1.752,592,1.752,595,1.752,599,1.752,602,2.965,603,2.965,604,2.202,605,3.972,606,2.965,607,2.202,608,3.463,609,2.202,644,1.752,657,1.575,671,2.965,672,2.01,715,1.575,744,1.504,773,1.906,774,1.867,775,1.867,819,2.225,858,2.01,862,2.01,863,3.193,864,2.202,980,3.193,1047,3.193,1122,2.01,1125,3.193,1126,1.441,1127,3.193,1129,3.944,1137,2.783,1141,2.01,1142,2.01,1148,2.965,1149,2.01,1150,3.193,1151,3.193,1259,2.01,1260,3.193,1293,2.01,1312,3.193,1313,3.689,1333,2.01,1335,3.193,1360,1.867,1371,2.01,1372,2.01,1373,2.01,1380,2.01,1409,4.524,2009,2.965,2010,3.193,2011,3.193,2121,3.193,2158,2.01,2159,2.202,2160,2.202,2162,3.193,2163,2.202,2324,2.01,2375,4.935,2663,2.01,2664,3.193,2849,2.202,2850,3.497,2851,3.497,2852,3.497,2853,3.497,2854,4.351,2855,2.202,2856,4.955,2860,2.202,2862,2.202,2863,3.497,2864,2.202,2865,3.497,2866,3.497,2867,3.497,2868,2.202,2869,3.497,2870,3.497,2871,2.202,2872,3.497,2873,3.497,2874,3.497,2875,3.497,2876,4.955,2877,4.351,2878,2.202,2879,3.497,2880,2.202,2881,2.202,2882,3.497,2883,3.497,2884,3.497,2886,2.202,2887,2.202,2888,3.497,2889,3.497,2890,2.202,2891,2.202,2892,2.202,2893,2.202,2894,3.497,2895,3.497,2935,2.202,2957,1.657,2969,2.202,2989,2.202,2990,5.61,2991,2.493,2992,2.493,2993,3.96,2994,3.96,2995,2.493,2996,2.493,2997,2.493,2998,3.96,2999,6.121,3000,2.493,3001,2.493,3002,4.926,3003,2.493,3004,2.493,3005,6.831,3006,5.61,3007,5.61,3008,6.121,3009,6.121,3010,3.96,3011,5.61,3012,2.493,3013,2.493,3014,2.493,3015,4.926,3016,4.926,3017,5.61,3018,5.61,3019,2.493,3020,2.493,3021,2.493,3022,2.493,3023,2.493,3024,2.493,3025,2.493,3026,2.493,3027,2.493,3028,2.493,3029,2.493,3030,2.493,3031,2.493,3032,2.493,3033,2.493,3034,2.493,3035,5.61,3036,2.493,3037,2.493,3038,2.493,3039,2.493,3040,2.493,3041,2.493,3042,2.493,3043,2.493,3044,2.493,3045,2.493,3046,2.493,3047,4.926,3048,2.493,3049,2.493,3050,2.493,3051,2.493,3052,2.493,3053,2.493,3054,3.96,3055,2.493,3056,5.61,3057,2.493,3058,2.493,3059,4.926,3060,2.493,3061,2.493,3062,2.493,3063,2.493,3064,2.493,3065,2.493,3066,2.493,3067,3.96,3068,3.96,3069,2.493,3070,2.493,3071,2.493,3072,4.926,3073,4.926,3074,2.493,3075,2.493,3076,2.493,3077,2.493,3078,2.493,3079,2.493,3080,2.493,3081,3.96,3082,2.493,3083,2.493,3084,2.493,3085,2.493,3086,2.493,3087,2.493,3088,2.493,3089,4.926,3090,4.926,3091,2.493,3092,2.493,3093,2.493]]],"invertedIndex":[["",{"_index":45,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":819,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"directives/MouseWheelDirective.html":{},"classes/RouterStateUrl.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.3.0",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["0.5.25",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["0.8.29",{"_index":2956,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2810,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2806,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2805,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2804,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2814,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2816,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2807,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2811,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2818,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2812,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2828,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2838,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2813,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2815,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":350,"title":{"classes/HandleUnexpectedError-1.html":{}},"body":{"components/AppComponent.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["1)?location.pathname",{"_index":844,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["1.0.14",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["1.2.17",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["1.9.3",{"_index":2954,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2836,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2803,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2845,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2844,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2832,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2830,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2827,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2727,"title":{},"body":{"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["10.1.0",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":2835,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":672,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":2979,"title":{},"body":{"index.html":{}}}],["11.0.1",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["11/26",{"_index":2834,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2826,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2981,"title":{},"body":{"index.html":{}}}],["15/37",{"_index":2825,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2829,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1968,"title":{},"body":{"components/IconComponent.html":{}}}],["17/69",{"_index":2822,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":2980,"title":{},"body":{"index.html":{}}}],["2",{"_index":537,"title":{"classes/HandleUnexpectedError-2.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"index.html":{}}}],["2*60*60*1000",{"_index":1228,"title":{},"body":{"injectables/CardService.html":{}}}],["2.0",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["2.0.1",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["2.2.1",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["2.24.0",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":2848,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2831,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["24",{"_index":2821,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":2730,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["3",{"_index":1780,"title":{"classes/HandleUnexpectedError-3.html":{}},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["3.6.0",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":1077,"title":{},"body":{"components/CardComponent.html":{}}}],["32px",{"_index":1967,"title":{},"body":{"components/IconComponent.html":{}}}],["33",{"_index":2843,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["4.0.12",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["4/8",{"_index":2809,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2824,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1065,"title":{},"body":{"components/CardComponent.html":{}}}],["401",{"_index":993,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["42",{"_index":2833,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"miscellaneous/variables.html":{}}}],["5.8.1",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2808,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":996,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["5000",{"_index":1315,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["57",{"_index":2982,"title":{},"body":{"index.html":{}}}],["5px",{"_index":1067,"title":{},"body":{"components/CardComponent.html":{}}}],["6.3.3",{"_index":2950,"title":{},"body":{"dependencies.html":{}}}],["600000",{"_index":1241,"title":{},"body":{"injectables/CardService.html":{}}}],["63",{"_index":2846,"title":{},"body":{"coverage.html":{}}}],["64px",{"_index":1966,"title":{},"body":{"components/IconComponent.html":{}}}],["7",{"_index":2983,"title":{},"body":{"index.html":{}}}],["7.1.0",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":2847,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":727,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["8px",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["_",{"_index":668,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_.clonedeep(startdomain",{"_index":2581,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(startdomain2",{"_index":2600,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.clonedeep(startdomain3",{"_index":2610,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["_.difference(work",{"_index":2415,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.fill(this.expandedmenu,false",{"_index":2225,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_.get(oauth2conf",{"_index":692,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["_.isequal(forma",{"_index":2537,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["_.isequal(forma,formb",{"_index":2715,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["_.merge(acc,val",{"_index":2384,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.remove(this.loadingi18n",{"_index":2429,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_.uniq(ids",{"_index":2414,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["_currentselection",{"_index":1979,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_defaultfilters",{"_index":1711,"title":{},"body":{"injectables/FilterService.html":{}}}],["_filter",{"_index":2495,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["_htmlcontent",{"_index":1399,"title":{},"body":{"components/DetailComponent.html":{}}}],["_i18nprefix",{"_index":1033,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["_menu_entry_id",{"_index":1980,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_menu_id",{"_index":1981,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["_thirdmenus",{"_index":2205,"title":{},"body":{"components/NavbarComponent.html":{}}}],["a[key",{"_index":1916,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["accept",{"_index":65,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["acceptlogin",{"_index":1,"title":{"classes/AcceptLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogin(authenticationinfo",{"_index":914,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogin(authinfo",{"_index":925,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["acceptlogout",{"_index":74,"title":{"classes/AcceptLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsuccess",{"_index":75,"title":{"classes/AcceptLogOutSuccess.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["acceptlogoutsucess",{"_index":901,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["access_token",{"_index":647,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["accessors",{"_index":1035,"title":{},"body":{"components/CardComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"injectables/FilterService.html":{},"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["accordingly",{"_index":880,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["action",{"_index":8,"title":{"classes/Action.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["action.buttonstyle",{"_index":1479,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.buttonstyle.split",{"_index":1480,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle",{"_index":1482,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.contentstyle.split",{"_index":1483,"title":{},"body":{"components/DetailComponent.html":{}}}],["action.payload",{"_index":955,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["action.payload.event.url.indexof(\"/feed/cards/\")>=0",{"_index":1344,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.event.url.indexof(\"/thirdparty/\")>=0",{"_index":1351,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["action.payload.routerstate",{"_index":1346,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["actionid",{"_index":1418,"title":{},"body":{"components/DetailComponent.html":{}}}],["actionreducermap",{"_index":561,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":871,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/State.html":{}}}],["actions?:ofmap",{"_index":191,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["actiontype",{"_index":142,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["activate",{"_index":1524,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":1365,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["active",{"_index":623,"title":{},"body":{"classes/ApplyFilter.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["active:boolean",{"_index":1698,"title":{},"body":{"classes/Filter.html":{}}}],["activedetail",{"_index":1519,"title":{},"body":{"components/DetailsComponent.html":{}}}],["activedetail.length",{"_index":1525,"title":{},"body":{"components/DetailsComponent.html":{}}}],["actual_component",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["add",{"_index":220,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"components/IframeDisplayComponent.html":{},"classes/InitTimeline.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["addauthheadersifnecessary",{"_index":2667,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addauthheadersifnecessary(request",{"_index":2671,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["addcarddatatimeline",{"_index":211,"title":{"classes/AddCardDataTimeline.html":{}},"body":{"classes/AddCardDataTimeline.html":{},"classes/InitTimeline.html":{},"components/TimeLineComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["added",{"_index":1130,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["addlightcardfailure",{"_index":226,"title":{"classes/AddLightCardFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["addlightcardfailure({error",{"_index":1176,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["afterviewinit",{"_index":1495,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{}}}],["aims",{"_index":84,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["alarm",{"_index":1726,"title":{},"body":{"injectables/FilterService.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["alert(`${actionid",{"_index":1490,"title":{},"body":{"components/DetailComponent.html":{}}}],["aliases",{"_index":2988,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1078,"title":{},"body":{"components/CardComponent.html":{}}}],["already",{"_index":2273,"title":{},"body":{"modules/ServicesModule.html":{}}}],["always",{"_index":1380,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":684,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["angular/animations",{"_index":2921,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"components/IconComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{}}}],["angular/compiler",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"components/LoginComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":2926,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":466,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":515,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"modules/FeedRoutingModule.html":{},"classes/RouterStateUrl.html":{},"modules/ThirdpartyRoutingModule.html":{},"dependencies.html":{}}}],["animations",{"_index":2625,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["app",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{}}}],["app.component",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":272,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["appdraggable",{"_index":1537,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appdraggable]'},{'name",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appear",{"_index":1580,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["appeffects",{"_index":602,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appendfixedlengthalphanumericvalue",{"_index":2897,"title":{},"body":{"coverage.html":{}}}],["application",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["application/x",{"_index":723,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["applies",{"_index":1695,"title":{},"body":{"classes/Filter.html":{}}}],["apply",{"_index":942,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["applyfilter",{"_index":610,"title":{"classes/ApplyFilter.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["applyfilter(card",{"_index":1683,"title":{},"body":{"classes/Filter.html":{}}}],["appmetareducers",{"_index":605,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":447,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["appmousewheel",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["appreducer",{"_index":603,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appropriate",{"_index":825,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["approutingmodule",{"_index":458,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appstate",{"_index":322,"title":{"interfaces/AppState.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/IframeDisplayComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["archives",{"_index":525,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"miscellaneous/variables.html":{}}}],["archives'},{'name",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["archives.component",{"_index":640,"title":{},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{}}}],["archives.component.html",{"_index":630,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archives.component.scss",{"_index":629,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["archivescomponent",{"_index":406,"title":{"components/ArchivesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["archivesmodule",{"_index":634,"title":{"modules/ArchivesModule.html":{}},"body":{"modules/ArchivesModule.html":{},"index.html":{},"modules.html":{}}}],["archivesroutingmodule",{"_index":638,"title":{"modules/ArchivesRoutingModule.html":{}},"body":{"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["args",{"_index":1888,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["args[2",{"_index":1889,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["arguments",{"_index":1551,"title":{},"body":{"directives/DraggableDirective.html":{},"classes/Filter.html":{},"directives/MouseWheelDirective.html":{}}}],["array",{"_index":1428,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["array(menus.length",{"_index":2224,"title":{},"body":{"components/NavbarComponent.html":{}}}],["array[0",{"_index":2155,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["arrow::after",{"_index":2738,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["asinputstring",{"_index":2647,"title":{},"body":{"injectables/TimeService.html":{}}}],["asinputstring(value",{"_index":2651,"title":{},"body":{"injectables/TimeService.html":{}}}],["ask",{"_index":676,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfromcode(code",{"_index":740,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenfrompassword(login",{"_index":755,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["asktokenurl",{"_index":677,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["assets/i18n",{"_index":3036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/styles/_variables.scss",{"_index":1973,"title":{},"body":{"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["assignconfigurationproperties(oauth2conf",{"_index":690,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["assuming",{"_index":2044,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["attachaction",{"_index":1401,"title":{},"body":{"components/DetailComponent.html":{}}}],["attachaction(button",{"_index":1416,"title":{},"body":{"components/DetailComponent.html":{}}}],["attempt",{"_index":68,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["auth",{"_index":3017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticate",{"_index":964,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticated",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["authentication",{"_index":12,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authentication.reducer.ts",{"_index":26,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authentication.service",{"_index":1216,"title":{},"body":{"injectables/CardService.html":{},"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationactions",{"_index":134,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/typealiases.html":{}}}],["authenticationactiontypes",{"_index":59,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["authenticationactiontypes.acceptlogin",{"_index":31,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogout",{"_index":131,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.acceptlogoutsuccess",{"_index":133,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.checkauthenticationstatus",{"_index":93,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.initauthstatus",{"_index":88,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.rejectlogin",{"_index":123,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologin",{"_index":106,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationactiontypes.trytologout",{"_index":113,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffect",{"_index":118,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["authenticationeffects",{"_index":15,"title":{"injectables/AuthenticationEffects.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":516,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{}}}],["authenticationreducer",{"_index":559,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["authenticationservice",{"_index":673,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"components/LoginComponent.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"coverage.html":{},"index.html":{}}}],["authenticationservice,private",{"_index":1218,"title":{},"body":{"injectables/CardService.html":{}}}],["authenticationservice.clearauthenticationinformation",{"_index":949,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.computeredirecturi",{"_index":752,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.decodetoken(payload.access_token",{"_index":815,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.extractidentificationinformation",{"_index":923,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.extracttoken",{"_index":832,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authenticationservice.getsecurityheader",{"_index":1239,"title":{},"body":{"injectables/CardService.html":{},"interceptors/TokenInjector.html":{}}}],["authenticationservice.isexpirationdateover",{"_index":921,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authenticationservice.verifyexpirationdate",{"_index":788,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authinfo",{"_index":922,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authinitialstate",{"_index":863,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authobject",{"_index":643,"title":{"classes/AuthObject.html":{}},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"coverage.html":{}}}],["authorization",{"_index":830,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authorization_code",{"_index":747,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["authservice",{"_index":872,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["authstate",{"_index":548,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authstate)=>authstate.code",{"_index":3060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authstate)=>authstate.message",{"_index":3062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoscale",{"_index":2624,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["autre",{"_index":2577,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["available",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["avant",{"_index":2597,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["avec",{"_index":2616,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["axis",{"_index":1639,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{}}}],["b[key",{"_index":1918,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["back",{"_index":709,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["background",{"_index":2735,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["badge",{"_index":1075,"title":{},"body":{"components/CardComponent.html":{}}}],["basehref",{"_index":1954,"title":{},"body":{"components/IconComponent.html":{}}}],["basehref?basehref:'/')+'assets/images/icons",{"_index":1957,"title":{},"body":{"components/IconComponent.html":{}}}],["bearer",{"_index":831,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["beginning",{"_index":3031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviour",{"_index":1661,"title":{},"body":{"classes/Filter.html":{}}}],["better",{"_index":2023,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["beware",{"_index":748,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{}}}],["big",{"_index":1929,"title":{},"body":{"components/IconComponent.html":{}}}],["big:boolean",{"_index":1947,"title":{},"body":{"components/IconComponent.html":{}}}],["bindactions",{"_index":1402,"title":{},"body":{"components/DetailComponent.html":{}}}],["bindactions(third",{"_index":1420,"title":{},"body":{"components/DetailComponent.html":{}}}],["block",{"_index":1576,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["body",{"_index":2737,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["boolean",{"_index":146,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"interfaces/TimelineState.html":{},"miscellaneous/enumerations.html":{}}}],["bootstrap",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/ng",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["bordel",{"_index":2757,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["border",{"_index":1076,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["both",{"_index":1660,"title":{},"body":{"classes/Filter.html":{}}}],["bottom",{"_index":1066,"title":{},"body":{"components/CardComponent.html":{}}}],["break",{"_index":995,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{}}}],["browse",{"_index":2985,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["browserlang",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["browsermodule",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":2100,"title":{},"body":{"components/LoginComponent.html":{}}}],["build",{"_index":685,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["buildconfigselector",{"_index":664,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["buildfilterselector",{"_index":2508,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["business",{"_index":877,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["button",{"_index":103,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["button.addeventlistener('click",{"_index":1489,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.attributes['action",{"_index":1473,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add('fa",{"_index":1485,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.children[0].classlist.add(c",{"_index":1484,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add('btn",{"_index":1478,"title":{},"body":{"components/DetailComponent.html":{}}}],["button.classlist.add(c",{"_index":1481,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttons",{"_index":1472,"title":{},"body":{"components/DetailComponent.html":{}}}],["buttonstyle",{"_index":147,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["c",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["call",{"_index":705,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["call.pipe",{"_index":760,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["called",{"_index":100,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["calling",{"_index":940,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["canactivate",{"_index":524,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["caps",{"_index":1071,"title":{},"body":{"components/CardComponent.html":{}}}],["card",{"_index":157,"title":{"classes/Card.html":{}},"body":{"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"interfaces/ConfigState.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["card'},{'name",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["card):observable",{"_index":1857,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["card.actions",{"_index":984,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["card.actions.ts",{"_index":228,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["card.actions.ts:25",{"_index":2088,"title":{},"body":{"classes/LoadLightCards.html":{}}}],["card.actions.ts:30",{"_index":1584,"title":{},"body":{"classes/EmptyLightCards.html":{}}}],["card.actions.ts:34",{"_index":2092,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:37",{"_index":2093,"title":{},"body":{"classes/LoadLightCardsSuccess.html":{}}}],["card.actions.ts:42",{"_index":2089,"title":{},"body":{"classes/LoadLightCardsExtendedData.html":{}}}],["card.actions.ts:50",{"_index":2090,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:53",{"_index":2091,"title":{},"body":{"classes/LoadLightCardsFailure.html":{}}}],["card.actions.ts:59",{"_index":2258,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:61",{"_index":2259,"title":{},"body":{"classes/SelectLightCard.html":{}}}],["card.actions.ts:66",{"_index":229,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:69",{"_index":230,"title":{},"body":{"classes/AddLightCardFailure.html":{}}}],["card.actions.ts:74",{"_index":2741,"title":{},"body":{"classes/UpdatedSubscription.html":{}}}],["card.actions.ts:83",{"_index":1778,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["card.actions.ts:85",{"_index":1779,"title":{},"body":{"classes/HandleUnexpectedError-2.html":{}}}],["card.component.html",{"_index":1032,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":1031,"title":{},"body":{"components/CardComponent.html":{}}}],["card.details",{"_index":1099,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["card.effects",{"_index":594,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.effects.ts",{"_index":2062,"title":{},"body":{"injectables/LightCardEffects.html":{},"coverage.html":{}}}],["card.effects.ts:20",{"_index":2064,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.effects.ts:30",{"_index":2075,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["card.enddate",{"_index":1741,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.model",{"_index":234,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["card.model.ts",{"_index":2972,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["card.publisher",{"_index":2400,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.publisherversion",{"_index":2401,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["card.reducer",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{}}}],["card.reducer.ts",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["card.service",{"_index":2269,"title":{},"body":{"modules/ServicesModule.html":{}}}],["card.severity",{"_index":1734,"title":{},"body":{"injectables/FilterService.html":{}}}],["card.startdate",{"_index":1742,"title":{},"body":{"injectables/FilterService.html":{}}}],["card1.startdate",{"_index":1146,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card2",{"_index":1145,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card2.startdate",{"_index":1147,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["card:card",{"_index":3068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card:lightcard",{"_index":1738,"title":{},"body":{"injectables/FilterService.html":{}}}],["card==null?null:card.details",{"_index":3069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card==null?null:card.id",{"_index":3070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cardactions",{"_index":1291,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["cardactiontypes",{"_index":1115,"title":{},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["cardactiontypes.clearcard",{"_index":1285,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.handleunexpectederror",{"_index":1290,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcard",{"_index":1287,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardfailure",{"_index":1288,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardactiontypes.loadcardsuccess",{"_index":1289,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{}}}],["cardcomponent",{"_index":408,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["carddetailscomponent",{"_index":410,"title":{"components/CardDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["cardeffects",{"_index":565,"title":{"injectables/CardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardfeedstate",{"_index":551,"title":{"interfaces/CardFeedState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardFeedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardinitialstate",{"_index":1260,"title":{},"body":{"interfaces/CardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardlistcomponent",{"_index":412,"title":{"components/CardListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["cardoperation",{"_index":1212,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationeffects",{"_index":567,"title":{"injectables/CardOperationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CardOperationEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardoperationsurl",{"_index":1189,"title":{},"body":{"injectables/CardService.html":{}}}],["cardoperationtype",{"_index":2962,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cardreducer",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["cards",{"_index":1129,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["cards'},{'name",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["cards/cards.module",{"_index":1623,"title":{},"body":{"modules/FeedModule.html":{}}}],["cards/components/card",{"_index":1651,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cards/components/detail/detail.component",{"_index":1650,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cardselectors",{"_index":1090,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["cardservice",{"_index":873,"title":{"injectables/CardService.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/CustomRouterEffects.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"index.html":{}}}],["cardsmodule",{"_index":1261,"title":{"modules/CardsModule.html":{}},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["cardstate",{"_index":549,"title":{"interfaces/CardState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/CardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardstate.selected",{"_index":3066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cardstate:cardstate",{"_index":3065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cardsurl",{"_index":1190,"title":{},"body":{"injectables/CardService.html":{}}}],["cardtimeline",{"_index":2645,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["care",{"_index":1669,"title":{},"body":{"classes/Filter.html":{}}}],["case",{"_index":992,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/RouterStateUrl.html":{}}}],["catch",{"_index":848,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror",{"_index":660,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/FeedComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["catcherror((err",{"_index":928,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{}}}],["catcherror((err,caught",{"_index":2070,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["catcherror((error",{"_index":1175,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["catcherror((error,caught",{"_index":1177,"title":{},"body":{"injectables/CardOperationEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["catcherror(authenticationservice.handleerror",{"_index":732,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["catcherror(err",{"_index":1597,"title":{},"body":{"components/FeedComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["catcherror(errorresponse",{"_index":915,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["category",{"_index":883,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["caught",{"_index":929,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["cell",{"_index":2726,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["center",{"_index":1079,"title":{},"body":{"components/CardComponent.html":{}}}],["centeredonticks",{"_index":2628,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["cf",{"_index":1794,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["chain",{"_index":1688,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter",{"_index":1676,"title":{},"body":{"classes/Filter.html":{}}}],["chainfilter(card",{"_index":1686,"title":{},"body":{"classes/Filter.html":{}}}],["change",{"_index":620,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changes",{"_index":1507,"title":{},"body":{"components/DetailsComponent.html":{}}}],["changes['card'].currentvalue.publisher+'.'+changes['card'].currentvalue.publisherversion",{"_index":1532,"title":{},"body":{"components/DetailsComponent.html":{}}}],["character",{"_index":2363,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["charset=utf",{"_index":726,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["chart'},{'name",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["chart.component",{"_index":1637,"title":{},"body":{"modules/FeedModule.html":{}}}],["chart.component.ts",{"_index":2820,"title":{},"body":{"coverage.html":{}}}],["chart/custom",{"_index":1636,"title":{},"body":{"modules/FeedModule.html":{},"coverage.html":{}}}],["chart/init",{"_index":1646,"title":{},"body":{"modules/FeedModule.html":{},"coverage.html":{}}}],["chartcommonmodule",{"_index":1631,"title":{},"body":{"modules/FeedModule.html":{}}}],["charts",{"_index":1634,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["checauthentication",{"_index":120,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["check",{"_index":64,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["checkauthentication",{"_index":20,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["checkauthentication(token",{"_index":716,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checkauthenticationstatus",{"_index":63,"title":{"classes/CheckAuthenticationStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["checkauthenticationwhenready",{"_index":868,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["checking",{"_index":851,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["checks",{"_index":706,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["checktokenresponse",{"_index":852,"title":{"classes/CheckTokenResponse.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"coverage.html":{}}}],["checktokenurl",{"_index":674,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["child",{"_index":1392,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["children",{"_index":1652,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["cid",{"_index":1655,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["claim",{"_index":700,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"classes/ThirdsServiceMock.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"index.html":{}}}],["clear",{"_index":789,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["clearauthenticationinformation",{"_index":790,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clearcard",{"_index":971,"title":{"classes/ClearCard.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":101,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["clicked",{"_index":974,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/DetailsComponent.html":{}}}],["clicking",{"_index":967,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["clientid",{"_index":80,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["clientsecret",{"_index":679,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["clone",{"_index":1677,"title":{},"body":{"classes/Filter.html":{}}}],["clone():filter",{"_index":1699,"title":{},"body":{"classes/Filter.html":{}}}],["cluster_appmodule",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":456,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_archivesmodule",{"_index":635,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_declarations",{"_index":636,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_archivesmodule_imports",{"_index":637,"title":{},"body":{"modules/ArchivesModule.html":{},"index.html":{}}}],["cluster_cardsmodule",{"_index":1262,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_declarations",{"_index":1263,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_exports",{"_index":1264,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_cardsmodule_providers",{"_index":1265,"title":{},"body":{"modules/CardsModule.html":{},"index.html":{}}}],["cluster_feedmodule",{"_index":1608,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_declarations",{"_index":1609,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_exports",{"_index":1611,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_feedmodule_imports",{"_index":1610,"title":{},"body":{"modules/FeedModule.html":{},"index.html":{}}}],["cluster_servicesmodule",{"_index":2260,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_servicesmodule_providers",{"_index":2261,"title":{},"body":{"modules/ServicesModule.html":{},"index.html":{}}}],["cluster_statemodule",{"_index":2276,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_statemodule_imports",{"_index":2277,"title":{},"body":{"modules/StateModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule",{"_index":2314,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_declarations",{"_index":2315,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["cluster_thirdpartymodule_imports",{"_index":2316,"title":{},"body":{"modules/ThirdpartyModule.html":{},"index.html":{}}}],["clusterlevel",{"_index":2748,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["code",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["codeflow",{"_index":2108,"title":{},"body":{"components/LoginComponent.html":{}}}],["codeprovider",{"_index":2103,"title":{},"body":{"components/LoginComponent.html":{}}}],["collection",{"_index":1138,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["color",{"_index":2736,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["combinelatest",{"_index":2015,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["commonmodule",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{}}}],["complex",{"_index":1379,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["component",{"_index":271,"title":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["components",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["components/card",{"_index":1272,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["components/card/card.component",{"_index":1271,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/custom",{"_index":1635,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/detail/detail.component",{"_index":1275,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/details/details.component",{"_index":1274,"title":{},"body":{"modules/CardsModule.html":{}}}],["components/icon/icon.component",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["components/init",{"_index":1645,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/login/login.component",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.component",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["components/no",{"_index":1617,"title":{},"body":{"modules/FeedModule.html":{}}}],["components/time",{"_index":1620,"title":{},"body":{"modules/FeedModule.html":{}}}],["computeredirecturi",{"_index":839,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["computethirdcssurl",{"_index":2445,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["computethirdcssurl(publisher",{"_index":2361,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["computethirdsmenu",{"_index":2385,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["conf",{"_index":2554,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["config",{"_index":545,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["config:any",{"_index":1334,"title":{},"body":{"interfaces/ConfigState.html":{}}}],["config_load_max_retries",{"_index":1313,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configactions",{"_index":1777,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["configactiontypes",{"_index":979,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configactiontypes.handleunexpectederror",{"_index":1772,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfig",{"_index":1774,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigfailure",{"_index":1775,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configactiontypes.loadconfigsuccess",{"_index":1776,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{}}}],["configeffects",{"_index":599,"title":{"injectables/ConfigEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configinitialstate",{"_index":1335,"title":{},"body":{"interfaces/ConfigState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configloaded",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["configreducer",{"_index":580,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":1294,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"index.html":{}}}],["configstate",{"_index":550,"title":{"interfaces/ConfigState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ConfigState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configstate.config",{"_index":3074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configstate.loaded",{"_index":3075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configstate.retry",{"_index":3076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configstate:configstate",{"_index":3073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":1773,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["configurel10nwithenglishasdefault",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["configurl",{"_index":1323,"title":{},"body":{"injectables/ConfigService.html":{}}}],["confirm",{"_index":853,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["confzoom",{"_index":2555,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["connection",{"_index":735,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["consequence",{"_index":902,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["consist",{"_index":1123,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["console.error('something",{"_index":2439,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["console.error(`error",{"_index":1248,"title":{},"body":{"injectables/CardService.html":{}}}],["console.error(`i18",{"_index":2071,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["console.error(err",{"_index":930,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["console.error(error",{"_index":767,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["console.error(message",{"_index":1002,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["console.log('cas",{"_index":2782,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["console.log('debut",{"_index":2788,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["console.log('fin",{"_index":2798,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["console.log('inside",{"_index":2789,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["console.log('j",{"_index":2797,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["console.log(`location",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`this",{"_index":1452,"title":{},"body":{"components/DetailComponent.html":{}}}],["const",{"_index":176,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"modules/FeedRoutingModule.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"components/LoginComponent.html":{},"interfaces/MenuState.html":{},"directives/MouseWheelDirective.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":39,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["constructor(access_token",{"_index":649,"title":{},"body":{"classes/AuthObject.html":{}}}],["constructor(authenticationservice",{"_index":2669,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["constructor(details",{"_index":2274,"title":{},"body":{"classes/State.html":{}}}],["constructor(element",{"_index":1407,"title":{},"body":{"components/DetailComponent.html":{}}}],["constructor(funktion",{"_index":1678,"title":{},"body":{"classes/Filter.html":{}}}],["constructor(httpclient",{"_index":1196,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigService.html":{},"injectables/ThirdsService.html":{}}}],["constructor(id",{"_index":2310,"title":{},"body":{"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["constructor(identifier",{"_index":2245,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["constructor(key",{"_index":1921,"title":{},"body":{"classes/I18n.html":{}}}],["constructor(label",{"_index":2243,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["constructor(message",{"_index":2165,"title":{},"body":{"classes/Message.html":{}}}],["constructor(name",{"_index":2301,"title":{},"body":{"classes/Third.html":{}}}],["constructor(payload",{"_index":40,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/UpdateSelectedMenu.html":{}}}],["constructor(platformlocation",{"_index":1931,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(platformlocation:platformlocation",{"_index":1953,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(private",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{}}}],["constructor(public",{"_index":77,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["constructor(router",{"_index":1037,"title":{},"body":{"components/CardComponent.html":{}}}],["constructor(states",{"_index":2251,"title":{},"body":{"classes/Process.html":{}}}],["constructor(store",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/IframeDisplayComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["constructor(sub",{"_index":1279,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["constructor(thirdsservice",{"_index":2326,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["constructor(time",{"_index":1818,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["constructor(titleposition",{"_index":1395,"title":{},"body":{"classes/Detail.html":{}}}],["constructor(type",{"_index":141,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{}}}],["constructor(uid",{"_index":1010,"title":{},"body":{"classes/Card.html":{}}}],["constructor(url",{"_index":2256,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["consume",{"_index":129,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["containing",{"_index":29,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["contains",{"_index":711,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["content",{"_index":713,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["contentchildren",{"_index":1515,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentchildren(detailcomponent",{"_index":1512,"title":{},"body":{"components/DetailsComponent.html":{}}}],["contentstyle",{"_index":148,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["context",{"_index":2894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["convert",{"_index":780,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["convert(payload",{"_index":814,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["copy",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["copyright",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["core",{"_index":499,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["correctly",{"_index":742,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["correspondant",{"_index":2565,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["corresponding",{"_index":849,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["coverage",{"_index":2800,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":27,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["createentityadapter",{"_index":1141,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector('authentication",{"_index":3058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector('router",{"_index":3087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createformgroup",{"_index":2498,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["createselector",{"_index":3055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectauthenticationstate",{"_index":3059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectcardstate",{"_index":3064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectcardstateselected",{"_index":3067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectconfig",{"_index":3072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectconfigretry",{"_index":3077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectfeed,selectactivefiltersarray",{"_index":3049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectfilter",{"_index":3041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectlightcardsstate",{"_index":3047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectmenustate",{"_index":3089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectrouterstate",{"_index":3084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selecttimelinestate",{"_index":3081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":1447,"title":{},"body":{"components/DetailComponent.html":{},"directives/DraggableDirective.html":{}}}],["csses",{"_index":2303,"title":{},"body":{"classes/Third.html":{}}}],["csses?:string",{"_index":169,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["cssurl",{"_index":1441,"title":{},"body":{"components/DetailComponent.html":{}}}],["current",{"_index":86,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["currently",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{}}}],["currentpath",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["currentselection",{"_index":2020,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["currenttime",{"_index":2648,"title":{},"body":{"injectables/TimeService.html":{}}}],["custom",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/StateModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["customroutereffects",{"_index":586,"title":{"injectables/CustomRouterEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["customrouterstateserializer",{"_index":1359,"title":{"classes/CustomRouterStateSerializer.html":{}},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"coverage.html":{}}}],["customtimelinechartcomponent",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["d",{"_index":2765,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["dark",{"_index":1488,"title":{},"body":{"components/DetailComponent.html":{},"components/IconComponent.html":{},"components/TypeFilterComponent.html":{}}}],["dark:boolean",{"_index":1948,"title":{},"body":{"components/IconComponent.html":{}}}],["data",{"_index":221,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/InitTimeline.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":83,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["date().valueof",{"_index":1227,"title":{},"body":{"injectables/CardService.html":{}}}],["date(+localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":811,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(0",{"_index":864,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["date(expirationdate",{"_index":823,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date(minus2hour.valueof()+48*60*60*1000",{"_index":1230,"title":{},"body":{"injectables/CardService.html":{}}}],["date(new",{"_index":1226,"title":{},"body":{"injectables/CardService.html":{}}}],["date(value",{"_index":1899,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["date.format('ddd",{"_index":2767,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format('hh",{"_index":2770,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.format('mmm",{"_index":2775,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.gethours",{"_index":2776,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.getminutes",{"_index":2777,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.getseconds",{"_index":2778,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.hours",{"_index":2760,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["date.now",{"_index":817,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["date.valueof",{"_index":2772,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datepipe",{"_index":2751,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["datepipe.transform(date",{"_index":2761,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["days",{"_index":2587,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ddthh:mm",{"_index":2660,"title":{},"body":{"injectables/TimeService.html":{}}}],["ddthh:mm:ss.sss",{"_index":2662,"title":{},"body":{"injectables/TimeService.html":{}}}],["deactivate",{"_index":1527,"title":{},"body":{"components/DetailsComponent.html":{}}}],["debounce",{"_index":2510,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["debug",{"_index":2169,"title":{},"body":{"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["decode",{"_index":667,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["decodetoken(token",{"_index":846,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["decorators",{"_index":894,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["deep",{"_index":2733,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["default",{"_index":49,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/variables.html":{}}}],["defaultfilters",{"_index":1715,"title":{},"body":{"injectables/FilterService.html":{}}}],["defined",{"_index":42,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["defines",{"_index":749,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delay",{"_index":1308,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delay(this.retrydelay",{"_index":1321,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["delegateurl",{"_index":682,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["delete",{"_index":1573,"title":{},"body":{"directives/DraggableDirective.html":{},"miscellaneous/enumerations.html":{}}}],["delta",{"_index":2197,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dentifier",{"_index":805,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["dependencies",{"_index":449,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}],["deps",{"_index":3040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describe",{"_index":1792,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"directives/MouseWheelDirective.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{}}}],["deserializable",{"_index":712,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["desired",{"_index":2298,"title":{},"body":{"modules/StateModule.html":{}}}],["detail",{"_index":158,"title":{"classes/Detail.html":{}},"body":{"classes/Action.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"coverage.html":{}}}],["detail'},{'name",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["detail.active",{"_index":1530,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.component.html",{"_index":1398,"title":{},"body":{"components/DetailComponent.html":{}}}],["detail/detail.component",{"_index":1516,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailcomponent",{"_index":417,"title":{"components/DetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["details",{"_index":1021,"title":{},"body":{"classes/Card.html":{},"components/CardDetailsComponent.html":{},"classes/Detail.html":{},"components/DetailsComponent.html":{},"classes/State.html":{}}}],["details'},{'name",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["details.component",{"_index":1273,"title":{},"body":{"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{}}}],["details.component.html",{"_index":1085,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details.component.ts",{"_index":1084,"title":{},"body":{"components/CardDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:21",{"_index":1089,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":1087,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":1088,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["details/:did",{"_index":1656,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["details/card",{"_index":1083,"title":{},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"modules/FeedRoutingModule.html":{},"coverage.html":{}}}],["details?:detail",{"_index":190,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["detailscomponent",{"_index":419,"title":{"components/DetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["deux",{"_index":2595,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["devtools",{"_index":2283,"title":{},"body":{"modules/StateModule.html":{},"dependencies.html":{}}}],["dictionnaire",{"_index":2574,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["directive",{"_index":402,"title":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["directives",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["display",{"_index":943,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/IframeDisplayComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged",{"_index":2511,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distinctuntilchanged((forma",{"_index":2535,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["distributed",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["document.getelementbyid('${svguid}').addeventlistener('load",{"_index":1893,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["documentation",{"_index":2801,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["domain",{"_index":2571,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["dommousescroll",{"_index":2177,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["dommousescroll(event",{"_index":2181,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["domsanitizer",{"_index":1412,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["done",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["down",{"_index":1026,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["dragend",{"_index":1540,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragevent",{"_index":1583,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable",{"_index":1644,"title":{},"body":{"modules/FeedModule.html":{}}}],["draggable.ts",{"_index":1536,"title":{},"body":{"directives/DraggableDirective.html":{},"coverage.html":{}}}],["draggable.ts:11",{"_index":1559,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:14",{"_index":1554,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:20",{"_index":1556,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:29",{"_index":1558,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:7",{"_index":1550,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:8",{"_index":1549,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggable.ts:9",{"_index":1548,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["draggabledirective",{"_index":441,"title":{"directives/DraggableDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["dragging",{"_index":1538,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragmove",{"_index":1541,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["dragstart",{"_index":1542,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["during",{"_index":1135,"title":{},"body":{"interfaces/CardFeedState.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["dynamic",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["ee",{"_index":2764,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["effect",{"_index":895,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["effects",{"_index":1120,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["effectsmodule",{"_index":2281,"title":{},"body":{"modules/StateModule.html":{}}}],["effectsmodule.forroot(appeffects",{"_index":2290,"title":{},"body":{"modules/StateModule.html":{}}}],["element",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["elementref",{"_index":1408,"title":{},"body":{"components/DetailComponent.html":{}}}],["emission",{"_index":2028,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["emit",{"_index":900,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/IframeDisplayComponent.html":{}}}],["emits",{"_index":962,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emitted",{"_index":14,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["emittedby",{"_index":939,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["emmited",{"_index":117,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["empty",{"_index":240,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["emptylightcards",{"_index":239,"title":{"classes/EmptyLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/AuthenticationEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["emptylightcards(),new",{"_index":970,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["en",{"_index":2793,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["enabledrag",{"_index":2622,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enabletracing",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["enablezoom",{"_index":2623,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["encoding",{"_index":2364,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["end",{"_index":2545,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["enddate",{"_index":1015,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{}}}],["enddomain",{"_index":2580,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.add(1",{"_index":2582,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.add(5",{"_index":2588,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.add(7",{"_index":2586,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":2585,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.startof('week",{"_index":2584,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain.valueof",{"_index":2631,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2",{"_index":2599,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.add(1",{"_index":2604,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.add(2",{"_index":2602,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.date(15",{"_index":2605,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.startof('month",{"_index":2601,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain2.valueof",{"_index":2634,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3",{"_index":2609,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.add(1",{"_index":2613,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.add(2",{"_index":2611,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.month(10",{"_index":2618,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.startof('year",{"_index":2614,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["enddomain3.valueof",{"_index":2636,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["entire",{"_index":1378,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["entities",{"_index":259,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["entityadapter",{"_index":1142,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"miscellaneous/variables.html":{}}}],["entitystate",{"_index":1124,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["entries",{"_index":188,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["entry",{"_index":2051,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["enum",{"_index":58,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["enumerations",{"_index":2958,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"modules/StateModule.html":{}}}],["environment",{"_index":518,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"modules/StateModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"modules/StateModule.html":{},"miscellaneous/variables.html":{}}}],["environment.urls.auth}/check_token",{"_index":675,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/code/redirect_uri=${authenticationservice.computeredirecturi",{"_index":837,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.auth}/token",{"_index":678,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["environment.urls.cards}/cards",{"_index":1223,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.cards}/cardsubscription?clientid=${clientid",{"_index":1221,"title":{},"body":{"injectables/CardService.html":{}}}],["environment.urls.config",{"_index":1331,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.urls.thirds",{"_index":2344,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["environments/environment",{"_index":2331,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["err",{"_index":932,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["error",{"_index":124,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"interfaces/ConfigState.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error(`unhandled",{"_index":1174,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["error.tostring",{"_index":1251,"title":{},"body":{"injectables/CardService.html":{}}}],["error:null",{"_index":2163,"title":{},"body":{"interfaces/MenuState.html":{},"miscellaneous/variables.html":{}}}],["error:string",{"_index":2161,"title":{},"body":{"interfaces/MenuState.html":{}}}],["errormsg",{"_index":888,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse",{"_index":885,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.message",{"_index":1001,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["errorresponse.status",{"_index":991,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["es",{"_index":1250,"title":{},"body":{"injectables/CardService.html":{}}}],["et",{"_index":2570,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["europe.com:2002/auth",{"_index":3019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["europe.com:2002/cards",{"_index":3020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["europe.com:2002/config",{"_index":3022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["europe.com:2002/thirds",{"_index":3021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evaluate",{"_index":1666,"title":{},"body":{"classes/Filter.html":{}}}],["event",{"_index":1215,"title":{},"body":{"injectables/CardService.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"dependencies.html":{}}}],["event.detail",{"_index":2201,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["event.wheeldelta",{"_index":2200,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["eventemitter",{"_index":1547,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["eventsource",{"_index":1201,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.close",{"_index":1255,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.closed",{"_index":1254,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onerror",{"_index":1247,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.onmessage",{"_index":1244,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsource.readystate",{"_index":1253,"title":{},"body":{"injectables/CardService.html":{}}}],["eventsourcepolyfill",{"_index":1199,"title":{},"body":{"injectables/CardService.html":{}}}],["example",{"_index":1795,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"classes/UpdateSelectedMenu.html":{}}}],["examples/blob/master/app/mousewheeldirective/mousewheel.directive.ts",{"_index":2173,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["executetemplate",{"_index":1802,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["executetemplate(templatename",{"_index":1821,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["exists",{"_index":87,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["exp",{"_index":704,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expandedmenu",{"_index":2206,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expandedmenu:boolean",{"_index":2220,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expiration",{"_index":774,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/variables.html":{}}}],["expirationdate",{"_index":82,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["expirationdate.gettime",{"_index":3030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expireclaim",{"_index":681,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["expired",{"_index":926,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["expires_in",{"_index":648,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["export",{"_index":57,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["exports",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{}}}],["extended",{"_index":243,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["extends",{"_index":1140,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["external",{"_index":192,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["extract",{"_index":769,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["extractidentificationinformation",{"_index":806,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["extractparams",{"_index":1362,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["extractparams(state",{"_index":1364,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["extractstate",{"_index":2300,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card",{"_index":2308,"title":{},"body":{"classes/Third.html":{}}}],["extractstate(card:card):state",{"_index":173,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["extracttoken",{"_index":771,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["f5",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["fa",{"_index":1486,"title":{},"body":{"components/DetailComponent.html":{}}}],["faclock",{"_index":1630,"title":{},"body":{"modules/FeedModule.html":{}}}],["faexternallinkalt",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":245,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["failed",{"_index":2072,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["false",{"_index":195,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/Input.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"miscellaneous/variables.html":{}}}],["fctargs[fctargs.length",{"_index":1892,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["feed",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["feed.component",{"_index":1616,"title":{},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{}}}],["feed.component.html",{"_index":1587,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.component.scss",{"_index":1586,"title":{},"body":{"components/FeedComponent.html":{}}}],["feed.filter(card=>filter.chainfilter(card,filters",{"_index":3053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feed.filters.time.end.label",{"_index":2549,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.start.label",{"_index":2548,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.time.title",{"_index":2550,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["feed.filters.type.action.label",{"_index":2722,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.alarm.label",{"_index":2721,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.notification.label",{"_index":2724,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.question.label",{"_index":2723,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed.filters.type.title",{"_index":2725,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["feed:lightcard[],filters:filter",{"_index":3050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedactions",{"_index":627,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/typealiases.html":{}}}],["feedactiontypes",{"_index":619,"title":{},"body":{"classes/ApplyFilter.html":{},"injectables/CardOperationEffects.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["feedactiontypes.applyfilter",{"_index":614,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedactiontypes.initfilter",{"_index":625,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["feedcomponent",{"_index":420,"title":{"components/FeedComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["feedfilterseffects",{"_index":595,"title":{"injectables/FeedFiltersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/FeedFiltersEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["feedinitialstate",{"_index":1150,"title":{},"body":{"interfaces/CardFeedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["feedmodule",{"_index":1607,"title":{"modules/FeedModule.html":{}},"body":{"modules/FeedModule.html":{},"index.html":{},"modules.html":{}}}],["feedroutingmodule",{"_index":1613,"title":{"modules/FeedRoutingModule.html":{}},"body":{"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["feedselectors",{"_index":1592,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["fetchcardoperation",{"_index":1192,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchcardoperation(eventsource",{"_index":1198,"title":{},"body":{"injectables/CardService.html":{}}}],["fetchconfiguration",{"_index":1324,"title":{},"body":{"injectables/ConfigService.html":{}}}],["fetchhbstemplate",{"_index":2446,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchhbstemplate(publisher",{"_index":2357,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchi18njson",{"_index":2447,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchi18njson(publisher",{"_index":2370,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fetchthird",{"_index":2448,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["fetchthird(publisher",{"_index":2354,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{}}}],["fill",{"_index":1974,"title":{},"body":{"components/IconComponent.html":{}}}],["filter",{"_index":439,"title":{"classes/Filter.html":{}},"body":{"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitFilters.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["filter$(filter",{"_index":2699,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter'},{'name",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter(([action",{"_index":1320,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["filter((action",{"_index":1342,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["filter((af:applyfilter)=>af.payload.name",{"_index":1181,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["filter((t:third)=>!(!t.menuentries",{"_index":2388,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["filter.component",{"_index":1627,"title":{},"body":{"modules/FeedModule.html":{}}}],["filter.component.html",{"_index":2494,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.scss",{"_index":2690,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts",{"_index":2492,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["filter.component.ts:26",{"_index":2505,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:27",{"_index":2504,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.component.ts:28",{"_index":2697,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:29",{"_index":2507,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:30",{"_index":2696,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:32",{"_index":2698,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:33",{"_index":2500,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:34",{"_index":2692,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:40",{"_index":2502,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:44",{"_index":2693,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:45",{"_index":2503,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.component.ts:53",{"_index":2694,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:59",{"_index":2695,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["filter.component.ts:90",{"_index":2501,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["filter.model",{"_index":616,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filter.model.ts",{"_index":1658,"title":{},"body":{"classes/Filter.html":{},"coverage.html":{}}}],["filter.model.ts:22",{"_index":1680,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:27",{"_index":1681,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:28",{"_index":1682,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:32",{"_index":1696,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:43",{"_index":1684,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:56",{"_index":1687,"title":{},"body":{"classes/Filter.html":{}}}],["filter.model.ts:67",{"_index":1693,"title":{},"body":{"classes/Filter.html":{}}}],["filter/time",{"_index":1629,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{},"coverage.html":{}}}],["filter/type",{"_index":1626,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["filtered",{"_index":1692,"title":{},"body":{"classes/Filter.html":{}}}],["filtering",{"_index":30,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["filters",{"_index":1137,"title":{},"body":{"interfaces/CardFeedState.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"miscellaneous/variables.html":{}}}],["filters'},{'name",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["filters.component.html",{"_index":1754,"title":{},"body":{"components/FiltersComponent.html":{}}}],["filters.effects",{"_index":597,"title":{},"body":{"interfaces/AppState.html":{}}}],["filters.effects.ts",{"_index":1601,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"coverage.html":{}}}],["filters.effects.ts:19",{"_index":1604,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.effects.ts:28",{"_index":1606,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["filters.length>0",{"_index":3052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filters.set(filtertype.recipient_filter",{"_index":1745,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.time_filter",{"_index":1747,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.set(filtertype.type_filter",{"_index":1743,"title":{},"body":{"injectables/FilterService.html":{}}}],["filters.values",{"_index":3043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterscomponent",{"_index":422,"title":{"components/FiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["filterservice",{"_index":1603,"title":{"injectables/FilterService.html":{}},"body":{"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"index.html":{}}}],["filtertype",{"_index":617,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["filtertype.time_filter",{"_index":1182,"title":{},"body":{"injectables/CardOperationEffects.html":{},"components/TimeFilterComponent.html":{}}}],["filtertype.type_filter",{"_index":2716,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["fini",{"_index":2771,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["first",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/DetailsComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["flow",{"_index":739,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["followcloacktick",{"_index":2632,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["following",{"_index":16,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["font",{"_index":1068,"title":{},"body":{"components/CardComponent.html":{}}}],["fontawesome",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["for(let",{"_index":3042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forcepositiveandoneminimum",{"_index":2898,"title":{},"body":{"coverage.html":{}}}],["form",{"_index":105,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{}}}],["form.action",{"_index":2718,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.alarm",{"_index":2717,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.end",{"_index":2542,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["form.notification",{"_index":2720,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.question",{"_index":2719,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["form.start",{"_index":2541,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["format.pipe",{"_index":1641,"title":{},"body":{"modules/FeedModule.html":{}}}],["format.pipe.ts",{"_index":2743,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{}}}],["format.pipe.ts:10",{"_index":2749,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatpipe",{"_index":2791,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatpipe.transform(value",{"_index":2792,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["formatter",{"_index":1903,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formatter.format(value",{"_index":1906,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["formb",{"_index":2536,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formcontrol",{"_index":2120,"title":{},"body":{"components/LoginComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["formdata",{"_index":718,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["formgroup",{"_index":2118,"title":{},"body":{"components/LoginComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["forms",{"_index":1387,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["formsmodule",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["forroot",{"_index":1268,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["fortawesome/angular",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["fortawesome/free",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["forwardlevel",{"_index":2619,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["found",{"_index":2022,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["france.com",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["freeze",{"_index":564,"title":{},"body":{"interfaces/AppState.html":{}}}],["from(_.difference(work",{"_index":2417,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["from(cards).pipe",{"_index":2398,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["from(menus).pipe",{"_index":2404,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["fromauthentication.getexpirationtime",{"_index":3061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fromrouter",{"_index":555,"title":{},"body":{"interfaces/AppState.html":{}}}],["fromrouter.routerreducer",{"_index":604,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":1654,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["function",{"_index":24,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{}}}],["function(a,b",{"_index":1914,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["function(lvalue",{"_index":1881,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["funktion",{"_index":1664,"title":{},"body":{"classes/Filter.html":{}}}],["futur",{"_index":854,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["future",{"_index":860,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["g",{"_index":1911,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["gather",{"_index":1659,"title":{},"body":{"classes/Filter.html":{}}}],["generaterandomarray",{"_index":2899,"title":{},"body":{"coverage.html":{}}}],["generaterandompositiveintegerwithinrangewithoneasminimum",{"_index":2900,"title":{},"body":{"coverage.html":{}}}],["generating",{"_index":736,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["gently",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["getcardoperation",{"_index":1193,"title":{},"body":{"injectables/CardService.html":{}}}],["getcurrentguid",{"_index":1758,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring",{"_index":1759,"title":{},"body":{"classes/GuidService.html":{}}}],["getcurrentguidstring():string",{"_index":1765,"title":{},"body":{"classes/GuidService.html":{}}}],["getdefaultfilters",{"_index":1721,"title":{},"body":{"injectables/FilterService.html":{}}}],["getexpirationdate",{"_index":2850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getexpirationdate(state",{"_index":3028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getexpirationtime",{"_index":2851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfilter",{"_index":2506,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["getfixedlengthalphanumericvalue",{"_index":2901,"title":{},"body":{"coverage.html":{}}}],["gethtmlcontent",{"_index":1430,"title":{},"body":{"components/DetailComponent.html":{}}}],["geti18nprefix",{"_index":1044,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["getidentifier",{"_index":2852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getiframeurl",{"_index":2005,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getitem",{"_index":809,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getmenu_entry_id",{"_index":1999,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getmenu_id",{"_index":1997,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getmenubyid",{"_index":1982,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getmenubyid(menu_id",{"_index":1989,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getmenuentrybyid",{"_index":1983,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getmenuentrybyid(menu_entry_id",{"_index":1992,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getonerandomaddcardoperation",{"_index":2902,"title":{},"body":{"coverage.html":{}}}],["getonerandomcard",{"_index":2903,"title":{},"body":{"coverage.html":{}}}],["getonerandomcarddetail",{"_index":2904,"title":{},"body":{"coverage.html":{}}}],["getonerandomcardwithrandomdetails",{"_index":2905,"title":{},"body":{"coverage.html":{}}}],["getonerandomligthcard",{"_index":2906,"title":{},"body":{"coverage.html":{}}}],["getonerandomthird",{"_index":2907,"title":{},"body":{"coverage.html":{}}}],["getpositiverandomnumberwithinrange",{"_index":2908,"title":{},"body":{"coverage.html":{}}}],["getrandomactions",{"_index":2909,"title":{},"body":{"coverage.html":{}}}],["getrandomalphanumericvalue",{"_index":2910,"title":{},"body":{"coverage.html":{}}}],["getrandomcarddetails",{"_index":2911,"title":{},"body":{"coverage.html":{}}}],["getrandomi18ndata",{"_index":2912,"title":{},"body":{"coverage.html":{}}}],["getrandomindex",{"_index":2913,"title":{},"body":{"coverage.html":{}}}],["getrandommenu",{"_index":2914,"title":{},"body":{"coverage.html":{}}}],["getrandomthird",{"_index":2915,"title":{},"body":{"coverage.html":{}}}],["getroutepe",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["getsafeiframeurl",{"_index":2007,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getsecurityheader",{"_index":829,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["getselectedid",{"_index":2856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getselectedthirdmenu",{"_index":2001,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getselectedthirdmenuentry",{"_index":2003,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["getseveralrandomlightcards",{"_index":2916,"title":{},"body":{"coverage.html":{}}}],["getthirdmenus",{"_index":2218,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gettoken",{"_index":2853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettoken(state",{"_index":3029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gettranslation",{"_index":2325,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["gettranslation(lang",{"_index":2328,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["given",{"_index":734,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["gives",{"_index":708,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["graph",{"_index":2986,"title":{},"body":{"modules.html":{}}}],["guard.service",{"_index":2268,"title":{},"body":{"modules/ServicesModule.html":{}}}],["guid",{"_index":53,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["guid.create",{"_index":1764,"title":{},"body":{"classes/GuidService.html":{}}}],["guid.parse(localstorage.getitem(localstorageauthcontent.clientid",{"_index":808,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["guidservice",{"_index":662,"title":{"classes/GuidService.html":{}},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"modules/ServicesModule.html":{},"coverage.html":{}}}],["guillaume",{"_index":2617,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["handle",{"_index":253,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["handlebars",{"_index":1410,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"dependencies.html":{}}}],["handlebars.registerhelper(\"math",{"_index":1880,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper(\"preservespace",{"_index":1909,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('action",{"_index":1895,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindex",{"_index":1885,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('arrayatindexlength",{"_index":1875,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('bool",{"_index":1870,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('dateformat",{"_index":1896,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('now",{"_index":1907,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('numberformat",{"_index":1902,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('slice",{"_index":1887,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('sort",{"_index":1891,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars.registerhelper('split",{"_index":1877,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebars/dist/handlebars.js",{"_index":1839,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["handlebarsservice",{"_index":1266,"title":{"injectables/HandlebarsService.html":{}},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"coverage.html":{},"index.html":{}}}],["handleerror(error",{"_index":766,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handleerrorontokengeneration",{"_index":869,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse",{"_index":882,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleerrorontokengeneration(errorresponse,category:string",{"_index":988,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleloginattempt",{"_index":22,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handleloginattempt(payload",{"_index":1006,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handlemaxagainstmin",{"_index":2917,"title":{},"body":{"coverage.html":{}}}],["handlenewtoken(call",{"_index":759,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["handlerejectedlogin",{"_index":119,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["handlerejectedlogin(errormsg",{"_index":886,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["handleunexpectederror",{"_index":252,"title":{"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["handleunexpectederror({error",{"_index":1178,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["handling",{"_index":1492,"title":{},"body":{"components/DetailComponent.html":{}}}],["hashlocationstrategy",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["header",{"_index":828,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/TypeFilterComponent.html":{}}}],["headers",{"_index":721,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{}}}],["headers}).pipe",{"_index":730,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["heartbeattimeout",{"_index":1240,"title":{},"body":{"injectables/CardService.html":{}}}],["height",{"_index":2731,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["helper",{"_index":812,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["here",{"_index":1232,"title":{},"body":{"injectables/CardService.html":{}}}],["hh:mm",{"_index":2762,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["hidden",{"_index":145,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["hide",{"_index":2104,"title":{},"body":{"components/LoginComponent.html":{}}}],["hostlistener",{"_index":1560,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["hostlistener('document:dragstart",{"_index":1581,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('dommousescroll",{"_index":2192,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('mousewheel",{"_index":2189,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('onmousewheel",{"_index":2194,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["hostlistener('pointerdown",{"_index":1562,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointermove",{"_index":1566,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlistener('pointerup",{"_index":1569,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["hostlisteners",{"_index":1543,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["hours",{"_index":2759,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["href",{"_index":1445,"title":{},"body":{"components/DetailComponent.html":{}}}],["hrefsofcsslink",{"_index":1400,"title":{},"body":{"components/DetailComponent.html":{}}}],["html",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["htmlbuttonelement",{"_index":1417,"title":{},"body":{"components/DetailComponent.html":{}}}],["htmlcontent",{"_index":1406,"title":{},"body":{"components/DetailComponent.html":{}}}],["http",{"_index":827,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["http://localhost:2002/auth",{"_index":3023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:2002/cards",{"_index":3024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:2002/config",{"_index":3026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:2002/thirds",{"_index":3025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["http://opfab.rte",{"_index":3018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.rte",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["http_interceptors",{"_index":2266,"title":{},"body":{"modules/ServicesModule.html":{}}}],["httpcall",{"_index":2372,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpclient",{"_index":657,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["httpclient:httpclient",{"_index":1217,"title":{},"body":{"injectables/CardService.html":{}}}],["httpclientmodule",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":2677,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httphandler",{"_index":2675,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httpheaders",{"_index":658,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpheaders({'content",{"_index":722,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["httpinterceptor",{"_index":2678,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["httploaderfactory",{"_index":2887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":1328,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httpparams().set('version',version",{"_index":2368,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["httprequest",{"_index":2672,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["https://github.com/briebug/ngrx",{"_index":1386,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["https://github.com/sodhanalibrary/angular2",{"_index":2172,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["httpurlencodingcodec",{"_index":1329,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["i18n",{"_index":144,"title":{"classes/I18n.html":{}},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"coverage.html":{}}}],["i18n('login.error.token.expiration",{"_index":927,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.token.invalid",{"_index":920,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n('login.error.unexpected",{"_index":934,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18n(key",{"_index":1005,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["i18nlabelkey",{"_index":167,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["i18npath",{"_index":2888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["i18nprefix",{"_index":1036,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["i18nprefix+detailc.detail.title.key",{"_index":1533,"title":{},"body":{"components/DetailsComponent.html":{}}}],["i18nprefix+lightcard.summary.key",{"_index":1062,"title":{},"body":{"components/CardComponent.html":{}}}],["i18nprefix+lightcard.title.key",{"_index":1059,"title":{},"body":{"components/CardComponent.html":{}}}],["ici",{"_index":2758,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["icon",{"_index":1924,"title":{},"body":{"components/IconComponent.html":{}}}],["icon'},{'name",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["icon.component.html",{"_index":1926,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.component.scss",{"_index":1925,"title":{},"body":{"components/IconComponent.html":{}}}],["icon:string",{"_index":1944,"title":{},"body":{"components/IconComponent.html":{}}}],["iconcomponent",{"_index":424,"title":{"components/IconComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["iconpath",{"_index":1927,"title":{},"body":{"components/IconComponent.html":{}}}],["iconpath:string",{"_index":1952,"title":{},"body":{"components/IconComponent.html":{}}}],["icons",{"_index":503,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["id",{"_index":186,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/HandleUnexpectedError.html":{},"components/IframeDisplayComponent.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["id'].nodevalue",{"_index":1474,"title":{},"body":{"components/DetailComponent.html":{}}}],["id.split",{"_index":2421,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["id:string",{"_index":183,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["identifier",{"_index":78,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":2411,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ids.push(id",{"_index":2410,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(!!next.status.end",{"_index":2526,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!next.status.start",{"_index":2521,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["if(!!state",{"_index":1475,"title":{},"body":{"components/DetailComponent.html":{}}}],["if(!this.delegateurl",{"_index":835,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["if(!this.getmenubyid(currentselection[0][0],currentselection[1])[0",{"_index":2032,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["if(!this.getmenuentrybyid(currentselection[0][1],selectedthirdmenu)[0",{"_index":2034,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["if(a[key]b[key",{"_index":1919,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(card",{"_index":1096,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["if(card.details",{"_index":1097,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["if(card.process",{"_index":174,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(card.state",{"_index":178,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["if(changes['card'].currentvalue",{"_index":1531,"title":{},"body":{"components/DetailsComponent.html":{}}}],["if(filters",{"_index":3051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(i",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["if(template",{"_index":1865,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(third",{"_index":2349,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["if(this.active",{"_index":1704,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.applyfilter(card",{"_index":1706,"title":{},"body":{"classes/Filter.html":{}}}],["if(this.dark||this.light",{"_index":1969,"title":{},"body":{"components/IconComponent.html":{}}}],["if(this.expandedmenu[index",{"_index":2229,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(typeof",{"_index":1915,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["if(url",{"_index":1054,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["if(v.active",{"_index":3044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iframe",{"_index":2049,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay",{"_index":1976,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay'},{'name",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["iframedisplay.component",{"_index":2319,"title":{},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["iframedisplay.component.html",{"_index":1978,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplay.component.scss",{"_index":1977,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["iframedisplaycomponent",{"_index":426,"title":{"components/IframeDisplayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["iframeurl",{"_index":1986,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["ignore",{"_index":90,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["implementation",{"_index":1671,"title":{},"body":{"classes/Filter.html":{}}}],["implemented",{"_index":1493,"title":{},"body":{"components/DetailComponent.html":{}}}],["implementing",{"_index":876,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["implements",{"_index":33,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["imports",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["include",{"_index":2297,"title":{},"body":{"modules/StateModule.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2145,"title":{},"body":{"classes/Map.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":13,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["informatios",{"_index":793,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["inheritance",{"_index":1673,"title":{},"body":{"classes/Filter.html":{}}}],["iniitialized",{"_index":834,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["init",{"_index":61,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddCardDataTimeline.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initauthstatus",{"_index":60,"title":{"classes/InitAuthStatus.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["initauthstatus({code:window.location.href.substring(i",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["initchartcomponent",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["initfilter",{"_index":621,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"miscellaneous/enumerations.html":{}}}],["initfilters",{"_index":624,"title":{"classes/InitFilters.html":{}},"body":{"classes/ApplyFilter.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["initfilters({filters:this.service.defaultfilters",{"_index":1605,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["initialized",{"_index":743,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["initializehandlebarstemplates",{"_index":1403,"title":{},"body":{"components/DetailComponent.html":{}}}],["initializehrefsofcsslink",{"_index":1404,"title":{},"body":{"components/DetailComponent.html":{}}}],["initialstate",{"_index":608,"title":{},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initrecipientfilter",{"_index":1712,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimefilter",{"_index":1713,"title":{},"body":{"injectables/FilterService.html":{}}}],["inittimeline",{"_index":218,"title":{"classes/InitTimeline.html":{}},"body":{"classes/AddCardDataTimeline.html":{},"classes/InitTimeline.html":{},"components/TimeLineComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["inittypefilter",{"_index":1714,"title":{},"body":{"injectables/FilterService.html":{}}}],["inject",{"_index":1307,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/GuidService.html":{}}}],["inject('configretrydelay",{"_index":1314,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["injectable",{"_index":656,"title":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/ThirdsService.html":{},"injectables/TimeService.html":{}},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"coverage.html":{}}}],["injectables",{"_index":865,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"injectables/ThirdsService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["injector",{"_index":1327,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["input",{"_index":150,"title":{"classes/Input.html":{}},"body":{"classes/Action.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{}}}],["input[0",{"_index":2422,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["input[1",{"_index":2423,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["inputs",{"_index":149,"title":{},"body":{"classes/Action.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/IconComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["inputtype",{"_index":196,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["inside",{"_index":1575,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["instance",{"_index":813,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["instanceof",{"_index":2752,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["instanciation",{"_index":1672,"title":{},"body":{"classes/Filter.html":{}}}],["instantiate",{"_index":1444,"title":{},"body":{"components/DetailComponent.html":{}}}],["intercept",{"_index":2668,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercept(request",{"_index":2674,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["intercepted",{"_index":1235,"title":{},"body":{"injectables/CardService.html":{}}}],["interceptor",{"_index":1236,"title":{"interceptors/TokenInjector.html":{}},"body":{"injectables/CardService.html":{},"coverage.html":{}}}],["interceptors",{"_index":2665,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["interceptors.service",{"_index":2267,"title":{},"body":{"modules/ServicesModule.html":{}}}],["interface",{"_index":542,"title":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/TimelineState.html":{},"coverage.html":{}}}],["interfaces",{"_index":543,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"interfaces/MenuState.html":{},"interfaces/TimelineState.html":{},"index.html":{}}}],["intl.numberformat(this.translate.getbrowserlang",{"_index":1904,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["invalid",{"_index":710,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["isauth",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["isauthenticated",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["isexpirationdateover",{"_index":787,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["isinthefuture(expirationdate",{"_index":785,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isinthefuture(time",{"_index":861,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isnan(expirationdate",{"_index":783,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["isnotanumber",{"_index":782,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["issue",{"_index":256,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["istanbul",{"_index":89,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["isused",{"_index":810,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["it's",{"_index":937,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["items",{"_index":1383,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["jnlp",{"_index":193,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["jours",{"_index":2596,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["js",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":666,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"dependencies.html":{}}}],["jwt.expire",{"_index":703,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt.login",{"_index":699,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt[this.expireclaim",{"_index":818,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode",{"_index":665,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["jwt_decode(token",{"_index":847,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["key",{"_index":989,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Map.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["la",{"_index":2569,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["label",{"_index":143,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["label1",{"_index":2480,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label2",{"_index":2483,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["label3",{"_index":2488,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["lang",{"_index":2330,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["langs",{"_index":2432,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["languagetag",{"_index":2747,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["large",{"_index":2294,"title":{},"body":{"modules/StateModule.html":{}}}],["larger",{"_index":1073,"title":{},"body":{"components/CardComponent.html":{}}}],["last",{"_index":1128,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["lastcards",{"_index":1127,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["latest",{"_index":2027,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["lcard",{"_index":237,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["le",{"_index":2563,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["legend",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"index.html":{}}}],["level",{"_index":2166,"title":{},"body":{"classes/Message.html":{}}}],["library",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["library.add(faclock",{"_index":1647,"title":{},"body":{"modules/FeedModule.html":{}}}],["library.add(faexternallinkalt",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["light",{"_index":249,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardComponent.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"components/IconComponent.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["light:boolean",{"_index":1949,"title":{},"body":{"components/IconComponent.html":{}}}],["lightcard",{"_index":232,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcard):boolean",{"_index":1703,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard,any",{"_index":1697,"title":{},"body":{"classes/Filter.html":{}}}],["lightcard.enddate|date:'short",{"_index":1061,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.enddate|date:\\'short",{"_index":1081,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.startdate|date:'short",{"_index":1060,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcard.startdate|date:\\'short",{"_index":1080,"title":{},"body":{"components/CardComponent.html":{}}}],["lightcardactions",{"_index":270,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/typealiases.html":{}}}],["lightcardactiontypes",{"_index":235,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["lightcardactiontypes.addlightcardfailure",{"_index":231,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.emptylightcards",{"_index":261,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.handleunexpectederror",{"_index":269,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcards",{"_index":260,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsextendeddata",{"_index":264,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardsfailure",{"_index":265,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.loadlightcardssuccess",{"_index":262,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.selectlightcard",{"_index":266,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardactiontypes.updatedsubscription",{"_index":268,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcardadapter",{"_index":1148,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lightcardadapter.getinitialstate",{"_index":1151,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"miscellaneous/variables.html":{}}}],["lightcardadapter.getselectors(selectlightcardsstate",{"_index":3046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lightcardadapter.getselectors(selecttimelinestate",{"_index":3080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lightcardeffects",{"_index":592,"title":{"injectables/LightCardEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/LightCardEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lightcardreducer",{"_index":575,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["lightcards",{"_index":263,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/CardListComponent.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"classes/UpdatedSubscription.html":{}}}],["lightcards:${test",{"_index":2069,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["line",{"_index":2552,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line'},{'name",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["line.component",{"_index":1622,"title":{},"body":{"modules/FeedModule.html":{}}}],["line.component.html",{"_index":2553,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts",{"_index":2551,"title":{},"body":{"components/TimeLineComponent.html":{},"coverage.html":{}}}],["line.component.ts:26",{"_index":2559,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:28",{"_index":2558,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:29",{"_index":2556,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line.component.ts:33",{"_index":2557,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["line/app",{"_index":1535,"title":{},"body":{"directives/DraggableDirective.html":{},"modules/FeedModule.html":{},"coverage.html":{}}}],["line/mouse",{"_index":1642,"title":{},"body":{"modules/FeedModule.html":{},"directives/MouseWheelDirective.html":{},"coverage.html":{}}}],["line/time",{"_index":1621,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeLineComponent.html":{},"coverage.html":{}}}],["line/x",{"_index":1638,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{}}}],["link",{"_index":1446,"title":{},"body":{"components/DetailComponent.html":{}}}],["link/button",{"_index":973,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["link1",{"_index":2481,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link2",{"_index":2484,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["link3",{"_index":2489,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["list",{"_index":198,"title":{},"body":{"classes/Action.html":{},"components/CardListComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["list.component",{"_index":1615,"title":{},"body":{"modules/FeedModule.html":{}}}],["list.component.html",{"_index":1155,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts",{"_index":1154,"title":{},"body":{"components/CardListComponent.html":{},"coverage.html":{}}}],["list.component.ts:17",{"_index":1158,"title":{},"body":{"components/CardListComponent.html":{}}}],["list.component.ts:18",{"_index":1157,"title":{},"body":{"components/CardListComponent.html":{}}}],["list/card",{"_index":1153,"title":{},"body":{"components/CardListComponent.html":{},"modules/FeedModule.html":{},"coverage.html":{}}}],["list/filters/filters.component",{"_index":1624,"title":{},"body":{"modules/FeedModule.html":{}}}],["list/filters/filters.component.ts",{"_index":1753,"title":{},"body":{"components/FiltersComponent.html":{},"coverage.html":{}}}],["list/filters/filters.component.ts:14",{"_index":1755,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/filters.component.ts:18",{"_index":1756,"title":{},"body":{"components/FiltersComponent.html":{}}}],["list/filters/time",{"_index":1628,"title":{},"body":{"modules/FeedModule.html":{},"components/TimeFilterComponent.html":{},"coverage.html":{}}}],["list/filters/type",{"_index":1625,"title":{},"body":{"modules/FeedModule.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["list_radio",{"_index":199,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["listen",{"_index":960,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["listens",{"_index":897,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["literal",{"_index":213,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/UpdateSelectedMenu.html":{}}}],["little",{"_index":1579,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["lkj",{"_index":2787,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["load",{"_index":238,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/SelectLightCard.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["loadbyid",{"_index":1106,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["loadcard",{"_index":1116,"title":{"classes/LoadCard.html":{}},"body":{"injectables/CardEffects.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"injectables/MenuEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcard(id",{"_index":1203,"title":{},"body":{"injectables/CardService.html":{}}}],["loadcard({id",{"_index":1347,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["loadcardfailure",{"_index":1117,"title":{"classes/LoadCardFailure.html":{}},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardfailure(err",{"_index":1113,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadcardsuccess",{"_index":1118,"title":{"classes/LoadCardSuccess.html":{}},"body":{"injectables/CardEffects.html":{},"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadcardsuccess({card",{"_index":1112,"title":{},"body":{"injectables/CardEffects.html":{}}}],["loadchildren",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconfig",{"_index":333,"title":{"classes/LoadConfig.html":{}},"body":{"components/AppComponent.html":{},"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure",{"_index":1310,"title":{"classes/LoadConfigFailure.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigfailure(err",{"_index":1301,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loadconfigsuccess",{"_index":1311,"title":{"classes/LoadConfigSuccess.html":{}},"body":{"injectables/ConfigEffects.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadconfigsuccess({config",{"_index":1300,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["loaded",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ConfigState.html":{},"modules/ServicesModule.html":{},"miscellaneous/variables.html":{}}}],["loadedi18n",{"_index":2338,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loader",{"_index":2935,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loadfeedfilteronauthenticationsuccess",{"_index":1602,"title":{},"body":{"injectables/FeedFiltersEffects.html":{}}}],["loadi18nforlightcards",{"_index":2449,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nforlightcards(cards",{"_index":2459,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nforlightcards(cards:lightcard",{"_index":2397,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loadi18nformenuentries",{"_index":2450,"title":{},"body":{"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(){return",{"_index":2490,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["loadi18nformenuentries(menus",{"_index":2461,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["loadi18nformenuentries(menus:thirdmenu",{"_index":2403,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loading",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"interfaces/ConfigState.html":{},"injectables/LightCardEffects.html":{},"interfaces/MenuState.html":{},"interfaces/TimelineState.html":{},"miscellaneous/variables.html":{}}}],["loadingi18n",{"_index":2339,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["loadlightcards",{"_index":236,"title":{"classes/LoadLightCards.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardsextendeddata",{"_index":242,"title":{"classes/LoadLightCardsExtendedData.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["loadlightcardsfailure",{"_index":244,"title":{"classes/LoadLightCardsFailure.html":{}},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess",{"_index":241,"title":{"classes/LoadLightCardsSuccess.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"injectables/LightCardEffects.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadlightcardssuccess({lightcards",{"_index":1173,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["loadmenu",{"_index":1786,"title":{"classes/LoadMenu.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/NavbarComponent.html":{},"classes/UpdateSelectedMenu.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure",{"_index":1788,"title":{"classes/LoadMenuFailure.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/UpdateSelectedMenu.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenufailure(err",{"_index":2156,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loadmenusuccess",{"_index":1787,"title":{"classes/LoadMenuSuccess.html":{}},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/UpdateSelectedMenu.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenusuccess({menu",{"_index":2154,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["loads",{"_index":1163,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["local",{"_index":1456,"title":{},"body":{"components/DetailComponent.html":{}}}],["locale",{"_index":1862,"title":{},"body":{"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["locales",{"_index":2304,"title":{},"body":{"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["locales?:string",{"_index":170,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["localestorage",{"_index":776,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage",{"_index":770,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.clear",{"_index":791,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.expirationdate",{"_index":781,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.identifier",{"_index":807,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.getitem(localstorageauthcontent.token",{"_index":772,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.clientid",{"_index":802,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.expirationdate",{"_index":800,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.identifier",{"_index":796,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorage.setitem(localstorageauthcontent.token",{"_index":798,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["localstorageauthcontent",{"_index":670,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/enumerations.html":{}}}],["location.href",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["location.origin",{"_index":841,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["location.pathname.length",{"_index":843,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["locationstrategy",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["lockaction",{"_index":151,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lockcard",{"_index":152,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["lodash",{"_index":669,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["log",{"_index":67,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["login",{"_index":102,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["login'},{'name",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["login.component.html",{"_index":2102,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.error.${category",{"_index":994,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unavailable",{"_index":998,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.error.unexpected",{"_index":999,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["login.login",{"_index":2138,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":2139,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.reset",{"_index":2141,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.code",{"_index":2142,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.submit.password",{"_index":2140,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/password",{"_index":95,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["loginclaim",{"_index":680,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["logincomponent",{"_index":98,"title":{"components/LoginComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginmessage",{"_index":2105,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmessage.i18n.key|translate:loginmessage.i18n.parameters",{"_index":2143,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":109,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["longtext",{"_index":201,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["lttd",{"_index":1019,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["lvalue",{"_index":1884,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m",{"_index":1897,"title":{},"body":{"injectables/HandlebarsService.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["m.format(options.hash.format",{"_index":1901,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["m.level==messagelevel.error",{"_index":2126,"title":{},"body":{"components/LoginComponent.html":{}}}],["m.locale(this.translate.getbrowserlang",{"_index":1900,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["mainrecipient",{"_index":1017,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["manage",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["management",{"_index":867,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manager",{"_index":875,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["manages",{"_index":1303,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["mandatory",{"_index":203,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["map",{"_index":161,"title":{"classes/Map.html":{}},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/Detail.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IframeDisplayComponent.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["map((action",{"_index":892,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["map((auth",{"_index":763,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map((card",{"_index":1111,"title":{},"body":{"injectables/CardEffects.html":{}}}],["map((config",{"_index":1299,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["map((currentselection",{"_index":2029,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["map(action",{"_index":950,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(array",{"_index":2153,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["map(authenticationinfo",{"_index":913,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["map(card",{"_index":2399,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(check",{"_index":731,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(data",{"_index":761,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["map(id=>this.lightcard.id",{"_index":1057,"title":{},"body":{"components/CardComponent.html":{}}}],["map(isinthefuture",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["map(menu",{"_index":2405,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(operation",{"_index":1168,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["map(r",{"_index":2374,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(s=>handlebars.compile(s",{"_index":1868,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["map(t",{"_index":2389,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["map(t=>t(card",{"_index":1859,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["margin",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/LoginComponent.html":{}}}],["matching",{"_index":136,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.max",{"_index":2198,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["math.min(1",{"_index":2199,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["max",{"_index":1063,"title":{},"body":{"components/CardComponent.html":{}}}],["maxedretries",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["maxlength",{"_index":204,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["medium",{"_index":1930,"title":{},"body":{"components/IconComponent.html":{}}}],["medium:boolean",{"_index":1946,"title":{},"body":{"components/IconComponent.html":{}}}],["mediumtime",{"_index":2780,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["member",{"_index":130,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["members",{"_index":18,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["menu",{"_index":546,"title":{},"body":{"interfaces/AppState.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"classes/UpdateSelectedMenu.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["menu.'+link.path",{"_index":2231,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.\\'+link.path",{"_index":2237,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.id",{"_index":2406,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menu.logout",{"_index":2236,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.version",{"_index":2407,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menu_entry_id",{"_index":1798,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["menu_entry_id,menu_entry_id",{"_index":2025,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["menu_entry_id|async",{"_index":2052,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["menu_id",{"_index":1797,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["menu_id/:menu_entry_id",{"_index":2321,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["menu_id|async",{"_index":2053,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["menuactions",{"_index":1799,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{},"miscellaneous/typealiases.html":{}}}],["menuactiontypes",{"_index":1785,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"classes/UpdateSelectedMenu.html":{},"miscellaneous/enumerations.html":{}}}],["menuactiontypes.handleunexpectederror",{"_index":1784,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["menuactiontypes.loadmenu",{"_index":1789,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["menuactiontypes.loadmenufailure",{"_index":1790,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["menuactiontypes.loadmenusuccess",{"_index":1791,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["menuactiontypes.updateselectedmenu",{"_index":1796,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["menueffects",{"_index":590,"title":{"injectables/MenuEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MenuEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menuentries",{"_index":2305,"title":{},"body":{"classes/Third.html":{}}}],["menuentries?:thirdmenuentry",{"_index":171,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["menuentry.id",{"_index":2048,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["menuinitialstate",{"_index":2162,"title":{},"body":{"interfaces/MenuState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menureducer",{"_index":582,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["menus",{"_index":2396,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menus.push(menu",{"_index":2395,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["menustate",{"_index":552,"title":{"interfaces/MenuState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MenuState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["menustate.menu",{"_index":3091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menustate.selected_menu_entry_id",{"_index":3092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menustate.selected_menu_id",{"_index":3093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menustate:menustate",{"_index":3090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merge",{"_index":2332,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["merge(previous",{"_index":2380,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["mergemap",{"_index":2333,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["mergemap((id",{"_index":2419,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["message",{"_index":55,"title":{"classes/Message.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message('the",{"_index":918,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(err",{"_index":933,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["message(message",{"_index":1004,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["messagelevel",{"_index":981,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"miscellaneous/enumerations.html":{}}}],["messagelevel.debug",{"_index":2168,"title":{},"body":{"classes/Message.html":{}}}],["messagelevel.error",{"_index":919,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["metadata",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["metareducer",{"_index":562,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":607,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":23,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["methods",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["minus2hour",{"_index":1225,"title":{},"body":{"injectables/CardService.html":{}}}],["miscellaneous",{"_index":2957,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":2659,"title":{},"body":{"injectables/TimeService.html":{}}}],["mmm",{"_index":2768,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["mmmm",{"_index":2766,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["model/light",{"_index":2336,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["modification",{"_index":1134,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["module",{"_index":446,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["modules",{"_index":448,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["modules/archives/archives.module#archivesmodule",{"_index":526,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/feed/feed.module#feedmodule",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modules/thirdparty/thirdparty.module#thirdpartymodule",{"_index":528,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["modulewithproviders",{"_index":1270,"title":{},"body":{"modules/CardsModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["moment",{"_index":857,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["moment(date).startof('year",{"_index":2756,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment(new",{"_index":1898,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["moment(value",{"_index":2754,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment(value).format('yyyy",{"_index":2661,"title":{},"body":{"injectables/TimeService.html":{}}}],["moment(value,'yyyy",{"_index":2658,"title":{},"body":{"injectables/TimeService.html":{}}}],["moment.locale(languagetag",{"_index":2753,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["moment.moment",{"_index":2654,"title":{},"body":{"injectables/TimeService.html":{}}}],["mono.svg",{"_index":1971,"title":{},"body":{"components/IconComponent.html":{}}}],["months",{"_index":2603,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["more",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mousewheel",{"_index":2171,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheel(event",{"_index":2183,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheeldirective",{"_index":443,"title":{"directives/MouseWheelDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["mousewheeldown",{"_index":2175,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc",{"_index":2174,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelfunc(event",{"_index":2187,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["mousewheelup",{"_index":2176,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["movement",{"_index":1577,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["movetocodeflowloginpage",{"_index":833,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["mozilla",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["mpl",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["multi",{"_index":2270,"title":{},"body":{"modules/ServicesModule.html":{}}}],["mycardtimeline",{"_index":2644,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["n",{"_index":2763,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["name",{"_index":46,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["name:string",{"_index":165,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["navbar",{"_index":112,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppRoutingModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["navbar'},{'name",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["navbar.component.html",{"_index":2204,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcollapsed",{"_index":2207,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":110,"title":{"components/NavbarComponent.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckAuthenticationStatus.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["navigate",{"_index":899,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["navigatetocard",{"_index":1338,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigatetomenuurl",{"_index":1339,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["navigationactiontiming",{"_index":2284,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationactiontiming.postactivation",{"_index":2288,"title":{},"body":{"modules/StateModule.html":{}}}],["navigationid",{"_index":1373,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["navigationroutes",{"_index":535,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["need",{"_index":1381,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["needed",{"_index":257,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardService.html":{},"classes/ClearCard.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["needsconfirm",{"_index":155,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["new",{"_index":28,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"directives/MouseWheelDirective.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":91,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"components/TimeFilterComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["next.handle(this.addauthheadersifnecessary(request",{"_index":2679,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["next.length",{"_index":1707,"title":{},"body":{"classes/Filter.html":{}}}],["next.status.action",{"_index":2705,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.alarm",{"_index":2703,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.end",{"_index":2525,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next.status.notification",{"_index":2709,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.question",{"_index":2707,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["next.status.start",{"_index":2520,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["next[0].chainfilter(card,next.slice(1",{"_index":1708,"title":{},"body":{"classes/Filter.html":{}}}],["next||next.length",{"_index":1709,"title":{},"body":{"classes/Filter.html":{}}}],["ng",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"injectables/CardService.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["ngafterviewinit",{"_index":1497,"title":{},"body":{"components/DetailsComponent.html":{},"components/FeedComponent.html":{}}}],["ngbcollapse]=\"!expandedmenu[index",{"_index":2233,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngbmodule",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["ngbmodule.forroot",{"_index":1648,"title":{},"body":{"modules/FeedModule.html":{}}}],["ngmodule",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["ngonchanges",{"_index":1498,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngonchanges(changes",{"_index":1504,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ngondestroy",{"_index":2499,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngoninit",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngrx",{"_index":258,"title":{},"body":{"classes/AddLightCardFailure.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":976,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":1143,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":556,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":52,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"modules/StateModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"dependencies.html":{}}}],["ngunsubscribe",{"_index":2496,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ngx",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"dependencies.html":{}}}],["ngxchartsmodule",{"_index":1632,"title":{},"body":{"modules/FeedModule.html":{}}}],["none",{"_index":1027,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["noselectioncomponent",{"_index":431,"title":{"components/NoSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["notchecktokenrequest",{"_index":2681,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["notification",{"_index":1731,"title":{},"body":{"injectables/FilterService.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notify",{"_index":114,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["null",{"_index":181,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/CheckTokenResponse.html":{},"interfaces/ConfigState.html":{},"classes/Input.html":{},"interfaces/MenuState.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"interfaces/TimelineState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":205,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"classes/Card.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/TimeService.html":{},"miscellaneous/variables.html":{}}}],["oauth2.client",{"_index":693,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["oauth2.flow.delagate",{"_index":697,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["object",{"_index":2375,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["object[locale",{"_index":2376,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[locale][publisher",{"_index":2377,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["object[locale][publisher][version",{"_index":2378,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["obligatoire",{"_index":2593,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["observable",{"_index":17,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{}}}],["observable.create(observer",{"_index":1243,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(error",{"_index":1252,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.error(message",{"_index":1245,"title":{},"body":{"injectables/CardService.html":{}}}],["observer.next(json.parse(message.data",{"_index":1246,"title":{},"body":{"injectables/CardService.html":{}}}],["obtain",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["occured",{"_index":1249,"title":{},"body":{"injectables/CardService.html":{}}}],["of([new",{"_index":2476,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["of(false",{"_index":2074,"title":{},"body":{"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["of(new",{"_index":924,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(null",{"_index":733,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["of(template",{"_index":1866,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["of(third",{"_index":2350,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["of(this.handlerejectedlogin(new",{"_index":917,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["of(true",{"_index":2491,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["ofactions/authentication.actions",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/FeedFiltersEffects.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["ofactions/card.actions",{"_index":985,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["ofactions/config.actions",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{}}}],["ofactions/feed.actions",{"_index":1187,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofactions/light",{"_index":983,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{}}}],["ofactions/menu.actions",{"_index":1358,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{}}}],["ofactions/timeline.actions",{"_index":2562,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofeffects/authentication.effects",{"_index":570,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card",{"_index":568,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/card.effects",{"_index":566,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/config.effects",{"_index":600,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/custom",{"_index":587,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/feed",{"_index":596,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/light",{"_index":593,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofeffects/menu.effects",{"_index":591,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofmap",{"_index":162,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/card",{"_index":1213,"title":{},"body":{"injectables/CardService.html":{}}}],["ofmodel/card.model",{"_index":159,"title":{},"body":{"classes/Action.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/ClearCard.html":{},"interfaces/ConfigState.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/HandleUnexpectedError.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/feed",{"_index":615,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/FilterService.html":{},"classes/InitFilters.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofmodel/i18n.model",{"_index":160,"title":{},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/light",{"_index":233,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"classes/Detail.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/UpdatedSubscription.html":{}}}],["ofmodel/map",{"_index":163,"title":{},"body":{"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["ofmodel/message.model",{"_index":56,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["ofmodel/thirds.model",{"_index":1433,"title":{},"body":{"components/DetailComponent.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/UpdateSelectedMenu.html":{}}}],["ofselectors/authentication.selectors",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{}}}],["ofselectors/card.selectors",{"_index":1048,"title":{},"body":{"components/CardComponent.html":{}}}],["ofselectors/config.selectors",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"components/LoginComponent.html":{}}}],["ofselectors/feed.selectors",{"_index":1593,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofselectors/menu.selectors",{"_index":2012,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/router.selectors",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["ofselectors/timeline.selectors",{"_index":2561,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["ofservices/authentication.service",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/LoginComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["ofservices/card.service",{"_index":982,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["ofservices/config.service",{"_index":1309,"title":{},"body":{"injectables/ConfigEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/filter.service",{"_index":618,"title":{},"body":{"classes/ApplyFilter.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitFilters.html":{},"modules/ServicesModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofservices/guard.service",{"_index":517,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["ofservices/guid.service",{"_index":663,"title":{},"body":{"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"modules/ServicesModule.html":{}}}],["ofservices/services.module",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["ofservices/thirds.service",{"_index":1092,"title":{},"body":{"components/CardDetailsComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{}}}],["ofservices/time.service",{"_index":1840,"title":{},"body":{"injectables/HandlebarsService.html":{},"modules/ServicesModule.html":{},"components/TimeFilterComponent.html":{}}}],["ofstates/authentication.state",{"_index":584,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/card.state",{"_index":585,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/config.state",{"_index":598,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ConfigEffects.html":{}}}],["ofstates/feed.state",{"_index":572,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{}}}],["ofstates/menu.state",{"_index":589,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstates/timeline.state",{"_index":601,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/index",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"components/IframeDisplayComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ofstore/reducers/authentication.reducer",{"_index":560,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/card.reducer",{"_index":579,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/config.reducer",{"_index":581,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/light",{"_index":576,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/menu.reducer",{"_index":583,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/reducers/timeline.reducer",{"_index":574,"title":{},"body":{"interfaces/AppState.html":{}}}],["ofstore/selectors/card.selectors",{"_index":1091,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["ofstore/selectors/router.selectors",{"_index":1046,"title":{},"body":{"components/CardComponent.html":{}}}],["ofstore/state.module",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["ofstore/states/router.state",{"_index":558,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{}}}],["oftype",{"_index":975,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogin",{"_index":1165,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["oftype(authenticationactiontypes.acceptlogout",{"_index":891,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.checkauthenticationstatus",{"_index":906,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologin",{"_index":953,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(authenticationactiontypes.trytologout",{"_index":968,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(cardactiontypes.loadcard",{"_index":1108,"title":{},"body":{"injectables/CardEffects.html":{}}}],["oftype(configactiontypes.loadconfig",{"_index":1297,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigfailure",{"_index":1318,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["oftype(configactiontypes.loadconfigsuccess",{"_index":944,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["oftype(feedactiontypes.applyfilter",{"_index":1180,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["oftype(lightcardactiontypes.loadlightcardssuccess",{"_index":2065,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["oftype(menuactiontypes.loadmenu",{"_index":2150,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["oftype(router_navigation",{"_index":1341,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["oidc",{"_index":738,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["ok",{"_index":938,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["once",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["onchanges",{"_index":1496,"title":{},"body":{"components/DetailsComponent.html":{}}}],["ondestroy",{"_index":2493,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["ondragend(event",{"_index":1582,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["one",{"_index":248,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/HandleUnexpectedError-2.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TypeFilterComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["one_second",{"_index":671,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ongoing",{"_index":1133,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["oninit",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["onmousewheel",{"_index":2178,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheel(event",{"_index":2185,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelchrome(event",{"_index":2190,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelfirefox(event",{"_index":2193,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onmousewheelie(event",{"_index":2195,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["onontwo",{"_index":2786,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["onpointerdown(event",{"_index":1563,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointermove(event",{"_index":1567,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onpointerup(event",{"_index":1570,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["onsubmit",{"_index":99,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["opcards",{"_index":1171,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["open",{"_index":1034,"title":{},"body":{"components/CardComponent.html":{}}}],["operation.cards",{"_index":1172,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects",{"_index":569,"title":{},"body":{"interfaces/AppState.html":{}}}],["operation.effects.ts",{"_index":1160,"title":{},"body":{"injectables/CardOperationEffects.html":{},"coverage.html":{}}}],["operation.effects.ts:27",{"_index":1162,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:36",{"_index":1179,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.effects.ts:67",{"_index":1185,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.model",{"_index":1214,"title":{},"body":{"injectables/CardService.html":{}}}],["operation.model.ts",{"_index":2964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["operation.type",{"_index":1169,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operation.type.tostring",{"_index":1170,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["operations",{"_index":1164,"title":{},"body":{"injectables/CardOperationEffects.html":{},"injectables/FeedFiltersEffects.html":{}}}],["operator",{"_index":1872,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["operatorfabric",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["options",{"_index":1874,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["options.hash",{"_index":1905,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["otherwise",{"_index":715,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["ou",{"_index":2576,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["out",{"_index":73,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"modules/FeedModule.html":{},"classes/Filter.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["output",{"_index":1561,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["outputs",{"_index":1539,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{}}}],["over",{"_index":786,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["overview",{"_index":2978,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":2920,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":104,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["pair",{"_index":96,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["paload",{"_index":965,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pan",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["par",{"_index":2572,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["param",{"_index":683,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/Filter.html":{}}}],["parameterlistitem",{"_index":208,"title":{"classes/ParameterListItem.html":{}},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"coverage.html":{}}}],["parameters",{"_index":44,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["parameters['message",{"_index":931,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parametrization",{"_index":1662,"title":{},"body":{"classes/Filter.html":{}}}],["params",{"_index":744,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["params.append('client_secret",{"_index":758,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('clientid",{"_index":750,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('code",{"_index":745,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('grant_type",{"_index":746,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('password",{"_index":757,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('redirect_uri",{"_index":751,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.append('username",{"_index":756,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params.tostring",{"_index":754,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["params['error",{"_index":1000,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["parentmodule",{"_index":2271,"title":{},"body":{"modules/ServicesModule.html":{}}}],["parse",{"_index":2296,"title":{},"body":{"modules/StateModule.html":{}}}],["parsestring",{"_index":2649,"title":{},"body":{"injectables/TimeService.html":{}}}],["parsestring(value",{"_index":2655,"title":{},"body":{"injectables/TimeService.html":{}}}],["party",{"_index":2050,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["pas",{"_index":2592,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["pass",{"_index":1675,"title":{},"body":{"classes/Filter.html":{}}}],["passes",{"_index":1685,"title":{},"body":{"classes/Filter.html":{}}}],["password",{"_index":108,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["past",{"_index":3032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["pathend",{"_index":842,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pathmatch",{"_index":1653,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["payload",{"_index":37,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["payload.access_token",{"_index":822,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid",{"_index":821,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.clientid.tostring",{"_index":803,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expirationdate.gettime().tostring",{"_index":801,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.expires_in",{"_index":816,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.identifier",{"_index":797,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload.password).pipe",{"_index":957,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["payload.token",{"_index":799,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["payload:{cardtimeline",{"_index":224,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"classes/InitTimeline.html":{}}}],["payload:{code",{"_index":92,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["payload:{data",{"_index":223,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"classes/InitTimeline.html":{}}}],["payload:{filters",{"_index":626,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payload:{name",{"_index":622,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{}}}],["payloadforsuccessfulauthentication",{"_index":41,"title":{"classes/PayloadForSuccessfulAuthentication.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{}}}],["payloadforsuccessfulauthentication(jwt[this.loginclaim",{"_index":820,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pertinent",{"_index":1375,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pickarandomitemofanenum",{"_index":2918,"title":{},"body":{"coverage.html":{}}}],["pieces",{"_index":2299,"title":{},"body":{"modules/StateModule.html":{}}}],["pipe",{"_index":905,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"components/IframeDisplayComponent.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{},"index.html":{}}}],["pipe(catcherror",{"_index":909,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["pipe(map(flowmode=>flowmode",{"_index":2124,"title":{},"body":{"components/LoginComponent.html":{}}}],["pipe(map(trans",{"_index":2426,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["pipe(tap(menus",{"_index":2222,"title":{},"body":{"components/NavbarComponent.html":{}}}],["pipes",{"_index":2742,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["pipetransform",{"_index":2750,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["platformlocation",{"_index":1932,"title":{},"body":{"components/IconComponent.html":{}}}],["platformlocation.getbasehreffromdom",{"_index":1955,"title":{},"body":{"components/IconComponent.html":{}}}],["please",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["pluck",{"_index":2014,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["plus48hours",{"_index":1229,"title":{},"body":{"injectables/CardService.html":{}}}],["point",{"_index":1377,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["pointerdown",{"_index":1544,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerdown(event",{"_index":1552,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerevent",{"_index":1553,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove",{"_index":1545,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointermove(event",{"_index":1555,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup",{"_index":1546,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["pointerup(event",{"_index":1557,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["popover",{"_index":2734,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["possible",{"_index":116,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["postdata",{"_index":717,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.append('token",{"_index":720,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["postdata.tostring",{"_index":729,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["pour",{"_index":2566,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["preloadallmodules",{"_index":512,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["present",{"_index":856,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["previous",{"_index":2371,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["previous.pipe",{"_index":2381,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["primary",{"_index":2101,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/RouterStateUrl.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["process",{"_index":177,"title":{"classes/Process.html":{}},"body":{"classes/Action.html":{},"classes/Card.html":{},"classes/Detail.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"coverage.html":{}}}],["process.states[card.state",{"_index":179,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processes",{"_index":2306,"title":{},"body":{"classes/Third.html":{}}}],["processes?:ofmap",{"_index":172,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["processid",{"_index":1018,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["processing",{"_index":1136,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["prodi18npath",{"_index":2889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":3015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":35,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["property",{"_index":1663,"title":{},"body":{"classes/Filter.html":{}}}],["provide",{"_index":508,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":2293,"title":{},"body":{"modules/StateModule.html":{}}}],["providedin",{"_index":1723,"title":{},"body":{"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["providers",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["providers:[{provide:'configretrydelay',usevalue:5000",{"_index":2292,"title":{},"body":{"modules/StateModule.html":{}}}],["public",{"_index":36,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{}}}],["publishdate",{"_index":1013,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["publisher",{"_index":1011,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["publishers",{"_index":2073,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["publisherversion",{"_index":1012,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{}}}],["publisher}.${version}.${name}.${locale",{"_index":1863,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["push",{"_index":94,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["put",{"_index":824,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["query",{"_index":1382,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["querylist",{"_index":1511,"title":{},"body":{"components/DetailsComponent.html":{}}}],["queryparams",{"_index":1372,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["querytemplate",{"_index":1803,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher",{"_index":1823,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querytemplate(publisher:string",{"_index":1860,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["querythird",{"_index":2451,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname",{"_index":2463,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["querythird(thirdname:string",{"_index":2345,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["question",{"_index":1729,"title":{},"body":{"injectables/FilterService.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["r",{"_index":2379,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["rangeend",{"_index":1207,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart",{"_index":1209,"title":{},"body":{"injectables/CardService.html":{}}}],["rangestart:rangestart,rangeend",{"_index":1258,"title":{},"body":{"injectables/CardService.html":{}}}],["reactiveformsmodule",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"classes/ApplyFilter.html":{},"classes/Card.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/EmptyLightCards.html":{},"classes/Filter.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/I18n.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{}}}],["ready",{"_index":947,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["realtimebar",{"_index":2627,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["reason",{"_index":1674,"title":{},"body":{"classes/Filter.html":{}}}],["recipient_filter",{"_index":1750,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["recursion",{"_index":1690,"title":{},"body":{"classes/Filter.html":{}}}],["recursively",{"_index":1689,"title":{},"body":{"classes/Filter.html":{}}}],["redirect",{"_index":879,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["redirectto",{"_index":529,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/FeedRoutingModule.html":{}}}],["reduce",{"_index":2334,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((acc",{"_index":2382,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((ids",{"_index":2409,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reduce((menus:thirdmenu[],menu:thirdmenu",{"_index":2394,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["reducer",{"_index":25,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"interfaces/AppState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{}}}],["regarding",{"_index":855,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registerarrayatindex",{"_index":1804,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerarrayatindexlength",{"_index":1805,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerbool",{"_index":1806,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registercardaction",{"_index":1807,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerdateformat",{"_index":1808,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registered",{"_index":737,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["registeri18n",{"_index":1809,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registermath",{"_index":1810,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernow",{"_index":1811,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registernumberformat",{"_index":1812,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerpreservespace",{"_index":1813,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registerslice",{"_index":1814,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersort",{"_index":1815,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersplit",{"_index":1816,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["registersvg",{"_index":1817,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["reinsertscripts",{"_index":1405,"title":{},"body":{"components/DetailComponent.html":{}}}],["reject",{"_index":70,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["rejectedlogin",{"_index":941,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejection",{"_index":122,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rejectlogin",{"_index":69,"title":{"classes/RejectLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["rejectlogin({error",{"_index":1003,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["rejectloginattempt",{"_index":128,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["related",{"_index":255,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["relevant",{"_index":804,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["reload",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":132,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["removes",{"_index":125,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["rendered",{"_index":1139,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["rendering",{"_index":1448,"title":{},"body":{"components/DetailComponent.html":{}}}],["renvoie",{"_index":2794,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["replication",{"_index":1668,"title":{},"body":{"classes/Filter.html":{}}}],["request",{"_index":1234,"title":{},"body":{"injectables/CardService.html":{},"injectables/ConfigEffects.html":{},"interceptors/TokenInjector.html":{}}}],["request.clone(update",{"_index":2686,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["request.url",{"_index":2680,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["require",{"_index":2895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":3013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"index.html":{}}}],["resetform",{"_index":2109,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetstate",{"_index":870,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["resource",{"_index":1454,"title":{},"body":{"components/DetailComponent.html":{}}}],["resourceurl",{"_index":2365,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["resourceurl}?${versionparam.tostring",{"_index":2369,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["response",{"_index":850,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["responsetype",{"_index":2360,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result",{"_index":135,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.id",{"_index":2437,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result.push(v",{"_index":3045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result.translation[lang",{"_index":2434,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["result:any",{"_index":2431,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["results",{"_index":137,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":3079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retries:number",{"_index":3078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retry",{"_index":1293,"title":{},"body":{"injectables/ConfigEffects.html":{},"interfaces/ConfigState.html":{},"miscellaneous/variables.html":{}}}],["retrydelay",{"_index":1295,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["return",{"_index":180,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/variables.html":{}}}],["return(lkj",{"_index":2799,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["returned",{"_index":1384,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["returns",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"injectables/ConfigService.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["right",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["root",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/GuidService.html":{}}}],["root'},{'name",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["route",{"_index":1385,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["router",{"_index":547,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["router.effects",{"_index":588,"title":{},"body":{"interfaces/AppState.html":{}}}],["router.effects.ts",{"_index":1337,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"coverage.html":{}}}],["router.effects.ts:21",{"_index":1340,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:29",{"_index":1350,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.effects.ts:44",{"_index":1355,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["router.state",{"_index":3085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.state.url",{"_index":3086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router_navigation",{"_index":1356,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routereffects",{"_index":571,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["routerinitialstate",{"_index":609,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":513,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":642,"title":{},"body":{"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigationaction",{"_index":1343,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerreducerstate",{"_index":553,"title":{},"body":{"interfaces/AppState.html":{}}}],["routerstate",{"_index":1370,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate.params['cid",{"_index":1348,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_entry_id",{"_index":1354,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.params['menu_id'],menu_entry_id",{"_index":1353,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstate.root.queryparams",{"_index":1389,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routerstate:any",{"_index":1345,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["routerstateserializer",{"_index":1361,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstatesnapshot",{"_index":1368,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["routerstateurl",{"_index":557,"title":{"classes/RouterStateUrl.html":{}},"body":{"interfaces/AppState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"coverage.html":{}}}],["routerstateurl(url",{"_index":1390,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["routes",{"_index":514,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routes.slice(0",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/FeedModule.html":{},"components/NavbarComponent.html":{},"modules/ThirdpartyModule.html":{}}}],["routing.module.ts",{"_index":511,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArchivesRoutingModule.html":{},"modules/FeedRoutingModule.html":{},"modules/ThirdpartyRoutingModule.html":{}}}],["row",{"_index":2732,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["rows",{"_index":206,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["rte",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["rules",{"_index":878,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["running",{"_index":778,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["rvalue",{"_index":1882,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["rxjs",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"interceptors/TokenInjector.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["rxjs/internal/observable/combinelatest",{"_index":2016,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["rxjs/internal/operators/tap",{"_index":2076,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["rxjs/internal/operators/withlatestfrom",{"_index":2017,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["rxjs/operators",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["safe",{"_index":1453,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl",{"_index":1449,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tolocalestring",{"_index":1457,"title":{},"body":{"components/DetailComponent.html":{}}}],["safecssurl.tostring",{"_index":1455,"title":{},"body":{"components/DetailComponent.html":{}}}],["safehtml",{"_index":1426,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeiframeurl",{"_index":1987,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["saferesourceurl",{"_index":1432,"title":{},"body":{"components/DetailComponent.html":{}}}],["safeurl",{"_index":2013,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["sanitizer",{"_index":1411,"title":{},"body":{"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["save",{"_index":792,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["saveauthenticationinformation(payload",{"_index":795,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["savoir",{"_index":2567,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["scope",{"_index":1670,"title":{},"body":{"classes/Filter.html":{}}}],["scripts",{"_index":1467,"title":{},"body":{"components/DetailComponent.html":{}}}],["scripts.length",{"_index":1470,"title":{},"body":{"components/DetailComponent.html":{}}}],["scriptsinitiallength",{"_index":1469,"title":{},"body":{"components/DetailComponent.html":{}}}],["secret",{"_index":695,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["security",{"_index":1231,"title":{},"body":{"injectables/CardService.html":{}}}],["select",{"_index":247,"title":{},"body":{"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"components/CardComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"components/TimeLineComponent.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["select(feedselectors.selectfilteredfeed",{"_index":1596,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["select(selectconfigloaded",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["select(selectmaxedretries",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["selectactivefiltersarray",{"_index":2872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectauthenticationstate",{"_index":2863,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcardstate",{"_index":2865,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcardstateselected",{"_index":2866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcardstateselecteddetails",{"_index":2867,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcardstateselectedid",{"_index":1047,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcode",{"_index":980,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconfig",{"_index":2869,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconfigdata",{"_index":2870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconfigloaded",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconfigretry",{"_index":1312,"title":{},"body":{"injectables/ConfigEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrenturl",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectdetail",{"_index":1499,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selectdetail(detail",{"_index":1508,"title":{},"body":{"components/DetailsComponent.html":{}}}],["selected",{"_index":1126,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/CardState.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["selected_menu_entry_id",{"_index":2159,"title":{},"body":{"interfaces/MenuState.html":{},"miscellaneous/variables.html":{}}}],["selected_menu_id",{"_index":2160,"title":{},"body":{"interfaces/MenuState.html":{},"miscellaneous/variables.html":{}}}],["selectedcardid",{"_index":1125,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"miscellaneous/variables.html":{}}}],["selectedcardid:string",{"_index":267,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{}}}],["selectedthirdmenu",{"_index":1984,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedthirdmenuentry",{"_index":1985,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedthirdmenuentry.url",{"_index":2036,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedurl",{"_index":2031,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["selectedvalues",{"_index":209,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["selectexpirationtime",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectfilter",{"_index":2873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectfilteredfeed",{"_index":2874,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selection",{"_index":1156,"title":{},"body":{"components/CardListComponent.html":{},"components/FeedComponent.html":{},"components/NoSelectionComponent.html":{}}}],["selection'},{'name",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selection.component",{"_index":1619,"title":{},"body":{"modules/FeedModule.html":{}}}],["selection.component.html",{"_index":2240,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts",{"_index":2239,"title":{},"body":{"components/NoSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:14",{"_index":2241,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":2242,"title":{},"body":{"components/NoSelectionComponent.html":{}}}],["selection/no",{"_index":1618,"title":{},"body":{"modules/FeedModule.html":{},"components/NoSelectionComponent.html":{},"coverage.html":{}}}],["selections",{"_index":2728,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["selectlastcards",{"_index":2875,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectlastcardsselection",{"_index":2882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectlightcard",{"_index":246,"title":{"classes/SelectLightCard.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CustomRouterEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["selectlightcard({selectedcardid",{"_index":1349,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["selectlightcardselection",{"_index":2876,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectlightcardsstate",{"_index":2877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmaxedretries",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmenustate",{"_index":2879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmenustatemenu",{"_index":2009,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmenustateselectedmenuentryid",{"_index":2010,"title":{},"body":{"components/IframeDisplayComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmenustateselectedmenuid",{"_index":2011,"title":{},"body":{"components/IframeDisplayComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectmessage",{"_index":2121,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["selectrouterstate",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttimelineselection",{"_index":2883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttimelinestate",{"_index":2884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["send",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["separate",{"_index":2021,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["sequentially",{"_index":1694,"title":{},"body":{"classes/Filter.html":{}}}],["serialize",{"_index":1363,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["serialize(routerstate",{"_index":1367,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["serializer",{"_index":2289,"title":{},"body":{"modules/StateModule.html":{}}}],["service",{"_index":97,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["services/authentication.service",{"_index":977,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["services/handlebars.service",{"_index":1277,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{}}}],["services/thirds.service",{"_index":1276,"title":{},"body":{"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{}}}],["servicesmodule",{"_index":459,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"index.html":{},"modules.html":{}}}],["servicesmodule.forroot",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":1523,"title":{},"body":{"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["set(\"locale",{"_index":2358,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["set(\"version",{"_index":2355,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["setheaders",{"_index":2685,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["settimeout",{"_index":1463,"title":{},"body":{"components/DetailComponent.html":{},"components/DetailsComponent.html":{}}}],["settimeout(()=>this.expandedmenu[index]=false,5000",{"_index":2230,"title":{},"body":{"components/NavbarComponent.html":{}}}],["severity",{"_index":1016,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/FilterService.html":{},"components/TimeLineComponent.html":{},"miscellaneous/enumerations.html":{}}}],["severity.action",{"_index":1728,"title":{},"body":{"injectables/FilterService.html":{}}}],["severity.alarm",{"_index":1727,"title":{},"body":{"injectables/FilterService.html":{}}}],["severity.notification",{"_index":1732,"title":{},"body":{"injectables/FilterService.html":{}}}],["severity.question",{"_index":1730,"title":{},"body":{"injectables/FilterService.html":{}}}],["short",{"_index":2769,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["shortdate",{"_index":2779,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["shorttime",{"_index":2781,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["showgridlines",{"_index":2626,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["si",{"_index":2568,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["simplechanges",{"_index":1505,"title":{},"body":{"components/DetailsComponent.html":{}}}],["size",{"_index":1072,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{}}}],["size:string",{"_index":1950,"title":{},"body":{"components/IconComponent.html":{}}}],["skipself",{"_index":2265,"title":{},"body":{"modules/ServicesModule.html":{}}}],["small",{"_index":1070,"title":{},"body":{"components/CardComponent.html":{},"components/IconComponent.html":{}}}],["small:boolean",{"_index":1945,"title":{},"body":{"components/IconComponent.html":{}}}],["snapshot",{"_index":1376,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{}}}],["solid",{"_index":502,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{}}}],["sortbystartdate",{"_index":2885,"title":{},"body":{"coverage.html":{}}}],["sortbystartdate(card1",{"_index":1144,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{}}}],["sortcomparer:sortbystartdate",{"_index":1149,"title":{},"body":{"interfaces/CardFeedState.html":{},"interfaces/TimelineState.html":{},"miscellaneous/variables.html":{}}}],["sortonkey",{"_index":2817,"title":{},"body":{"coverage.html":{}}}],["sortonkey(key",{"_index":1913,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sound",{"_index":2973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"modules/CardsModule.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"dependencies.html":{}}}],["spec\\.ts",{"_index":3014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["splitvalue",{"_index":1878,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["sprites",{"_index":1928,"title":{},"body":{"components/IconComponent.html":{}}}],["sprites:string",{"_index":1951,"title":{},"body":{"components/IconComponent.html":{}}}],["src/.../authentication.actions.ts",{"_index":2960,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../authentication.reducer.ts",{"_index":2999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.selectors.ts",{"_index":3006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.ts",{"_index":2969,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../authentication.state.ts",{"_index":2991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card",{"_index":2963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.actions.ts",{"_index":2961,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../card.model.ts",{"_index":2975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../card.reducer.ts",{"_index":3000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card.selectors.ts",{"_index":3007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card.state.ts",{"_index":2992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.actions.ts",{"_index":2965,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../config.selectors.ts",{"_index":3008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.state.ts",{"_index":2993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.vps.ts",{"_index":2995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../feed.actions.ts",{"_index":2966,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../feed.selectors.ts",{"_index":3005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../feed.state.ts",{"_index":2998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../filter.service.ts",{"_index":2967,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../index.ts",{"_index":2990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../light",{"_index":2968,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.actions.ts",{"_index":2970,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../menu.reducer.ts",{"_index":3001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.selectors.ts",{"_index":3011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../menu.state.ts",{"_index":3004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.model.ts",{"_index":2971,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../router.selectors.ts",{"_index":3010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../router.state.ts",{"_index":3003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../thirds.model.ts",{"_index":2959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../timeline.actions.ts",{"_index":2974,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../timeline.selectors.ts",{"_index":3009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../timeline.state.ts",{"_index":3012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../translate.config.ts",{"_index":3002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":510,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:27",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/icon/icon.component.ts",{"_index":1923,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["src/app/components/icon/icon.component.ts:18",{"_index":1936,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:19",{"_index":1939,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:20",{"_index":1938,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:21",{"_index":1934,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:22",{"_index":1935,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:23",{"_index":1937,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:24",{"_index":1941,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:25",{"_index":1942,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:26",{"_index":1933,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/icon/icon.component.ts:32",{"_index":1940,"title":{},"body":{"components/IconComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":2099,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:27",{"_index":2115,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:28",{"_index":2119,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:29",{"_index":2117,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":2116,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:32",{"_index":2110,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":2112,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:51",{"_index":2113,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":2114,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:63",{"_index":2111,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":2203,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:27",{"_index":2216,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":2217,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":2215,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":2214,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":2209,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:36",{"_index":2211,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:50",{"_index":2210,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:54",{"_index":2219,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:58",{"_index":2213,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/model/card",{"_index":2976,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts",{"_index":1009,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/card.model.ts:12",{"_index":1022,"title":{},"body":{"classes/Card.html":{}}}],["src/app/model/card.model.ts:41",{"_index":1396,"title":{},"body":{"classes/Detail.html":{}}}],["src/app/model/feed",{"_index":1657,"title":{},"body":{"classes/Filter.html":{},"coverage.html":{}}}],["src/app/model/i18n.model.ts",{"_index":1920,"title":{},"body":{"classes/I18n.html":{},"coverage.html":{}}}],["src/app/model/i18n.model.ts:10",{"_index":1922,"title":{},"body":{"classes/I18n.html":{}}}],["src/app/model/light",{"_index":2977,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/model/map.ts",{"_index":2144,"title":{},"body":{"classes/Map.html":{},"coverage.html":{}}}],["src/app/model/map.ts:8",{"_index":2147,"title":{},"body":{"classes/Map.html":{}}}],["src/app/model/message.model.ts",{"_index":2164,"title":{},"body":{"classes/Message.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/message.model.ts:10",{"_index":2167,"title":{},"body":{"classes/Message.html":{}}}],["src/app/model/thirds.model.ts",{"_index":140,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/model/thirds.model.ts:115",{"_index":2244,"title":{},"body":{"classes/ParameterListItem.html":{}}}],["src/app/model/thirds.model.ts:18",{"_index":2309,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:29",{"_index":2312,"title":{},"body":{"classes/ThirdMenuEntry.html":{}}}],["src/app/model/thirds.model.ts:38",{"_index":2311,"title":{},"body":{"classes/ThirdMenu.html":{}}}],["src/app/model/thirds.model.ts:47",{"_index":2252,"title":{},"body":{"classes/Process.html":{}}}],["src/app/model/thirds.model.ts:5",{"_index":2307,"title":{},"body":{"classes/Third.html":{}}}],["src/app/model/thirds.model.ts:54",{"_index":2275,"title":{},"body":{"classes/State.html":{}}}],["src/app/model/thirds.model.ts:69",{"_index":156,"title":{},"body":{"classes/Action.html":{}}}],["src/app/model/thirds.model.ts:98",{"_index":2060,"title":{},"body":{"classes/Input.html":{}}}],["src/app/modules/archives/archives",{"_index":641,"title":{},"body":{"modules/ArchivesRoutingModule.html":{}}}],["src/app/modules/archives/archives.component.ts",{"_index":628,"title":{},"body":{"components/ArchivesComponent.html":{},"coverage.html":{}}}],["src/app/modules/archives/archives.component.ts:15",{"_index":631,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.component.ts:19",{"_index":632,"title":{},"body":{"components/ArchivesComponent.html":{}}}],["src/app/modules/archives/archives.module.ts",{"_index":639,"title":{},"body":{"modules/ArchivesModule.html":{}}}],["src/app/modules/cards/cards.module.ts",{"_index":1267,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/cards.module.ts:28",{"_index":1269,"title":{},"body":{"modules/CardsModule.html":{}}}],["src/app/modules/cards/components/card",{"_index":1082,"title":{},"body":{"components/CardDetailsComponent.html":{},"coverage.html":{}}}],["src/app/modules/cards/components/card/card.component.ts",{"_index":1030,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:24",{"_index":1040,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:25",{"_index":1039,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:26",{"_index":1043,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:27",{"_index":1038,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:35",{"_index":1042,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:40",{"_index":1041,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/card/card.component.ts:53",{"_index":1045,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts",{"_index":1397,"title":{},"body":{"components/DetailComponent.html":{},"coverage.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:104",{"_index":1419,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:21",{"_index":1427,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:22",{"_index":1415,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:23",{"_index":1414,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:24",{"_index":1429,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:25",{"_index":1413,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:33",{"_index":1424,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:38",{"_index":1423,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:53",{"_index":1422,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:69",{"_index":1431,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:73",{"_index":1425,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/detail/detail.component.ts:88",{"_index":1421,"title":{},"body":{"components/DetailComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts",{"_index":1494,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:18",{"_index":1513,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:19",{"_index":1502,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:20",{"_index":1501,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:25",{"_index":1503,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:34",{"_index":1510,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:44",{"_index":1509,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:53",{"_index":1514,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/components/details/details.component.ts:57",{"_index":1506,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts",{"_index":1800,"title":{},"body":{"injectables/HandlebarsService.html":{},"coverage.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:103",{"_index":1831,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:117",{"_index":1825,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:123",{"_index":1835,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:140",{"_index":1836,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:182",{"_index":1830,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:208",{"_index":1838,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:226",{"_index":1828,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:23",{"_index":1820,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:240",{"_index":1829,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:248",{"_index":1833,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:255",{"_index":1832,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:262",{"_index":1834,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:44",{"_index":1822,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:49",{"_index":1824,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:62",{"_index":1827,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:91",{"_index":1826,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/cards/services/handlebars.service.ts:97",{"_index":1837,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["src/app/modules/feed/components/card",{"_index":1152,"title":{},"body":{"components/CardListComponent.html":{},"components/FiltersComponent.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["src/app/modules/feed/components/custom",{"_index":2819,"title":{},"body":{"coverage.html":{}}}],["src/app/modules/feed/components/init",{"_index":2823,"title":{},"body":{"coverage.html":{}}}],["src/app/modules/feed/components/no",{"_index":2238,"title":{},"body":{"components/NoSelectionComponent.html":{},"coverage.html":{}}}],["src/app/modules/feed/components/time",{"_index":1534,"title":{},"body":{"directives/DraggableDirective.html":{},"directives/MouseWheelDirective.html":{},"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{}}}],["src/app/modules/feed/feed",{"_index":1649,"title":{},"body":{"modules/FeedRoutingModule.html":{}}}],["src/app/modules/feed/feed.component.ts",{"_index":1585,"title":{},"body":{"components/FeedComponent.html":{},"coverage.html":{}}}],["src/app/modules/feed/feed.component.ts:23",{"_index":1591,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:24",{"_index":1588,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:29",{"_index":1590,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.component.ts:38",{"_index":1589,"title":{},"body":{"components/FeedComponent.html":{}}}],["src/app/modules/feed/feed.module.ts",{"_index":1614,"title":{},"body":{"modules/FeedModule.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts",{"_index":1975,"title":{},"body":{"components/IframeDisplayComponent.html":{},"coverage.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:101",{"_index":1993,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:30",{"_index":1996,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:31",{"_index":1995,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:32",{"_index":1988,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:38",{"_index":1994,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:69",{"_index":1998,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:73",{"_index":2000,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:77",{"_index":2002,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:81",{"_index":2004,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:85",{"_index":2006,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:89",{"_index":2008,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/iframedisplay.component.ts:95",{"_index":1991,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["src/app/modules/thirdparty/thirdparty",{"_index":2320,"title":{},"body":{"modules/ThirdpartyRoutingModule.html":{}}}],["src/app/modules/thirdparty/thirdparty.module.ts",{"_index":2318,"title":{},"body":{"modules/ThirdpartyModule.html":{}}}],["src/app/services/authentication.service.ts",{"_index":644,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/authentication.service.ts:272",{"_index":650,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:275",{"_index":652,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:276",{"_index":654,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:277",{"_index":653,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:278",{"_index":655,"title":{},"body":{"classes/AuthObject.html":{}}}],["src/app/services/authentication.service.ts:287",{"_index":1280,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:289",{"_index":1283,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:290",{"_index":1282,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/authentication.service.ts:291",{"_index":1281,"title":{},"body":{"classes/CheckTokenResponse.html":{}}}],["src/app/services/card.service.ts",{"_index":1188,"title":{},"body":{"injectables/CardService.html":{},"coverage.html":{}}}],["src/app/services/card.service.ts:20",{"_index":1211,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:21",{"_index":1210,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:22",{"_index":1197,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:30",{"_index":1204,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:34",{"_index":1202,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:44",{"_index":1205,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:48",{"_index":1200,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/card.service.ts:72",{"_index":1208,"title":{},"body":{"injectables/CardService.html":{}}}],["src/app/services/config.service.ts",{"_index":1322,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/services/config.service.ts:18",{"_index":1325,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/config.service.ts:24",{"_index":1326,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/services/filter.service.ts",{"_index":1710,"title":{},"body":{"injectables/FilterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/filter.service.ts:17",{"_index":1716,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:23",{"_index":1722,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:28",{"_index":1720,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:52",{"_index":1718,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:60",{"_index":1719,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/filter.service.ts:82",{"_index":1717,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/services/guid.service.ts",{"_index":1757,"title":{},"body":{"classes/GuidService.html":{},"coverage.html":{}}}],["src/app/services/guid.service.ts:16",{"_index":1760,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:22",{"_index":1761,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/guid.service.ts:26",{"_index":1762,"title":{},"body":{"classes/GuidService.html":{}}}],["src/app/services/interceptors.service.ts",{"_index":2666,"title":{},"body":{"interceptors/TokenInjector.html":{},"coverage.html":{}}}],["src/app/services/interceptors.service.ts:14",{"_index":2670,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:20",{"_index":2676,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/interceptors.service.ts:25",{"_index":2673,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["src/app/services/services.module.ts",{"_index":2263,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/services.module.ts:42",{"_index":2264,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/app/services/thirds.service.ts",{"_index":2323,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{}}}],["src/app/services/thirds.service.ts:109",{"_index":2455,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:123",{"_index":2460,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:129",{"_index":2462,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:136",{"_index":2466,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:188",{"_index":2467,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:193",{"_index":2327,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:197",{"_index":2329,"title":{},"body":{"classes/ThirdsI18nLoader.html":{}}}],["src/app/services/thirds.service.ts:23",{"_index":2470,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:24",{"_index":2468,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:25",{"_index":2469,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:26",{"_index":2471,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:27",{"_index":2453,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:38",{"_index":2464,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:51",{"_index":2458,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:59",{"_index":2456,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:69",{"_index":2454,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/thirds.service.ts:76",{"_index":2457,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["src/app/services/time.service.ts",{"_index":2646,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["src/app/services/time.service.ts:12",{"_index":2650,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:17",{"_index":2653,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:21",{"_index":2656,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/services/time.service.ts:25",{"_index":2652,"title":{},"body":{"injectables/TimeService.html":{}}}],["src/app/store/actions/authentication.actions.ts",{"_index":6,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/authentication.actions.ts:109",{"_index":2254,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:112",{"_index":2255,"title":{},"body":{"classes/RejectLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:126",{"_index":138,"title":{},"body":{"classes/AcceptLogOut.html":{}}}],["src/app/store/actions/authentication.actions.ts:142",{"_index":139,"title":{},"body":{"classes/AcceptLogOutSuccess.html":{}}}],["src/app/store/actions/authentication.actions.ts:26",{"_index":2246,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:27",{"_index":2249,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:28",{"_index":2247,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:29",{"_index":2250,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:30",{"_index":2248,"title":{},"body":{"classes/PayloadForSuccessfulAuthentication.html":{}}}],["src/app/store/actions/authentication.actions.ts:39",{"_index":2054,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:41",{"_index":2055,"title":{},"body":{"classes/InitAuthStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:50",{"_index":1278,"title":{},"body":{"classes/CheckAuthenticationStatus.html":{}}}],["src/app/store/actions/authentication.actions.ts:65",{"_index":43,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:68",{"_index":48,"title":{},"body":{"classes/AcceptLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:78",{"_index":2687,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:81",{"_index":2688,"title":{},"body":{"classes/TryToLogIn.html":{}}}],["src/app/store/actions/authentication.actions.ts:92",{"_index":2689,"title":{},"body":{"classes/TryToLogOut.html":{}}}],["src/app/store/actions/card.actions.ts",{"_index":1284,"title":{},"body":{"classes/ClearCard.html":{},"classes/HandleUnexpectedError.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/card.actions.ts:20",{"_index":1286,"title":{},"body":{"classes/ClearCard.html":{}}}],["src/app/store/actions/card.actions.ts:23",{"_index":2077,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:26",{"_index":2078,"title":{},"body":{"classes/LoadCard.html":{}}}],["src/app/store/actions/card.actions.ts:29",{"_index":2079,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:32",{"_index":2080,"title":{},"body":{"classes/LoadCardFailure.html":{}}}],["src/app/store/actions/card.actions.ts:36",{"_index":2081,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:39",{"_index":2082,"title":{},"body":{"classes/LoadCardSuccess.html":{}}}],["src/app/store/actions/card.actions.ts:44",{"_index":1767,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/card.actions.ts:47",{"_index":1768,"title":{},"body":{"classes/HandleUnexpectedError.html":{}}}],["src/app/store/actions/config.actions.ts",{"_index":1769,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/config.actions.ts:18",{"_index":2083,"title":{},"body":{"classes/LoadConfig.html":{}}}],["src/app/store/actions/config.actions.ts:21",{"_index":2084,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:24",{"_index":2085,"title":{},"body":{"classes/LoadConfigFailure.html":{}}}],["src/app/store/actions/config.actions.ts:29",{"_index":2086,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:32",{"_index":2087,"title":{},"body":{"classes/LoadConfigSuccess.html":{}}}],["src/app/store/actions/config.actions.ts:38",{"_index":1770,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/config.actions.ts:40",{"_index":1771,"title":{},"body":{"classes/HandleUnexpectedError-1.html":{}}}],["src/app/store/actions/feed.actions.ts",{"_index":611,"title":{},"body":{"classes/ApplyFilter.html":{},"classes/InitFilters.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/feed.actions.ts:18",{"_index":612,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:20",{"_index":613,"title":{},"body":{"classes/ApplyFilter.html":{}}}],["src/app/store/actions/feed.actions.ts:24",{"_index":2056,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/feed.actions.ts:27",{"_index":2057,"title":{},"body":{"classes/InitFilters.html":{}}}],["src/app/store/actions/light",{"_index":227,"title":{},"body":{"classes/AddLightCardFailure.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts",{"_index":1781,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/menu.actions.ts:20",{"_index":2094,"title":{},"body":{"classes/LoadMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:27",{"_index":2095,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:30",{"_index":2096,"title":{},"body":{"classes/LoadMenuFailure.html":{}}}],["src/app/store/actions/menu.actions.ts:35",{"_index":2097,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:38",{"_index":2098,"title":{},"body":{"classes/LoadMenuSuccess.html":{}}}],["src/app/store/actions/menu.actions.ts:43",{"_index":1782,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["src/app/store/actions/menu.actions.ts:46",{"_index":1783,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{}}}],["src/app/store/actions/menu.actions.ts:56",{"_index":2739,"title":{},"body":{"classes/UpdateSelectedMenu.html":{}}}],["src/app/store/actions/menu.actions.ts:59",{"_index":2740,"title":{},"body":{"classes/UpdateSelectedMenu.html":{}}}],["src/app/store/actions/timeline.actions.ts",{"_index":212,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"classes/InitTimeline.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/store/actions/timeline.actions.ts:16",{"_index":2058,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:17",{"_index":2059,"title":{},"body":{"classes/InitTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:21",{"_index":214,"title":{},"body":{"classes/AddCardDataTimeline.html":{}}}],["src/app/store/actions/timeline.actions.ts:22",{"_index":215,"title":{},"body":{"classes/AddCardDataTimeline.html":{}}}],["src/app/store/effects/authentication.effects.ts",{"_index":866,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/authentication.effects.ts:110",{"_index":972,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:119",{"_index":889,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:136",{"_index":896,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:155",{"_index":951,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:179",{"_index":935,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:224",{"_index":884,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:246",{"_index":887,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:40",{"_index":874,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:61",{"_index":945,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/authentication.effects.ts:83",{"_index":959,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["src/app/store/effects/card",{"_index":1159,"title":{},"body":{"injectables/CardOperationEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/card.effects.ts",{"_index":1105,"title":{},"body":{"injectables/CardEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/card.effects.ts:20",{"_index":1107,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/card.effects.ts:30",{"_index":1114,"title":{},"body":{"injectables/CardEffects.html":{}}}],["src/app/store/effects/config.effects.ts",{"_index":1292,"title":{},"body":{"injectables/ConfigEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/config.effects.ts:21",{"_index":1296,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:54",{"_index":1302,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/config.effects.ts:71",{"_index":1305,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["src/app/store/effects/custom",{"_index":1336,"title":{},"body":{"injectables/CustomRouterEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/feed",{"_index":1600,"title":{},"body":{"injectables/FeedFiltersEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/light",{"_index":2061,"title":{},"body":{"injectables/LightCardEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/menu.effects.ts",{"_index":2148,"title":{},"body":{"injectables/MenuEffects.html":{},"coverage.html":{}}}],["src/app/store/effects/menu.effects.ts:19",{"_index":2149,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/effects/menu.effects.ts:29",{"_index":2157,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["src/app/store/index.ts",{"_index":544,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/reducers/authentication.reducer.ts",{"_index":2849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/reducers/card.reducer.ts",{"_index":2855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/reducers/config.reducer.ts",{"_index":2857,"title":{},"body":{"coverage.html":{}}}],["src/app/store/reducers/light",{"_index":2858,"title":{},"body":{"coverage.html":{}}}],["src/app/store/reducers/menu.reducer.ts",{"_index":2860,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/reducers/timeline.reducer.ts",{"_index":2861,"title":{},"body":{"coverage.html":{}}}],["src/app/store/selectors/authentication.selectors.ts",{"_index":2862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/card.selectors.ts",{"_index":2864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/config.selectors.ts",{"_index":2868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/feed.selectors.ts",{"_index":2871,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/menu.selectors.ts",{"_index":2878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/router.selectors.ts",{"_index":2880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/selectors/timeline.selectors.ts",{"_index":2881,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/state.module.ts",{"_index":2278,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/state.module.ts:33",{"_index":2279,"title":{},"body":{"modules/StateModule.html":{}}}],["src/app/store/states/authentication.state.ts",{"_index":862,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/card.state.ts",{"_index":1259,"title":{},"body":{"interfaces/CardState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/config.state.ts",{"_index":1333,"title":{},"body":{"interfaces/ConfigState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/feed.state.ts",{"_index":1122,"title":{},"body":{"interfaces/CardFeedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/menu.state.ts",{"_index":2158,"title":{},"body":{"interfaces/MenuState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/router.state.ts",{"_index":1360,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/states/router.state.ts:37",{"_index":2257,"title":{},"body":{"classes/RouterStateUrl.html":{}}}],["src/app/store/states/router.state.ts:48",{"_index":1369,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/router.state.ts:55",{"_index":1366,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{}}}],["src/app/store/states/timeline.state.ts",{"_index":2663,"title":{},"body":{"interfaces/TimelineState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/translate.config.ts",{"_index":2886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":2890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.vps.ts",{"_index":2892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":2893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tests/helpers.ts",{"_index":2896,"title":{},"body":{"coverage.html":{}}}],["src/tests/mocks/thirds.service.mock.ts",{"_index":2473,"title":{},"body":{"classes/ThirdsServiceMock.html":{},"coverage.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:14",{"_index":2475,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["src/tests/mocks/thirds.service.mock.ts:5",{"_index":2474,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["sse",{"_index":1233,"title":{},"body":{"injectables/CardService.html":{}}}],["start",{"_index":2543,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{}}}],["startdate",{"_index":1014,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"components/TimeLineComponent.html":{}}}],["startdomain",{"_index":2578,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":2579,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain.valueof",{"_index":2630,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2",{"_index":2589,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.hours(0",{"_index":2598,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.hours(0).minutes(0).seconds(0).millisecond(0",{"_index":2590,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.startof('month",{"_index":2591,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.subtract(2",{"_index":2594,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain2.valueof",{"_index":2633,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3",{"_index":2606,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.hours(0",{"_index":2608,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.startof('month",{"_index":2607,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startdomain3.valueof",{"_index":2635,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["startyear",{"_index":2755,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["startyear.valueof",{"_index":2773,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["state",{"_index":11,"title":{"classes/State.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardDetailsComponent.html":{},"interfaces/CardFeedState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"classes/Filter.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["state.actions[actionid",{"_index":1476,"title":{},"body":{"components/DetailComponent.html":{}}}],["state.card",{"_index":3063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.children",{"_index":1393,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.config",{"_index":3071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.data",{"_index":3082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.expirationdate",{"_index":3027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.feed",{"_index":3057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.filters",{"_index":3048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.identifier",{"_index":3033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.lastcards",{"_index":3054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.menu",{"_index":3088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.params",{"_index":1391,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["state.selectedcardid",{"_index":3035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.timeline",{"_index":3083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.token",{"_index":3034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state:appstate",{"_index":3056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":2802,"title":{},"body":{"coverage.html":{}}}],["statemodule",{"_index":460,"title":{"modules/StateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StateModule.html":{},"index.html":{},"modules.html":{}}}],["statemodule.forroot",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["states",{"_index":2253,"title":{},"body":{"classes/Process.html":{}}}],["states?:ofmap",{"_index":189,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["static",{"_index":202,"title":{},"body":{"classes/Action.html":{},"classes/AuthObject.html":{},"modules/CardsModule.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"modules/ServicesModule.html":{},"classes/State.html":{},"modules/StateModule.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["status",{"_index":62,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"components/TimeFilterComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["status.action",{"_index":1735,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.alarm",{"_index":1733,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.end",{"_index":1740,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.notification",{"_index":1737,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.question",{"_index":1736,"title":{},"body":{"injectables/FilterService.html":{}}}],["status.start",{"_index":1739,"title":{},"body":{"injectables/FilterService.html":{}}}],["still",{"_index":777,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"directives/DraggableDirective.html":{}}}],["stillvalid",{"_index":784,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["stops",{"_index":1691,"title":{},"body":{"classes/Filter.html":{}}}],["store",{"_index":115,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"injectables/LightCardEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"modules/StateModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"dependencies.html":{}}}],["store.select(buildconfigselector('security",{"_index":687,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["store/index",{"_index":2335,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["storeconfig",{"_index":606,"title":{},"body":{"interfaces/AppState.html":{},"modules/StateModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":775,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/variables.html":{}}}],["storedevtoolsmodule",{"_index":2282,"title":{},"body":{"modules/StateModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":2291,"title":{},"body":{"modules/StateModule.html":{}}}],["storefreeze",{"_index":563,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["storemodule",{"_index":2280,"title":{},"body":{"modules/StateModule.html":{}}}],["storemodule.forroot(appreducer",{"_index":2286,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule",{"_index":2285,"title":{},"body":{"modules/StateModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":2287,"title":{},"body":{"modules/StateModule.html":{}}}],["string",{"_index":79,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/Input.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/Map.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/variables.html":{}}}],["string):observable",{"_index":1861,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["string,string],thirdmenu",{"_index":2030,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["structure",{"_index":2295,"title":{},"body":{"modules/StateModule.html":{}}}],["style",{"_index":1443,"title":{},"body":{"components/DetailComponent.html":{}}}],["stylename",{"_index":2362,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["styles",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/TypeFilterComponent.html":{}}}],["styleurls",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/FeedComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/TypeFilterComponent.html":{}}}],["sub",{"_index":701,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subject",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"injectables/CardService.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["submitted",{"_index":966,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["subscribe",{"_index":1161,"title":{},"body":{"injectables/CardOperationEffects.html":{},"components/DetailComponent.html":{}}}],["subscribe((maxedretries=>this.maxedretries=maxedretries",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(card",{"_index":1094,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribe(form",{"_index":2539,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["subscribe(isauth",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(loaded",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe(m=>this.loginmessage=m",{"_index":2127,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(oauth2conf",{"_index":688,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["subscribe(open=>this.open",{"_index":1058,"title":{},"body":{"components/CardComponent.html":{}}}],["subscribe(provider=>this.codeprovider={name:provider",{"_index":2129,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscribe(third",{"_index":1102,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["subscribetoloadi18n",{"_index":2452,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["subscribetoloadi18n(observable",{"_index":2408,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["subscription",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["subtitle",{"_index":1074,"title":{},"body":{"components/CardComponent.html":{}}}],["success",{"_index":76,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AddLightCardFailure.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["success/message",{"_index":1304,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["such",{"_index":794,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["summary",{"_index":1020,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["support",{"_index":2984,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":498,"title":{},"body":{"modules/AppModule.html":{},"modules/FeedModule.html":{},"dependencies.html":{},"modules.html":{}}}],["svgpanzoom(document.getelementbyid('${svguid",{"_index":1894,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["swimlane/ngx",{"_index":1633,"title":{},"body":{"modules/FeedModule.html":{},"dependencies.html":{}}}],["switch",{"_index":990,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{}}}],["switch(operator",{"_index":1883,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["switch_list",{"_index":200,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":907,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(([payload",{"_index":911,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action",{"_index":954,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["switchmap((action:loadlightcardssuccess",{"_index":2066,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["switchmap((af:applyfilter",{"_index":1183,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["switchmap((ids:string",{"_index":2412,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["switchmap(action",{"_index":1109,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"injectables/MenuEffects.html":{}}}],["switchmap(menu=>zip(of(menu),this.service.loadi18nformenuentries(menu",{"_index":2152,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["switchmap(ts=>from(ts",{"_index":2387,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["system",{"_index":126,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["t",{"_index":2146,"title":{},"body":{"classes/Map.html":{}}}],["t.i18nlabelkey",{"_index":2392,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.menuentries",{"_index":2393,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["t.version",{"_index":2391,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tab",{"_index":1522,"title":{},"body":{"components/DetailsComponent.html":{}}}],["tab.active",{"_index":1521,"title":{},"body":{"components/DetailsComponent.html":{}}}],["table",{"_index":2729,"title":{},"body":{"components/TypeFilterComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2919,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1528,"title":{},"body":{"components/DetailsComponent.html":{}}}],["take",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationEffects.html":{},"classes/Filter.html":{}}}],["takes",{"_index":1374,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/Filter.html":{},"classes/RouterStateUrl.html":{}}}],["takeuntil",{"_index":1186,"title":{},"body":{"injectables/CardOperationEffects.html":{},"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe",{"_index":2534,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["takeuntil(this.ngunsubscribe$)).subscribe",{"_index":2532,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["takeuntil(this.service.unsubscribe",{"_index":1167,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["tap",{"_index":661,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(authenticationservice.saveauthenticationinformation",{"_index":765,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["tap(t=>object.setprototypeof(t,third.prototype",{"_index":2352,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(t=>this.templatecache[key]=t",{"_index":1869,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["tap(t=>this.thirdcache.set(key,t",{"_index":2353,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tap(test=>console.log(`loaded",{"_index":2068,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["tells",{"_index":898,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["template",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templatecache",{"_index":1801,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatecache:map",{"_index":1841,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["templatename",{"_index":1029,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"injectables/HandlebarsService.html":{}}}],["templates",{"_index":2302,"title":{},"body":{"classes/Third.html":{}}}],["templates?:string",{"_index":168,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["templateurl",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["templateurl:'icon.component.html",{"_index":1943,"title":{},"body":{"components/IconComponent.html":{}}}],["terms",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{}}}],["test",{"_index":859,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["test_filter",{"_index":1752,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["text",{"_index":197,"title":{},"body":{"classes/Action.html":{},"components/CardComponent.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/enumerations.html":{}}}],["that.time.currenttime().valueof",{"_index":1908,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["third",{"_index":164,"title":{"classes/Third.html":{}},"body":{"classes/Action.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{}}}],["third,html",{"_index":1460,"title":{},"body":{"components/DetailComponent.html":{}}}],["third.extractstate(this.card",{"_index":1103,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["thirdcache",{"_index":2341,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu",{"_index":185,"title":{"classes/ThirdMenu.html":{}},"body":{"classes/Action.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/Input.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"interfaces/MenuState.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"classes/ThirdsServiceMock.html":{},"classes/UpdateSelectedMenu.html":{},"coverage.html":{}}}],["thirdmenu('t1",{"_index":2477,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu('t2",{"_index":2485,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenu(t.name",{"_index":2390,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdmenu.entries.filter((menuentry",{"_index":2047,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["thirdmenu.id",{"_index":2046,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["thirdmenuentry",{"_index":182,"title":{"classes/ThirdMenuEntry.html":{}},"body":{"classes/Action.html":{},"components/IframeDisplayComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsServiceMock.html":{},"coverage.html":{}}}],["thirdmenuentry('id1",{"_index":2479,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id2",{"_index":2482,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenuentry('id3",{"_index":2487,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["thirdmenus",{"_index":1990,"title":{},"body":{"components/IframeDisplayComponent.html":{},"components/NavbarComponent.html":{}}}],["thirdmenus.filter((thirdmenu",{"_index":2045,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["thirdname",{"_index":2465,"title":{},"body":{"injectables/ThirdsService.html":{}}}],["thirdname}.${version",{"_index":2347,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdparty",{"_index":527,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ThirdpartyModule.html":{}}}],["thirdpartymodule",{"_index":2313,"title":{"modules/ThirdpartyModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"index.html":{},"modules.html":{}}}],["thirdpartyroutingmodule",{"_index":2317,"title":{"modules/ThirdpartyRoutingModule.html":{}},"body":{"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["thirds",{"_index":1409,"title":{},"body":{"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"miscellaneous/variables.html":{}}}],["thirdservice",{"_index":2063,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["thirdsi18nloader",{"_index":2322,"title":{"classes/ThirdsI18nLoader.html":{}},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{}}}],["thirdsi18nloader(thirdsservice",{"_index":2444,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsi18nloaderfactory",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["thirdsi18nloaderfactory(thirdsservice",{"_index":2443,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["thirdsservice",{"_index":1086,"title":{"injectables/ThirdsService.html":{}},"body":{"components/CardDetailsComponent.html":{},"modules/CardsModule.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"coverage.html":{},"index.html":{}}}],["thirdsservicemock",{"_index":2472,"title":{"classes/ThirdsServiceMock.html":{}},"body":{"classes/ThirdsServiceMock.html":{},"coverage.html":{}}}],["thirdsurl",{"_index":2337,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.$injector.get(translateservice",{"_index":2442,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this._currentselection.pipe(pluck('selectedthirdmenu",{"_index":2039,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._currentselection.pipe(pluck('selectedthirdmenuentry",{"_index":2040,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._currentselection.pipe(pluck('selectedurl",{"_index":2041,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._currentselection=combinelatest(this.menu_id,this.menu_entry_id",{"_index":2024,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._defaultfilters",{"_index":1724,"title":{},"body":{"injectables/FilterService.html":{}}}],["this._filter",{"_index":2512,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(first",{"_index":2531,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this._filter$.pipe(first(),takeuntil(this.ngunsubscribe$)).subscribe",{"_index":2714,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this._filter$.pipe(takeuntil(this.ngunsubscribe$)).subscribe((next",{"_index":2518,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this._htmlcontent",{"_index":1461,"title":{},"body":{"components/DetailComponent.html":{}}}],["this._i18nprefix",{"_index":1051,"title":{},"body":{"components/CardComponent.html":{},"components/DetailsComponent.html":{}}}],["this._menu_entry_id",{"_index":2038,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._menu_entry_id=this.store.select(selectmenustateselectedmenuentryid",{"_index":2019,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._menu_id",{"_index":2037,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._menu_id=this.store.select(selectmenustateselectedmenuid",{"_index":2018,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this._thirdmenus",{"_index":2226,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._thirdmenus=this.store.select(selectmenustatemenu",{"_index":2221,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.actions",{"_index":904,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/LightCardEffects.html":{},"injectables/MenuEffects.html":{}}}],["this.actions$.pipe",{"_index":890,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/CustomRouterEffects.html":{}}}],["this.actions$.pipe(oftype(authenticationactiontypes.rejectlogin",{"_index":948,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.active",{"_index":1701,"title":{},"body":{"classes/Filter.html":{}}}],["this.assignconfigurationproperties(oauth2conf",{"_index":689,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.attachaction(button",{"_index":1477,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.authservice.asktokenfromcode(code).pipe",{"_index":912,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.asktokenfrompassword(payload.username",{"_index":956,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.checkauthentication(authenticationservice.extracttoken",{"_index":908,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.authservice.extractidentificationinformation",{"_index":1007,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.big",{"_index":1958,"title":{},"body":{"components/IconComponent.html":{}}}],["this.big?'big':this.medium?'medium':'small",{"_index":1964,"title":{},"body":{"components/IconComponent.html":{}}}],["this.bindactions(third",{"_index":1466,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.card",{"_index":1095,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.card.publisher",{"_index":1439,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.card.publisherversion",{"_index":1101,"title":{},"body":{"components/CardDetailsComponent.html":{},"components/DetailComponent.html":{}}}],["this.cardoperationsurl",{"_index":1220,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardoperationsurl}&notification=true&rangestart=${minus2hour.valueof()}&rangeend=${plus48hours.valueof",{"_index":1238,"title":{},"body":{"injectables/CardService.html":{}}}],["this.cardservice.unsubscribecardoperation",{"_index":987,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.cardsurl",{"_index":1222,"title":{},"body":{"injectables/CardService.html":{}}}],["this.clientid",{"_index":691,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.clientsecret",{"_index":694,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.conf",{"_index":2621,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.configloaded",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurel10nwithenglishasdefault",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["this.configurl",{"_index":1330,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.confzoom",{"_index":2629,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.convert(auth",{"_index":764,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.createformgroup",{"_index":2514,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.currentpath",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.dark",{"_index":1962,"title":{},"body":{"components/IconComponent.html":{}}}],["this.delegateurl",{"_index":696,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.delegateurl}&redirect_uri=${authenticationservice.computeredirecturi",{"_index":838,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.detail",{"_index":1437,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles",{"_index":1438,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.detail.styles.foreach(style",{"_index":1440,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.details",{"_index":1098,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.changes.subscribe",{"_index":1518,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.filter((tab",{"_index":1520,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.details.push(...state.details",{"_index":1104,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.details.toarray().foreach(detail",{"_index":1529,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.dragend.emit(event",{"_index":1571,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragging",{"_index":1564,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragmove.emit(event",{"_index":1568,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.dragstart.emit(event",{"_index":1565,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["this.element.nativeelement.getelementsbytagname('button",{"_index":1471,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.element.nativeelement.getelementsbytagname('script",{"_index":1468,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.expandedmenu=new",{"_index":2223,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expandedmenu[index]=!this.expandedmenu[index",{"_index":2228,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.expireclaim",{"_index":702,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.extractparams(child",{"_index":1394,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.extractparams(routerstate.root",{"_index":1388,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{}}}],["this.fetchcardoperation(new",{"_index":1237,"title":{},"body":{"injectables/CardService.html":{}}}],["this.fetchi18njson(publisher",{"_index":2424,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.fetchthird(thirdname,version",{"_index":2351,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.funktion",{"_index":1700,"title":{},"body":{"classes/Filter.html":{}}}],["this.funktion(card,this.status",{"_index":1705,"title":{},"body":{"classes/Filter.html":{}}}],["this.getcurrentguid().tostring",{"_index":1766,"title":{},"body":{"classes/GuidService.html":{}}}],["this.getmenubyid(currentselection[0][0],currentselection[1])[0",{"_index":2033,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.getmenuentrybyid(currentselection[0][1],selectedthirdmenu)[0",{"_index":2035,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.getroutepe",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["this.guid",{"_index":1763,"title":{},"body":{"classes/GuidService.html":{}}}],["this.guidservice.getcurrentguid",{"_index":762,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.guidservice.getcurrentguidstring",{"_index":1219,"title":{},"body":{"injectables/CardService.html":{}}}],["this.handlebars.executetemplate(this.detail.templatename",{"_index":1459,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.handleerrorontokengeneration(errorresponse,'authenticate",{"_index":958,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handleerrorontokengeneration(errorresponse,'code",{"_index":916,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.handlenewtoken(this.httpclient.post(this.asktokenurl",{"_index":753,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.handlerejectedlogin('invalid",{"_index":1008,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.hide",{"_index":2130,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hrefsofcsslink.push(safecssurl",{"_index":1451,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.httpclient.get(`${this.cardsurl}/${id",{"_index":1224,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.get(`${this.configurl",{"_index":1332,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher",{"_index":2356,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/i18n",{"_index":2373,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/${publisher}/templates/${name",{"_index":2359,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.get(`${this.thirdsurl}/`).pipe",{"_index":2386,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.httpclient.post",{"_index":1257,"title":{},"body":{"injectables/CardService.html":{}}}],["this.httpclient.post(this.checktokenurl",{"_index":728,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.iconpath",{"_index":1956,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iframeurl.pipe(map(url",{"_index":2042,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.initfilters",{"_index":1725,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.initializehandlebarstemplates",{"_index":1436,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initializehrefsofcsslink",{"_index":1435,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.initrecipientfilter",{"_index":1746,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittimefilter",{"_index":1748,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.inittypefilter",{"_index":1744,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.isauthenticated",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["this.lastcards",{"_index":2638,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.light",{"_index":1963,"title":{},"body":{"components/IconComponent.html":{}}}],["this.lightcard.publisher+'.'+this.lightcard.publisherversion",{"_index":1052,"title":{},"body":{"components/CardComponent.html":{}}}],["this.lightcards",{"_index":1594,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.lightcards$.subscribe(value",{"_index":2640,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.loadedi18n",{"_index":2418,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadedi18n.push(result.id",{"_index":2438,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadingi18n",{"_index":2416,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loadingi18n.push(id",{"_index":2420,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.loginclaim",{"_index":698,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["this.medium",{"_index":1960,"title":{},"body":{"components/IconComponent.html":{}}}],["this.mousewheelfunc(event",{"_index":2191,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.mousewheelup.emit(event",{"_index":2202,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["this.multihorizontalticksline(1",{"_index":2796,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["this.ngunsubscribe$.complete",{"_index":2516,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.ngunsubscribe$.next",{"_index":2515,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.open=true",{"_index":1050,"title":{},"body":{"components/CardComponent.html":{}}}],["this.processes[card.process",{"_index":175,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["this.querytemplate(card.publisher,card.publisherversion,templatename).pipe",{"_index":1858,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindex",{"_index":1851,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerarrayatindexlength",{"_index":1854,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerbool",{"_index":1855,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registercardaction",{"_index":1846,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerdateformat",{"_index":1845,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registeri18n",{"_index":1848,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registermath",{"_index":1852,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernow",{"_index":1856,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registernumberformat",{"_index":1844,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerpreservespace",{"_index":1843,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registerslice",{"_index":1850,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersort",{"_index":1849,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersplit",{"_index":1853,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.registersvg",{"_index":1847,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.reinsertscripts",{"_index":1465,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.resetstate",{"_index":969,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.retry",{"_index":1317,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.retrydelay",{"_index":1316,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.router.navigate(['/'+this.currentpath,'cards',this.lightcard.id",{"_index":1049,"title":{},"body":{"components/CardComponent.html":{}}}],["this.router.navigate(['/login",{"_index":893,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":1462,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(cssurl",{"_index":1450,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(url",{"_index":2043,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["this.selectdetail(this.details.first",{"_index":1526,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.selection",{"_index":1598,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.service.computethirdsmenu",{"_index":2151,"title":{},"body":{"injectables/MenuEffects.html":{}}}],["this.service.fetchconfiguration",{"_index":1298,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["this.service.getcardoperation",{"_index":1166,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.service.loadcard(action.payload.id",{"_index":1110,"title":{},"body":{"injectables/CardEffects.html":{}}}],["this.service.movetocodeflowloginpage",{"_index":2137,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.service.updatecardsubscriptionwithdates(af.payload.status.start,af.payload.status.end",{"_index":1184,"title":{},"body":{"injectables/CardOperationEffects.html":{}}}],["this.size",{"_index":1965,"title":{},"body":{"components/IconComponent.html":{}}}],["this.small",{"_index":1961,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites",{"_index":1970,"title":{},"body":{"components/IconComponent.html":{}}}],["this.sprites='sprites.svg",{"_index":1972,"title":{},"body":{"components/IconComponent.html":{}}}],["this.status",{"_index":1702,"title":{},"body":{"classes/Filter.html":{}}}],["this.store",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch",{"_index":2540,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["this.store.dispatch(new",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/ConfigEffects.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.store.pipe",{"_index":1595,"title":{},"body":{"components/FeedComponent.html":{},"components/TimeLineComponent.html":{}}}],["this.store.pipe(select(selectcurrenturl)).subscribe(url",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectexpirationtime",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectrouterstate",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.mode",{"_index":2123,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildconfigselector('security.oauth2.flow.provider",{"_index":2128,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.time_filter",{"_index":2517,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.store.select(buildfilterselector(filtertype.type_filter",{"_index":2701,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.store.select(cardselectors.selectcardstateselected",{"_index":1093,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.store.select(feedselectors.selectlightcardselection",{"_index":1599,"title":{},"body":{"components/FeedComponent.html":{}}}],["this.store.select(selectcardstateselectedid",{"_index":1056,"title":{},"body":{"components/CardComponent.html":{}}}],["this.store.select(selectcurrenturl).subscribe(url",{"_index":1053,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["this.store.select(selectmessage).pipe(filter(m=>m!=null",{"_index":2125,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.select(timelineselectors.selectlastcardsselection",{"_index":2639,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["this.subscribetoloadi18n(observable",{"_index":2402,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.templatecache[key",{"_index":1864,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdcache.get(key",{"_index":2348,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.thirds.computethirdcssurl(publisher",{"_index":1442,"title":{},"body":{"components/DetailComponent.html":{}}}],["this.thirds.fetchhbstemplate(publisher,version,name,locale).pipe",{"_index":1867,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["this.thirdservice.loadi18nforlightcards(action.payload.lightcards",{"_index":2067,"title":{},"body":{"injectables/LightCardEffects.html":{}}}],["this.thirdsservice.querythird(this.card.publisher",{"_index":1100,"title":{},"body":{"components/CardDetailsComponent.html":{}}}],["this.thirdsurl",{"_index":2343,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.timefilterform",{"_index":2513,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(null",{"_index":2528,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').setvalue(this.timeservice.asinputstring(next.status.end",{"_index":2527,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('end').value",{"_index":2530,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(null",{"_index":2523,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').setvalue(this.timeservice.asinputstring(next.status.start",{"_index":2522,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timefilterform.get('start').value",{"_index":2529,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.end).valueof",{"_index":2546,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(form.start).valueof",{"_index":2544,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('end').value).valueof",{"_index":2524,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.timeservice.parsestring(this.timefilterform.get('start').value).valueof",{"_index":2519,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["this.translate().getlangs",{"_index":2425,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().settranslation(lang",{"_index":2435,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate().use(lang",{"_index":2436,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.translate.getbrowserlang",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"injectables/HandlebarsService.html":{}}}],["this.translate.setdefaultlang('en",{"_index":342,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(browserlang",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["this.typefilterform",{"_index":2700,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(!next.active",{"_index":2704,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('action').setvalue(true",{"_index":2711,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(!next.active",{"_index":2702,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('alarm').setvalue(true",{"_index":2710,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(!next.active",{"_index":2708,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('notification').setvalue(true",{"_index":2713,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(!next.active",{"_index":2706,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.typefilterform.get('question').setvalue(true",{"_index":2712,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["this.unsubscribe$.next",{"_index":1242,"title":{},"body":{"injectables/CardService.html":{}}}],["this.updateasync",{"_index":1517,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.urlcleaner",{"_index":2342,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.urlcleaner.encodevalue(`${this.thirdsurl}/${publisher}/css/${stylename",{"_index":2366,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["this.usecodeflow",{"_index":2122,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform",{"_index":2131,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('identifier').value",{"_index":2133,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.get('password').value",{"_index":2134,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.reset",{"_index":2136,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userform.valid",{"_index":2132,"title":{},"body":{"components/LoginComponent.html":{}}}],["those",{"_index":1119,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["throw",{"_index":2272,"title":{},"body":{"modules/ServicesModule.html":{}}}],["throwerror",{"_index":659,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror('the",{"_index":741,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["throwerror(err",{"_index":2430,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["throwerror(error",{"_index":768,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["thrown",{"_index":714,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["thus",{"_index":127,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["tick",{"_index":1640,"title":{},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{}}}],["ticket",{"_index":2564,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["time",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/RouterStateUrl.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["time:timeservice",{"_index":1842,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["time_filter",{"_index":1751,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["timefiltercomponent",{"_index":433,"title":{"components/TimeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["timefilterform",{"_index":2497,"title":{},"body":{"components/TimeFilterComponent.html":{}}}],["timeline",{"_index":219,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitTimeline.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["timelineactions",{"_index":225,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"classes/InitTimeline.html":{},"miscellaneous/typealiases.html":{}}}],["timelineactiontypes",{"_index":217,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"classes/InitTimeline.html":{},"miscellaneous/enumerations.html":{}}}],["timelineactiontypes.addcarddatatimeline",{"_index":216,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"classes/InitTimeline.html":{}}}],["timelineactiontypes.inittimeline",{"_index":222,"title":{},"body":{"classes/AddCardDataTimeline.html":{},"classes/InitTimeline.html":{}}}],["timelinecomponent",{"_index":436,"title":{"components/TimeLineComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["timelineinitialstate",{"_index":2664,"title":{},"body":{"interfaces/TimelineState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timelinereducer",{"_index":573,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/variables.html":{}}}],["timelineselectors",{"_index":2560,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["timelinestate",{"_index":554,"title":{"interfaces/TimelineState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TimelineState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":2509,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timer(500",{"_index":2538,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["timeservice",{"_index":1819,"title":{"injectables/TimeService.html":{}},"body":{"injectables/HandlebarsService.html":{},"modules/ServicesModule.html":{},"components/TimeFilterComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{},"index.html":{}}}],["timezone",{"_index":2657,"title":{},"body":{"injectables/TimeService.html":{},"dependencies.html":{}}}],["title",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"classes/Detail.html":{}}}],["titleposition",{"_index":1024,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["titlestyle",{"_index":1028,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["tlabel1",{"_index":2478,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tlabel2",{"_index":2486,"title":{},"body":{"classes/ThirdsServiceMock.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{entry.label",{"_index":2234,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.entries[0].label",{"_index":2235,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tmenu.id}}.{{tmenu.version}}.{{tmenu.label",{"_index":2232,"title":{},"body":{"components/NavbarComponent.html":{}}}],["todo",{"_index":530,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/HandleUnexpectedError-3.html":{},"components/IframeDisplayComponent.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["togglemenu",{"_index":2208,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index",{"_index":2212,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglemenu(index:number",{"_index":2227,"title":{},"body":{"components/NavbarComponent.html":{}}}],["token",{"_index":81,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tokeninjector",{"_index":2262,"title":{"interceptors/TokenInjector.html":{}},"body":{"modules/ServicesModule.html":{},"interceptors/TokenInjector.html":{},"coverage.html":{},"index.html":{}}}],["trace",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["tranform2",{"_index":2790,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["trans",{"_index":2428,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["transform",{"_index":2745,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transform(value",{"_index":2746,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["transform2(value",{"_index":2785,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["translate",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"injectables/HandlebarsService.html":{},"components/NavbarComponent.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translate.config",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["translate/core",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["translateconfig",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["translateloader",{"_index":2324,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"miscellaneous/variables.html":{}}}],["translatemodule",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{}}}],["translatemodule.forroot(translateconfig",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemoduleconfig",{"_index":3038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateservice",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"injectables/HandlebarsService.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translation",{"_index":2427,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translation',error",{"_index":2441,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["translationelement",{"_index":2433,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["tree",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["triggered.\\naction",{"_index":1491,"title":{},"body":{"components/DetailComponent.html":{}}}],["triggers",{"_index":946,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["true",{"_index":773,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/Filter.html":{},"injectables/FilterService.html":{},"injectables/HandlebarsService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"modules/ServicesModule.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":71,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["trylogout",{"_index":903,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["trytologin",{"_index":19,"title":{"classes/TryToLogIn.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["trytologin({username",{"_index":2135,"title":{},"body":{"components/LoginComponent.html":{}}}],["trytologout",{"_index":72,"title":{"classes/TryToLogOut.html":{}},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/NavbarComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["tslib",{"_index":2953,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1665,"title":{},"body":{"classes/Filter.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"classes/ApplyFilter.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"injectables/AuthenticationEffects.html":{},"classes/Card.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardEffects.html":{},"interfaces/CardFeedState.html":{},"components/CardListComponent.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"interfaces/CardState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/ConfigService.html":{},"interfaces/ConfigState.html":{},"injectables/CustomRouterEffects.html":{},"classes/CustomRouterStateSerializer.html":{},"classes/Detail.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"components/FeedComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"classes/GuidService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"classes/I18n.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"components/LoginComponent.html":{},"injectables/MenuEffects.html":{},"interfaces/MenuState.html":{},"classes/Message.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"classes/ParameterListItem.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/RouterStateUrl.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"interfaces/TimelineState.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type_filter",{"_index":1749,"title":{},"body":{"injectables/FilterService.html":{},"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":2987,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":986,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["typefiltercomponent",{"_index":438,"title":{"components/TypeFilterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{},"coverage.html":{},"index.html":{}}}],["typefilterform",{"_index":2691,"title":{},"body":{"components/TypeFilterComponent.html":{}}}],["typeof",{"_index":1917,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["types/jwt",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":54,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"interfaces/AuthState.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/GuidService.html":{},"injectables/HandlebarsService.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"dependencies.html":{}}}],["u",{"_index":1578,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["u00a0",{"_index":1912,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["ui/assets/i18n",{"_index":3037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uid",{"_index":1023,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{}}}],["un",{"_index":2573,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["unable",{"_index":963,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["unavailable",{"_index":997,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["uncomment",{"_index":1572,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["undefined",{"_index":1959,"title":{},"body":{"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{}}}],["undefined,undefined",{"_index":1679,"title":{},"body":{"classes/Filter.html":{}}}],["une",{"_index":2795,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["unexpected",{"_index":254,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/AuthenticationEffects.html":{},"classes/ClearCard.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["unique",{"_index":686,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["unselectedvalues",{"_index":210,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["unselection",{"_index":1574,"title":{},"body":{"directives/DraggableDirective.html":{}}}],["unsubscribe",{"_index":1191,"title":{},"body":{"injectables/CardService.html":{}}}],["unsubscribecardoperation",{"_index":1194,"title":{},"body":{"injectables/CardService.html":{}}}],["unused",{"_index":1121,"title":{},"body":{"injectables/CardEffects.html":{},"injectables/ConfigEffects.html":{},"injectables/LightCardEffects.html":{}}}],["up",{"_index":1025,"title":{},"body":{"classes/Card.html":{},"classes/Detail.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":10,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"interceptors/TokenInjector.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{},"miscellaneous/enumerations.html":{}}}],["updateasync",{"_index":1500,"title":{},"body":{"components/DetailsComponent.html":{}}}],["updatecardsubscriptionwithdates",{"_index":1195,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart",{"_index":1206,"title":{},"body":{"injectables/CardService.html":{}}}],["updatecardsubscriptionwithdates(rangestart:number,rangeend:number):observable",{"_index":1256,"title":{},"body":{"injectables/CardService.html":{}}}],["updated",{"_index":1131,"title":{},"body":{"interfaces/CardFeedState.html":{},"components/IframeDisplayComponent.html":{}}}],["updatedsubscription",{"_index":250,"title":{"classes/UpdatedSubscription.html":{}},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updateon",{"_index":2547,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["updateselectedmenu",{"_index":1357,"title":{"classes/UpdateSelectedMenu.html":{}},"body":{"injectables/CustomRouterEffects.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["updateselectedmenu({menu_id",{"_index":1352,"title":{},"body":{"injectables/CustomRouterEffects.html":{}}}],["updatestate",{"_index":153,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatestatebeforeaction",{"_index":154,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["updatesubscription",{"_index":251,"title":{},"body":{"classes/AddLightCardFailure.html":{},"injectables/CardOperationEffects.html":{},"classes/EmptyLightCards.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/SelectLightCard.html":{},"classes/UpdatedSubscription.html":{},"miscellaneous/enumerations.html":{}}}],["upon",{"_index":1306,"title":{},"body":{"injectables/ConfigEffects.html":{},"classes/Filter.html":{}}}],["uri",{"_index":194,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"miscellaneous/enumerations.html":{}}}],["uribase",{"_index":840,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["uribase}${pathend",{"_index":845,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["url",{"_index":184,"title":{},"body":{"classes/Action.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"classes/CustomRouterStateSerializer.html":{},"components/DetailComponent.html":{},"components/IframeDisplayComponent.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RouterStateUrl.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"interceptors/TokenInjector.html":{},"miscellaneous/variables.html":{}}}],["url.endswith('/auth/check_token",{"_index":2682,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/code",{"_index":2684,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.endswith('/auth/token",{"_index":2683,"title":{},"body":{"interceptors/TokenInjector.html":{}}}],["url.split('/')[1",{"_index":1055,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["urlcleaner",{"_index":2340,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["urlencoded",{"_index":725,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["urls",{"_index":3016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlsearchparams",{"_index":719,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["usable",{"_index":826,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["usage",{"_index":1793,"title":{},"body":{"classes/HandleUnexpectedError-3.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/UpdateSelectedMenu.html":{}}}],["use",{"_index":1667,"title":{},"body":{"classes/Filter.html":{}}}],["useclass",{"_index":509,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{}}}],["usecodeflow",{"_index":2106,"title":{},"body":{"components/LoginComponent.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/AuthObject.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"classes/HandleUnexpectedError-3.html":{},"classes/InitAuthStatus.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"modules/StateModule.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"classes/UpdateSelectedMenu.html":{}}}],["usefactory",{"_index":3039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":66,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"components/AppComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"injectables/CardOperationEffects.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/CheckTokenResponse.html":{},"components/DetailsComponent.html":{},"injectables/FeedFiltersEffects.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"miscellaneous/enumerations.html":{}}}],["userform",{"_index":2107,"title":{},"body":{"components/LoginComponent.html":{}}}],["username",{"_index":107,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"components/LoginComponent.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["uses",{"_index":961,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["using",{"_index":645,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["utc",{"_index":858,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{},"miscellaneous/variables.html":{}}}],["utc_beginning_time",{"_index":2854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["v",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArchivesComponent.html":{},"modules/ArchivesModule.html":{},"modules/ArchivesRoutingModule.html":{},"components/CardComponent.html":{},"modules/CardsModule.html":{},"components/FeedComponent.html":{},"modules/FeedModule.html":{},"modules/FeedRoutingModule.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"modules/ThirdpartyRoutingModule.html":{},"components/TypeFilterComponent.html":{},"miscellaneous/variables.html":{}}}],["v1",{"_index":1871,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["v2",{"_index":1873,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["val",{"_index":2383,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{},"components/TimeLineComponent.html":{}}}],["val.enddate",{"_index":2641,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.severity",{"_index":2643,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["val.startdate",{"_index":2642,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["valid",{"_index":707,"title":{},"body":{"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"classes/CheckTokenResponse.html":{}}}],["validate",{"_index":85,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["validity",{"_index":936,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["value",{"_index":50,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/Action.html":{},"classes/AddCardDataTimeline.html":{},"classes/AddLightCardFailure.html":{},"components/AppComponent.html":{},"classes/ApplyFilter.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"injectables/CardEffects.html":{},"injectables/CardOperationEffects.html":{},"injectables/CardService.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/ClearCard.html":{},"injectables/ConfigEffects.html":{},"injectables/CustomRouterEffects.html":{},"components/DetailComponent.html":{},"directives/DraggableDirective.html":{},"classes/EmptyLightCards.html":{},"injectables/FeedFiltersEffects.html":{},"injectables/FilterService.html":{},"classes/HandleUnexpectedError.html":{},"classes/HandleUnexpectedError-1.html":{},"classes/HandleUnexpectedError-2.html":{},"classes/HandleUnexpectedError-3.html":{},"injectables/HandlebarsService.html":{},"components/IframeDisplayComponent.html":{},"classes/InitAuthStatus.html":{},"classes/InitFilters.html":{},"classes/InitTimeline.html":{},"classes/Input.html":{},"injectables/LightCardEffects.html":{},"classes/LoadCard.html":{},"classes/LoadCardFailure.html":{},"classes/LoadCardSuccess.html":{},"classes/LoadConfig.html":{},"classes/LoadConfigFailure.html":{},"classes/LoadConfigSuccess.html":{},"classes/LoadLightCards.html":{},"classes/LoadLightCardsExtendedData.html":{},"classes/LoadLightCardsFailure.html":{},"classes/LoadLightCardsSuccess.html":{},"classes/LoadMenu.html":{},"classes/LoadMenuFailure.html":{},"classes/LoadMenuSuccess.html":{},"injectables/MenuEffects.html":{},"components/NavbarComponent.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/RejectLogIn.html":{},"classes/SelectLightCard.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"injectables/ThirdsService.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"injectables/TimeService.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{},"components/TypeFilterComponent.html":{},"classes/UpdateSelectedMenu.html":{},"classes/UpdatedSubscription.html":{},"pipes/XAxisTickFormatPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.replace",{"_index":1910,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.slice(from",{"_index":1890,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.split(splitvalue)[index",{"_index":1879,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value.tolocalestring(languagetag",{"_index":2783,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["value.tostring",{"_index":2784,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["value[index",{"_index":1886,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["value[index].length",{"_index":1876,"title":{},"body":{"injectables/HandlebarsService.html":{}}}],["valuechanges",{"_index":2533,"title":{},"body":{"components/TimeFilterComponent.html":{},"components/TypeFilterComponent.html":{}}}],["values",{"_index":207,"title":{},"body":{"classes/Action.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["var",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"components/CardListComponent.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"components/FeedComponent.html":{},"components/FiltersComponent.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["variable",{"_index":2837,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2989,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variant",{"_index":1069,"title":{},"body":{"components/CardComponent.html":{}}}],["variation",{"_index":881,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["verifyexpirationdate",{"_index":779,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["version",{"_index":187,"title":{},"body":{"classes/Action.html":{},"components/DetailComponent.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["version:string",{"_index":166,"title":{},"body":{"classes/Action.html":{},"injectables/HandlebarsService.html":{},"classes/Input.html":{},"classes/ParameterListItem.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{},"classes/ThirdMenu.html":{},"classes/ThirdMenuEntry.html":{}}}],["version:string):observable",{"_index":2346,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["versionparam",{"_index":2367,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["via",{"_index":21,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["visible",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["void",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/ArchivesComponent.html":{},"classes/AuthObject.html":{},"injectables/AuthenticationEffects.html":{},"components/CardComponent.html":{},"components/CardDetailsComponent.html":{},"injectables/CardService.html":{},"classes/CheckTokenResponse.html":{},"components/DetailComponent.html":{},"components/DetailsComponent.html":{},"directives/DraggableDirective.html":{},"components/FeedComponent.html":{},"classes/Filter.html":{},"components/FiltersComponent.html":{},"injectables/HandlebarsService.html":{},"components/IconComponent.html":{},"components/IframeDisplayComponent.html":{},"components/LoginComponent.html":{},"directives/MouseWheelDirective.html":{},"components/NavbarComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeFilterComponent.html":{},"components/TimeLineComponent.html":{},"components/TypeFilterComponent.html":{}}}],["voir",{"_index":2615,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["w",{"_index":2620,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["w/m/y",{"_index":2575,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["wait",{"_index":1464,"title":{},"body":{"components/DetailComponent.html":{}}}],["warning",{"_index":1487,"title":{},"body":{"components/DetailComponent.html":{}}}],["weather",{"_index":1132,"title":{},"body":{"interfaces/CardFeedState.html":{}}}],["web",{"_index":646,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["week",{"_index":2583,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["went",{"_index":2440,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["wheel.directive",{"_index":1643,"title":{},"body":{"modules/FeedModule.html":{}}}],["wheel.directive.ts",{"_index":2170,"title":{},"body":{"directives/MouseWheelDirective.html":{},"coverage.html":{}}}],["wheel.directive.ts:12",{"_index":2180,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:14",{"_index":2179,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:17",{"_index":2184,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:22",{"_index":2182,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:27",{"_index":2186,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["wheel.directive.ts:31",{"_index":2188,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["width",{"_index":1064,"title":{},"body":{"components/CardComponent.html":{},"components/TypeFilterComponent.html":{}}}],["win",{"_index":111,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["window.event",{"_index":2196,"title":{},"body":{"directives/MouseWheelDirective.html":{}}}],["window.location.href",{"_index":836,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["window.location.href.indexof('code",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["window.location.pathname",{"_index":1371,"title":{},"body":{"classes/CustomRouterStateSerializer.html":{},"classes/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["withlatestfrom",{"_index":978,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"injectables/ConfigEffects.html":{},"components/IframeDisplayComponent.html":{}}}],["withlatestfrom(this.store.select(selectcode",{"_index":910,"title":{},"body":{"injectables/AuthenticationEffects.html":{}}}],["withlatestfrom(this.store.select(selectconfigretry",{"_index":1319,"title":{},"body":{"injectables/ConfigEffects.html":{}}}],["withlatestfrom(this.store.select(selectmenustatemenu",{"_index":2026,"title":{},"body":{"components/IframeDisplayComponent.html":{}}}],["without",{"_index":121,"title":{},"body":{"classes/AcceptLogIn.html":{},"classes/AcceptLogOut.html":{},"classes/AcceptLogOutSuccess.html":{},"classes/CheckAuthenticationStatus.html":{},"classes/InitAuthStatus.html":{},"classes/PayloadForSuccessfulAuthentication.html":{},"classes/RejectLogIn.html":{},"classes/TryToLogIn.html":{},"classes/TryToLogOut.html":{}}}],["work",{"_index":2413,"title":{},"body":{"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["works",{"_index":633,"title":{},"body":{"components/ArchivesComponent.html":{},"components/NoSelectionComponent.html":{},"components/TimeLineComponent.html":{}}}],["wrong",{"_index":952,"title":{},"body":{"injectables/AuthenticationEffects.html":{},"classes/ThirdsI18nLoader.html":{},"injectables/ThirdsService.html":{}}}],["www",{"_index":724,"title":{},"body":{"classes/AuthObject.html":{},"classes/CheckTokenResponse.html":{}}}],["xaxistickformat",{"_index":2744,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["xaxistickformatpipe",{"_index":1612,"title":{"pipes/XAxisTickFormatPipe.html":{}},"body":{"modules/FeedModule.html":{},"pipes/XAxisTickFormatPipe.html":{},"coverage.html":{},"index.html":{}}}],["y",{"_index":2637,"title":{},"body":{"components/TimeLineComponent.html":{},"pipes/XAxisTickFormatPipe.html":{}}}],["years",{"_index":2612,"title":{},"body":{"components/TimeLineComponent.html":{}}}],["yes",{"_index":651,"title":{},"body":{"classes/AuthObject.html":{},"classes/Card.html":{},"classes/CheckTokenResponse.html":{},"classes/I18n.html":{},"classes/Message.html":{},"classes/Process.html":{},"classes/State.html":{},"classes/Third.html":{}}}],["yyyy",{"_index":2774,"title":{},"body":{"pipes/XAxisTickFormatPipe.html":{}}}],["zip",{"_index":1434,"title":{},"body":{"components/DetailComponent.html":{},"injectables/MenuEffects.html":{}}}],["zip(this.thirds.querythird(this.card.publisher,this.card.publisherversion",{"_index":1458,"title":{},"body":{"components/DetailComponent.html":{}}}],["zone.js",{"_index":2955,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"modules/ArchivesModule.html":{},"modules/CardsModule.html":{},"modules/FeedModule.html":{},"modules/ServicesModule.html":{},"modules/StateModule.html":{},"modules/ThirdpartyModule.html":{},"dependencies.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptLogIn.html":{"url":"classes/AcceptLogIn.html","title":"class - AcceptLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the authentication information\nEmitted by {AuthenticationEffects} in the following {Observable} @members:\n\nTryToLogIn\nCheckAuthentication via handleLogInAttempt @method\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\ncontaining the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: PayloadForSuccessfulAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    PayloadForSuccessfulAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PayloadForSuccessfulAuthentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOut.html":{"url":"classes/AcceptLogOut.html","title":"class - AcceptLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to removes authentication information of the system and thus logOut the user.\nEmitted by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogOut\nRejectLogInAttempt\nConsume by {AuthenticationEffect} in the AcceptLogOut {Observable} @member\n\n\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:126\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:126\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptLogOutSuccess.html":{"url":"classes/AcceptLogOutSuccess.html","title":"class - AcceptLogOutSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptLogOutSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store to remove authentication information\nEmitted by {AuthenticationEffect} in AcceptLogOut {Observable} @member.\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.AcceptLogOutSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:142\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: ActionType, label: I18n, hidden: boolean, buttonStyle: string, contentStyle: string, inputs: Input[], lockAction: boolean, lockCard: boolean, updateState: boolean, updateStateBeforeAction: boolean, called: boolean, needsConfirm: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    ActionType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hidden\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        buttonStyle\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contentStyle\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inputs\n                                                  \n                                                        \n                                                                    Input[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockAction\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lockCard\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateState\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateStateBeforeAction\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        called\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        needsConfirm\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddCardDataTimeline.html":{"url":"classes/AddCardDataTimeline.html","title":"class - AddCardDataTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddCardDataTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.AddCardDataTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    AddCardDataTimeline = '[timeline] Add Card to data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class AddCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.AddCardDataTimeline\n    constructor(public payload:{cardTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | AddCardDataTimeline;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddLightCardFailure.html":{"url":"classes/AddLightCardFailure.html","title":"class - AddLightCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddLightCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.AddLightCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                configLoaded\n                            \n                            \n                                currentPath\n                            \n                            \n                                getRoutePE\n                            \n                            \n                                isAuthenticated$\n                            \n                            \n                                    Private\n                                maxedRetries\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configureL10nWithEnglishAsDefault\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configureL10nWithEnglishAsDefault\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configureL10nWithEnglishAsDefault()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            On Init the app take trace of the current url and of the authentication status\nOnce the subscription done, send an Action to Check the current authentication status.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoutePE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            maxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OperatorFabric'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {InitAuthStatus} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl, selectRouterState} from '@ofSelectors/router.selectors';\nimport {selectExpirationTime} from '@ofSelectors/authentication.selectors';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {isInTheFuture} from \"@ofServices/authentication.service\";\nimport {LoadConfig} from \"@ofActions/config.actions\";\nimport {selectConfigLoaded, selectMaxedRetries} from \"@ofSelectors/config.selectors\";\n\n@Component({\n    selector: 'of-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    title = 'OperatorFabric';\n    getRoutePE: Observable;\n    currentPath: any;\n    isAuthenticated$: boolean = false;\n    configLoaded: boolean = false ;\n    private maxedRetries: boolean = false;\n\n    constructor(private store: Store,\n                private translate: TranslateService) {\n        this.getRoutePE = this.store.pipe(select(selectRouterState));\n        this.configureL10nWithEnglishAsDefault();\n    }\n\n    private configureL10nWithEnglishAsDefault() {\n        this.translate.setDefaultLang('en');\n        const browserLang = this.translate.getBrowserLang();\n        this.translate.use(browserLang);\n    }\n\n    /**\n     * On Init the app take trace of the current url and of the authentication status\n     * Once the subscription done, send an Action to Check the current authentication status.\n     */\n    ngOnInit() {\n        console.log(`location: ${location.href}`)\n        let i = window.location.href.indexOf('code');\n        if(i != -1){\n            this.store.dispatch(new InitAuthStatus({code:window.location.href.substring(i + 5)}))\n        }\n        this.store.pipe(select(selectCurrentUrl)).subscribe(url => this.currentPath = url);\n        this.store.pipe(select(selectExpirationTime),\n            map(isInTheFuture)\n                        ).subscribe(isAUth => this.isAuthenticated$ = isAUth);\n        this.store\n            .select(selectConfigLoaded)\n            .subscribe(loaded => this.configLoaded = loaded);\n        this.store\n            .select(selectMaxedRetries)\n            .subscribe((maxedRetries=>this.maxedRetries=maxedRetries));\n        // First Action send by the application, is the user currently authenticated ?\n        this.store.dispatch(new LoadConfig());\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n        Application is loading ...\n    \n    \n        Application is not available yet, please reload later (F5)\n    \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n.button {margin-right: 8px;}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Application is loading ...                Application is not available yet, please reload later (F5)    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            IconComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            StateModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CommonModule, HashLocationStrategy, LocationStrategy} from \"@angular/common\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {StateModule} from '@ofStore/state.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ServicesModule} from '@ofServices/services.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {IconComponent} from './components/icon/icon.component';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {translateConfig} from \"./translate.config\";\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faExternalLinkAlt);\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AppRoutingModule,\n        HttpClientModule,\n        StateModule.forRoot(),\n        ServicesModule.forRoot(),\n        NgbModule,\n        TranslateModule.forRoot(translateConfig),\n        FontAwesomeModule\n    ],\n    declarations: [AppComponent, NavbarComponent, LoginComponent, IconComponent],\n    providers: [ { provide: LocationStrategy, useClass: HashLocationStrategy }],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from '@ofServices/guard.service';\nimport {LoginComponent} from './components/login/login.component';\nimport {environment} from \"@env/environment\";\n\nconst routes: Routes = [\n    // {\n    //     path: 'login',\n    //     component: LoginComponent\n    // },\n    {\n        path: 'feed',\n        loadChildren: './modules/feed/feed.module#FeedModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'archives',\n        loadChildren: './modules/archives/archives.module#ArchivesModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'thirdparty',\n        loadChildren: './modules/thirdparty/thirdparty.module#ThirdpartyModule',\n        // canActivate: [AuthenticationGuard]\n    },\n    {\n        path: 'navbar',\n        component: LoginComponent\n    },\n    {path: '**', redirectTo: '/feed'}\n];\n// TODO manage visible path more gently\nexport const navigationRoutes: Routes = routes.slice(0, 2);\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes,{ enableTracing: !environment.production, preloadingStrategy: PreloadAllModules })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authentication\n                                \n                                \n                                        card\n                                \n                                \n                                        config\n                                \n                                \n                                        feed\n                                \n                                \n                                        menu\n                                \n                                \n                                        router\n                                \n                                \n                                        timeline\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                    \n                                \n                                \n                                    \n                                        authentication:     AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        card\n                                    \n                                \n                                \n                                    \n                                        card:     CardState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CardState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     ConfigState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ConfigState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        feed\n                                    \n                                \n                                \n                                    \n                                        feed:     CardFeedState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CardFeedState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     MenuState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MenuState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                    \n                                \n                                \n                                    \n                                        router:     RouterReducerState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RouterReducerState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeline\n                                    \n                                \n                                \n                                    \n                                        timeline:     TimelineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TimelineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as fromRouter from '@ngrx/router-store';\nimport {RouterReducerState} from '@ngrx/router-store';\nimport {RouterStateUrl} from '@ofStore/states/router.state';\nimport {reducer as authenticationReducer} from '@ofStore/reducers/authentication.reducer';\nimport {ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {environment} from '@env/environment';\nimport {storeFreeze} from 'ngrx-store-freeze';\nimport {CardEffects} from '@ofEffects/card.effects';\nimport {CardOperationEffects} from '@ofEffects/card-operation.effects';\nimport {AuthenticationEffects} from '@ofEffects/authentication.effects';\nimport {RouterEffects} from 'ngrx-router';\nimport {CardFeedState} from '@ofStates/feed.state';\nimport {reducer as timelineReducer} from '@ofStore/reducers/timeline.reducer';\nimport {reducer as lightCardReducer} from '@ofStore/reducers/light-card.reducer';\nimport {reducer as cardReducer} from '@ofStore/reducers/card.reducer';\nimport {reducer as configReducer} from '@ofStore/reducers/config.reducer';\nimport {reducer as menuReducer} from '@ofStore/reducers/menu.reducer';\nimport {AuthState} from '@ofStates/authentication.state';\nimport {CardState} from \"@ofStates/card.state\";\nimport {CustomRouterEffects} from \"@ofEffects/custom-router.effects\";\nimport {MenuState} from \"@ofStates/menu.state\";\nimport {MenuEffects} from \"@ofEffects/menu.effects\";\nimport {LightCardEffects} from \"@ofEffects/light-card.effects\";\nimport {FeedFiltersEffects} from \"@ofEffects/feed-filters.effects\";\nimport {ConfigState} from \"@ofStates/config.state\";\nimport {ConfigEffects} from \"@ofEffects/config.effects\";\nimport {TimelineState} from \"@ofStates/timeline.state\";\n\nexport interface AppState {\n    router: RouterReducerState;\n    feed: CardFeedState;\n    timeline: TimelineState;\n    authentication: AuthState;\n    card: CardState;\n    menu: MenuState;\n    config: ConfigState\n}\n\nexport const appEffects = [\n    CardEffects,\n    ConfigEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects];\n\nexport const appReducer: ActionReducerMap = {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    timeline: timelineReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer\n};\n\nexport const appMetaReducers: MetaReducer[] = !environment.production\n    ? [storeFreeze]\n    : [];\n\nexport const storeConfig = {\n    metaReducers: appMetaReducers,\n    // initialState: {\n    //     router: routerInitialState,\n    // }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplyFilter.html":{"url":"classes/ApplyFilter.html","title":"class - ApplyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.ApplyFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArchivesComponent.html":{"url":"components/ArchivesComponent.html","title":"component - ArchivesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArchivesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/archives/archives.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-archives\n            \n\n            \n                styleUrls\n                ./archives.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./archives.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/archives/archives.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/archives/archives.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-archives',\n  templateUrl: './archives.component.html',\n  styleUrls: ['./archives.component.scss']\n})\nexport class ArchivesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  archives works!\n\n\n    \n\n    \n                \n                    ./archives.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  archives works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArchivesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesModule.html":{"url":"modules/ArchivesModule.html","title":"module - ArchivesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArchivesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArchivesRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {ArchivesRoutingModule} from './archives-routing.module';\nimport {ArchivesComponent} from \"./archives.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ArchivesRoutingModule\n  ],\n  declarations: [ArchivesComponent]\n})\nexport class ArchivesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArchivesRoutingModule.html":{"url":"modules/ArchivesRoutingModule.html","title":"module - ArchivesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArchivesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/archives/archives-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {ArchivesComponent} from \"./archives.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ArchivesComponent,\n        // canActivate: [AuthenticationGuard]\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ArchivesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthObject.html":{"url":"classes/AuthObject.html","title":"class - AuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class used to try to login using the authentication web service.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                access_token\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                identifier\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, expires_in: number, clientId: Guid, identifier?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:272\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expires_in\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:275\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:277\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expires_in\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:276\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:278\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError)\n        );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate)\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        if(!this.delegateUrl)\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        else{\n            window.location.href = `${this.delegateUrl}&redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        }\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/authentication.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        clientId\n                                \n                                \n                                        code\n                                \n                                \n                                        expirationDate\n                                \n                                \n                                        identifier\n                                \n                                \n                                        message\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:     Guid\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Guid\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                    \n                                \n                                \n                                    \n                                        expirationDate:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     Message\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Message\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport interface AuthState {\n    code: string;\n    identifier: string;\n    clientId: Guid;\n    token: string;\n    expirationDate: Date;\n    message: Message;\n}\n\nexport const authInitialState: AuthState = {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null\n};\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationEffects.html":{"url":"injectables/AuthenticationEffects.html","title":"injectable - AuthenticationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/authentication.effects.ts\n        \n\n            \n                Description\n            \n            \n                Management of the authentication of the current user\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                AcceptLogOut\n                            \n                            \n                                CheckAuthentication\n                            \n                            \n                                checkAuthenticationWhenReady\n                            \n                            \n                                RejectLogInAttempt\n                            \n                            \n                                TryToLogIn\n                            \n                            \n                                TryToLogOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleErrorOnTokenGeneration\n                            \n                            \n                                handleRejectedLogin\n                            \n                            \n                                    Private\n                                resetState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, authService: AuthenticationService, cardService: CardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/authentication.effects.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n{Store} state manager\n\n\n                                                        \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nservice implementing the authentication business rules\n\n\n                                                        \n                                                \n                                                \n                                                        cardService\n                                                  \n                                                        \n                                                                    CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nrouter service to redirect user accordingly to the user authentication status or variation of it.\n\nistanbul ignore next \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleErrorOnTokenGeneration\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleErrorOnTokenGeneration(errorResponse, category: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:224\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        category\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleRejectedLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleRejectedLogin(errorMsg: Message)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:246\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMsg\n                                                        \n                                                                    Message\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AuthenticationActions\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resetState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AcceptLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:136\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\nIt tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\nThis {Effect} should be called as a consequence of a {TryLogOut} action\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CheckAuthentication\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse,'code');\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:179\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\nIt extract the current authentication information if any and checks its validity, the expiration date.\n  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n  the {handleLogInAttempt} @method,\n  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\nThis {Effect} should be the first effect apply by the application to display the right page accordingly with the\ncurrent authentication state.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkAuthenticationWhenReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:61\n                            \n                        \n\n                \n                    \n                        Triggers Authentication Check when the application is ready\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RejectLogInAttempt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:155\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\nIt tells the {AuthenticationService} to clear authentication information from the system\nThis {Effect} should be called after a wrong login attempt.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                            return this.handleErrorOnTokenGeneration(errorResponse,'authenticate');\n                            }\n                        ));\n                })\n            )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:83\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\nthe login payload to get an authentication token from the authentication service if the authentication is\nvalid and emit an {AcceptLogin} action with it.\nFor invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\nas paload\nThis effect should take action after the user has submitted login information in the login page by clicking\non the login button.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TryToLogOut\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap((action: TryToLogOut) => {\n                this.resetState();\n                return of(new EmptyLightCards(),new ClearCard(), new AcceptLogOut());\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/authentication.effects.ts:110\n                            \n                        \n\n                \n                    \n                        This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\nIt tells the {AuthenticationService} to clear the authentication information from the system and emit\nan {AcceptLogOut} Action.\nThis effect should take action after the Logout link/button has been clicked by the user.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable, of} from 'rxjs';\nimport {Action, Store} from '@ngrx/store';\nimport {\n    AcceptLogIn,\n    AcceptLogOut,\n    AcceptLogOutSuccess,\n    AuthenticationActions,\n    AuthenticationActionTypes,\n    CheckAuthenticationStatus,\n    RejectLogIn,\n    TryToLogIn,\n    TryToLogOut\n} from '@ofActions/authentication.actions';\nimport {AuthenticationService} from '../../services/authentication.service';\nimport {catchError, map, switchMap, tap, withLatestFrom} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {Router} from \"@angular/router\";\nimport {ConfigActionTypes} from \"@ofActions/config.actions\";\nimport {selectCode} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\nimport {CardService} from \"@ofServices/card.service\";\nimport {EmptyLightCards} from \"@ofActions/light-card.actions\";\nimport {ClearCard} from \"@ofActions/card.actions\";\n\n/**\n * Management of the authentication of the current user\n */\n@Injectable()\nexport class AuthenticationEffects {\n\n    /**\n     * @constructor\n     * @param store - {Store} state manager\n     * @param action$ - {Action} {Observable} of Action of the Application\n     * @param authService - service implementing the authentication business rules\n     * @param router - router service to redirect user accordingly to the user authentication status or variation of it.\n     *\n     * istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private authService: AuthenticationService,\n                private cardService: CardService,\n                private router: Router) {\n    }\n\n    /**\n     * Triggers Authentication Check when the application is ready\n     */\n    @Effect()\n    checkAuthenticationWhenReady: Observable =\n        this.actions$\n            .pipe(\n                ofType(ConfigActionTypes.LoadConfigSuccess),\n                map(() => new CheckAuthenticationStatus())\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listen {AuthenticationActionTypes.TryToLogIn} type and uses\n     * the login payload to get an authentication token from the authentication service if the authentication is\n     * valid and emit an {AcceptLogin} action with it.\n     * For invalid authentication it emits a {RejectLogIn} Action with the message \"unable to authenticate the user\"\n     * as paload\n     *\n     * This effect should take action after the user has submitted login information in the login page by clicking\n     * on the login button.\n     *\n     * @member\n     * @name TryToLogin\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogIn: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.TryToLogIn),\n                switchMap((action: TryToLogIn) => {\n                    const payload = action.payload;\n                    return this.authService.askTokenFromPassword(payload.username, payload.password).pipe(\n                        map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                        catchError(errorResponse => {\n                            return this.handleErrorOnTokenGeneration(errorResponse,'authenticate');\n                            }\n                        ));\n                })\n            );\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.TryToLogOut} type.\n     * It tells the {AuthenticationService} to clear the authentication information from the system and emit\n     * an {AcceptLogOut} Action.\n     *\n     * This effect should take action after the Logout link/button has been clicked by the user.\n     *\n     * @member\n     * @name TryToLogOut\n     * @typedef {Observable}\n     */\n    @Effect()\n    TryToLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.TryToLogOut),\n            switchMap((action: TryToLogOut) => {\n                this.resetState();\n                return of(new EmptyLightCards(),new ClearCard(), new AcceptLogOut());\n            })\n        );\n\n    private resetState() {\n        AuthenticationService.clearAuthenticationInformation();\n        this.cardService.unsubscribeCardOperation();\n    }\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.AcceptLogOut} type.\n     * It tells the {Router} service to navigate to the Login page. and emit an {AcceptLogOutSucess} Action.\n     *\n     * This {Effect} should be called as a consequence of a {TryLogOut} action\n     *\n     * @member\n     * @name AcceptLogOut\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    AcceptLogOut: Observable =\n        this.actions$.pipe(\n            ofType(AuthenticationActionTypes.AcceptLogOut),\n            map((action: AcceptLogOut) => {\n                this.router.navigate(['/login'])\n                return new AcceptLogOutSuccess();\n            })\n        );\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.RejectLogIn} type.\n     * It tells the {AuthenticationService} to clear authentication information from the system\n     *\n     * This {Effect} should be called after a wrong login attempt.\n\n     * @member\n     * @name RejectLogInAttempt\n     * @typedef {Observable}\n     */\n    @Effect()\n    RejectLogInAttempt: Observable =\n        this.actions$.pipe(ofType(AuthenticationActionTypes.RejectLogIn),\n            tap(() => {\n                AuthenticationService.clearAuthenticationInformation();\n            }),\n            map(action => new AcceptLogOut()));\n\n    /**\n     * This {Observable} of {AuthenticationActions} listens for {AuthenticationActionTypes.CheckAuthenticationStatus} type.\n     *It extract the current authentication information if any and checks its validity, the expiration date.\n     *  If it's OK then an {AcceptLogIn} Action with check result as payload is emittedby calling\n     *  the {handleLogInAttempt} @method,\n     *\n     *  otherwise a {RejectedLogIn} Action is emitted by calling the {handleRejectedLogin} @method.\n     *\n     * This {Effect} should be the first effect apply by the application to display the right page accordingly with the\n     * current authentication state.\n     *\n     * @member\n     * @name CheckAuthentication\n     * @typedef {Observable}\n     *\n     */\n    @Effect()\n    CheckAuthentication: Observable =\n        this.actions$\n            .pipe(\n                ofType(AuthenticationActionTypes.CheckAuthenticationStatus),\n                switchMap(() => {\n                    return this.authService.checkAuthentication(AuthenticationService.extractToken())\n                        .pipe(catchError(() => of(null)));\n\n                }),\n                withLatestFrom(this.store.select(selectCode)),\n                switchMap(([payload, code]) => {\n                        //no token stored or token invalid\n                        if (!payload) {\n                            if (!!code)\n                                return this.authService.askTokenFromCode(code).pipe(\n                                    map(authenticationInfo => new AcceptLogIn(authenticationInfo)),\n                                    catchError(errorResponse => {\n                                            return this.handleErrorOnTokenGeneration(errorResponse,'code');\n                                        }\n                                    ));\n                            return of(this.handleRejectedLogin(new Message('The stored token is invalid',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.invalid'))));\n                        } else {\n                            if (!AuthenticationService.isExpirationDateOver()) {\n                                const authInfo = AuthenticationService.extractIdentificationInformation();\n                                return of(new AcceptLogIn(authInfo));\n                            }\n                            return of(this.handleRejectedLogin(new Message('The stored token has expired',\n                                MessageLevel.ERROR,\n                                new I18n('login.error.token.expiration'))));\n                        }\n                    }\n                ),\n                catchError((err, caught) => {\n                    console.error(err);\n                    const parameters = new Map();\n                    parameters['message'] = err;\n                    return of(this.handleRejectedLogin(new Message(err,\n                        MessageLevel.ERROR,\n                        new I18n('login.error.unexpected', parameters)\n                    )));\n                })\n            );\n\n    handleErrorOnTokenGeneration(errorResponse,category:string) {\n        let message, key;\n        let params = new Map()\n        switch (errorResponse.status) {\n            case 401:\n                message = 'Unable to authenticate the user';\n                key = `login.error.${category}`;\n                break;\n            case 0:\n            case 500:\n                message = 'Authentication service currently unavailable';\n                key = 'login.error.unavailable';\n                break;\n            default:\n                message = 'Unexpected error';\n                key = 'login.error.unexpected';\n                params['error'] = errorResponse.message;\n        }\n        console.error(message, errorResponse);\n        return of(new RejectLogIn({error: new Message(message, MessageLevel.ERROR, new I18n(key, params))}));\n    }\n\n    handleRejectedLogin(errorMsg: Message): AuthenticationActions {\n        AuthenticationService.clearAuthenticationInformation();\n        return new RejectLogIn({error: errorMsg});\n\n    }\n\n    // handleLogInAttempt(payload: CheckTokenResponse): AuthenticationActions {\n    //     if (payload) {\n    //         const authInfo = this.authService.extractIdentificationInformation();\n    //         return new AcceptLogIn(authInfo);\n    //\n    //     }\n    //     return this.handleRejectedLogin('invalid token');\n    // }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Card.html":{"url":"classes/Card.html","title":"class - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uid: string, id: string, publisher: string, publisherVersion: string, publishDate: number, startDate: number, endDate: number, severity: Severity, mainRecipient: string, process?: string, processId?: string, state?: string, lttd?: number, title?: I18n, summary?: I18n, data?: any, details?: Detail[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uid\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisher\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publisherVersion\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        publishDate\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        endDate\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                    Severity\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainRecipient\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        process\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        state\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lttd\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        summary\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card/card.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                currentPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCard\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card/card.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCard\n                    \n                \n                \n                    \n                        Type :     LightCard\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        select()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/card/card.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Router} from '@angular/router';\nimport {selectCurrentUrl} from '@ofStore/selectors/router.selectors';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {selectCardStateSelectedId} from \"@ofSelectors/card.selectors\";\nimport {map} from \"rxjs/operators\";\n\n@Component({\n    selector: 'of-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit{\n\n    @Input() public open: boolean = false;\n    @Input() public lightCard: LightCard;\n    currentPath: any;\n    private _i18nPrefix: string;\n\n    /* istanbul ignore next */\n    constructor(private router: Router,\n                private store: Store) {\n\n    }\n\n    public select() {\n        this.router.navigate(['/'+this.currentPath,'cards',this.lightCard.id]);\n        this.open=true;\n    }\n\n    ngOnInit() {\n        this._i18nPrefix = this.lightCard.publisher+'.'+this.lightCard.publisherVersion+'.'\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/')[1];\n        });\n        this.store.select(selectCardStateSelectedId)\n            .pipe(\n                map(id=>this.lightCard.id == id)\n            ).subscribe(open=>this.open = open)\n        ;\n    }\n\n    get i18nPrefix(): string {\n        return this._i18nPrefix;\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n        \n        \n            {{i18nPrefix+lightCard.title.key}}\n            ({{lightCard.startDate|date:'short'}} - {{lightCard.endDate|date:'short'}})\n        \n    \n    \n        \n        \n            {{i18nPrefix+lightCard.summary.key}}\n        \n    \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n.light-card-detail {\n  max-width: 400px;\n}\n\n.card {\n  margin-bottom: 5px;\n}\n\n.card-title {\n  font-variant: small-caps;\n  font-size: larger;\n}\n\n.card-subtitle {\n  font-size: small;\n}\n\n.card-text {\n  font-size: small;\n}\n\n.badge-border {\n  width: 30px;\n  text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{i18nPrefix+lightCard.title.key}}            ({{lightCard.startDate|date:\\'short\\'}} - {{lightCard.endDate|date:\\'short\\'}})                                            {{i18nPrefix+lightCard.summary.key}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardDetailsComponent.html":{"url":"components/CardDetailsComponent.html","title":"component - CardDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/card-details/card-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-details\n            \n\n\n\n\n            \n                templateUrl\n                ./card-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/card-details/card-details.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Card\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Detail[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/card-details/card-details.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport * as cardSelectors from '@ofStore/selectors/card.selectors';\nimport {ThirdsService} from \"@ofServices/thirds.service\";\n\n@Component({\n    selector: 'of-card-details',\n    templateUrl: './card-details.component.html',\n})\nexport class CardDetailsComponent implements OnInit {\n\n    card: Card;\n    details: Detail[];\n\n    constructor(private store: Store, private thirdsService: ThirdsService) {\n\n    }\n\n    ngOnInit() {\n        this.store.select(cardSelectors.selectCardStateSelected)\n            .subscribe(card => {\n                this.card = card;\n                if(card) {\n                    if(card.details) {\n                        this.details = [...card.details];\n                    }else{\n                        this.details = [];\n                    }\n                    this.thirdsService.queryThird(this.card.publisher, this.card.publisherVersion)\n                        .subscribe(third => {\n                            const state = third.extractState(this.card)\n                            if (state != null)\n                                this.details.push(...state.details);\n                        });\n                }\n            });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardEffects.html":{"url":"injectables/CardEffects.html","title":"injectable - CardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => this.service.loadCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadCardFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card.effects.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {CardService} from '@ofServices/card.service';\nimport {AppState} from \"@ofStore/index\";\nimport {CardActionTypes, LoadCard, LoadCardFailure, LoadCardSuccess} from \"@ofActions/card.actions\";\nimport {Card} from \"@ofModel/card.model\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class CardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService\n    ) {\n    }\n\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(CardActionTypes.LoadCard),\n            switchMap(action => this.service.loadCard(action.payload.id)),\n            map((card: Card) => {\n                return new LoadCardSuccess({card: card});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadCardFailure(err));\n                return caught;\n            })\n        );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFeedState.html":{"url":"interfaces/CardFeedState.html","title":"interface - CardFeedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardFeedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/feed.state.ts\n        \n\n            \n                Description\n            \n            \n                The Feed State consist of:\n\nEntityState of LightCard\nselectedCardId: the currently selected card id\nlastCards the last cards added / updated to the feed\nloading: weather there is an ongoing state modification\nmessage: last message during state processing\nfilters: a collection of filter to apply to the rendered feed\n\n\n            \n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        filters\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filters\n                                    \n                                \n                                \n                                    \n                                        filters:     Map\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Map\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n/**\n * The Feed State consist of:\n *  * EntityState of LightCard\n *  * selectedCardId: the currently selected card id\n *  * lastCards the last cards added / updated to the feed\n *  * loading: weather there is an ongoing state modification\n *  * message: last message during state processing\n *  * filters: a collection of filter to apply to the rendered feed\n */\nexport interface CardFeedState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    filters: Map;\n}\n\nexport function sortByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:sortByStartDate\n});\n\nexport const feedInitialState: CardFeedState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    });\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardListComponent.html":{"url":"components/CardListComponent.html","title":"component - CardListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/card-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-card-list\n            \n\n\n\n\n            \n                templateUrl\n                ./card-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/card-list.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        lightCards\n                    \n                \n                \n                    \n                        Type :     LightCard[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/card-list.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\nimport {LightCard} from '@ofModel/light-card.model';\n\n@Component({\n  selector: 'of-card-list',\n  templateUrl: './card-list.component.html',\n})\nexport class CardListComponent  {\n\n  @Input() public lightCards: LightCard[];\n  @Input() public selection: string;\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n  \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardOperationEffects.html":{"url":"injectables/CardOperationEffects.html","title":"injectable - CardOperationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardOperationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/card-operation.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subscribe\n                            \n                            \n                                updateSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/card-operation.effects.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        if (operation.type && operation.type.toString() === 'ADD') {\n                            const opCards = operation.cards;\n                            return new LoadLightCardsSuccess({lightCards: opCards});\n                        }\n                        return new AddLightCardFailure(\n                            {\n                                error:\n                                    new Error(`unhandled action type '${operation.type}'`)\n                            });\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af:ApplyFilter)=>af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af:ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start,af.payload.status.end)\n                .pipe(\n                    map(()=> {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/card-operation.effects.ts:67\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {CardService} from '@ofServices/card.service';\nimport {Observable} from 'rxjs';\nimport {catchError, filter, map, switchMap, takeUntil} from 'rxjs/operators';\nimport {\n    AddLightCardFailure,\n    HandleUnexpectedError,\n    LightCardActions,\n    LoadLightCardsSuccess,\n    UpdatedSubscription\n} from '@ofActions/light-card.actions';\nimport {AuthenticationActionTypes} from '@ofActions/authentication.actions';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ApplyFilter, FeedActionTypes} from \"@ofActions/feed.actions\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\n@Injectable()\nexport class CardOperationEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService) {\n    }\n\n    @Effect()\n    subscribe: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            switchMap(() => this.service.getCardOperation()\n                .pipe(\n                    takeUntil(this.service.unsubscribe$),\n                    map(operation => {\n                        if (operation.type && operation.type.toString() === 'ADD') {\n                            const opCards = operation.cards;\n                            return new LoadLightCardsSuccess({lightCards: opCards});\n                        }\n                        return new AddLightCardFailure(\n                            {\n                                error:\n                                    new Error(`unhandled action type '${operation.type}'`)\n                            });\n                    }),\n                    catchError((error, caught) => {\n                        this.store.dispatch(new AddLightCardFailure({error: error}));\n                        return caught;\n                    })\n                )\n            ),\n\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}));\n                return caught;\n            }));\n\n    @Effect()\n    updateSubscription: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(FeedActionTypes.ApplyFilter),\n            filter((af:ApplyFilter)=>af.payload.name == FilterType.TIME_FILTER),\n            switchMap((af:ApplyFilter) => this.service.updateCardSubscriptionWithDates(af.payload.status.start,af.payload.status.end)\n                .pipe(\n                    map(()=> {\n                        return new UpdatedSubscription();\n                    })\n                )\n            ),\n            catchError((error,caught )=> {\n                this.store.dispatch(new HandleUnexpectedError({error: error}))\n                return caught;\n            })\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CardService.html":{"url":"injectables/CardService.html","title":"injectable - CardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/card.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                cardOperationsUrl\n                            \n                            \n                                    Readonly\n                                cardsUrl\n                            \n                            \n                                    Readonly\n                                unsubscribe$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchCardOperation\n                            \n                            \n                                getCardOperation\n                            \n                            \n                                loadCard\n                            \n                            \n                                unsubscribeCardOperation\n                            \n                            \n                                    Public\n                                updateCardSubscriptionWithDates\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authenticationService: AuthenticationService, guidService: GuidService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/card.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        guidService\n                                                  \n                                                        \n                                                                    GuidService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchCardOperation\n                            \n                            \n                        \n                    \n                \n                \n                    \nfetchCardOperation(eventSource: EventSourcePolyfill)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/card.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventSource\n                                                        \n                                                                    EventSourcePolyfill\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCardOperation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCardOperation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/card.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadCard(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/card.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribeCardOperation\n                            \n                            \n                        \n                    \n                \n                \n                    \nunsubscribeCardOperation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/card.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateCardSubscriptionWithDates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateCardSubscriptionWithDates(rangeStart: number, rangeEnd: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/card.service.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rangeStart\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        rangeEnd\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardOperationsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cardsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            unsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/card.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {CardOperation} from '@ofModel/card-operation.model';\nimport {EventSourcePolyfill} from 'ng-event-source';\nimport {AuthenticationService} from './authentication.service';\nimport {Card} from \"@ofModel/card.model\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\n\n@Injectable()\nexport class CardService {\n    readonly unsubscribe$ = new Subject();\n    readonly cardOperationsUrl: string;\n    readonly cardsUrl: string;\n\n    constructor(private httpClient:HttpClient, private authenticationService: AuthenticationService,private guidService: GuidService) {\n        const clientId = this.guidService.getCurrentGuidString();\n        this.cardOperationsUrl = `${environment.urls.cards}/cardSubscription?clientId=${clientId}`;\n        this.cardsUrl = `${environment.urls.cards}/cards`;\n    }\n\n    loadCard(id: string): Observable {\n        return this.httpClient.get(`${this.cardsUrl}/${id}`);\n    }\n\n    getCardOperation(): Observable {\n        let minus2Hour = new Date(new Date().valueOf()-2*60*60*1000);\n        let plus48Hours = new Date(minus2Hour.valueOf()+48*60*60*1000);\n        //security header needed here as SSE request are not intercepted by our header interceptor\n        return this.fetchCardOperation(new EventSourcePolyfill(\n            `${this.cardOperationsUrl}&notification=true&rangeStart=${minus2Hour.valueOf()}&rangeEnd=${plus48Hours.valueOf()}`\n            , {headers: AuthenticationService.getSecurityHeader(),\n                heartbeatTimeout: 600000}));\n    }\n\n    unsubscribeCardOperation(){\n        this.unsubscribe$.next();\n    }\n\n    fetchCardOperation(eventSource: EventSourcePolyfill): Observable {\n        return Observable.create(observer => {\n            try {\n                eventSource.onmessage = message => {\n                    if (!message) {\n                        return observer.error(message);\n                    }\n                    return observer.next(JSON.parse(message.data));\n                };\n                eventSource.onerror = error => {\n                    console.error(`error occured from ES: ${error.toString()}`)\n                }\n\n            } catch (error) {\n                return observer.error(error);\n            }\n            return () => {\n                if (eventSource && eventSource.readyState !== eventSource.CLOSED) {\n                    eventSource.close();\n                }\n            };\n        })\n    }\n\n    public updateCardSubscriptionWithDates(rangeStart:number,rangeEnd:number):Observable{\n        return this.httpClient.post(\n            `${this.cardOperationsUrl}`,\n            {rangeStart:rangeStart,rangeEnd: rangeEnd});\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardState.html":{"url":"interfaces/CardState.html","title":"interface - CardState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CardState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/card.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        selected\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:     Card\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Card\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\n\nexport interface CardState{\n    selected: Card,\n    loading: boolean,\n    error: string\n}\n\nexport const cardInitialState: CardState = {\n    selected: null,\n    loading: false,\n    error: null\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardsModule.html":{"url":"modules/CardsModule.html","title":"module - CardsModule","body":"\n                   \n\n\n\n\n    Modules\n    CardsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/cards/cards.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HandlebarsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                        \n                            CardDetailsComponent\n                        \n                        \n                            DetailComponent\n                        \n                        \n                            DetailsComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/cards.module.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from \"./components/card/card.component\";\nimport {CardDetailsComponent} from \"./components/card-details/card-details.component\";\nimport {DetailsComponent} from \"./components/details/details.component\";\nimport {DetailComponent} from \"./components/detail/detail.component\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {ThirdsService} from \"../../services/thirds.service\";\nimport {HandlebarsService} from \"./services/handlebars.service\";\n\n@NgModule({\n  declarations: [CardComponent, CardDetailsComponent, DetailsComponent, DetailComponent],\n  imports: [\n    CommonModule,\n      TranslateModule\n  ],\n    exports: [CardComponent, CardDetailsComponent, DetailsComponent, DetailComponent],\n    providers: [HandlebarsService]\n})\nexport class CardsModule {\n    static forRoot(): ModuleWithProviders{\n        return {\n            ngModule: CardsModule,\n            providers: [ThirdsService]\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckAuthenticationStatus.html":{"url":"classes/CheckAuthenticationStatus.html","title":"class - CheckAuthenticationStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckAuthenticationStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.CheckAuthenticationStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckTokenResponse.html":{"url":"classes/CheckTokenResponse.html","title":"class - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                class corresponding to the response of the web service checking jwt token when this token is a valid one.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                clientId\n                            \n                            \n                                    Public\n                                    Optional\n                                exp\n                            \n                            \n                                    Public\n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sub?: string, exp?: number, clientId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:287\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sub\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        exp\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:291\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            exp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:290\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            sub\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:289\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of, throwError} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {Guid} from 'guid-typescript';\nimport {PayloadForSuccessfulAuthentication} from '@ofActions/authentication.actions';\nimport {environment} from \"@env/environment\";\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {AppState} from \"@ofStore/index\";\nimport {Store} from \"@ngrx/store\";\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport * as jwt_decode from \"jwt-decode\";\nimport * as _ from \"lodash\";\n\nexport enum LocalStorageAuthContent {\n    token = 'token',\n    expirationDate = 'expirationDate',\n    identifier = 'identifier',\n    clientId = 'clientId'\n}\n\nexport const ONE_SECOND = 1000;\n\n@Injectable()\nexport class AuthenticationService {\n\n    /** url to check authentication token (jwt) */\n    private checkTokenUrl = `${environment.urls.auth}/check_token`;\n    /** url to ask for an authentication token (jwt) */\n    private askTokenUrl = `${environment.urls.auth}/token`;\n    private clientId: string;\n    private clientSecret: string;\n    private loginClaim: string;\n    private expireClaim: string;\n    private delegateUrl: string;\n\n    /**\n     * @constructor\n     * @param httpClient - Angular build-in\n     * @param guidService - create and store the unique id for this application and user\n     * @param store NGRX store\n     */\n    constructor(private httpClient: HttpClient, private guidService: GuidService, private store: Store) {\n        store.select(buildConfigSelector('security'))\n            .subscribe(oauth2Conf => {\n                this.assignConfigurationProperties(oauth2Conf);\n\n            });\n    }\n\n    assignConfigurationProperties(oauth2Conf) {\n        this.clientId = _.get(oauth2Conf, 'oauth2.client-id', null);\n        this.clientSecret = _.get(oauth2Conf, 'oauth2.client-secret', null);\n        this.delegateUrl = _.get(oauth2Conf, 'oauth2.flow.delagate-url', null);\n        this.loginClaim = _.get(oauth2Conf, 'jwt.login-claim', 'sub');\n        this.expireClaim = _.get(oauth2Conf, 'jwt.expire-claim', 'exp');\n    }\n\n    /**\n     * Call the web service which checks the authentication token. A valid token gives back the authentication information\n     * and an invalid one an message.\n     *\n     * @param token - jwt token\n     * @return an {Observable} which contains the deserializable content of the token\n     * an message is thrown otherwise\n     */\n    checkAuthentication(token: string): Observable {\n        if (!!token) {\n            // const postData = new FormData();\n            const postData = new URLSearchParams();\n            postData.append('token', token);\n            const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n            return this.httpClient.post(this.checkTokenUrl, postData.toString(), {headers: headers}).pipe(\n                map(check => check),\n                catchError(AuthenticationService.handleError)\n            );\n        }\n        return of(null);\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param code OIDC code from code flow\n     */\n    askTokenFromCode(code: string):\n        Observable {\n        if (!this.clientId || !this.clientSecret || !this.loginClaim)\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('code', code);\n        params.append('grant_type', 'authorization_code');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('redirect_uri', AuthenticationService.computeRedirectUri());\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    /**\n     * Given a pair of connection, ask the web service generating jwt authentication token a token if the pair is\n     * a registered one.\n     * @param login\n     * @param password\n     */\n    askTokenFromPassword(login\n                             :\n                             string, password\n                             :\n                             string\n    ):\n        Observable {\n        if (!\n            this.clientId || !this.clientSecret\n        )\n            return throwError('The authentication service is no correctly initialized');\n        const params = new URLSearchParams();\n        params.append('username', login);\n        params.append('password', password);\n        params.append('grant_type', 'password');\n// beware clientId for token defines a type of authentication\n        params.append('clientId', this.clientId);\n        params.append('client_secret', this.clientSecret);\n\n        const headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8'});\n        return this.handleNewToken(this.httpClient.post(this.askTokenUrl, params.toString(), {headers: headers}));\n    }\n\n    private handleNewToken(call: Observable): Observable {\n        return call.pipe(\n            map(data => {\n                return {...data, clientId: this.guidService.getCurrentGuid()}\n            }),\n            map((auth: AuthObject) => this.convert(auth)),\n            tap(AuthenticationService.saveAuthenticationInformation),\n            catchError(AuthenticationService.handleError)\n        );\n    }\n\n    private static handleError(error: any) {\n        console.error(error);\n        return throwError(error);\n    }\n\n    /**\n     * extract the jwt authentication token from the localstorage\n     */\n    static extractToken(): string {\n        return localStorage.getItem(LocalStorageAuthContent.token);\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localestorage` is still running, false otherwise.\n     */\n    static verifyExpirationDate(): boolean {\n        // + to convert the stored number as a string back to number\n        const expirationDate = +localStorage.getItem(LocalStorageAuthContent.expirationDate);\n        const isNotANumber = isNaN(expirationDate);\n        const stillValid = isInTheFuture(expirationDate);\n        return !isNotANumber && stillValid;\n    }\n\n    /**\n     * @return true if the expiration date stored in the `localstorage` is over, false otherwise\n     */\n    static isExpirationDateOver(): boolean {\n        return !AuthenticationService.verifyExpirationDate();\n    }\n\n    /**\n     * clear the `localstorage` from all its content.\n     */\n    static clearAuthenticationInformation(): void {\n        localStorage.clear();\n    }\n\n    /**\n     * save the authentication informatios such as identifier, jwt token, expiration date and clientId in the\n     * `localstorage`.\n     * @param payload\n     */\n    static saveAuthenticationInformation(payload: PayloadForSuccessfulAuthentication) {\n        localStorage.setItem(LocalStorageAuthContent.identifier, payload.identifier);\n        localStorage.setItem(LocalStorageAuthContent.token, payload.token);\n        localStorage.setItem(LocalStorageAuthContent.expirationDate, payload.expirationDate.getTime().toString());\n        localStorage.setItem(LocalStorageAuthContent.clientId, payload.clientId.toString());\n    }\n\n    /**\n     * extract from the `localstorage` the authentication relevant information such as dentifier, jwt token,\n     * expiration date and clientId\n     * @return {PayloadForSuccessfulAuthentication}\n     */\n    static extractIdentificationInformation(): PayloadForSuccessfulAuthentication {\n        return new PayloadForSuccessfulAuthentication(\n            localStorage.getItem(LocalStorageAuthContent.identifier),\n            Guid.parse(localStorage.getItem(LocalStorageAuthContent.clientId)),\n            localStorage.getItem(LocalStorageAuthContent.token),\n            // as getItem return a string, `+` isUsed\n            new Date(+localStorage.getItem(LocalStorageAuthContent.expirationDate)),\n        );\n    }\n\n\n\n    /**\n     * helper method to convert an {AuthObject} instance into a {PayloadForSuccessfulAuthentication} instance.\n     * @param payload\n     */\n    public convert(payload: AuthObject):\n        PayloadForSuccessfulAuthentication {\n        let expirationDate;\n        const jwt = AuthenticationService.decodeToken(payload.access_token);\n        if (!!payload.expires_in)\n            expirationDate = Date.now() + ONE_SECOND * payload.expires_in;\n        else if (!!this.expireClaim)\n            expirationDate = jwt[this.expireClaim];\n        else\n            expirationDate = 0;\n\n        return new PayloadForSuccessfulAuthentication(jwt[this.loginClaim],\n            payload.clientId,\n            payload.access_token,\n            new Date(expirationDate)\n        );\n    }\n\n    /**\n     * helper method to put the jwt token into an appropriate string usable as an http header\n     */\n    static getSecurityHeader() {\n        return {'Authorization': `Bearer ${AuthenticationService.extractToken()}`};\n    }\n\n    public moveToCodeFlowLoginPage() {\n        if (!this.clientId || !this.clientSecret)\n            return throwError('The authentication service is no correctly iniitialized');\n        if(!this.delegateUrl)\n            window.location.href = `${environment.urls.auth}/code/redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        else{\n            window.location.href = `${this.delegateUrl}&redirect_uri=${AuthenticationService.computeRedirectUri()}`;\n        }\n    }\n\n    static computeRedirectUri(){\n        const uriBase = location.origin;\n        const pathEnd = (location.pathname.length > 1)?location.pathname:'';\n        return `${uriBase}${pathEnd}`\n    }\n\n    static decodeToken(token: string): any {\n        try {\n            return jwt_decode(token);\n        }\n        catch (Error) {\n            return null;\n        }\n    }\n}\n\n/**\n * class used to try to login using the authentication web service.\n */\nexport class AuthObject {\n\n    constructor(\n        public access_token: string,\n        public expires_in: number,\n        public clientId: Guid,\n        public identifier?: string\n    ) {\n    }\n\n}\n\n/**\n * class corresponding to the response of the web service checking jwt token when this token is a valid one.\n */\nexport class CheckTokenResponse {\n    constructor(\n        public sub?: string,\n        public exp?: number,\n        public clientId?: string,\n    ) {\n    }\n}\n\n/**\n * helper @method to confirm or not if the number corresponding to a given time is in the futur regarding the present\n * moment.\n * @param time - a number corresponding to an UTC time to test\n * @return  true if time is in the future regarding the present moment, false otherwise\n */\nexport function isInTheFuture(time: number): boolean {\n    return time > Date.now();\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCard.html":{"url":"classes/ClearCard.html","title":"class - ClearCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.ClearCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigEffects.html":{"url":"injectables/ConfigEffects.html","title":"injectable - ConfigEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/config.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                            \n                                retry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ConfigService, retryDelay: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/config.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        retryDelay\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:54\n                            \n                        \n\n                \n                    \n                        Manages load -> service request -> success/message\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/config.effects.ts:71\n                            \n                        \n\n                \n                    \n                        Manages load retry upon message\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable} from 'rxjs';\nimport {catchError, delay, filter, map, switchMap, withLatestFrom} from 'rxjs/operators';\nimport {ConfigService} from '@ofServices/config.service';\nimport {AppState} from \"@ofStore/index\";\nimport {ConfigActionTypes, LoadConfig, LoadConfigFailure, LoadConfigSuccess} from \"@ofActions/config.actions\";\nimport {selectConfigRetry} from \"@ofSelectors/config.selectors\";\nimport {CONFIG_LOAD_MAX_RETRIES} from \"@ofStates/config.state\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class ConfigEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ConfigService,\n                @Inject('configRetryDelay')\n                private retryDelay: number = 5000,\n    ) {\n\n        if (this.retryDelay > 0)\n            this.retry = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig()),\n                    delay(this.retryDelay)\n                );\n        else\n            this.retry = this.actions$\n                .pipe(\n                    ofType(ConfigActionTypes.LoadConfigFailure),\n                    withLatestFrom(this.store.select(selectConfigRetry)),\n                    filter(([action, retry]) => retry  new LoadConfig())\n                );\n    }\n\n    /**\n     * Manages load -> service request -> success/message\n     */\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(ConfigActionTypes.LoadConfig),\n            switchMap(action => this.service.fetchConfiguration()),\n            map((config: any) => {\n                return new LoadConfigSuccess({config: config});\n            }),\n            catchError((err, caught) => {\n                this.store.dispatch(new LoadConfigFailure(err));\n                return caught;\n            })\n        );\n\n    /**\n     * Manages load retry upon message\n     */\n    @Effect()\n    retry: Observable;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/config.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchConfiguration\n                            \n                            \n                        \n                    \n                \n                \n                    \nfetchConfiguration()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/config.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/config.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {environment} from \"@env/environment\";\n\n@Injectable()\nexport class ConfigService {\n    private configUrl: string;\n\n    constructor(private httpClient: HttpClient) {\n        this.configUrl = `${environment.urls.config}`;\n    }\n\n    fetchConfiguration(): Observable {\n        return this.httpClient.get(`${this.configUrl}`)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigState.html":{"url":"interfaces/ConfigState.html","title":"interface - ConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/config.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        error\n                                \n                                \n                                        loaded\n                                \n                                \n                                        loading\n                                \n                                \n                                        retry\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                    \n                                \n                                \n                                    \n                                        loaded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retry\n                                    \n                                \n                                \n                                    \n                                        retry:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Card} from \"@ofModel/card.model\";\n\nexport const CONFIG_LOAD_MAX_RETRIES = 5;\n\nexport interface ConfigState{\n    config:any,\n    loading: boolean,\n    loaded: boolean,\n    error: string,\n    retry: number\n}\n\nexport const configInitialState: ConfigState = {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomRouterEffects.html":{"url":"injectables/CustomRouterEffects.html","title":"injectable - CustomRouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomRouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/custom-router.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToCard\n                            \n                            \n                                navigateToMenuURL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: CardService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/custom-router.effects.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    CardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToCard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateToMenuURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new UpdateSelectedMenu({menu_id: routerState.params['menu_id'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/custom-router.effects.ts:44\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Action, Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Actions, Effect, ofType} from \"@ngrx/effects\";\nimport {CardService} from \"@ofServices/card.service\";\nimport {Observable} from \"rxjs\";\nimport {ROUTER_NAVIGATION, RouterNavigationAction} from \"@ngrx/router-store\";\nimport {filter, switchMap} from \"rxjs/operators\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {SelectLightCard} from \"@ofActions/light-card.actions\";\nimport {UpdateSelectedMenu} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class CustomRouterEffects {\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: CardService\n    ) {}\n\n    @Effect()\n    navigateToCard: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/feed/cards/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new LoadCard({id: routerState.params['cid']}),\n                new SelectLightCard({selectedCardId: routerState.params['cid']})\n            ];\n        })\n    );\n\n    @Effect()\n    navigateToMenuURL: Observable = this.actions$.pipe(\n        ofType(ROUTER_NAVIGATION),\n        filter((action: RouterNavigationAction, index)=> {\n            return action.payload.event.url.indexOf(\"/thirdparty/\")>=0;\n        }),\n        switchMap(action=>{\n            const routerState:any = action.payload.routerState;\n            return [\n                new UpdateSelectedMenu({menu_id: routerState.params['menu_id'],menu_entry_id: routerState.params['menu_entry_id']})\n            ];\n        })\n    );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouterStateSerializer.html":{"url":"classes/CustomRouterStateSerializer.html","title":"class - CustomRouterStateSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouterStateSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractParams\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            extractParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractParams(state: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/store/states/router.state.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Params\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serialize\n                            \n                            \n                        \n                    \n                \n                \n                    \nserialize(routerState: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/store/states/router.state.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routerState\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     RouterStateUrl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Detail.html":{"url":"classes/Detail.html","title":"class - Detail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Detail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/card.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(titlePosition: TitlePosition, title: I18n, titleStyle: string, templateName: string, styles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/card.model.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        titlePosition\n                                                  \n                                                        \n                                                                    TitlePosition\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleStyle\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        styles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Severity} from \"@ofModel/light-card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map} from \"@ofModel/map\";\n\nexport class Card {\n    /* istanbul ignore next */\n    constructor(\n        readonly uid: string,\n        readonly id: string,\n        readonly publisher: string,\n        readonly publisherVersion: string,\n        readonly publishDate: number,\n        readonly startDate: number,\n        readonly endDate: number,\n        readonly severity: Severity,\n        readonly mainRecipient: string,\n        readonly process?: string,\n        readonly processId?: string,\n        readonly state?: string,\n        readonly lttd?: number,\n        readonly title?: I18n,\n        readonly summary?: I18n,\n        readonly  data?: any,\n        readonly  details?: Detail[],\n    ) {\n    }\n}\n\nexport enum TitlePosition {\n    UP, DOWN, NONE\n\n}\n\nexport class Detail {\n    /* istanbul ignore next */\n    constructor(\n        readonly titlePosition: TitlePosition,\n        readonly title: I18n,\n        readonly titleStyle: string,\n        readonly templateName: string,\n        readonly styles: string[]) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailComponent.html":{"url":"components/DetailComponent.html","title":"component - DetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/detail/detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _htmlContent\n                            \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Readonly\n                                hrefsOfCssLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachAction\n                            \n                            \n                                bindActions\n                            \n                            \n                                    Private\n                                initializeHandlebarsTemplates\n                            \n                            \n                                    Private\n                                initializeHrefsOfCssLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reinsertScripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                detail\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    htmlContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef, thirds: ThirdsService, handlebars: HandlebarsService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/detail/detail.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        handlebars\n                                                  \n                                                        \n                                                                    HandlebarsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :     Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        detail\n                    \n                \n                \n                    \n                        Type :     Detail\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachAction(button: HTMLButtonElement, action: Action, actionId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        button\n                                                        \n                                                                    HTMLButtonElement\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                        \n                                                                    Action\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        actionId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bindActions\n                            \n                            \n                        \n                    \n                \n                \n                    \nbindActions(third: Third)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        third\n                                                        \n                                                                    Third\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initializeHandlebarsTemplates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initializeHandlebarsTemplates()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initializeHrefsOfCssLink\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initializeHrefsOfCssLink()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reinsertScripts\n                            \n                            \n                        \n                    \n                \n                \n                    \nreinsertScripts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _htmlContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SafeHtml\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hrefsOfCssLink\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        htmlContent\n                    \n                \n\n                \n                    \n                        gethtmlContent()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/detail/detail.component.ts:69\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit} from '@angular/core';\nimport {Card, Detail} from '@ofModel/card.model';\nimport {ThirdsService} from \"../../../../services/thirds.service\";\nimport {HandlebarsService} from \"../../services/handlebars.service\";\nimport {DomSanitizer, SafeHtml, SafeResourceUrl} from \"@angular/platform-browser\";\nimport {Action, Third} from \"@ofModel/thirds.model\";\nimport {zip} from \"rxjs\";\n\n@Component({\n    selector: 'of-detail',\n    templateUrl: './detail.component.html',\n})\nexport class DetailComponent implements OnInit {\n    public active = false;\n    @Input() detail: Detail;\n    @Input() card: Card;\n    readonly hrefsOfCssLink = new Array();\n    private _htmlContent: SafeHtml;\n\n    constructor(private element: ElementRef,\n                private thirds: ThirdsService,\n                private handlebars: HandlebarsService,\n                private sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit() {\n        this.initializeHrefsOfCssLink();\n        this.initializeHandlebarsTemplates();\n    }\n\n    private initializeHrefsOfCssLink() {\n        if (this.detail && this.detail.styles) {\n            const publisher = this.card.publisher;\n            const publisherVersion = this.card.publisherVersion;\n            this.detail.styles.forEach(style => {\n                const cssUrl = this.thirds.computeThirdCssUrl(publisher, style, publisherVersion);\n                //needed to instantiate href of link for css in component rendering\n                const safeCssUrl = this.sanitizer.bypassSecurityTrustResourceUrl(cssUrl);\n                this.hrefsOfCssLink.push(safeCssUrl);\n\n                console.log(`this is the safe resource Url for css '${safeCssUrl.toString()}' and with local version '${safeCssUrl.toLocaleString()}'`)\n            });\n        }\n    }\n\n    private initializeHandlebarsTemplates() {\n\n        zip(this.thirds.queryThird(this.card.publisher,this.card.publisherVersion),\n        this.handlebars.executeTemplate(this.detail.templateName, this.card))\n            .subscribe(\n                ([third,html]) => {\n                this._htmlContent = this.sanitizer.bypassSecurityTrustHtml(html);\n                setTimeout(() => { // wait for DOM rendering\n                    this.reinsertScripts();\n                    this.bindActions(third);\n                });\n            }\n        );\n    }\n\n\n    get htmlContent() {\n        return this._htmlContent;\n    }\n\n    reinsertScripts(): void {\n        const scripts = this.element.nativeElement.getElementsByTagName('script');\n        const scriptsInitialLength = scripts.length;\n        for (let i = 0; i this.element.nativeElement.getElementsByTagName('button');\n\n        for (let button of buttons) {\n            if (button.attributes['action-id']) {\n                const actionId = button.attributes['action-id'].nodeValue;\n                if (actionId) {\n                    const state = third.extractState(this.card);\n                    if(!!state && !!state.actions[actionId])\n                        this.attachAction(button, state.actions[actionId], actionId);\n                }\n            }\n        }\n    }\n\n    attachAction(button: HTMLButtonElement, action: Action, actionId: string) {\n        button.classList.add('btn');\n        if (action.buttonStyle) {\n            for (let c of action.buttonStyle.split(' ')) {\n                button.classList.add(c);\n            }\n        } else {\n            button.classList.add('btn-light');\n        }\n        if (action.contentStyle) {\n            for (let c of action.contentStyle.split(' ')) {\n                button.children[0].classList.add(c);\n            }\n        } else {\n            button.children[0].classList.add('fa', 'fa-warning', 'text-dark');\n        }\n        button.addEventListener('click', (event: Event) => {\n            alert(`${actionId} was triggered.\\nAction handling is not yet implemented`);\n        });\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/cards/components/details/details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-details\n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _i18nPrefix\n                            \n                            \n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectDetail\n                            \n                            \n                                    Private\n                                updateAsync\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    i18nPrefix\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        card\n                    \n                \n                \n                    \n                        Type :     Card\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes: SimpleChanges)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                        \n                                                                    SimpleChanges\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectDetail(detail: DetailComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detail\n                                                        \n                                                                    DetailComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateAsync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateAsync()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _i18nPrefix\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            details\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(DetailComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        i18nPrefix\n                    \n                \n\n                \n                    \n                        geti18nPrefix()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/cards/components/details/details.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ContentChildren, Input, OnChanges, QueryList, SimpleChanges} from '@angular/core';\nimport {DetailComponent} from \"../detail/detail.component\";\nimport {Card} from \"@ofModel/card.model\";\n\n@Component({\n    selector: 'of-details',\n    templateUrl: './details.component.html',\n})\nexport class DetailsComponent implements AfterViewInit, OnChanges {\n\n    @ContentChildren(DetailComponent) details: QueryList;\n    @Input() card: Card;\n    private _i18nPrefix: string;\n\n    constructor() {\n    }\n\n    ngAfterViewInit(): void {\n        this.updateAsync();\n        this.details.changes.subscribe(\n            () => {\n                this.updateAsync();\n            }\n        );\n    }\n\n    private updateAsync() {\n        setTimeout(() => {\n            let activeDetail = this.details.filter((tab) => tab.active)\n            // if there is no active tab set, activate the first\n            if (activeDetail.length === 0) {\n                this.selectDetail(this.details.first);\n            }\n        });\n    }\n\n    selectDetail(detail: DetailComponent) {\n        // deactivate all tabs\n        this.details.toArray().forEach(detail => detail.active = false);\n\n        // activate the tab the user has clicked on.\n        if (detail)\n            detail.active = true;\n    }\n\n    public get i18nPrefix(){\n        return this._i18nPrefix;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if(changes['card'].currentValue)\n            this._i18nPrefix = changes['card'].currentValue.publisher+'.'+changes['card'].currentValue.publisherVersion+'.';\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    {{i18nPrefix+detailC.detail.title.key}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{i18nPrefix+detailC.detail.title.key}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DraggableDirective.html":{"url":"directives/DraggableDirective.html","title":"directive - DraggableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DraggableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/app-draggable.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDraggable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dragging\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragEnd\n                            \n                            \n                                dragMove\n                            \n                            \n                                dragStart\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                pointerdown\n                            \n                            \n                                pointermove\n                            \n                            \n                                pointerup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        dragEnd\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragMove\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dragStart\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:7\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            pointerdown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \npointerdown(event: PointerEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pointermove\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \npointermove(event: PointerEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pointerup\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \npointerup(event: PointerEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dragging\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/app-draggable.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n  selector: '[appDraggable]'\n})\nexport class DraggableDirective {\n  @Output() dragStart = new EventEmitter();\n  @Output() dragMove = new EventEmitter();\n  @Output() dragEnd = new EventEmitter();\n\n  private dragging = false;\n\n  @HostListener('pointerdown', ['$event'])\n  onPointerDown(event: PointerEvent): void {\n    this.dragging = true;\n    this.dragStart.emit(event);\n  }\n\n  @HostListener('pointermove', ['$event'])\n  onPointerMove(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n\n    this.dragMove.emit(event);\n  }\n\n  @HostListener('pointerup', ['$event'])\n  onPointerUp(event: PointerEvent): void {\n    if (!this.dragging) {\n      return;\n    }\n\n    this.dragging = false;\n    this.dragEnd.emit(event);\n  }\n\n  // Uncomment if you delete the unselection set inside css,\n  // this code will block the movement when u select some text\n  // !!! a little movement still appear !!!\n  /* @HostListener('document:dragstart', ['$event'])\n   onDragEnd(event: DragEvent): void {\n     if (!this.dragging) {\n       return;\n     }\n     this.dragging = false;\n   }*/\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyLightCards.html":{"url":"classes/EmptyLightCards.html","title":"class - EmptyLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.EmptyLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedComponent.html":{"url":"components/FeedComponent.html","title":"component - FeedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/feed.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-cards\n            \n\n            \n                styleUrls\n                ./feed.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./feed.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lightCards$\n                            \n                            \n                                selection$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/feed.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/feed.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {select, Store} from '@ngrx/store';\nimport {AppState} from '@ofStore/index';\nimport {Observable, of} from 'rxjs';\nimport {LightCard} from '@ofModel/light-card.model';\nimport * as feedSelectors from '@ofSelectors/feed.selectors';\nimport {catchError} from \"rxjs/operators\";\n\n@Component({\n    selector: 'of-cards',\n    templateUrl: './feed.component.html',\n    styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit, AfterViewInit {\n\n    lightCards$: Observable;\n    selection$: Observable;\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFilteredFeed),\n            catchError(err => of([]))\n        );\n        this.selection$ = this.store.select(feedSelectors.selectLightCardSelection);\n    }\n\n\n    ngAfterViewInit() {\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n        \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./feed.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedFiltersEffects.html":{"url":"injectables/FeedFiltersEffects.html","title":"injectable - FeedFiltersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeedFiltersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/feed-filters.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/feed-filters.effects.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadFeedFilterOnAuthenticationSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters});\n            }))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/feed-filters.effects.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {AuthenticationActionTypes} from '@ofActions/authentication.actions';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {FilterService} from \"@ofServices/filter.service\";\nimport {FeedActions, InitFilters} from \"@ofActions/feed.actions\";\n\n@Injectable()\nexport class FeedFiltersEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: FilterService) {\n    }\n\n    @Effect()\n    loadFeedFilterOnAuthenticationSuccess: Observable = this.actions$\n        .pipe(\n            // loads card operations only after authentication of a default user ok.\n            ofType(AuthenticationActionTypes.AcceptLogIn),\n            map((action) => {\n                return new InitFilters({filters:this.service.defaultFilters});\n            }));\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedModule.html":{"url":"modules/FeedModule.html","title":"module - FeedModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\n\nCardListComponent\n\nCardListComponent\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nCardsModule\n\nCardsModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardListComponent\n                        \n                        \n                            CustomTimelineChartComponent\n                        \n                        \n                            DraggableDirective\n                        \n                        \n                            FeedComponent\n                        \n                        \n                            FiltersComponent\n                        \n                        \n                            InitChartComponent\n                        \n                        \n                            MouseWheelDirective\n                        \n                        \n                            NoSelectionComponent\n                        \n                        \n                            TimeFilterComponent\n                        \n                        \n                            TimeLineComponent\n                        \n                        \n                            TypeFilterComponent\n                        \n                        \n                            XAxisTickFormatPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardsModule\n                        \n                        \n                            FeedRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeedComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardListComponent} from './components/card-list/card-list.component';\nimport {FeedComponent} from './feed.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FeedRoutingModule} from \"./feed-routing.module\";\nimport {NoSelectionComponent} from './components/no-selection/no-selection.component';\nimport {TimeLineComponent} from './components/time-line/time-line.component';\nimport {CardsModule} from \"../cards/cards.module\";\nimport {FiltersComponent} from './components/card-list/filters/filters.component';\nimport {TypeFilterComponent} from './components/card-list/filters/type-filter/type-filter.component';\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {TimeFilterComponent} from './components/card-list/filters/time-filter/time-filter.component';\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faClock} from \"@fortawesome/free-solid-svg-icons\";\nimport {ChartCommonModule, NgxChartsModule} from \"@swimlane/ngx-charts\";\nimport {CustomTimelineChartComponent} from \"./components/custom-timeline-chart/custom-timeline-chart.component\";\nimport {XAxisTickFormatPipe} from \"./components/time-line/x-axis-tick-format.pipe\";\nimport {MouseWheelDirective} from \"./components/time-line/mouse-wheel.directive\";\nimport {DraggableDirective} from \"./components/time-line/app-draggable\";\nimport {InitChartComponent} from \"./components/init-chart/init-chart.component\";\n\nlibrary.add(faClock);\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        NgxChartsModule,\n        ChartCommonModule,\n        ReactiveFormsModule,\n        TranslateModule,\n        NgbModule.forRoot(),\n        CardsModule,\n        FeedRoutingModule,\n        FontAwesomeModule,\n    ],\n    declarations: [CardListComponent, FeedComponent, NoSelectionComponent, TimeLineComponent, FiltersComponent, TypeFilterComponent, TimeFilterComponent,\n        InitChartComponent,\n        CustomTimelineChartComponent,\n        DraggableDirective,\n        MouseWheelDirective,\n        XAxisTickFormatPipe],\n    exports: [FeedComponent]\n})\nexport class FeedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedRoutingModule.html":{"url":"modules/FeedRoutingModule.html","title":"module - FeedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/feed-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {FeedComponent} from \"./feed.component\";\n// import {AuthenticationGuard} from \"@ofServices/guard.service\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {DetailComponent} from \"../cards/components/detail/detail.component\";\nimport {CardDetailsComponent} from \"../cards/components/card-details/card-details.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedComponent,\n        // canActivate: [AuthenticationGuard],\n        children: [\n            // {\n            //     path: '',\n            //     pathMatch: 'full',\n            //     redirectTo: 'cards'\n            // },\n            {\n                path: 'cards',\n                children : [\n                    {\n                        path: '',\n                        component: CardDetailsComponent,\n                    },\n                    {\n                        path: ':cid',\n                        component: CardDetailsComponent,\n                        children: [\n                            {\n                                path: 'details/:did',\n                                component: DetailComponent\n                            }\n                        ]\n                    }]\n            },\n            ]\n    },\n]\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/feed-filter.model.ts\n        \n\n            \n                Description\n            \n            \n                A Filter gather both the feed filtering behaviour and the filter status for\nfiltering parametrization and component state\nThe function property funktion takes two arguments :\n\ncard: the card for which to evaluate filter\nstatus: the status of the current filter\n\nBeware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\nin Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\nfunktion\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                chainFilter\n                            \n                            \n                                    Static\n                                chainFilter\n                            \n                            \n                                clone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(funktion: (undefined,undefined) => void, active: boolean, status: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/feed-filter.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        funktion\n                                                  \n                                                        \n                                                                    function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(card: LightCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:43\n                            \n                        \n\n\n                \n                    \n                            apply the filter to the card, returns true if the card passes the filter, false otherwise\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    LightCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chainFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nchainFilter(card: LightCard, next: Filter[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:56\n                            \n                        \n\n\n                \n                    \n                            Apply this filter to a card, then a chain of filter recursively.\nThe recursion stops when the card is filtered out\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    LightCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    Filter[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            chainFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        chainFilter(card: LightCard, next: Filter[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:67\n                            \n                        \n\n\n                \n                    \n                            Sequentially applies a chain of filters to a card\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    LightCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    Filter[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clone\n                            \n                            \n                        \n                    \n                \n                \n                    \nclone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/feed-filter.model.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Filter\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {LightCard} from \"@ofModel/light-card.model\";\n\n/**\n * A Filter gather both the feed filtering behaviour and the filter status for\n * filtering parametrization and component state\n *\n * The function property funktion takes two arguments :\n *  * card: the card for which to evaluate filter\n *  * status: the status of the current filter\n *\n * Beware: we use a copy constructor for replication of filters as a store state so take care of funktion scope\n * in Filter implementation (Instanciation and Inheritance). This is the reason why we pass the filter status upon\n * funktion\n */\nexport class Filter {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly funktion: (LightCard,any) => boolean,\n        public active:boolean,\n        public status: any\n    ) {\n    }\n\n    clone():Filter {\n        return new Filter(\n            this.funktion,\n            this.active,\n            this.status);\n    }\n\n    /**\n     * apply the filter to the card, returns true if the card passes the filter, false otherwise\n     * @param card\n     */\n    applyFilter(card: LightCard):boolean{\n        if(this.active){\n            return this.funktion(card,this.status);\n        }\n        return true;\n    }\n\n    /**\n     * Apply this filter to a card, then a chain of filter recursively.\n     * The recursion stops when the card is filtered out\n     * @param card\n     * @param next\n     */\n    chainFilter(card: LightCard, next: Filter[]){\n        if(this.applyFilter(card))\n            return !next || next.length == 0 || next[0].chainFilter(card,next.slice(1));\n        return false\n    }\n\n    /**\n     * Sequentially applies a chain of filters to a card\n     * @param card\n     * @param next\n     */\n    static chainFilter(card: LightCard, next: Filter[]){\n        return !next||next.length == 0 || next[0].chainFilter(card,next.slice(1));\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filter.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _defaultFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initFilters\n                            \n                            \n                                    Private\n                                initRecipientFilter\n                            \n                            \n                                    Private\n                                initTimeFilter\n                            \n                            \n                                    Private\n                                initTypeFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    defaultFilters\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filter.service.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initFilters\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initFilters()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Map\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initRecipientFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initRecipientFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initTimeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initTimeFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initTypeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initTypeFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _defaultFilters\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/filter.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        defaultFilters\n                    \n                \n\n                \n                    \n                        getdefaultFilters()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/filter.service.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {LightCard, Severity} from \"@ofModel/light-card.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FilterService {\n\n    private _defaultFilters = new Map();\n\n    constructor() {\n        this._defaultFilters = this.initFilters();\n    }\n\n    get defaultFilters(): Map {\n        return this._defaultFilters;\n    }\n\n\n    private initTypeFilter() {\n        const alarm = Severity.ALARM;\n        const action = Severity.ACTION;\n        const question = Severity.QUESTION;\n        const notification = Severity.NOTIFICATION;\n        return new Filter(\n            (card, status) => {\n                const result =\n                    status.alarm && card.severity == alarm ||\n                    status.action && card.severity == action ||\n                    status.question && card.severity == question ||\n                    status.notification && card.severity == notification;\n                return result;\n            },\n            true,\n            {\n                alarm: true,\n                action: true,\n                question: true,\n                notification: false\n            }\n        );\n    }\n\n    private initRecipientFilter() {\n        return new Filter(\n            (card, status) => false,\n            false,\n            {}\n        );\n    }\n\n    private initTimeFilter() {\n        return new Filter(\n            (card:LightCard, status) => {\n                if (!!status.start && !!status.end) {\n                    if (!card.endDate)\n                        return card.startDate  {\n        const filters = new Map();\n        filters.set(FilterType.TYPE_FILTER, this.initTypeFilter());\n        filters.set(FilterType.RECIPIENT_FILTER, this.initRecipientFilter());\n        filters.set(FilterType.TIME_FILTER, this.initTimeFilter());\n        return filters;\n    }\n}\n\nexport enum FilterType {\n    TYPE_FILTER,\n    RECIPIENT_FILTER,\n    TIME_FILTER,\n    TEST_FILTER\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersComponent.html":{"url":"components/FiltersComponent.html","title":"component - FiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/filters.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-filters\n            \n\n\n\n\n            \n                templateUrl\n                ./filters.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/filters.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-filters',\n  templateUrl: './filters.component.html',\n})\nexport class FiltersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'FiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidService.html":{"url":"classes/GuidService.html","title":"class - GuidService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/guid.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                guid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentGuid\n                            \n                            \n                                getCurrentGuidString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            guid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentGuid\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentGuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Guid\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentGuidString\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentGuidString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/guid.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Inject} from \"@angular/core\";\nimport {Guid} from \"guid-typescript\";\n\n@Inject({\n    providedIn: 'root'\n})\nexport class GuidService {\n\n    private readonly guid: Guid;\n\n    constructor() {\n        this.guid = Guid.create();\n    }\n\n    getCurrentGuid(): Guid {\n        return this.guid;\n    }\n\n    getCurrentGuidString():string{\n        return this.getCurrentGuid().toString();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError.html":{"url":"classes/HandleUnexpectedError.html","title":"class - HandleUnexpectedError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-1.html":{"url":"classes/HandleUnexpectedError-1.html","title":"class - HandleUnexpectedError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-2.html":{"url":"classes/HandleUnexpectedError-2.html","title":"class - HandleUnexpectedError-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandleUnexpectedError-3.html":{"url":"classes/HandleUnexpectedError-3.html","title":"class - HandleUnexpectedError-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandleUnexpectedError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.HandleUnexpectedError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    UpdateSelectedMenu = '[Menu] Update Selected Menu',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action used to update the state with the selected menu\n */\n//TODO Describe usage (cf authentication example)\nexport class UpdateSelectedMenu implements Action {\n    readonly type = MenuActionTypes.UpdateSelectedMenu;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_entry_id: string}) {}\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | UpdateSelectedMenu;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarsService.html":{"url":"injectables/HandlebarsService.html","title":"injectable - HandlebarsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/cards/services/handlebars.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                templateCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                executeTemplate\n                            \n                            \n                                    Private\n                                queryTemplate\n                            \n                            \n                                    Private\n                                registerArrayAtIndex\n                            \n                            \n                                    Private\n                                registerArrayAtIndexLength\n                            \n                            \n                                    Private\n                                registerBool\n                            \n                            \n                                    Private\n                                registerCardAction\n                            \n                            \n                                    Private\n                                registerDateFormat\n                            \n                            \n                                    Private\n                                registerI18n\n                            \n                            \n                                    Private\n                                registerMath\n                            \n                            \n                                    Private\n                                registerNow\n                            \n                            \n                                    Private\n                                registerNumberFormat\n                            \n                            \n                                    Private\n                                registerPreserveSpace\n                            \n                            \n                                    Private\n                                registerSlice\n                            \n                            \n                                    Private\n                                registerSort\n                            \n                            \n                                    Private\n                                registerSplit\n                            \n                            \n                                    Private\n                                registerSvg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time: TimeService, translate: TranslateService, thirds: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/cards/services/handlebars.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                    TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirds\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            executeTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        executeTemplate(templateName: string, card: Card)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        card\n                                                        \n                                                                    Card\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            queryTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        queryTemplate(publisher: string, version: string, name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerArrayAtIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerArrayAtIndex()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerArrayAtIndexLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerArrayAtIndexLength()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerBool\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerBool()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerCardAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerCardAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerDateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerDateFormat()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:240\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerI18n\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerI18n()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:182\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerMath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerMath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerNow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerNow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:255\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerNumberFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerNumberFormat()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerPreserveSpace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerPreserveSpace()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:262\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerSlice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerSlice()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerSort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerSort()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerSplit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerSplit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:97\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerSvg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerSvg()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:208\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            templateCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/cards/services/handlebars.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from \"@angular/core\";\nimport {Card} from \"@ofModel/card.model\";\nimport * as Handlebars from \"handlebars/dist/handlebars.js\"\nimport {TimeService} from \"@ofServices/time.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport * as moment from 'moment';\nimport {Map} from \"@ofModel/map\";\nimport {Observable, of} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport {ThirdsService} from \"../../../services/thirds.service\";\nimport {Guid} from \"guid-typescript\";\n\n@Injectable()\nexport class HandlebarsService {\n\n    private templateCache:Map = new Map();\n\n    constructor(private time:TimeService,\n                private translate: TranslateService,\n                private thirds: ThirdsService){\n        this.registerPreserveSpace();\n        this.registerNumberFormat();\n        this.registerDateFormat();\n        this.registerCardAction();\n        this.registerSvg();\n        this.registerI18n();\n        this.registerSort();\n        this.registerSlice();\n        this.registerArrayAtIndex();\n        this.registerMath();\n        this.registerSplit();\n        this.registerArrayAtIndexLength();\n        this.registerBool();\n        this.registerNow();\n    }\n\n    public executeTemplate(templateName: string, card: Card):Observable {\n        return this.queryTemplate(card.publisher,card.publisherVersion,templateName).pipe(\n            map(t=>t(card)));\n    }\n\n    private queryTemplate(publisher:string, version:string, name: string):Observable {\n        const locale = this.translate.getBrowserLang();\n        const key = `${publisher}.${version}.${name}.${locale}`;\n        let template = this.templateCache[key];\n        if(template){\n           return of(template);\n        }\n        return this.thirds.fetchHbsTemplate(publisher,version,name,locale).pipe(\n            map(s=>Handlebars.compile(s)),\n            tap(t=>this.templateCache[key]=t)\n        );\n    }\n\n    private registerBool() {\n        Handlebars.registerHelper('bool', function (v1, operator, v2, options) {\n            switch (operator) {\n                case '==':\n                    return (v1 == v2);\n                case '===':\n                    return (v1 === v2);\n                case '!=':\n                    return (v1 != v2);\n                case '!==':\n                    return (v1 !== v2);\n                case '':\n                    return (v1 > v2);\n                case '>=':\n                    return (v1 >= v2);\n                case '&&':\n                    return (v1 && v2);\n                case '||':\n                    return (v1 || v2);\n                default:\n                    return true;\n            }\n        });\n    }\n\n    private registerArrayAtIndexLength() {\n        Handlebars.registerHelper('arrayAtIndexLength', function (value, index, options) {\n            return value[index].length;\n        });\n    }\n\n    private registerSplit() {\n        Handlebars.registerHelper('split', function (value, splitValue, index, options) {\n            return value.split(splitValue)[index];\n        });\n    }\n\n    private registerMath(){\n        Handlebars.registerHelper(\"math\", function(lvalue, operator, rvalue, options) {\n            let result;\n            switch(operator) {\n                case \"+\": result = lvalue + rvalue; break;\n                case \"-\": result = lvalue - rvalue; break;\n                case \"*\": result = lvalue * rvalue; break;\n                case \"/\": result = lvalue / rvalue; break;\n                case \"%\": result = lvalue % rvalue; break;\n            }\n            return result;\n        });\n    }\n\n    private registerArrayAtIndex() {\n        Handlebars.registerHelper('arrayAtIndex', function (value, index, options) {\n            return value[index];\n        });\n    }\n\n    private registerSlice() {\n        Handlebars.registerHelper('slice', function () {\n            let args = [];\n            for (let index = 0; index =3) {\n                to = args[2];\n                return value.slice(from, to);\n            }\n            return value.slice(from);\n        });\n    }\n\n    private registerSort() {\n        Handlebars.registerHelper('sort', function () {\n            let args = [];\n            for (let index = 0; index  {\n            let args = [],\n                options = fctArgs[fctArgs.length - 1];\n            for (let i = 0; i \n                    document.getElementById('${svgUid}').addEventListener('load', function(){\n                            svgPanZoom(document.getElementById('${svgUid}'));});\n                    `\n        });\n    }\n\n    private registerCardAction() {\n        Handlebars.registerHelper('action', function () {\n            let args = [];\n            for (let i = 0; i `\n        });\n    }\n\n    private registerDateFormat() {\n        Handlebars.registerHelper('dateFormat', (value, options) => {\n            const m = moment(new Date(value));\n            m.locale(this.translate.getBrowserLang());\n            return m.format(options.hash.format);\n        });\n    }\n\n    private registerNumberFormat() {\n        Handlebars.registerHelper('numberFormat', (value, options) => {\n            const formatter = new Intl.NumberFormat(this.translate.getBrowserLang(), options.hash);\n            return formatter.format(value);\n        });\n    }\n\n    private registerNow() {\n        const that = this;\n        Handlebars.registerHelper('now', function (options) {\n            return that.time.currentTime().valueOf();\n        })\n    }\n\n    private registerPreserveSpace() {\n        Handlebars.registerHelper(\"preserveSpace\", function (value, options) {\n            return value.replace(/ /g, '\\u00A0')\n        });\n    }\n}\n\nfunction sortOnKey(key){\n    return function(a,b){\n        if(typeof  a[key] == 'string' && typeof b[key] == 'string'){\n            if(a[key]b[key])\n                return 1\n            return 0;\n        }else if(typeof  a[key] == 'number' && typeof b[key] == 'number'){\n            return a[key]-b[key];\n        }\n        return 0;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/I18n.html":{"url":"classes/I18n.html","title":"class - I18n","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  I18n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/i18n.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, parameters?: Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/i18n.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                    Map\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Map} from \"@ofModel/map\";\n\nexport class I18n {\n    /* istanbul ignore next */\n    constructor(\n        readonly key: string,\n        readonly parameters?: Map) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/icon/icon.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-icon\n            \n\n            \n                styleUrls\n                icon.component.scss\n            \n\n\n\n            \n                templateUrl\n                icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                iconPath\n                            \n                            \n                                size\n                            \n                            \n                                sprites\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                big\n                            \n                            \n                                dark\n                            \n                            \n                                icon\n                            \n                            \n                                light\n                            \n                            \n                                medium\n                            \n                            \n                                small\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                    PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        big\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dark\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        light\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        medium\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        small\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sprites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/icon/icon.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {PlatformLocation} from \"@angular/common\";\n\n@Component({\n  selector: 'of-icon',\n  templateUrl:'icon.component.html',\n  styleUrls: ['icon.component.scss']\n})\nexport class IconComponent implements OnInit {\n\n  @Input() icon:string;\n  @Input() small:boolean;\n  @Input() medium:boolean;\n  @Input() big:boolean;\n  @Input() dark:boolean;\n  @Input() light:boolean;\n  size:string;\n  sprites:string;\n  iconPath:string;\n  constructor(platformLocation:PlatformLocation) {\n      let baseHref = platformLocation.getBaseHrefFromDOM();\n      this.iconPath = (baseHref?baseHref:'/')+'assets/images/icons/'\n  }\n\n  ngOnInit() {\n    this.big = this.big != undefined;\n    this.medium = this.medium != undefined && !this.big;\n    this.small = this.small != undefined && !this.medium;\n    this.dark = this.dark != undefined;\n    this.light = this.light != undefined && ! this.dark;\n    let size = this.big?'big':this.medium?'medium':'small'\n    switch (size) {\n        case 'big':\n          this.size = '64px';\n          break;\n        case 'medium':\n          this.size = '32px';\n          break;\n         default:\n          this.size = '16px';\n    }\n    if(this.dark||this.light){\n      this.sprites='sprites-mono.svg'\n    }else{\n      this.sprites='sprites.svg'\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n\n\n    \n\n    \n                \n                    icon.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n.dark{\n  fill: $dark;\n}\n.light{\n  fill: $light;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IframeDisplayComponent.html":{"url":"components/IframeDisplayComponent.html","title":"component - IframeDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IframeDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/thirdparty/iframedisplay.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-iframedisplay\n            \n\n            \n                styleUrls\n                ./iframedisplay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./iframedisplay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _currentSelection\n                            \n                            \n                                    Private\n                                _menu_entry_id\n                            \n                            \n                                    Private\n                                _menu_id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMenuById\n                            \n                            \n                                getMenuEntryById\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    menu_id\n                                \n                                \n                                    menu_entry_id\n                                \n                                \n                                    selectedThirdMenu\n                                \n                                \n                                    selectedThirdMenuEntry\n                                \n                                \n                                    iframeURL\n                                \n                                \n                                    safeIframeURL\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/thirdparty/iframedisplay.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMenuById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMenuById(menu_id: string, thirdMenus: ThirdMenu[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menu_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        thirdMenus\n                                                        \n                                                                    ThirdMenu[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ThirdMenu[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMenuEntryById\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMenuEntryById(menu_entry_id: string, thirdMenu: ThirdMenu)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menu_entry_id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        thirdMenu\n                                                        \n                                                                    ThirdMenu\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ThirdMenuEntry[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _currentSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _menu_entry_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _menu_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        menu_id\n                    \n                \n\n                \n                    \n                        getmenu_id()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:69\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        menu_entry_id\n                    \n                \n\n                \n                    \n                        getmenu_entry_id()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedThirdMenu\n                    \n                \n\n                \n                    \n                        getselectedThirdMenu()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        selectedThirdMenuEntry\n                    \n                \n\n                \n                    \n                        getselectedThirdMenuEntry()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:81\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        iframeURL\n                    \n                \n\n                \n                    \n                        getiframeURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:85\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        safeIframeURL\n                    \n                \n\n                \n                    \n                        getsafeIframeURL()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/thirdparty/iframedisplay.component.ts:89\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {\n  selectMenuStateMenu,\n  selectMenuStateSelectedMenuEntryId,\n  selectMenuStateSelectedMenuId\n} from \"@ofSelectors/menu.selectors\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\nimport {map, pluck} from \"rxjs/operators\";\nimport {combineLatest} from \"rxjs/internal/observable/combineLatest\";\nimport {withLatestFrom} from \"rxjs/internal/operators/withLatestFrom\";\n\n@Component({\n  selector: 'of-iframedisplay',\n  templateUrl: './iframedisplay.component.html',\n  styleUrls: ['./iframedisplay.component.scss']\n})\nexport class IframeDisplayComponent implements OnInit {\n\n  private _menu_id : Observable;\n  private _menu_entry_id : Observable;\n  private _currentSelection: Observable;\n\n  constructor(private store: Store,\n              private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit() {\n    this._menu_id=this.store.select(selectMenuStateSelectedMenuId);\n    this._menu_entry_id=this.store.select(selectMenuStateSelectedMenuEntryId);\n\n    //TODO Init currentSelection in separate function, handle undefined / not found better\n    this._currentSelection=combineLatest(this.menu_id,this.menu_entry_id) //Emit a [menu_entry_id,menu_entry_id] array every time any of them is updated\n        .pipe(\n            withLatestFrom(this.store.select(selectMenuStateMenu)), //Add latest emitted value from selectMenuStateMenu to emission [menu_entry_id, menu_entry_id, thirdMenus]\n            map((currentSelection: [[string,string],ThirdMenu[]]) => {\n              let selectedThirdMenu: ThirdMenu;\n              let selectedThirdMenuEntry: ThirdMenuEntry;\n              let selectedURL: string;\n              if(!this.getMenuById(currentSelection[0][0],currentSelection[1])[0]) { //If no ThirdMenu with this id exists\n                selectedThirdMenu = undefined;\n                selectedThirdMenuEntry = undefined;\n                selectedURL = undefined;\n              } else {\n                selectedThirdMenu = this.getMenuById(currentSelection[0][0],currentSelection[1])[0]\n                if(!this.getMenuEntryById(currentSelection[0][1],selectedThirdMenu)[0]){ //If no ThirdMenuEntry with this id exists\n                  selectedThirdMenuEntry = undefined;\n                  selectedURL = undefined;\n                } else {\n                  selectedThirdMenuEntry = this.getMenuEntryById(currentSelection[0][1],selectedThirdMenu)[0];\n                  selectedURL = selectedThirdMenuEntry.url;\n                }\n              }\n              return {selectedThirdMenu: selectedThirdMenu, selectedThirdMenuEntry: selectedThirdMenuEntry, selectedURL: selectedURL};\n            }\n        ))\n  }\n\n  get menu_id(): Observable {\n    return this._menu_id;\n  }\n\n  get menu_entry_id(): Observable {\n    return this._menu_entry_id;\n  }\n\n  get selectedThirdMenu() {\n    return this._currentSelection.pipe(pluck('selectedThirdMenu'));\n  }\n\n  get selectedThirdMenuEntry() {\n    return this._currentSelection.pipe(pluck('selectedThirdMenuEntry'));\n  }\n\n  get iframeURL(): Observable {\n    return this._currentSelection.pipe(pluck('selectedURL'));\n  }\n\n  get safeIframeURL(): Observable {\n    return this.iframeURL.pipe(map(url => {\n        return this.sanitizer.bypassSecurityTrustResourceUrl(url)\n    }))\n  }\n\n  getMenuById(menu_id: string, thirdMenus: ThirdMenu[]): ThirdMenu[]{ //Assuming it should only return 0 or 1 ThirdMenus\n    return thirdMenus.filter((thirdMenu: ThirdMenu) => {\n      return thirdMenu.id === menu_id;\n    })\n  }\n\n  getMenuEntryById(menu_entry_id: string, thirdMenu: ThirdMenu): ThirdMenuEntry[]{\n    return thirdMenu.entries.filter((menuEntry: ThirdMenuEntry) => {\n      return menuEntry.id === menu_entry_id;\n    })\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n  \n\n    \n      \n    \n\n    \n      \n        No iframe URL to display.\n      \n    \n\n  \n\n  \n    \n      There is no third-party menu entry with the id {{(menu_entry_id|async)}} in third-party menu {{(menu_id|async)}}.\n    \n  \n\n\n\n\n  \n    There is no third-party menu with the id {{(menu_id|async)}}.\n  \n\n\n\n    \n\n    \n                \n                    ./iframedisplay.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  No iframe URL to display.                        There is no third-party menu entry with the id {{(menu_entry_id|async)}} in third-party menu {{(menu_id|async)}}.            There is no third-party menu with the id {{(menu_id|async)}}.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'IframeDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAuthStatus.html":{"url":"classes/InitAuthStatus.html","title":"class - InitAuthStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAuthStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                It aims to validate the current authentication if exists.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.InitAuthStatus\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitFilters.html":{"url":"classes/InitFilters.html","title":"class - InitFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/feed.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : FeedActionTypes.InitFilter\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/feed.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {FilterType} from \"@ofServices/filter.service\";\n\nexport enum FeedActionTypes {\n    ApplyFilter = '[Feed] Change filter Status',\n    InitFilter = '[Feed] Init filter',\n}\n\nexport class ApplyFilter implements Action {\n    readonly type = FeedActionTypes.ApplyFilter;\n    /* istanbul ignore next */\n    constructor(public payload:{name: FilterType, active: boolean, status: any}){}\n}\n\nexport class InitFilters implements Action {\n    readonly type = FeedActionTypes.InitFilter;\n\n    /* istanbul ignore next */\n    constructor(public payload:{filters: Map}){}\n}\n\nexport type FeedActions =\n    InitFilters\n    | ApplyFilter;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitTimeline.html":{"url":"classes/InitTimeline.html","title":"class - InitTimeline","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitTimeline\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/timeline.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimelineActionTypes.InitTimeline\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/timeline.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum TimelineActionTypes {\n    InitTimeline = '[timeline] Init timeline',\n    AddCardDataTimeline = '[timeline] Add Card to data'\n}\n\nexport class InitTimeline implements Action {\n    readonly type = TimelineActionTypes.InitTimeline\n    constructor(public payload:{data: any[]}){}\n}\n\nexport class AddCardDataTimeline implements Action {\n    readonly type = TimelineActionTypes.AddCardDataTimeline\n    constructor(public payload:{cardTimeline: any}){}\n}\n\nexport type TimelineActions =\n    InitTimeline\n    | AddCardDataTimeline;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Input.html":{"url":"classes/Input.html","title":"class - Input","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Input\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: InputType, name: string, label: I18n, value: string, mandatory: boolean, maxLength: number, rows: number, values: ParameterListItem[], selectedValues: string[], unSelectedValues: string[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    InputType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mandatory\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rows\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    ParameterListItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        selectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unSelectedValues\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LightCardEffects.html":{"url":"injectables/LightCardEffects.html","title":"injectable - LightCardEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LightCardEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/light-card.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadById\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, thirdService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/light-card.effects.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        thirdService\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadById\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            switchMap((action:LoadLightCardsSuccess)=>\n                    this.thirdService.loadI18nForLightCards(action.payload.lightCards)\n                        .pipe(\n                            tap(test=>console.log(`loaded lightCards:${test}`)),\n                            catchError((err,caught)=>{\n                                console.error(`i18 loading failed for card publishers`);\n                                console.error(err);\n                                return of(false);\n                            })\n                        )),\n            map(\n                ()=>{\n                    return new LoadLightCardsExtendedData();\n                }\n            )\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/light-card.effects.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {LightCardActionTypes, LoadLightCardsExtendedData, LoadLightCardsSuccess} from \"@ofActions/light-card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {tap} from \"rxjs/internal/operators/tap\";\n\n// those effects are unused for the moment\n@Injectable()\nexport class LightCardEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private thirdService: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    loadById: Observable = this.actions$\n        .pipe(\n            ofType(LightCardActionTypes.LoadLightCardsSuccess),\n            switchMap((action:LoadLightCardsSuccess)=>\n                    this.thirdService.loadI18nForLightCards(action.payload.lightCards)\n                        .pipe(\n                            tap(test=>console.log(`loaded lightCards:${test}`)),\n                            catchError((err,caught)=>{\n                                console.error(`i18 loading failed for card publishers`);\n                                console.error(err);\n                                return of(false);\n                            })\n                        )),\n            map(\n                ()=>{\n                    return new LoadLightCardsExtendedData();\n                }\n            )\n        );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCard.html":{"url":"classes/LoadCard.html","title":"class - LoadCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardFailure.html":{"url":"classes/LoadCardFailure.html","title":"class - LoadCardFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadCardSuccess.html":{"url":"classes/LoadCardSuccess.html","title":"class - LoadCardSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadCardSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/card.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardActionTypes.LoadCardSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/card.actions.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Card} from '@ofModel/card.model';\n\nexport enum CardActionTypes {\n    ClearCard = '[Card] Clear',\n    LoadCard = '[Card] Load Card',\n    LoadCardSuccess = '[Card] Load Card Success',\n    LoadCardFailure = '[Card] Load Card Fail',\n    HandleUnexpectedError = '[Card] Handle unexpected error related to card issue'\n}\n// needed by NGRX entities\nexport class ClearCard implements Action {\n    readonly type = CardActionTypes.ClearCard;\n}\nexport class LoadCard implements Action {\n    readonly type = CardActionTypes.LoadCard;\n\n    /* istanbul ignore next */\n    constructor(public payload: { id: string }) {}\n}\nexport class LoadCardFailure implements Action {\n    readonly type = CardActionTypes.LoadCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {}\n}\n\nexport class LoadCardSuccess implements Action {\n    readonly type = CardActionTypes.LoadCardSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { card: Card }) {}\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = CardActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {}\n}\n\nexport type CardActions =\n    ClearCard\n    | LoadCard\n    | LoadCardSuccess\n    | LoadCardFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfig.html":{"url":"classes/LoadConfig.html","title":"class - LoadConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfig\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigFailure.html":{"url":"classes/LoadConfigFailure.html","title":"class - LoadConfigFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadConfigSuccess.html":{"url":"classes/LoadConfigSuccess.html","title":"class - LoadConfigSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadConfigSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/config.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigActionTypes.LoadConfigSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/config.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\n\nexport enum ConfigActionTypes {\n    LoadConfig = '[Config] Load Config',\n    LoadConfigSuccess = '[Config] Load Config Success',\n    LoadConfigFailure = '[Config] Load Config Fail',\n    HandleUnexpectedError = '[Config] Handle unexpected error related to configuration issue'\n}\n// needed by NGRX entities\nexport class LoadConfig implements Action {\n    readonly type = ConfigActionTypes.LoadConfig;\n}\nexport class LoadConfigFailure implements Action {\n    readonly type = ConfigActionTypes.LoadConfigFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadConfigSuccess implements Action {\n    readonly type = ConfigActionTypes.LoadConfigSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { config: any }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = ConfigActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type ConfigActions =\n    LoadConfig\n    | LoadConfigSuccess\n    | LoadConfigFailure\n    | HandleUnexpectedError;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCards.html":{"url":"classes/LoadLightCards.html","title":"class - LoadLightCards","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCards\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCards\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsExtendedData.html":{"url":"classes/LoadLightCardsExtendedData.html","title":"class - LoadLightCardsExtendedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsExtendedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:42\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsExtendedData\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsFailure.html":{"url":"classes/LoadLightCardsFailure.html","title":"class - LoadLightCardsFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadLightCardsSuccess.html":{"url":"classes/LoadLightCardsSuccess.html","title":"class - LoadLightCardsSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadLightCardsSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.LoadLightCardsSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenu.html":{"url":"classes/LoadMenu.html","title":"class - LoadMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    UpdateSelectedMenu = '[Menu] Update Selected Menu',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action used to update the state with the selected menu\n */\n//TODO Describe usage (cf authentication example)\nexport class UpdateSelectedMenu implements Action {\n    readonly type = MenuActionTypes.UpdateSelectedMenu;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_entry_id: string}) {}\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | UpdateSelectedMenu;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuFailure.html":{"url":"classes/LoadMenuFailure.html","title":"class - LoadMenuFailure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuFailure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuFailure\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    UpdateSelectedMenu = '[Menu] Update Selected Menu',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action used to update the state with the selected menu\n */\n//TODO Describe usage (cf authentication example)\nexport class UpdateSelectedMenu implements Action {\n    readonly type = MenuActionTypes.UpdateSelectedMenu;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_entry_id: string}) {}\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | UpdateSelectedMenu;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadMenuSuccess.html":{"url":"classes/LoadMenuSuccess.html","title":"class - LoadMenuSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadMenuSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.LoadMenuSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    UpdateSelectedMenu = '[Menu] Update Selected Menu',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action used to update the state with the selected menu\n */\n//TODO Describe usage (cf authentication example)\nexport class UpdateSelectedMenu implements Action {\n    readonly type = MenuActionTypes.UpdateSelectedMenu;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_entry_id: string}) {}\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | UpdateSelectedMenu;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-login\n            \n\n\n            \n                styles\n                .btn-primary {margin-right: 8px;}\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeProvider\n                            \n                            \n                                hide\n                            \n                            \n                                loginMessage\n                            \n                            \n                                useCodeFlow$\n                            \n                            \n                                userForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                codeFlow\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, service: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeFlow\n                            \n                            \n                        \n                    \n                \n                \n                    \ncodeFlow()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetForm\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            codeProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Message\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useCodeFlow$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Store} from '@ngrx/store';\nimport {TryToLogIn} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {buildConfigSelector} from \"@ofSelectors/config.selectors\";\nimport {filter, map} from \"rxjs/operators\";\nimport {Observable} from \"rxjs\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {selectMessage} from \"@ofSelectors/authentication.selectors\";\nimport {Message, MessageLevel} from \"@ofModel/message.model\";\n\n@Component({\n    selector: 'of-login',\n    templateUrl: './login.component.html',\n    styles: ['.btn-primary {margin-right: 8px;}']\n})\nexport class LoginComponent implements OnInit {\n\n    hide: boolean;\n    userForm: FormGroup;\n    useCodeFlow$: Observable;\n    loginMessage: Message;\n    // codeProvider$: Observable;\n    codeProvider: any;\n    /* istanbul ignore next */\n    constructor( private store: Store, private service: AuthenticationService) {}\n\n    ngOnInit() {\n        this.useCodeFlow$ = this.store.select(buildConfigSelector('security.oauth2.flow.mode'))\n            .pipe(map(flowMode=>flowMode === 'CODE'));\n        this.store.select(selectMessage).pipe(filter(m=>m!=null && m.level==MessageLevel.ERROR))\n            .subscribe(m=>this.loginMessage=m);\n        this.store.select(buildConfigSelector('security.oauth2.flow.provider'))\n            .subscribe(provider=>this.codeProvider={name:provider});\n        this.hide = true;\n        this.userForm = new FormGroup({\n                identifier: new FormControl(''),\n                password: new FormControl('')\n            }\n        );\n    }\n\n    onSubmit(): void {\n        if (this.userForm.valid) {\n            const username = this.userForm.get('identifier').value;\n            const password = this.userForm.get('password').value;\n            this.store.dispatch(new TryToLogIn({username: username, password: password}));\n        }\n    }\n\n    resetForm(): void {\n        this.userForm.reset();\n    }\n\n    codeFlow(): void{\n        this.service.moveToCodeFlowLoginPage();\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n        \n            \n                \n                    login.login\n                    \n                    \n                        login.password\n                        \n                    \n                    \n                        login.submit.password\n                        login.reset\n                    \n                \n                \n                    \n                    login.submit.code\n                    \n                \n            \n            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}\n        \n    \n\n\n    \n\n    \n            .btn-primary {margin-right: 8px;}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            login.login                                                                login.password                                                                                        login.submit.password                        login.reset                                                                                            login.submit.code                                                            {{loginMessage.i18n.key|translate:loginMessage.i18n.parameters}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/map.ts\n        \n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    T\n\n                    \n                \n                        \n                            \n                                Defined in src/app/model/map.ts:8\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class Map {\n    [key: string]: T;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuEffects.html":{"url":"injectables/MenuEffects.html","title":"injectable - MenuEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/effects/menu.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, actions$: Actions, service: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/effects/menu.effects.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action => this.service.computeThirdsMenu()),\n            switchMap(menu=>zip(of(menu),this.service.loadI18nForMenuEntries(menu)\n                .pipe(\n                    catchError((err,caught)=>{\n                        console.error(err);\n                        return of(false);\n                    })\n                ))),\n            map(array =>\n                new LoadMenuSuccess({menu: array[0]})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        )\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Effect()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/effects/menu.effects.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, Effect, ofType} from '@ngrx/effects';\nimport {Action, Store} from '@ngrx/store';\nimport {Observable, of, zip} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {AppState} from \"@ofStore/index\";\nimport {LoadCard} from \"@ofActions/card.actions\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {LoadMenuFailure, LoadMenuSuccess, MenuActionTypes} from \"@ofActions/menu.actions\";\n\n@Injectable()\nexport class MenuEffects {\n\n    /* istanbul ignore next */\n    constructor(private store: Store,\n                private actions$: Actions,\n                private service: ThirdsService\n    ) {\n    }\n\n    @Effect()\n    load: Observable = this.actions$\n        .pipe(\n            ofType(MenuActionTypes.LoadMenu),\n            switchMap(action => this.service.computeThirdsMenu()),\n            switchMap(menu=>zip(of(menu),this.service.loadI18nForMenuEntries(menu)\n                .pipe(\n                    catchError((err,caught)=>{\n                        console.error(err);\n                        return of(false);\n                    })\n                ))),\n            map(array =>\n                new LoadMenuSuccess({menu: array[0]})\n            ),\n            catchError((err, caught) => {\n                console.error(err);\n                this.store.dispatch(new LoadMenuFailure(err));\n                return caught;\n            })\n        );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuState.html":{"url":"interfaces/MenuState.html","title":"interface - MenuState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MenuState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/menu.state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                                \n                                        loading\n                                \n                                \n                                        menu\n                                \n                                \n                                        selected_menu_entry_id\n                                \n                                \n                                        selected_menu_id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu\n                                    \n                                \n                                \n                                    \n                                        menu:     ThirdMenu[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ThirdMenu[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_menu_entry_id\n                                    \n                                \n                                \n                                    \n                                        selected_menu_entry_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected_menu_id\n                                    \n                                \n                                \n                                    \n                                        selected_menu_id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport interface MenuState{\n    menu: ThirdMenu[],\n    loading: boolean,\n    error:string,\n    selected_menu_id: string,\n    selected_menu_entry_id: string\n}\n\nexport const menuInitialState: MenuState = {\n    menu:[],\n    loading: false,\n    error:null,\n    selected_menu_id: null,\n    selected_menu_entry_id: null\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/message.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level, i18n?: I18n)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/message.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {I18n} from \"@ofModel/i18n.model\";\n\nexport class Message {\n\n    /* istanbul ignore next */\n    constructor(\n        readonly message: string,\n        readonly level = MessageLevel.DEBUG,\n        readonly i18n?: I18n,\n    ){}\n}\n\nexport enum MessageLevel {\n    ERROR, INFO, DEBUG\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MouseWheelDirective.html":{"url":"directives/MouseWheelDirective.html","title":"directive - MouseWheelDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MouseWheelDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/mouse-wheel.directive.ts\n        \n\n            \n                Description\n            \n            \n                Mousewheel directive\nhttps://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appMouseWheel]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelFunc\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseWheelDown\n                            \n                            \n                                mouseWheelUp\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                DOMMouseScroll\n                            \n                            \n                                mousewheel\n                            \n                            \n                                onmousewheel\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseWheelDown\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseWheelUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:12\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            DOMMouseScroll\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nDOMMouseScroll(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mousewheel\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nmousewheel(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onmousewheel\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nonmousewheel(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mouseWheelFunc\n                            \n                            \n                        \n                    \n                \n                \n                    \nmouseWheelFunc(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/mouse-wheel.directive.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n *\n * @export\n */\n@Directive({ selector: '[appMouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    const delta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n    if (delta > 0) {\n      this.mouseWheelUp.emit(event);\n    } else if (delta \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-navbar\n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _thirdMenus\n                            \n                            \n                                currentPath\n                            \n                            \n                                expandedMenu\n                            \n                            \n                                navbarCollapsed\n                            \n                            \n                                navigationRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    thirdMenus\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleMenu(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _thirdMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandedMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navbarCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigationRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : navigationRoutes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        thirdMenus\n                    \n                \n\n                \n                    \n                        getthirdMenus()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/navbar/navbar.component.ts:54\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {navigationRoutes} from '../../app-routing.module';\nimport {Store} from '@ngrx/store';\nimport {TryToLogOut} from '@ofActions/authentication.actions';\nimport {AppState} from '@ofStore/index';\nimport {selectCurrentUrl} from '@ofSelectors/router.selectors';\nimport {LoadMenu} from \"@ofActions/menu.actions\";\nimport {selectMenuStateMenu} from \"@ofSelectors/menu.selectors\";\nimport {Observable} from \"rxjs\";\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\nimport {tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'of-navbar',\n  templateUrl: './navbar.component.html',\n})\nexport class NavbarComponent implements OnInit {\n\n    navbarCollapsed = true;\n    navigationRoutes = navigationRoutes;\n    currentPath: any;\n    private _thirdMenus: Observable;\n    expandedMenu:boolean[]=[];\n\n    constructor(private store: Store) {\n    }\n\n    ngOnInit() {\n        this.store.select(selectCurrentUrl).subscribe(url=>{\n            if(url)\n                this.currentPath = url.split('/')[1];\n        });\n        this._thirdMenus=this.store.select(selectMenuStateMenu)\n            .pipe(tap(menus=>{\n                this.expandedMenu=new Array(menus.length);\n                _.fill(this.expandedMenu,false);\n            }));\n        this.store.dispatch(new LoadMenu());\n    }\n\n\n    logOut(){\n        this.store.dispatch(new TryToLogOut());\n    }\n\n    get thirdMenus(){\n        return this._thirdMenus;\n    }\n\n    toggleMenu(index:number){\n        this.expandedMenu[index]=!this.expandedMenu[index];\n        if(this.expandedMenu[index])\n            setTimeout(()=>this.expandedMenu[index]=false,5000);\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  \n    \n      \n    \n  \n  \n    \n  \n  \n    \n      \n      \n        {{'menu.'+link.path}}\n      \n      \n      1\">\n        \n        1\"\n                translate\n        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}\n        1\"\n             [ngbCollapse]=\"!expandedMenu[index]\">\n          \n            \n              {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}\n            \n              \n            \n          \n        \n        \n        \n          {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}\n          \n            \n          \n        \n      \n      \n        \n          menu.logout\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{\\'menu.\\'+link.path}}                  1\">                1\"                translate        >{{tMenu.id}}.{{tMenu.version}}.{{tMenu.label}}        1\"             [ngbCollapse]=\"!expandedMenu[index]\">                                    {{tMenu.id}}.{{tMenu.version}}.{{entry.label}}                                                                                  {{tMenu.id}}.{{tMenu.version}}.{{tMenu.entries[0].label}}                                                                      menu.logout                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoSelectionComponent.html":{"url":"components/NoSelectionComponent.html","title":"component - NoSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/no-selection/no-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-no-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./no-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/no-selection/no-selection.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'of-no-selection',\n  templateUrl: './no-selection.component.html',\n})\nexport class NoSelectionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  no-selection works!\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  no-selection works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterListItem.html":{"url":"classes/ParameterListItem.html","title":"class - ParameterListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(label: I18n, value: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:115\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                    I18n\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayloadForSuccessfulAuthentication.html":{"url":"classes/PayloadForSuccessfulAuthentication.html","title":"class - PayloadForSuccessfulAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayloadForSuccessfulAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Authentication success payload\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                expirationDate\n                            \n                            \n                                    Public\n                                identifier\n                            \n                            \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identifier: string, clientId: Guid, token: string, expirationDate: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identifier\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    Guid\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expirationDate\n                                                  \n                                                        \n                                                                    Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Guid\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Process.html":{"url":"classes/Process.html","title":"class - Process","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Process\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(states?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        states\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectLogIn.html":{"url":"classes/RejectLogIn.html","title":"class - RejectLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to notify the store that the authentication is not possible.\nEmmited by {AuthenticationEffect} in the following {Observable} @members:\n\nTryToLogin;\nCheckAuthentication\nand in the handleRejectedLogin @method called by the ChecAuthentication {Observable}\n\nUsed in the {function} reducer of the {authentication.reducer.ts} file to create a new state\nwithout any authentication information and containing a message about login rejection\nby filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:109\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.RejectLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:109\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouterStateUrl.html":{"url":"classes/RouterStateUrl.html","title":"class - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/router.state.ts\n        \n\n            \n                Description\n            \n            \n                The RouterStateSerializer takes the current RouterStateSnapshot\nand returns any pertinent information needed. The snapshot contains\nall information about the state of the router at the given point in time.\nThe entire snapshot is complex and not always needed. In this case, you only\nneed the URL and query parameters from the snapshot in the store. Other items could be\nreturned such as route parameters and static route data.\nsource: https://github.com/briebug/ngrx-complex-forms\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, params: Params, queryParams: Params)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/states/router.state.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                    Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryParams\n                                                  \n                                                        \n                                                                    Params\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {RouterStateSerializer} from \"@ngrx/router-store\";\nimport {ActivatedRouteSnapshot, Params, RouterStateSnapshot} from \"@angular/router\";\n\nexport const initialState = {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n\n/**\n * The RouterStateSerializer takes the current RouterStateSnapshot\n * and returns any pertinent information needed. The snapshot contains\n * all information about the state of the router at the given point in time.\n * The entire snapshot is complex and not always needed. In this case, you only\n * need the URL and query parameters from the snapshot in the store. Other items could be\n * returned such as route parameters and static route data.\n *\n * source: https://github.com/briebug/ngrx-complex-forms\n *\n */\n\nexport class RouterStateUrl {\n    /* istanbul ignore next */\n    constructor(\n        readonly url: string,\n        readonly params: Params,\n        readonly queryParams: Params) {\n    }\n}\n\nexport class CustomRouterStateSerializer\n    implements RouterStateSerializer {\n    serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n        const {url} = routerState;\n        const params = this.extractParams(routerState.root);\n        const queryParams = routerState.root.queryParams;\n        return new RouterStateUrl(url, params, queryParams);\n    }\n\n    private extractParams(state: ActivatedRouteSnapshot): Params {\n        let params: Params = {...state.params};\n        for (let child of state.children) {\n            params = {...params, ...this.extractParams(child)}\n        }\n        return params;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectLightCard.html":{"url":"classes/SelectLightCard.html","title":"class - SelectLightCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectLightCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.SelectLightCard\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/services.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthenticationService\n                        \n                        \n                            CardService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            FilterService\n                        \n                        \n                            ThirdsService\n                        \n                        \n                            TimeService\n                        \n                        \n                            TokenInjector\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/services.module.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {AuthenticationService} from './authentication.service';\nimport {TokenInjector} from './interceptors.service';\n// import {AuthenticationGuard} from './guard.service';\nimport {CardService} from './card.service';\nimport {GuidService} from \"@ofServices/guid.service\";\nimport {TimeService} from \"@ofServices/time.service\";\nimport {ThirdsService} from \"@ofServices/thirds.service\";\nimport {FilterService} from \"@ofServices/filter.service\";\nimport {ConfigService} from \"@ofServices/config.service\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    providers: [\n        ConfigService,\n        CardService,\n        AuthenticationService,\n        TimeService,\n        ThirdsService,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInjector,\n            multi: true\n        },\n        GuidService,\n        FilterService\n\n    ]\n})\nexport class ServicesModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ServicesModule\n        };\n    }\n\n    constructor(\n        @Optional()\n        @SkipSelf()\n            parentModule: ServicesModule\n    ) {\n        if (parentModule) {\n            throw new Error(\n                'ServicesModule is already loaded. Import it in the AppModule only'\n            );\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(details?: Detail[], actions?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Detail[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StateModule.html":{"url":"modules/StateModule.html","title":"module - StateModule","body":"\n                   \n\n\n\n\n    Modules\n    StateModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\n\n!environment\n\n!environment\n\n\n\nStateModule\n\nStateModule\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/store/state.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            !environment\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/store/state.module.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StoreModule} from '@ngrx/store';\nimport {EffectsModule} from '@ngrx/effects';\nimport {appEffects, appReducer, storeConfig} from './index';\nimport {environment} from '@env/environment';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {NavigationActionTiming, RouterStateSerializer, StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {CustomRouterStateSerializer} from '@ofStore/states/router.state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forRoot(appReducer, storeConfig),\n    StoreRouterConnectingModule.forRoot({\n        navigationActionTiming: NavigationActionTiming.PostActivation,\n        serializer: CustomRouterStateSerializer\n    }),\n    EffectsModule.forRoot(appEffects),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  declarations: [],\n    providers:[{provide:'configRetryDelay',useValue:5000}]\n})\nexport class StateModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: StateModule\n      ,\n      providers: [\n        /**\n         * The `RouterStateSnapshot` provided by the `Router` is a large complex structure.\n         * A custom RouterStateSerializer is used to parse the `RouterStateSnapshot` provided\n         * by `@ngrx/router-store` to include only the desired pieces of the snapshot.\n         */\n        {provide: RouterStateSerializer, useClass: CustomRouterStateSerializer}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Third.html":{"url":"classes/Third.html","title":"class - Third","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Third\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                extractState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, version: string, i18nLabelKey: string, templates?: string[], csses?: string[], locales?: string[], menuEntries?: ThirdMenuEntry[], processes?: OfMap)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18nLabelKey\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templates\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        csses\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        locales\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuEntries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        processes\n                                                  \n                                                        \n                                                                    OfMap\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            extractState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractState(card: Card)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/model/thirds.model.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    Card\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     State\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenu.html":{"url":"classes/ThirdMenu.html","title":"class - ThirdMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, version: string, label: string, entries: ThirdMenuEntry[])\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        version\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entries\n                                                  \n                                                        \n                                                                    ThirdMenuEntry[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdMenuEntry.html":{"url":"classes/ThirdMenuEntry.html","title":"class - ThirdMenuEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdMenuEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/thirds.model.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, label: string, url: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/model/thirds.model.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Card, Detail} from \"@ofModel/card.model\";\nimport {I18n} from \"@ofModel/i18n.model\";\nimport {Map as OfMap} from \"@ofModel/map\";\n\nexport class Third{\n    /* istanbul ignore next */\n    constructor(\n        readonly name:string,\n        readonly version:string,\n        readonly i18nLabelKey: string,\n        readonly templates?:string[],\n        readonly csses?:string[],\n        readonly locales?:string[],\n        readonly menuEntries?:ThirdMenuEntry[],\n        readonly processes?:OfMap\n    ){}\n\n    public extractState(card:Card):State{\n        if(card.process && this.processes[card.process]) {\n            const process = this.processes[card.process];\n            if(card.state && process.states[card.state]) {\n               return process.states[card.state];\n            }\n        }\n        return null;\n    }\n}\n\nexport class ThirdMenuEntry{\n    /* istanbul ignore next */\n    constructor(\n        readonly id:string,\n        readonly label: string,\n        readonly url: string\n    ){}\n}\n\nexport class ThirdMenu{\n    /* istanbul ignore next */\n    constructor(\n        readonly id: string,\n        readonly version: string,\n        readonly label: string,\n        readonly entries: ThirdMenuEntry[]){}\n}\n\nexport class Process{\n    /* istanbul ignore next */\n    constructor(\n        readonly states?:OfMap\n    ){}\n}\n\nexport class State{\n    /* istanbul ignore next */\n    constructor(\n        readonly details?:Detail[],\n        readonly actions?:OfMap\n    ){}\n}\n\nexport enum ActionType {\n    EXTERNAL,\n    JNLP,\n    URI\n\n}\n\nexport class Action {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: ActionType,\n        readonly label: I18n,\n        readonly hidden: boolean = false,\n        readonly buttonStyle: string = '',\n        readonly contentStyle: string = '',\n        readonly inputs: Input[] = [],\n        readonly lockAction: boolean = false,\n        readonly lockCard: boolean = false,\n        readonly updateState: boolean = false,\n        readonly updateStateBeforeAction: boolean = false,\n        readonly called: boolean = false,\n        readonly needsConfirm: boolean = false,\n    ) {\n    }\n}\n\nexport enum InputType {\n    TEXT,\n    LIST,\n    LIST_RADIO,\n    SWITCH_LIST,\n    LONGTEXT,\n    BOOLEAN,\n    STATIC\n}\n\nexport class Input {\n    /* istanbul ignore next */\n    constructor(\n        readonly type: InputType,\n        readonly name: string,\n        readonly label: I18n,\n        readonly value: string,\n        readonly mandatory: boolean,\n        readonly maxLength: number,\n        readonly rows: number,\n        readonly values: ParameterListItem[],\n        readonly selectedValues: string[],\n        readonly unSelectedValues: string[],\n    ) {\n    }\n}\n\nexport class ParameterListItem {\n    /* istanbul ignore next */\n    constructor(\n        readonly label: I18n,\n        readonly value: string,\n    ) {\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyModule.html":{"url":"modules/ThirdpartyModule.html","title":"module - ThirdpartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IframeDisplayComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThirdpartyRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IframeDisplayComponent } from './iframedisplay.component';\nimport {ThirdpartyRoutingModule} from \"./thirdparty-routing.module\";\n\n@NgModule({\n  declarations: [IframeDisplayComponent],\n  imports: [\n    CommonModule,\n    ThirdpartyRoutingModule\n  ]\n})\nexport class ThirdpartyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdpartyRoutingModule.html":{"url":"modules/ThirdpartyRoutingModule.html","title":"module - ThirdpartyRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdpartyRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/thirdparty/thirdparty-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {IframeDisplayComponent} from \"./iframedisplay.component\";\n\nconst routes: Routes = [\n    {\n        path: ':menu_id/:menu_entry_id',\n        component: IframeDisplayComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ThirdpartyRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsI18nLoader.html":{"url":"classes/ThirdsI18nLoader.html","title":"class - ThirdsI18nLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsI18nLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thirdsService: ThirdsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:193\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdsService\n                                                  \n                                                        \n                                                                    ThirdsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTranslation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTranslation(lang: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:197\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {EMPTY, from, merge, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader, TranslateService} from \"@ngx-translate/core\";\nimport {catchError, filter, map, mergeMap, reduce, switchMap, tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../store/index\";\nimport {LightCard} from \"../model/light-card.model\";\nimport {Third, ThirdMenu} from \"@ofModel/thirds.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private loadedI18n: string[] = [];\n    private loadingI18n: string[] = [];\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n                private authenticationService: AuthenticationService,\n                private store: Store,\n                private $injector: Injector,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThird(thirdName:string, version:string):Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if(third){\n            return of(third);\n        }\n        return this.fetchThird(thirdName,version)\n            .pipe(\n                tap(t=>Object.setPrototypeOf(t,Third.prototype)),\n                tap(t=>this.thirdCache.set(key,t))\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`,{\n            params\n        });\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`,{\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string){\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version',version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    fetchI18nJson(publisher: string, version: string, locales: string[]): Observable {\n        let previous: Observable;\n        for (let locale of locales) {\n            const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n            const httpCall = this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {\n                params\n            }).pipe(\n                map(r => {\n                        const object = {};\n                        object[locale] = {};\n                        object[locale][publisher] = {};\n                        object[locale][publisher][version] = r;\n                        return object;\n                    }\n                ));\n            if (previous) {\n                previous = merge(previous, httpCall);\n            } else {\n                previous = httpCall;\n            }\n        }\n        if (previous == null) {\n            return EMPTY;\n        }\n        const result = previous.pipe(\n            reduce((acc, val) => _.merge(acc,val))\n        );\n\n        return result;\n    }\n\n    computeThirdsMenu(): Observable{\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts=>from(ts)),\n            filter((t:Third)=>!(!t.menuEntries)),\n            map(t=>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus:ThirdMenu[],menu:ThirdMenu)=>{\n                menus.push(menu);\n                return menus;\n            },[])\n        );\n    }\n\n    loadI18nForLightCards(cards:LightCard[]){\n        let observable = from(cards).pipe(\n            map(card=> card.publisher + '###' + card.publisherVersion));\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    loadI18nForMenuEntries(menus:ThirdMenu[]){\n        const observable = from(menus).pipe(\n            map(menu=> menu.id + '###' + menu.version)\n        );\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    private subscribeToLoadI18n(observable) {\n        return observable\n            .pipe(\n                reduce((ids: string[], id: string) => {\n                    ids.push(id);\n                    return ids;\n                }, []),\n                switchMap((ids:string[]) => {\n                    let work = _.uniq(ids);\n                    work = _.difference(work, this.loadingI18n)\n                    return from(_.difference(work, this.loadedI18n))\n                }),\n                mergeMap((id: string) => {\n                    this.loadingI18n.push(id);\n                    const input = id.split('###');\n\n                    let publisher = input[0];\n                    let version = input[1];\n                    return this.fetchI18nJson(publisher, version, this.translate().getLangs())\n                        .pipe(map(trans => {\n                                return {id: id, translation: trans};\n                            }),\n                            catchError(err => {\n                                _.remove(this.loadingI18n, id);\n                                return throwError(err);\n                            })\n                        );\n                }),\n                reduce((acc, val) => _.merge(acc,val)),\n                map(\n                    (result:any) => {\n                        let langs = this.translate().getLangs();\n                        for (let lang of langs) {\n                            let translationElement = result.translation[lang];\n                            if (translationElement) {\n                                this.translate().setTranslation(lang, translationElement, true);\n                                // needed otherwise only one translation apply\n                                this.translate().use(lang);\n                            }\n                        }\n                        _.remove(this.loadingI18n, result.id);\n                        this.loadedI18n.push(result.id);\n                        return true;\n                    }\n                ),\n                catchError((error,caught )=>{\n                    console.error('something went wrong during translation',error);\n                    return caught;\n                })\n            )\n    }\n\n    private translate(): TranslateService {\n        return this.$injector.get(TranslateService);\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {}\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThirdsService.html":{"url":"injectables/ThirdsService.html","title":"injectable - ThirdsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThirdsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thirds.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadedI18n\n                            \n                            \n                                    Private\n                                loadingI18n\n                            \n                            \n                                    Private\n                                thirdCache\n                            \n                            \n                                    Readonly\n                                thirdsUrl\n                            \n                            \n                                    Private\n                                urlCleaner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdCssUrl\n                            \n                            \n                                computeThirdsMenu\n                            \n                            \n                                fetchHbsTemplate\n                            \n                            \n                                fetchI18nJson\n                            \n                            \n                                    Private\n                                fetchThird\n                            \n                            \n                                loadI18nForLightCards\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                            \n                                queryThird\n                            \n                            \n                                    Private\n                                subscribeToLoadI18n\n                            \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, authenticationService: AuthenticationService, store: Store, $injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thirds.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        $injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            computeThirdCssUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomputeThirdCssUrl(publisher: string, styleName: string, version: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        styleName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            computeThirdsMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomputeThirdsMenu()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchHbsTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \nfetchHbsTemplate(publisher: string, version: string, name: string, locale: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        locale\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchI18nJson\n                            \n                            \n                        \n                    \n                \n                \n                    \nfetchI18nJson(publisher: string, version: string, locales: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        locales\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fetchThird\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fetchThird(publisher: string, version: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publisher\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadI18nForLightCards\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadI18nForLightCards(cards: LightCard[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cards\n                                                        \n                                                                    LightCard[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadI18nForMenuEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadI18nForMenuEntries(menus: ThirdMenu[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:129\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menus\n                                                        \n                                                                    ThirdMenu[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            queryThird\n                            \n                            \n                        \n                    \n                \n                \n                    \nqueryThird(thirdName: string, version: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thirdName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        version\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribeToLoadI18n\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribeToLoadI18n(observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        observable\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            translate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        translate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:188\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     TranslateService\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadedI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadingI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            thirdCache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thirdsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            urlCleaner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HttpUrlEncodingCodec\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/thirds.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {HttpClient, HttpParams, HttpUrlEncodingCodec} from \"@angular/common/http\";\nimport {environment} from \"../../environments/environment\";\nimport {AuthenticationService} from \"@ofServices/authentication.service\";\nimport {EMPTY, from, merge, Observable, of, throwError} from \"rxjs\";\nimport {TranslateLoader, TranslateService} from \"@ngx-translate/core\";\nimport {catchError, filter, map, mergeMap, reduce, switchMap, tap} from \"rxjs/operators\";\nimport * as _ from 'lodash';\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../store/index\";\nimport {LightCard} from \"../model/light-card.model\";\nimport {Third, ThirdMenu} from \"@ofModel/thirds.model\";\n\n@Injectable()\nexport class ThirdsService {\n    readonly thirdsUrl: string;\n    private loadedI18n: string[] = [];\n    private loadingI18n: string[] = [];\n    private urlCleaner: HttpUrlEncodingCodec;\n    private thirdCache = new Map();\n\n    constructor(private httpClient: HttpClient,\n                private authenticationService: AuthenticationService,\n                private store: Store,\n                private $injector: Injector,\n    ) {\n        this.urlCleaner = new HttpUrlEncodingCodec();\n        this.thirdsUrl = `${environment.urls.thirds}`;\n    }\n\n    queryThird(thirdName:string, version:string):Observable {\n        const key = `${thirdName}.${version}`;\n        let third = this.thirdCache.get(key);\n        if(third){\n            return of(third);\n        }\n        return this.fetchThird(thirdName,version)\n            .pipe(\n                tap(t=>Object.setPrototypeOf(t,Third.prototype)),\n                tap(t=>this.thirdCache.set(key,t))\n            );\n    }\n\n    private fetchThird(publisher: string, version: string): Observable {\n        const params = new HttpParams()\n            .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/`,{\n            params\n        });\n    }\n\n    fetchHbsTemplate(publisher: string, version: string, name: string, locale: string): Observable {\n        const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n        return this.httpClient.get(`${this.thirdsUrl}/${publisher}/templates/${name}`,{\n            params,\n            responseType: 'text'\n        });\n    }\n\n    computeThirdCssUrl(publisher: string, styleName: string, version: string){\n        //manage url character encoding\n        const resourceUrl = this.urlCleaner.encodeValue(`${this.thirdsUrl}/${publisher}/css/${styleName}`);\n        const versionParam = new HttpParams().set('version',version);\n        return `${resourceUrl}?${versionParam.toString()}`;\n    }\n\n    fetchI18nJson(publisher: string, version: string, locales: string[]): Observable {\n        let previous: Observable;\n        for (let locale of locales) {\n            const params = new HttpParams()\n                .set(\"locale\", locale)\n                .set(\"version\", version);\n            const httpCall = this.httpClient.get(`${this.thirdsUrl}/${publisher}/i18n`, {\n                params\n            }).pipe(\n                map(r => {\n                        const object = {};\n                        object[locale] = {};\n                        object[locale][publisher] = {};\n                        object[locale][publisher][version] = r;\n                        return object;\n                    }\n                ));\n            if (previous) {\n                previous = merge(previous, httpCall);\n            } else {\n                previous = httpCall;\n            }\n        }\n        if (previous == null) {\n            return EMPTY;\n        }\n        const result = previous.pipe(\n            reduce((acc, val) => _.merge(acc,val))\n        );\n\n        return result;\n    }\n\n    computeThirdsMenu(): Observable{\n        return this.httpClient.get(`${this.thirdsUrl}/`).pipe(\n            switchMap(ts=>from(ts)),\n            filter((t:Third)=>!(!t.menuEntries)),\n            map(t=>\n                new ThirdMenu(t.name, t.version, t.i18nLabelKey, t.menuEntries)\n            ),\n            reduce((menus:ThirdMenu[],menu:ThirdMenu)=>{\n                menus.push(menu);\n                return menus;\n            },[])\n        );\n    }\n\n    loadI18nForLightCards(cards:LightCard[]){\n        let observable = from(cards).pipe(\n            map(card=> card.publisher + '###' + card.publisherVersion));\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    loadI18nForMenuEntries(menus:ThirdMenu[]){\n        const observable = from(menus).pipe(\n            map(menu=> menu.id + '###' + menu.version)\n        );\n        return this.subscribeToLoadI18n(observable);\n    }\n\n    private subscribeToLoadI18n(observable) {\n        return observable\n            .pipe(\n                reduce((ids: string[], id: string) => {\n                    ids.push(id);\n                    return ids;\n                }, []),\n                switchMap((ids:string[]) => {\n                    let work = _.uniq(ids);\n                    work = _.difference(work, this.loadingI18n)\n                    return from(_.difference(work, this.loadedI18n))\n                }),\n                mergeMap((id: string) => {\n                    this.loadingI18n.push(id);\n                    const input = id.split('###');\n\n                    let publisher = input[0];\n                    let version = input[1];\n                    return this.fetchI18nJson(publisher, version, this.translate().getLangs())\n                        .pipe(map(trans => {\n                                return {id: id, translation: trans};\n                            }),\n                            catchError(err => {\n                                _.remove(this.loadingI18n, id);\n                                return throwError(err);\n                            })\n                        );\n                }),\n                reduce((acc, val) => _.merge(acc,val)),\n                map(\n                    (result:any) => {\n                        let langs = this.translate().getLangs();\n                        for (let lang of langs) {\n                            let translationElement = result.translation[lang];\n                            if (translationElement) {\n                                this.translate().setTranslation(lang, translationElement, true);\n                                // needed otherwise only one translation apply\n                                this.translate().use(lang);\n                            }\n                        }\n                        _.remove(this.loadingI18n, result.id);\n                        this.loadedI18n.push(result.id);\n                        return true;\n                    }\n                ),\n                catchError((error,caught )=>{\n                    console.error('something went wrong during translation',error);\n                    return caught;\n                })\n            )\n    }\n\n    private translate(): TranslateService {\n        return this.$injector.get(TranslateService);\n    }\n}\n\nexport class ThirdsI18nLoader implements TranslateLoader {\n\n    constructor(thirdsService: ThirdsService) {}\n\n    getTranslation(lang: string): Observable {\n        return of({});\n    }\n\n}\n\nexport function ThirdsI18nLoaderFactory(thirdsService: ThirdsService): TranslateLoader {\n    return new ThirdsI18nLoader(thirdsService);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThirdsServiceMock.html":{"url":"classes/ThirdsServiceMock.html","title":"class - ThirdsServiceMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThirdsServiceMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tests/mocks/thirds.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                computeThirdsMenu\n                            \n                            \n                                loadI18nForMenuEntries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            computeThirdsMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ncomputeThirdsMenu()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tests/mocks/thirds.service.mock.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadI18nForMenuEntries\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadI18nForMenuEntries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/tests/mocks/thirds.service.mock.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {Observable, of} from \"rxjs\";\nimport {ThirdMenu, ThirdMenuEntry} from \"@ofModel/thirds.model\";\n\nexport class ThirdsServiceMock {\n    computeThirdsMenu(): Observable{\n        return of([new ThirdMenu('t1', '1', 'tLabel1', [\n            new ThirdMenuEntry('id1', 'label1', 'link1'),\n            new ThirdMenuEntry('id2', 'label2', 'link2'),\n        ]),\n            new ThirdMenu('t2', '1', 'tLabel2', [\n                new ThirdMenuEntry('id3', 'label3', 'link3'),\n            ])])\n    }\n    loadI18nForMenuEntries(){return of(true)}\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeFilterComponent.html":{"url":"components/TimeFilterComponent.html","title":"component - TimeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-filter\n            \n\n\n\n\n            \n                templateUrl\n                ./time-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                timeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, timeService: TimeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                    TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFormGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FilterType} from \"@ofServices/filter.service\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport * as _ from \"lodash\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport {TimeService} from \"@ofServices/time.service\";\n\n@Component({\n    selector: 'of-time-filter',\n    templateUrl: './time-filter.component.html'\n})\nexport class TimeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    private _filter$: Observable;\n\n    get filter$(): Observable {\n        return this._filter$;\n    }\n\n    timeFilterForm: FormGroup;\n\n    constructor(private store: Store,\n                private timeService: TimeService) {\n        this.timeFilterForm = this.createFormGroup();\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TIME_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                if (this.timeService.parseString(this.timeFilterForm.get('start').value).valueOf() != next.status.start) {\n                    if(!!next.status.start)\n                        this.timeFilterForm.get('start').setValue(this.timeService.asInputString(next.status.start));\n                    else\n                        this.timeFilterForm.get('start').setValue(null);\n                }\n                if (this.timeService.parseString(this.timeFilterForm.get('end').value).valueOf() != next.status.end) {\n                    if(!!next.status.end)\n                        this.timeFilterForm.get('end').setValue(this.timeService.asInputString(next.status.end));\n                    else\n                        this.timeFilterForm.get('end').setValue(null);\n                }\n            } else {\n                if (!!this.timeFilterForm.get('start').value)\n                    this.timeFilterForm.get('start').setValue(null);\n                if (!!this.timeFilterForm.get('end').value)\n                    this.timeFilterForm.get('end').setValue(null);\n            }\n        });\n        this._filter$.pipe(first(), takeUntil(this.ngUnsubscribe$)).subscribe(() => {\n            this.timeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB) => {\n                        return _.isEqual(formA, formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TIME_FILTER,\n                        active: !!form.start || !!form.end,\n                        status: {\n                            start: form.start ? this.timeService.parseString(form.start).valueOf() : null,\n                            end: form.end ? this.timeService.parseString(form.end).valueOf() : null\n                        }\n                    }))\n                );\n        });\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            start: new FormControl(),\n            end: new FormControl()\n        }, {updateOn: 'change'});\n    }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n      \n        feed.filters.time.start.label\n        \n      \n      \n        feed.filters.time.end.label\n        \n      \n    \n  \n  feed.filters.time.title\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    feed.filters.time.start.label                            feed.filters.time.end.label                      feed.filters.time.title        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimeLineComponent.html":{"url":"components/TimeLineComponent.html","title":"component - TimeLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimeLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/time-line/time-line.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-time-line\n            \n\n\n\n\n            \n                templateUrl\n                ./time-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conf\n                            \n                            \n                                    Public\n                                confZoom\n                            \n                            \n                                lightCards$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/time-line/time-line.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            conf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            confZoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightCards$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/time-line.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {Observable, of} from \"rxjs\";\nimport {LightCard} from \"@ofModel/light-card.model\";\nimport {select, Store} from \"@ngrx/store\";\nimport * as timelineSelectors from '@ofSelectors/timeline.selectors';\nimport {catchError} from \"rxjs/operators\";\nimport {AppState} from \"@ofStore/index\";\nimport {InitTimeline} from \"@ofActions/timeline.actions\";\nimport {AddCardDataTimeline} from \"@ofActions/timeline.actions\";\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport * as feedSelectors from \"@ofSelectors/feed.selectors\";\n\n@Component({\n  selector: 'of-time-line',\n  templateUrl: './time-line.component.html',\n})\nexport class TimeLineComponent implements OnInit {\n    lightCards$: Observable;\n\n    public conf: any;\n    public confZoom: any;\n\n    constructor(private store: Store) {}\n\n    ngOnInit() {\n        // check le ticket correspondant, pour savoir si\n        // on set la start et end domain par un dictionnaire\n        // W/M/Y ou autre\n\n        // conf 1\n        const startDomain = moment();\n        startDomain.hours(0).minutes(0).seconds(0).millisecond(0);\n        const endDomain = _.cloneDeep(startDomain);\n        endDomain.add(1, 'week');\n        endDomain.startOf('week');\n        endDomain.hours(0).minutes(0).seconds(0).millisecond(0);\n        endDomain.add(7, 'days');\n        // endDomain.add(5, 'days'); // example\n\n        // conf 2\n        const startDomain2 = moment();\n        startDomain2.hours(0).minutes(0).seconds(0).millisecond(0);\n        startDomain2.startOf('month');\n        /*\n        // pas obligatoire\n        startDomain2.subtract(2, 'days'); // deux jours avant\n        startDomain2.hours(0);*/\n        const endDomain2 = _.cloneDeep(startDomain2);\n        endDomain2.startOf('month');\n        endDomain2.add(2, 'months');\n        // endDomain2.add(1, 'months'); // example\n        // endDomain2.date(15); // example\n\n        // conf 3\n        const startDomain3 = moment();\n        startDomain3.startOf('month');\n        startDomain3.hours(0);\n        const endDomain3 = _.cloneDeep(startDomain3);\n        endDomain3.add(2, 'years');\n        // endDomain3.add(1, 'years'); // example\n        endDomain3.startOf('year'); // Voir avec Guillaume\n        // endDomain3.month(10); // example\n        const forwardLevel = 'W';\n        this.conf = {\n            enableDrag: false,\n            enableZoom: true,\n            autoScale: false,\n            animations: false,\n            showGridLines: true,\n            realTimeBar: true,\n            centeredOnTicks: true,\n        };\n        this.confZoom = [{\n            startDomain: startDomain.valueOf(),\n            endDomain: endDomain.valueOf(),\n            forwardLevel,\n            followCloackTick: false,\n        },\n        {\n            startDomain: startDomain2.valueOf(),\n            endDomain: endDomain2.valueOf(),\n            forwardLevel: 'M',\n            followCloackTick: false,\n        },\n        {\n            startDomain: startDomain3.valueOf(),\n            endDomain: endDomain3.valueOf(),\n            forwardLevel: 'Y',\n            followCloackTick: false,\n        }];\n\n        // this.lastCards$ = this.store.select(timelineSelectors.selectLastCardsSelection);\n        this.lightCards$ = this.store.pipe(\n            select(feedSelectors.selectFilteredFeed),\n            catchError(err => of([]))\n        );\n\n        this.store.dispatch(new InitTimeline({\n            data: [],\n        }));\n\n        this.lightCards$.subscribe(value => {\n            this.store.dispatch(new InitTimeline({\n                data: [],\n            }));\n            for (const val of value) {\n                // val.endDate val.startDate val.severity\n                const myCardTimeline = {\n                    startDate: val.startDate,\n                    endDate: val.endDate,\n                    severity: val.severity\n                };\n                this.store.dispatch(new AddCardDataTimeline({\n                    cardTimeline: myCardTimeline,\n                }));\n            }\n        });\n    }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n  timeline works!\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  timeline works!  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TimeLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/time.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asInputString\n                            \n                            \n                                    Public\n                                currentTime\n                            \n                            \n                                    Public\n                                parseString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/time.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asInputString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        asInputString(value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/time.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        currentTime()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/time.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     moment.Moment\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            parseString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        parseString(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/time.service.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     moment.Moment\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as moment from 'moment-timezone';\n\n@Injectable()\nexport class TimeService {\n\n    constructor() {\n    }\n\n    public currentTime(): moment.Moment {\n        return moment();\n    }\n\n    public parseString(value: string): moment.Moment {\n        return moment(value,'YYYY-MM-DDTHH:mm');\n    }\n\n    public asInputString(value: number): string {\n        return moment(value).format('YYYY-MM-DDTHH:mm:ss.SSS');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimelineState.html":{"url":"interfaces/TimelineState.html","title":"interface - TimelineState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TimelineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/states/timeline.state.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        error\n                                \n                                \n                                        lastCards\n                                \n                                \n                                        loading\n                                \n                                \n                                        selectedCardId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastCards\n                                    \n                                \n                                \n                                    \n                                        lastCards:     LightCard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LightCard[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedCardId\n                                    \n                                \n                                \n                                    \n                                        selectedCardId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createEntityAdapter, EntityAdapter, EntityState} from '@ngrx/entity';\nimport {LightCard} from '@ofModel/light-card.model';\nimport {LightCardAdapter} from \"@ofStates/feed.state\";\n\nexport interface TimelineState extends EntityState {\n    selectedCardId: string;\n    lastCards: LightCard[];\n    loading: boolean;\n    error: string;\n    data: any[];\n}\n\n/*export function sortByStartDate(card1: LightCard, card2: LightCard){\n    return card1.startDate - card2.startDate;\n}\n\nexport const LightCardAdapter: EntityAdapter = createEntityAdapter({\n    sortComparer:sortByStartDate\n});*/\n\nexport const timelineInitialState: TimelineState = LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        data: []\n    });\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInjector.html":{"url":"interceptors/TokenInjector.html","title":"interceptor - TokenInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/interceptors.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAuthHeadersIfNecessary\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/interceptors.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAuthHeadersIfNecessary\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAuthHeadersIfNecessary(request: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/interceptors.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpRequest\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/interceptors.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {AuthenticationService} from './authentication.service';\n\n@Injectable()\nexport class TokenInjector implements HttpInterceptor {\n    /* istanbul ignore next */\n    constructor(private authenticationService: AuthenticationService) {\n    }\n\n    /* istanbul ignore next */\n    intercept(request: HttpRequest, next: HttpHandler): Observable> {\n        return next.handle(this.addAuthHeadersIfNecessary(request));\n    }\n\n\n    addAuthHeadersIfNecessary(request: HttpRequest): HttpRequest {\n        const url = request.url;\n\n        const notCheckTokenRequest = !(url.endsWith('/auth/check_token') || url.endsWith('/auth/token') || url.endsWith('/auth/code'));\n        if (notCheckTokenRequest) {\n            const update = {setHeaders: AuthenticationService.getSecurityHeader()};\n            request = request.clone(update);\n        }\n        return request;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogIn.html":{"url":"classes/TryToLogIn.html","title":"class - TryToLogIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to push login/password pair to the authentication service\nEmitted by {LoginComponent} in the onSubmit @method which is called\nwhen the user click on the Login button of the login page form.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/authentication.actions.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogIn\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:78\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TryToLogOut.html":{"url":"classes/TryToLogOut.html","title":"class - TryToLogOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TryToLogOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/authentication.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used when the user logout\nEmitted by {NavbarComponent} win the logOut @method which is called\nwhen the user click on the logOut button of the navbar\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : AuthenticationActionTypes.TryToLogOut\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/authentication.actions.ts:92\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {Guid} from 'guid-typescript';\nimport {Message} from \"@ofModel/message.model\";\n\nexport enum AuthenticationActionTypes {\n    InitAuthStatus = '[Authentication] Init Authentication Status',\n    CheckAuthenticationStatus = '[Authentication] Check Authentication Status',\n    AcceptLogIn = '[Authentication] Accept the user log in attempt',\n    RejectLogIn = '[Authentication] Reject the user log in attempt',\n    TryToLogIn = '[Authentication] Try to log the user in',\n    TryToLogOut = '[Authentication] Try to log the user out',\n    AcceptLogOut = '[Authentication] Accept the user log out attempt',\n    AcceptLogOutSuccess = '[Authentication] Success Accept the user log out attempt',\n}\n\n/**\n * Authentication success payload\n */\nexport class PayloadForSuccessfulAuthentication {\n    constructor(public identifier: string,\n                public clientId: Guid,\n                public token: string,\n                public expirationDate: Date) {\n    }\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class InitAuthStatus implements Action {\n    readonly type = AuthenticationActionTypes.InitAuthStatus;\n    /* istanbul ignore next */\n    constructor(public payload:{code: string}){}\n}\n\n/**\n * It aims to validate the current authentication if exists.\n *\n */\nexport class CheckAuthenticationStatus implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.CheckAuthenticationStatus;\n}\n\n/**\n * Action used to update the state with the authentication information\n *\n * Emitted by {AuthenticationEffects} in the following {Observable} @members:\n *  * TryToLogIn\n *  * CheckAuthentication via handleLogInAttempt @method\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * containing the authentication information by filtering on the {AuthenticationActionTypes.AcceptLogIn} type.\n *\n */\nexport class AcceptLogIn implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: PayloadForSuccessfulAuthentication) {}\n}\n\n/**\n * Action used to push login/password pair to the authentication service\n *\n * Emitted by {LoginComponent} in the onSubmit @method which is called\n * when the user click on the `Login` button of the login page form.\n */\nexport class TryToLogIn implements Action {\n    readonly type= AuthenticationActionTypes.TryToLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: {username: string, password: string}){}\n}\n\n/**\n * Action used when the user logout\n *\n * Emitted by {NavbarComponent} win the logOut @method which is called\n * when the user click on the `logOut` button of the `navbar`\n */\nexport class TryToLogOut implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.TryToLogOut;\n}\n\n/**\n * Action used to notify the store that the authentication is not possible.\n *\n * Emmited by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogin`;\n *  *  `CheckAuthentication`\n *  and in the `handleRejectedLogin` @method called by the `ChecAuthentication` {Observable}\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information and containing a message about login rejection\n * by filtering on the {AuthenticationActionTypes.RejectLogIn} type.\n *\n */\nexport class RejectLogIn implements Action {\n    readonly type = AuthenticationActionTypes.RejectLogIn;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Message }) {}\n}\n\n/**\n * Action used to removes authentication information of the system and thus logOut the user.\n *\n * Emitted by {AuthenticationEffect} in the following {Observable} @members:\n *  * `TryToLogOut`\n *  * `RejectLogInAttempt`\n *\n *  Consume by {AuthenticationEffect} in the `AcceptLogOut` {Observable} @member\n *\n */\nexport class AcceptLogOut implements Action {\n    readonly type = AuthenticationActionTypes.AcceptLogOut;\n\n    /* istanbul ignore next */\n    constructor(){}\n}\n\n/**\n * Action used to notify the store to remove authentication information\n *\n * Emitted by {AuthenticationEffect} in `AcceptLogOut` {Observable} @member.\n *\n * Used in the {function} reducer of the {authentication.reducer.ts} file to create a new state\n * without any authentication information by filtering on the {AuthenticationActionTypes.AcceptLogOut} type.\n */\nexport class AcceptLogOutSuccess implements Action {\n    /* istanbul ignore next */\n    readonly type = AuthenticationActionTypes.AcceptLogOutSuccess;\n}\n\nexport type AuthenticationActions =\n    InitAuthStatus\n    | AcceptLogIn\n    | RejectLogIn\n    | TryToLogIn\n    | TryToLogOut\n    | CheckAuthenticationStatus\n    | AcceptLogOut\n    | AcceptLogOutSuccess;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TypeFilterComponent.html":{"url":"components/TypeFilterComponent.html","title":"component - TypeFilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TypeFilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                of-type-filter\n            \n\n            \n                styleUrls\n                ./type-filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./type-filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter$\n                            \n                            \n                                    Private\n                                ngUnsubscribe$\n                            \n                            \n                                typeFilterForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filter$\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFormGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _filter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ngUnsubscribe$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeFilterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filter$\n                    \n                \n\n                \n                    \n                        getfilter$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts:32\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Observable, Subject, timer} from \"rxjs\";\nimport {Filter} from \"@ofModel/feed-filter.model\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"@ofStore/index\";\nimport {buildFilterSelector} from \"@ofSelectors/feed.selectors\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {debounce, distinctUntilChanged, first, takeUntil} from \"rxjs/operators\";\nimport {ApplyFilter} from \"@ofActions/feed.actions\";\nimport * as _ from 'lodash';\nimport {FilterType} from \"@ofServices/filter.service\";\n\n\n@Component({\n    selector: 'of-type-filter',\n    templateUrl: './type-filter.component.html',\n    styleUrls: ['./type-filter.component.scss']\n})\nexport class TypeFilterComponent implements OnInit, OnDestroy {\n    private ngUnsubscribe$ = new Subject();\n    typeFilterForm: FormGroup;\n\n    private _filter$: Observable;\n\n    get filter$(): Observable{\n        return this._filter$;\n    }\n\n    // set filter$(filter: Observable) {\n    //     this._filter$ = filter;\n    // }\n\n    constructor(private store: Store) {\n        this.typeFilterForm = this.createFormGroup();\n    }\n\n    private createFormGroup() {\n        return new FormGroup({\n            alarm: new FormControl(),\n            action: new FormControl(),\n            question: new FormControl(),\n            notification: new FormControl()\n        },{updateOn: 'change'});\n    }\n\n    ngOnDestroy() {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n\n\n    ngOnInit() {\n        this._filter$ = this.store.select(buildFilterSelector(FilterType.TYPE_FILTER));\n        this._filter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe((next: Filter) => {\n            if (next) {\n                this.typeFilterForm.get('alarm').setValue(!next.active || next.status.alarm);\n                this.typeFilterForm.get('action').setValue(!next.active || next.status.action);\n                this.typeFilterForm.get('question').setValue(!next.active || next.status.question);\n                this.typeFilterForm.get('notification').setValue(!next.active || next.status.notification);\n            } else {\n                this.typeFilterForm.get('alarm').setValue(true);\n                this.typeFilterForm.get('action').setValue(true);\n                this.typeFilterForm.get('question').setValue(true);\n                this.typeFilterForm.get('notification').setValue(true);\n            }\n        });\n        this._filter$.pipe(first(),takeUntil(this.ngUnsubscribe$)).subscribe(()=>{\n            this.typeFilterForm\n                .valueChanges\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    distinctUntilChanged((formA, formB)=>{\n                        return _.isEqual(formA,formB);\n                    }),\n                    debounce(() => timer(500)))\n                .subscribe(form => this.store.dispatch(\n                    new ApplyFilter({\n                        name: FilterType.TYPE_FILTER,\n                        active: !(form.alarm && form.action && form.question && form.notification),\n                        status: form\n                    }))\n                );\n        });\n    }\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n        \n            \n                \n                feed.filters.type.alarm.label\n            \n            \n                \n                feed.filters.type.action.label\n            \n            \n                \n                feed.filters.type.question.label\n            \n            \n                \n                feed.filters.type.notification.label\n            \n        \n    \n    feed.filters.type.title\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./type-filter.component.scss\n                \n                /* Copyright (c) 2018, RTE (http://www.rte-france.com)\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\n@import \"~assets/styles/_variables.scss\";\n\n$cell-width: 10;\n\n.type-selections {\n  display: table;\n  width: $cell-width * 2px;\n  height: $cell-width * 2px;\n}\n\n.type-row {\n  display: table-row;\n}\n\n.type-cell {\n  display: table-cell;\n}\n\n/deep/ .popover {\n  background-color: $dark;\n  .popover-header {\n    color: $light;\n    background-color: $dark;\n  }\n  .popover-body {\n    color: $light;\n  }\n  .arrow::after{\n    border-right-color: $dark;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        feed.filters.type.alarm.label                                                        feed.filters.type.action.label                                                        feed.filters.type.question.label                                                        feed.filters.type.notification.label                            feed.filters.type.title                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'of-root'},{'name': 'ArchivesComponent', 'selector': 'of-archives'},{'name': 'CardComponent', 'selector': 'of-card'},{'name': 'CardDetailsComponent', 'selector': 'of-card-details'},{'name': 'CardListComponent', 'selector': 'of-card-list'},{'name': 'CustomTimelineChartComponent', 'selector': 'of-custom-timeline-chart'},{'name': 'DetailComponent', 'selector': 'of-detail'},{'name': 'DetailsComponent', 'selector': 'of-details'},{'name': 'FeedComponent', 'selector': 'of-cards'},{'name': 'FiltersComponent', 'selector': 'of-filters'},{'name': 'IconComponent', 'selector': 'of-icon'},{'name': 'IframeDisplayComponent', 'selector': 'of-iframedisplay'},{'name': 'InitChartComponent', 'selector': 'of-init-chart'},{'name': 'LoginComponent', 'selector': 'of-login'},{'name': 'NavbarComponent', 'selector': 'of-navbar'},{'name': 'NoSelectionComponent', 'selector': 'of-no-selection'},{'name': 'TimeFilterComponent', 'selector': 'of-time-filter'},{'name': 'TimeLineComponent', 'selector': 'of-time-line'},{'name': 'TypeFilterComponent', 'selector': 'of-type-filter'}];\n    var DIRECTIVES = [{'name': 'DraggableDirective', 'selector': '[appDraggable]'},{'name': 'MouseWheelDirective', 'selector': '[appMouseWheel]'}];\n    var ACTUAL_COMPONENT = {'name': 'TypeFilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSelectedMenu.html":{"url":"classes/UpdateSelectedMenu.html","title":"class - UpdateSelectedMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSelectedMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/menu.actions.ts\n        \n\n            \n                Description\n            \n            \n                Action used to update the state with the selected menu\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/menu.actions.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MenuActionTypes.UpdateSelectedMenu\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/menu.actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {ThirdMenu} from \"@ofModel/thirds.model\";\n\nexport enum MenuActionTypes {\n    LoadMenu = '[Menu] Load Menu',\n    LoadMenuSuccess = '[Menu] Load Menu Success',\n    LoadMenuFailure = '[Menu] Load Menu Fail',\n    HandleUnexpectedError = '[Menu] Handle unexpected error',\n    UpdateSelectedMenu = '[Menu] Update Selected Menu',\n}\n// needed by NGRX entities\nexport class LoadMenu implements Action {\n    readonly type = MenuActionTypes.LoadMenu;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\nexport class LoadMenuFailure implements Action {\n    readonly type = MenuActionTypes.LoadMenuFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class LoadMenuSuccess implements Action {\n    readonly type = MenuActionTypes.LoadMenuSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { menu: ThirdMenu[] }) {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    readonly type = MenuActionTypes.HandleUnexpectedError;\n\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\n/**\n * Action used to update the state with the selected menu\n */\n//TODO Describe usage (cf authentication example)\nexport class UpdateSelectedMenu implements Action {\n    readonly type = MenuActionTypes.UpdateSelectedMenu;\n\n    /* istanbul ignore next */\n    constructor(public payload: {menu_id: string, menu_entry_id: string}) {}\n}\n\nexport type MenuActions =\n    LoadMenu\n    | LoadMenuSuccess\n    | LoadMenuFailure\n    | HandleUnexpectedError\n    | UpdateSelectedMenu;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedSubscription.html":{"url":"classes/UpdatedSubscription.html","title":"class - UpdatedSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/actions/light-card.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/store/actions/light-card.actions.ts:74\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardActionTypes.UpdatedSubscription\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/actions/light-card.actions.ts:74\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Action} from '@ngrx/store';\nimport {LightCard} from '@ofModel/light-card.model';\n\nexport enum LightCardActionTypes {\n    LoadLightCards = '[LCard] Load',\n    EmptyLightCards = '[LCard] Empty',\n    LoadLightCardsSuccess = '[LCard] Load Success',\n    LoadLightCardsExtendedData = '[LCard] Load Extended Data',\n    LoadLightCardsFailure = '[LCard] Load Fail',\n    SelectLightCard = '[LCard] Select One',\n    AddLightCardFailure = '[LCard] Add Light Card Fail',\n    UpdatedSubscription = '[LCard] UpdateSubscription',\n    HandleUnexpectedError = '[LCard] Handle unexpected error related to authentication issue',\n}\n// needed by NGRX entities\nexport class LoadLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.LoadLightCards;\n}\n\nexport class EmptyLightCards implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.EmptyLightCards;\n}\n\nexport class LoadLightCardsSuccess implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsSuccess;\n\n    /* istanbul ignore next */\n    constructor(public payload: { lightCards: LightCard[] }) {\n    }\n}\n\nexport class LoadLightCardsExtendedData implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsExtendedData;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class LoadLightCardsFailure implements Action {\n    readonly type = LightCardActionTypes.LoadLightCardsFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class SelectLightCard implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.SelectLightCard;\n    /* istanbul ignore next */\n    constructor(public payload: {selectedCardId:string}){}\n\n}\n\nexport class AddLightCardFailure implements Action {\n    readonly type = LightCardActionTypes.AddLightCardFailure;\n\n    /* istanbul ignore next */\n    constructor(public payload: { error: Error }) {\n    }\n}\n\nexport class UpdatedSubscription implements Action {\n    readonly type = LightCardActionTypes.UpdatedSubscription;\n\n    /* istanbul ignore next */\n    constructor() {\n    }\n}\n\nexport class HandleUnexpectedError implements Action {\n    /* istanbul ignore next */\n    readonly type = LightCardActionTypes.HandleUnexpectedError;\n    /* istanbul ignore next */\n    constructor(public payload: {error: Error}) {\n\n    }\n}\n\nexport type LightCardActions =\n    LoadLightCards\n    | LoadLightCardsSuccess\n    | LoadLightCardsFailure\n    | SelectLightCard\n    | AddLightCardFailure\n    | UpdatedSubscription\n    | HandleUnexpectedError\n    | EmptyLightCards;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/XAxisTickFormatPipe.html":{"url":"pipes/XAxisTickFormatPipe.html","title":"pipe - XAxisTickFormatPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  XAxisTickFormatPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        xAxisTickFormat\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: any, languageTag: string, clusterLevel: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        languageTag\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        clusterLevel\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport * as moment from 'moment';\n\n@Pipe({\n  name: 'xAxisTickFormat'\n})\nexport class XAxisTickFormatPipe implements PipeTransform {\n\n  transform(value: any, languageTag: string, clusterLevel: string): string {\n    if (languageTag) {\n      /*if (value instanceof moment) {*/\n        // const datePipe = moment.locale(languageTag);\n\n        const date = moment(value);\n        const startYear = moment(date).startOf('year');\n        if (clusterLevel === 'W') {\n\n          /* Bordel ici */\n          // hours\n          if (date.hours() === 0) {\n            // const hours = datePipe.transform(date, 'HH:mm');\n            // const result = hours + '\\n' + datePipe.transform(date, 'EE d MMMM');\n            // return result;\n\n            return date.format('ddd D, MMM'); // 'short');\n          }\n          else {\n            // return '';\n            return date.format('HH');\n          }\n\n          /* Bordel Fini */\n\n          //  return datePipe.transform(date, 'd EE, MMMM'); //'short');\n        } else if (clusterLevel === 'M') {\n          if (date.valueOf() === startYear.valueOf()) {\n            return date.format('ddd D, MMM YYYY');\n          }\n          return date.format('ddd D, MMM'); //'d EE, MMMM, ');\n        } else if (clusterLevel === 'Y') {\n          if (date.valueOf() === startYear.valueOf()) {\n            return date.format('MMM D, YYYY');\n          }\n          return date.format('MMM D');\n        }\n        /*if (date.getHours() === 0 &&\n          date.getMinutes() === 0 &&\n          date.getSeconds() === 0) {\n          return datePipe.transform(date, 'shortDate');\n        }\n        if (date.getSeconds() !== 0) {\n          return datePipe.transform(date, 'mediumTime');\n        } else {\n          return datePipe.transform(date, 'shortTime');\n        }*/\n      /*} else {\n        console.log('cas 1');\n        return value.toLocaleString(languageTag);\n      }*/\n    } else {\n      console.log('cas 2');\n      return value.toString();\n    }\n  }\n\n/*\n  transform2(value: any, languageTag: string, clusterLevel: string, onOnTwo): string {\n    let lkj = '';\n    console.log('debut', onOnTwo);\n    if (onOnTwo === 3) {\n      // onOnTwo = 1;\n      console.log('inside tranform2');\n      const formatPipe: XAxisTickFormatPipe = new XAxisTickFormatPipe();\n      lkj = formatPipe.transform(value, 'en-US', clusterLevel);\n      // renvoie une string\n      // this.multiHorizontalTicksLine(1)\n    }/!* else {\n      console.log('j');\n      onOnTwo++;\n    }*!/\n    console.log('fin', lkj, onOnTwo);\n    return(lkj);\n  }*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/components/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/model/card.model.ts\n            \n            class\n            Card\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/card.model.ts\n            \n            class\n            Detail\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/feed-filter.model.ts\n            \n            class\n            Filter\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/model/i18n.model.ts\n            \n            class\n            I18n\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/map.ts\n            \n            class\n            Map\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/message.model.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            Action\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            Input\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            ParameterListItem\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            Process\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            State\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            Third\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            ThirdMenu\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/thirds.model.ts\n            \n            class\n            ThirdMenuEntry\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/archives/archives.component.ts\n            \n            component\n            ArchivesComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/cards/components/card-details/card-details.component.ts\n            \n            component\n            CardDetailsComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/cards/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/cards/components/detail/detail.component.ts\n            \n            component\n            DetailComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/modules/cards/components/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/modules/cards/services/handlebars.service.ts\n            \n            injectable\n            HandlebarsService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/modules/cards/services/handlebars.service.ts\n            \n            function\n            sortOnKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/card-list/card-list.component.ts\n            \n            component\n            CardListComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/card-list/filters/filters.component.ts\n            \n            component\n            FiltersComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/card-list/filters/time-filter/time-filter.component.ts\n            \n            component\n            TimeFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/card-list/filters/type-filter/type-filter.component.ts\n            \n            component\n            TypeFilterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/custom-timeline-chart/custom-timeline-chart.component.ts\n            \n            component\n            CustomTimelineChartComponent\n            \n                24 %\n                (17/69)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/init-chart/init-chart.component.ts\n            \n            component\n            InitChartComponent\n            \n                40 %\n                (15/37)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/no-selection/no-selection.component.ts\n            \n            component\n            NoSelectionComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/time-line/app-draggable.ts\n            \n            directive\n            DraggableDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/time-line/mouse-wheel.directive.ts\n            \n            directive\n            MouseWheelDirective\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/time-line/time-line.component.ts\n            \n            component\n            TimeLineComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/feed/components/time-line/x-axis-tick-format.pipe.ts\n            \n            pipe\n            XAxisTickFormatPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/feed/feed.component.ts\n            \n            component\n            FeedComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/modules/thirdparty/iframedisplay.component.ts\n            \n            component\n            IframeDisplayComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            class\n            AuthObject\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            class\n            CheckTokenResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                42 %\n                (11/26)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            function\n            isInTheFuture\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/authentication.service.ts\n            \n            variable\n            ONE_SECOND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/card.service.ts\n            \n            injectable\n            CardService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/filter.service.ts\n            \n            injectable\n            FilterService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/guid.service.ts\n            \n            class\n            GuidService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/interceptors.service.ts\n            \n            interceptor\n            TokenInjector\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/thirds.service.ts\n            \n            class\n            ThirdsI18nLoader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/thirds.service.ts\n            \n            injectable\n            ThirdsService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/services/thirds.service.ts\n            \n            function\n            ThirdsI18nLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/time.service.ts\n            \n            injectable\n            TimeService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            AcceptLogIn\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            AcceptLogOut\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            AcceptLogOutSuccess\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            CheckAuthenticationStatus\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            InitAuthStatus\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            PayloadForSuccessfulAuthentication\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            RejectLogIn\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            TryToLogIn\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/authentication.actions.ts\n            \n            class\n            TryToLogOut\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/card.actions.ts\n            \n            class\n            ClearCard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/card.actions.ts\n            \n            class\n            HandleUnexpectedError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/card.actions.ts\n            \n            class\n            LoadCard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/card.actions.ts\n            \n            class\n            LoadCardFailure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/card.actions.ts\n            \n            class\n            LoadCardSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/config.actions.ts\n            \n            class\n            HandleUnexpectedError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/config.actions.ts\n            \n            class\n            LoadConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/config.actions.ts\n            \n            class\n            LoadConfigFailure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/config.actions.ts\n            \n            class\n            LoadConfigSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/feed.actions.ts\n            \n            class\n            ApplyFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/feed.actions.ts\n            \n            class\n            InitFilters\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            AddLightCardFailure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            EmptyLightCards\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            HandleUnexpectedError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            LoadLightCards\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            LoadLightCardsExtendedData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            LoadLightCardsFailure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            LoadLightCardsSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            SelectLightCard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/light-card.actions.ts\n            \n            class\n            UpdatedSubscription\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/actions/menu.actions.ts\n            \n            class\n            HandleUnexpectedError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/menu.actions.ts\n            \n            class\n            LoadMenu\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/actions/menu.actions.ts\n            \n            class\n            LoadMenuFailure\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/menu.actions.ts\n            \n            class\n            LoadMenuSuccess\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/menu.actions.ts\n            \n            class\n            UpdateSelectedMenu\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/timeline.actions.ts\n            \n            class\n            AddCardDataTimeline\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/actions/timeline.actions.ts\n            \n            class\n            InitTimeline\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/effects/authentication.effects.ts\n            \n            injectable\n            AuthenticationEffects\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/store/effects/card-operation.effects.ts\n            \n            injectable\n            CardOperationEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/effects/card.effects.ts\n            \n            injectable\n            CardEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/effects/config.effects.ts\n            \n            injectable\n            ConfigEffects\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/store/effects/custom-router.effects.ts\n            \n            injectable\n            CustomRouterEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/effects/feed-filters.effects.ts\n            \n            injectable\n            FeedFiltersEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/effects/light-card.effects.ts\n            \n            injectable\n            LightCardEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/effects/menu.effects.ts\n            \n            injectable\n            MenuEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/index.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/store/index.ts\n            \n            variable\n            appEffects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/index.ts\n            \n            variable\n            appMetaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/index.ts\n            \n            variable\n            appReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/index.ts\n            \n            variable\n            storeConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            variable\n            getExpirationDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            variable\n            getExpirationTime\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            variable\n            getIdentifier\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            variable\n            getToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/authentication.reducer.ts\n            \n            variable\n            UTC_beginning_time\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/card.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/card.reducer.ts\n            \n            variable\n            getSelectedId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/config.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/light-card.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/menu.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/menu.reducer.ts\n            \n            variable\n            getSelectedId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/reducers/timeline.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectAuthenticationState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectCode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectExpirationTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/authentication.selectors.ts\n            \n            variable\n            selectMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/card.selectors.ts\n            \n            variable\n            selectCardState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/card.selectors.ts\n            \n            variable\n            selectCardStateSelected\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/card.selectors.ts\n            \n            variable\n            selectCardStateSelectedDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/card.selectors.ts\n            \n            variable\n            selectCardStateSelectedId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            function\n            buildConfigSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            variable\n            selectConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            variable\n            selectConfigData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            variable\n            selectConfigLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            variable\n            selectConfigRetry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/config.selectors.ts\n            \n            variable\n            selectMaxedRetries\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            function\n            buildFilterSelector\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectActiveFiltersArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectFilteredFeed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectLastCards\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectLightCardSelection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/feed.selectors.ts\n            \n            variable\n            selectLightCardsState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/menu.selectors.ts\n            \n            variable\n            selectMenuState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/menu.selectors.ts\n            \n            variable\n            selectMenuStateMenu\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/menu.selectors.ts\n            \n            variable\n            selectMenuStateSelectedMenuEntryId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/menu.selectors.ts\n            \n            variable\n            selectMenuStateSelectedMenuId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/router.selectors.ts\n            \n            variable\n            selectCurrentUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/router.selectors.ts\n            \n            variable\n            selectRouterState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/timeline.selectors.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/timeline.selectors.ts\n            \n            variable\n            selectLastCardsSelection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/timeline.selectors.ts\n            \n            variable\n            selectLightCardSelection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/timeline.selectors.ts\n            \n            variable\n            selectTimelineSelection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/selectors/timeline.selectors.ts\n            \n            variable\n            selectTimelineState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/authentication.state.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/store/states/authentication.state.ts\n            \n            variable\n            authInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/card.state.ts\n            \n            interface\n            CardState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/states/card.state.ts\n            \n            variable\n            cardInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/config.state.ts\n            \n            interface\n            ConfigState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/store/states/config.state.ts\n            \n            variable\n            CONFIG_LOAD_MAX_RETRIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/config.state.ts\n            \n            variable\n            configInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/feed.state.ts\n            \n            interface\n            CardFeedState\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/store/states/feed.state.ts\n            \n            function\n            sortByStartDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/feed.state.ts\n            \n            variable\n            feedInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/feed.state.ts\n            \n            variable\n            LightCardAdapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/menu.state.ts\n            \n            interface\n            MenuState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/store/states/menu.state.ts\n            \n            variable\n            menuInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/router.state.ts\n            \n            class\n            CustomRouterStateSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/store/states/router.state.ts\n            \n            class\n            RouterStateUrl\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/store/states/router.state.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/states/timeline.state.ts\n            \n            interface\n            TimelineState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/store/states/timeline.state.ts\n            \n            variable\n            timelineInitialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/translate.config.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/translate.config.ts\n            \n            variable\n            i18nPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/translate.config.ts\n            \n            variable\n            prodI18nPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/translate.config.ts\n            \n            variable\n            translateConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.vps.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            appendFixedLengthAlphanumericValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            forcePositiveAndOneMinimum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            generateRandomArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            generateRandomPositiveIntegerWithinRangeWithOneAsMinimum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getFixedLengthAlphanumericValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomAddCardOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomCard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomCardDetail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomCardWithRandomDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomLigthCard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getOneRandomThird\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getPositiveRandomNumberWithinRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomActions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomAlphanumericValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomCardDetails\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomI18nData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomIndex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomMenu\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getRandomThird\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            getSeveralRandomLightCards\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            handleMaxAgainstMin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/helpers.ts\n            \n            function\n            pickARandomItemOfAnEnum\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tests/mocks/thirds.service.mock.ts\n            \n            class\n            ThirdsServiceMock\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.2\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ^7.2.2\n        \n            @angular/compiler : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.17\n        \n            @fortawesome/free-solid-svg-icons : ^5.8.1\n        \n            @ng-bootstrap/ng-bootstrap : ^4.0.0\n        \n            @ngrx/effects : ^7.1.0\n        \n            @ngrx/entity : ^7.1.0\n        \n            @ngrx/router-store : ^7.1.0\n        \n            @ngrx/store : ^7.1.0\n        \n            @ngrx/store-devtools : ^7.1.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            @swimlane/ngx-charts : ^10.1.0\n        \n            bootstrap : ^4.2.1\n        \n            core-js : ^2.6.3\n        \n            guid-typescript : ^1.0.9\n        \n            handlebars : ^4.0.12\n        \n            jwt-decode : ^2.2.0\n        \n            lodash : ^4.17.11\n        \n            moment : ^2.24.0\n        \n            moment-timezone : ^0.5.25\n        \n            ng-event-source : ^1.0.14\n        \n            ngrx-router : ^2.0.1\n        \n            rxjs : ^6.3.3\n        \n            svg-pan-zoom : ^3.6.0\n        \n            tslib : ^1.9.3\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../thirds.model.ts)\n                        \n                        \n                            AuthenticationActionTypes   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActionTypes   (src/.../card.actions.ts)\n                        \n                        \n                            CardOperationType   (src/.../card-operation.model.ts)\n                        \n                        \n                            ConfigActionTypes   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActionTypes   (src/.../feed.actions.ts)\n                        \n                        \n                            FilterType   (src/.../filter.service.ts)\n                        \n                        \n                            InputType   (src/.../thirds.model.ts)\n                        \n                        \n                            LightCardActionTypes   (src/.../light-card.actions.ts)\n                        \n                        \n                            LocalStorageAuthContent   (src/.../authentication.service.ts)\n                        \n                        \n                            MenuActionTypes   (src/.../menu.actions.ts)\n                        \n                        \n                            MessageLevel   (src/.../message.model.ts)\n                        \n                        \n                            Severity   (src/.../light-card.model.ts)\n                        \n                        \n                            Sound   (src/.../light-card.model.ts)\n                        \n                        \n                            TimelineActionTypes   (src/.../timeline.actions.ts)\n                        \n                        \n                            TitlePosition   (src/.../card.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/thirds.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 EXTERNAL\n                            \n                        \n                        \n                            \n                                 JNLP\n                            \n                        \n                        \n                            \n                                 URI\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InputType\n                    \n                \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                 LIST_RADIO\n                            \n                        \n                        \n                            \n                                 SWITCH_LIST\n                            \n                        \n                        \n                            \n                                 LONGTEXT\n                            \n                        \n                        \n                            \n                                 BOOLEAN\n                            \n                        \n                        \n                            \n                                 STATIC\n                            \n                        \n            \n        \n\n    src/app/store/actions/authentication.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthenticationActionTypes\n                    \n                \n                        \n                            \n                                 InitAuthStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Init Authentication Status\n                            \n                        \n                        \n                            \n                                 CheckAuthenticationStatus\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Check Authentication Status\n                            \n                        \n                        \n                            \n                                 AcceptLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log in attempt\n                            \n                        \n                        \n                            \n                                 RejectLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Reject the user log in attempt\n                            \n                        \n                        \n                            \n                                 TryToLogIn\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user in\n                            \n                        \n                        \n                            \n                                 TryToLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Try to log the user out\n                            \n                        \n                        \n                            \n                                 AcceptLogOut\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Accept the user log out attempt\n                            \n                        \n                        \n                            \n                                 AcceptLogOutSuccess\n                            \n                        \n                        \n                            \n                                Value : [Authentication] Success Accept the user log out attempt\n                            \n                        \n            \n        \n\n    src/app/store/actions/card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        CardActionTypes\n                    \n                \n                        \n                            \n                                 ClearCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Clear\n                            \n                        \n                        \n                            \n                                 LoadCard\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card\n                            \n                        \n                        \n                            \n                                 LoadCardSuccess\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Success\n                            \n                        \n                        \n                            \n                                 LoadCardFailure\n                            \n                        \n                        \n                            \n                                Value : [Card] Load Card Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Card] Handle unexpected error related to card issue\n                            \n                        \n            \n        \n\n    src/app/model/card-operation.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardOperationType\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                Value : ADD\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/store/actions/config.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigActionTypes\n                    \n                \n                        \n                            \n                                 LoadConfig\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config\n                            \n                        \n                        \n                            \n                                 LoadConfigSuccess\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Success\n                            \n                        \n                        \n                            \n                                 LoadConfigFailure\n                            \n                        \n                        \n                            \n                                Value : [Config] Load Config Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Config] Handle unexpected error related to configuration issue\n                            \n                        \n            \n        \n\n    src/app/store/actions/feed.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        FeedActionTypes\n                    \n                \n                        \n                            \n                                 ApplyFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Change filter Status\n                            \n                        \n                        \n                            \n                                 InitFilter\n                            \n                        \n                        \n                            \n                                Value : [Feed] Init filter\n                            \n                        \n            \n        \n\n    src/app/services/filter.service.ts\n    \n        \n            \n                \n                    \n                        \n                        FilterType\n                    \n                \n                        \n                            \n                                 TYPE_FILTER\n                            \n                        \n                        \n                            \n                                 RECIPIENT_FILTER\n                            \n                        \n                        \n                            \n                                 TIME_FILTER\n                            \n                        \n                        \n                            \n                                 TEST_FILTER\n                            \n                        \n            \n        \n\n    src/app/store/actions/light-card.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        LightCardActionTypes\n                    \n                \n                        \n                            \n                                 LoadLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load\n                            \n                        \n                        \n                            \n                                 EmptyLightCards\n                            \n                        \n                        \n                            \n                                Value : [LCard] Empty\n                            \n                        \n                        \n                            \n                                 LoadLightCardsSuccess\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Success\n                            \n                        \n                        \n                            \n                                 LoadLightCardsExtendedData\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Extended Data\n                            \n                        \n                        \n                            \n                                 LoadLightCardsFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Load Fail\n                            \n                        \n                        \n                            \n                                 SelectLightCard\n                            \n                        \n                        \n                            \n                                Value : [LCard] Select One\n                            \n                        \n                        \n                            \n                                 AddLightCardFailure\n                            \n                        \n                        \n                            \n                                Value : [LCard] Add Light Card Fail\n                            \n                        \n                        \n                            \n                                 UpdatedSubscription\n                            \n                        \n                        \n                            \n                                Value : [LCard] UpdateSubscription\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [LCard] Handle unexpected error related to authentication issue\n                            \n                        \n            \n        \n\n    src/app/services/authentication.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LocalStorageAuthContent\n                    \n                \n                        \n                            \n                                 token\n                            \n                        \n                        \n                            \n                                Value : token\n                            \n                        \n                        \n                            \n                                 expirationDate\n                            \n                        \n                        \n                            \n                                Value : expirationDate\n                            \n                        \n                        \n                            \n                                 identifier\n                            \n                        \n                        \n                            \n                                Value : identifier\n                            \n                        \n                        \n                            \n                                 clientId\n                            \n                        \n                        \n                            \n                                Value : clientId\n                            \n                        \n            \n        \n\n    src/app/store/actions/menu.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        MenuActionTypes\n                    \n                \n                        \n                            \n                                 LoadMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu\n                            \n                        \n                        \n                            \n                                 LoadMenuSuccess\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Success\n                            \n                        \n                        \n                            \n                                 LoadMenuFailure\n                            \n                        \n                        \n                            \n                                Value : [Menu] Load Menu Fail\n                            \n                        \n                        \n                            \n                                 HandleUnexpectedError\n                            \n                        \n                        \n                            \n                                Value : [Menu] Handle unexpected error\n                            \n                        \n                        \n                            \n                                 UpdateSelectedMenu\n                            \n                        \n                        \n                            \n                                Value : [Menu] Update Selected Menu\n                            \n                        \n            \n        \n\n    src/app/model/message.model.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageLevel\n                    \n                \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n            \n        \n\n    src/app/model/light-card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                        \n                            \n                                 ALARM\n                            \n                        \n                        \n                            \n                                Value : ALARM\n                            \n                        \n                        \n                            \n                                 ACTION\n                            \n                        \n                        \n                            \n                                Value : ACTION\n                            \n                        \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                Value : NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n                        \n                            \n                                Value : QUESTION\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 NOTIFICATION\n                            \n                        \n                        \n                            \n                                 QUESTION\n                            \n                        \n            \n        \n\n    src/app/store/actions/timeline.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        TimelineActionTypes\n                    \n                \n                        \n                            \n                                 InitTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Init timeline\n                            \n                        \n                        \n                            \n                                 AddCardDataTimeline\n                            \n                        \n                        \n                            \n                                Value : [timeline] Add Card to data\n                            \n                        \n            \n        \n\n    src/app/model/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TitlePosition\n                    \n                \n                        \n                            \n                                 UP\n                            \n                        \n                        \n                            \n                                 DOWN\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArchivesModule\n\n\n\ncluster_ArchivesModule_declarations\n\n\n\ncluster_ArchivesModule_imports\n\n\n\ncluster_CardsModule\n\n\n\ncluster_CardsModule_declarations\n\n\n\ncluster_CardsModule_exports\n\n\n\ncluster_CardsModule_providers\n\n\n\ncluster_FeedModule\n\n\n\ncluster_FeedModule_declarations\n\n\n\ncluster_FeedModule_imports\n\n\n\ncluster_FeedModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_StateModule\n\n\n\ncluster_StateModule_imports\n\n\n\ncluster_ThirdpartyModule\n\n\n\ncluster_ThirdpartyModule_declarations\n\n\n\ncluster_ThirdpartyModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nAppModule -->\n\nIconComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nStateModule\n\nStateModule\n\nAppModule -->\n\nStateModule->AppModule\n\n\n\n\n\nArchivesComponent\n\nArchivesComponent\n\n\n\nArchivesModule\n\nArchivesModule\n\nArchivesModule -->\n\nArchivesComponent->ArchivesModule\n\n\n\n\n\nArchivesRoutingModule\n\nArchivesRoutingModule\n\nArchivesModule -->\n\nArchivesRoutingModule->ArchivesModule\n\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardsModule\n\nCardsModule\n\nCardsModule -->\n\nCardComponent->CardsModule\n\n\n\n\n\nCardDetailsComponent\n\nCardDetailsComponent\n\nCardsModule -->\n\nCardDetailsComponent->CardsModule\n\n\n\n\n\nDetailComponent\n\nDetailComponent\n\nCardsModule -->\n\nDetailComponent->CardsModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nCardsModule -->\n\nDetailsComponent->CardsModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardsModule->CardComponent \n\n\n\n\n\nCardDetailsComponent \n\nCardDetailsComponent \n\nCardDetailsComponent  -->\n\nCardsModule->CardDetailsComponent \n\n\n\n\n\nDetailComponent \n\nDetailComponent \n\nDetailComponent  -->\n\nCardsModule->DetailComponent \n\n\n\n\n\nDetailsComponent \n\nDetailsComponent \n\nDetailsComponent  -->\n\nCardsModule->DetailsComponent \n\n\n\n\n\nFeedModule\n\nFeedModule\n\nFeedModule -->\n\nCardsModule->FeedModule\n\n\n\n\n\nHandlebarsService\n\nHandlebarsService\n\nCardsModule -->\n\nHandlebarsService->CardsModule\n\n\n\n\n\nCardListComponent\n\nCardListComponent\n\nFeedModule -->\n\nCardListComponent->FeedModule\n\n\n\n\n\nCustomTimelineChartComponent\n\nCustomTimelineChartComponent\n\nFeedModule -->\n\nCustomTimelineChartComponent->FeedModule\n\n\n\n\n\nDraggableDirective\n\nDraggableDirective\n\nFeedModule -->\n\nDraggableDirective->FeedModule\n\n\n\n\n\nFeedComponent\n\nFeedComponent\n\nFeedModule -->\n\nFeedComponent->FeedModule\n\n\n\n\n\nFiltersComponent\n\nFiltersComponent\n\nFeedModule -->\n\nFiltersComponent->FeedModule\n\n\n\n\n\nInitChartComponent\n\nInitChartComponent\n\nFeedModule -->\n\nInitChartComponent->FeedModule\n\n\n\n\n\nMouseWheelDirective\n\nMouseWheelDirective\n\nFeedModule -->\n\nMouseWheelDirective->FeedModule\n\n\n\n\n\nNoSelectionComponent\n\nNoSelectionComponent\n\nFeedModule -->\n\nNoSelectionComponent->FeedModule\n\n\n\n\n\nTimeFilterComponent\n\nTimeFilterComponent\n\nFeedModule -->\n\nTimeFilterComponent->FeedModule\n\n\n\n\n\nTimeLineComponent\n\nTimeLineComponent\n\nFeedModule -->\n\nTimeLineComponent->FeedModule\n\n\n\n\n\nTypeFilterComponent\n\nTypeFilterComponent\n\nFeedModule -->\n\nTypeFilterComponent->FeedModule\n\n\n\n\n\nXAxisTickFormatPipe\n\nXAxisTickFormatPipe\n\nFeedModule -->\n\nXAxisTickFormatPipe->FeedModule\n\n\n\n\n\nFeedComponent \n\nFeedComponent \n\nFeedComponent  -->\n\nFeedModule->FeedComponent \n\n\n\n\n\nFeedRoutingModule\n\nFeedRoutingModule\n\nFeedModule -->\n\nFeedRoutingModule->FeedModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nServicesModule -->\n\nAuthenticationService->ServicesModule\n\n\n\n\n\nCardService\n\nCardService\n\nServicesModule -->\n\nCardService->ServicesModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nServicesModule -->\n\nConfigService->ServicesModule\n\n\n\n\n\nFilterService\n\nFilterService\n\nServicesModule -->\n\nFilterService->ServicesModule\n\n\n\n\n\nThirdsService\n\nThirdsService\n\nServicesModule -->\n\nThirdsService->ServicesModule\n\n\n\n\n\nTimeService\n\nTimeService\n\nServicesModule -->\n\nTimeService->ServicesModule\n\n\n\n\n\nTokenInjector\n\nTokenInjector\n\nServicesModule -->\n\nTokenInjector->ServicesModule\n\n\n\n\n\n!environment\n\n!environment\n\nStateModule -->\n\n!environment->StateModule\n\n\n\n\n\nIframeDisplayComponent\n\nIframeDisplayComponent\n\n\n\nThirdpartyModule\n\nThirdpartyModule\n\nThirdpartyModule -->\n\nIframeDisplayComponent->ThirdpartyModule\n\n\n\n\n\nThirdpartyRoutingModule\n\nThirdpartyRoutingModule\n\nThirdpartyModule -->\n\nThirdpartyRoutingModule->ThirdpartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    57 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        19 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArchivesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CardsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StateModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdpartyRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthenticationActions   (src/.../authentication.actions.ts)\n                        \n                        \n                            CardActions   (src/.../card.actions.ts)\n                        \n                        \n                            ConfigActions   (src/.../config.actions.ts)\n                        \n                        \n                            FeedActions   (src/.../feed.actions.ts)\n                        \n                        \n                            LightCardActions   (src/.../light-card.actions.ts)\n                        \n                        \n                            MenuActions   (src/.../menu.actions.ts)\n                        \n                        \n                            TimelineActions   (src/.../timeline.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/actions/authentication.actions.ts\n    \n    \n        \n            \n                \n                    \n                    AuthenticationActions\n                \n            \n            \n                \n                        InitAuthStatus | AcceptLogIn | RejectLogIn | TryToLogIn | TryToLogOut | CheckAuthenticationStatus | AcceptLogOut | AcceptLogOutSuccess\n\n                \n            \n        \n    \n    src/app/store/actions/card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    CardActions\n                \n            \n            \n                \n                        ClearCard | LoadCard | LoadCardSuccess | LoadCardFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/config.actions.ts\n    \n    \n        \n            \n                \n                    \n                    ConfigActions\n                \n            \n            \n                \n                        LoadConfig | LoadConfigSuccess | LoadConfigFailure | HandleUnexpectedError\n\n                \n            \n        \n    \n    src/app/store/actions/feed.actions.ts\n    \n    \n        \n            \n                \n                    \n                    FeedActions\n                \n            \n            \n                \n                        InitFilters | ApplyFilter\n\n                \n            \n        \n    \n    src/app/store/actions/light-card.actions.ts\n    \n    \n        \n            \n                \n                    \n                    LightCardActions\n                \n            \n            \n                \n                        LoadLightCards | LoadLightCardsSuccess | LoadLightCardsFailure | SelectLightCard | AddLightCardFailure | UpdatedSubscription | HandleUnexpectedError | EmptyLightCards\n\n                \n            \n        \n    \n    src/app/store/actions/menu.actions.ts\n    \n    \n        \n            \n                \n                    \n                    MenuActions\n                \n            \n            \n                \n                        LoadMenu | LoadMenuSuccess | LoadMenuFailure | HandleUnexpectedError | UpdateSelectedMenu\n\n                \n            \n        \n    \n    src/app/store/actions/timeline.actions.ts\n    \n    \n        \n            \n                \n                    \n                    TimelineActions\n                \n            \n            \n                \n                        InitTimeline | AddCardDataTimeline\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appEffects   (src/.../index.ts)\n                        \n                        \n                            appMetaReducers   (src/.../index.ts)\n                        \n                        \n                            appReducer   (src/.../index.ts)\n                        \n                        \n                            authInitialState   (src/.../authentication.state.ts)\n                        \n                        \n                            cardInitialState   (src/.../card.state.ts)\n                        \n                        \n                            CONFIG_LOAD_MAX_RETRIES   (src/.../config.state.ts)\n                        \n                        \n                            configInitialState   (src/.../config.state.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.vps.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            feedInitialState   (src/.../feed.state.ts)\n                        \n                        \n                            getExpirationDate   (src/.../authentication.reducer.ts)\n                        \n                        \n                            getExpirationTime   (src/.../authentication.reducer.ts)\n                        \n                        \n                            getIdentifier   (src/.../authentication.reducer.ts)\n                        \n                        \n                            getSelectedId   (src/.../card.reducer.ts)\n                        \n                        \n                            getSelectedId   (src/.../menu.reducer.ts)\n                        \n                        \n                            getToken   (src/.../authentication.reducer.ts)\n                        \n                        \n                            i18nPath   (src/.../translate.config.ts)\n                        \n                        \n                            initialState   (src/.../router.state.ts)\n                        \n                        \n                            LightCardAdapter   (src/.../feed.state.ts)\n                        \n                        \n                            menuInitialState   (src/.../menu.state.ts)\n                        \n                        \n                            ONE_SECOND   (src/.../authentication.service.ts)\n                        \n                        \n                            prodI18nPath   (src/.../translate.config.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectActiveFiltersArray   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectAuthenticationState   (src/.../authentication.selectors.ts)\n                        \n                        \n                            selectCardState   (src/.../card.selectors.ts)\n                        \n                        \n                            selectCardStateSelected   (src/.../card.selectors.ts)\n                        \n                        \n                            selectCardStateSelectedDetails   (src/.../card.selectors.ts)\n                        \n                        \n                            selectCardStateSelectedId   (src/.../card.selectors.ts)\n                        \n                        \n                            selectCode   (src/.../authentication.selectors.ts)\n                        \n                        \n                            selectConfig   (src/.../config.selectors.ts)\n                        \n                        \n                            selectConfigData   (src/.../config.selectors.ts)\n                        \n                        \n                            selectConfigLoaded   (src/.../config.selectors.ts)\n                        \n                        \n                            selectConfigRetry   (src/.../config.selectors.ts)\n                        \n                        \n                               (src/.../timeline.selectors.ts)\n                        \n                        \n                               (src/.../feed.selectors.ts)\n                        \n                        \n                            selectCurrentUrl   (src/.../router.selectors.ts)\n                        \n                        \n                            selectExpirationTime   (src/.../authentication.selectors.ts)\n                        \n                        \n                            selectFilter   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectFilteredFeed   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectLastCards   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectLastCardsSelection   (src/.../timeline.selectors.ts)\n                        \n                        \n                            selectLightCardSelection   (src/.../timeline.selectors.ts)\n                        \n                        \n                            selectLightCardSelection   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectLightCardsState   (src/.../feed.selectors.ts)\n                        \n                        \n                            selectMaxedRetries   (src/.../config.selectors.ts)\n                        \n                        \n                            selectMenuState   (src/.../menu.selectors.ts)\n                        \n                        \n                            selectMenuStateMenu   (src/.../menu.selectors.ts)\n                        \n                        \n                            selectMenuStateSelectedMenuEntryId   (src/.../menu.selectors.ts)\n                        \n                        \n                            selectMenuStateSelectedMenuId   (src/.../menu.selectors.ts)\n                        \n                        \n                            selectMessage   (src/.../authentication.selectors.ts)\n                        \n                        \n                            selectRouterState   (src/.../router.selectors.ts)\n                        \n                        \n                            selectTimelineSelection   (src/.../timeline.selectors.ts)\n                        \n                        \n                            selectTimelineState   (src/.../timeline.selectors.ts)\n                        \n                        \n                            storeConfig   (src/.../index.ts)\n                        \n                        \n                            timelineInitialState   (src/.../timeline.state.ts)\n                        \n                        \n                            translateConfig   (src/.../translate.config.ts)\n                        \n                        \n                            UTC_beginning_time   (src/.../authentication.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appEffects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    CardEffects,\n    ConfigEffects,\n    CardOperationEffects,\n    RouterEffects,\n    CustomRouterEffects,\n    AuthenticationEffects,\n    MenuEffects,\n    LightCardEffects,\n    FeedFiltersEffects]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appMetaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production\n    ? [storeFreeze]\n    : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    router: fromRouter.routerReducer,\n    feed: lightCardReducer,\n    timeline: timelineReducer,\n    authentication: authenticationReducer,\n    card: cardReducer,\n    menu: menuReducer,\n    config: configReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    metaReducers: appMetaReducers,\n    // initialState: {\n    //     router: routerInitialState,\n    // }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/authentication.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    code: null,\n    identifier: null,\n    clientId: null,\n    token: null,\n    expirationDate: new Date(0),\n    message: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/card.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cardInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CardState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    selected: null,\n    loading: false,\n    error: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/config.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONFIG_LOAD_MAX_RETRIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    config:{},\n    loading: false,\n    loaded: false,\n    error: null,\n    retry: 0\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.vps.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n    urls: {\n      authentication: '',\n        auth: 'http://opfab.rte-europe.com:2002/auth',\n        cards: 'http://opfab.rte-europe.com:2002/cards',\n        archives : '',\n        thirds: 'http://opfab.rte-europe.com:2002/thirds',\n        config: 'http://opfab.rte-europe.com:2002/config'\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n    urls: {\n      authentication: '',\n        auth: 'http://localhost:2002/auth',\n        cards: 'http://localhost:2002/cards',\n        archives : '',\n        thirds: 'http://localhost:2002/thirds',\n        config: 'http://localhost:2002/config'\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n    urls: {\n        authentication: '',\n        auth: '/auth',\n        cards: '/cards',\n        archives : '',\n        thirds: '/thirds',\n        config: '/config'\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/feed.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            feedInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CardFeedState\n\n                        \n                    \n                    \n                        \n                            Default value : LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        filters: new Map()\n    })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LightCardAdapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntityAdapter\n\n                        \n                    \n                    \n                        \n                            Default value : createEntityAdapter({\n    sortComparer:sortByStartDate\n})\n                        \n                    \n\n\n            \n        \n\n    src/app/store/reducers/authentication.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getExpirationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: AuthState) => state.expirationDate\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExpirationTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: AuthState) => {\n    const expirationDate = getExpirationDate(state);\n    const token = getToken(state);\n    if (token && expirationDate) {\n        return expirationDate.getTime();\n    } else {\n        return UTC_beginning_time;\n    }\n}\n                        \n                    \n\n                \n                    \n                        return the stored expiration time otherwise the beginning\nof the UTC time which should be always in the past.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: AuthState) => state.identifier\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: AuthState) => state.token\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UTC_beginning_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    src/app/store/reducers/card.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getSelectedId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: CardFeedState) => state.selectedCardId\n                        \n                    \n\n\n            \n        \n\n    src/app/store/reducers/menu.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getSelectedId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: CardFeedState) => state.selectedCardId\n                        \n                    \n\n\n            \n        \n\n    src/app/translate.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            i18nPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/assets/i18n/\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prodI18nPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/ui/assets/i18n/\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateModuleConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/router.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    state: {\n        url: window.location.pathname,\n        params: {},\n        queryParams: {}\n    },\n    navigationId: 0\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/menu.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            menuInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    menu:[],\n    loading: false,\n    error:null,\n    selected_menu_id: null,\n    selected_menu_entry_id: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ONE_SECOND\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/feed.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectActiveFiltersArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectFilter,\n    (filters) =>{\n      let result = [];\n      for(let v of filters.values()) {\n        if(v.active)\n          result.push(v);\n      }\n      return result;\n    })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardAdapter.getSelectors(selectLightCardsState)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectLightCardsState,\n    state => state.filters)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectFilteredFeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectFeed,selectActiveFiltersArray,\n    (feed:LightCard[],filters:Filter[])=>{\n    if(filters && filters.length>0)\n      return feed.filter(card=>Filter.chainFilter(card,filters));\n    else return feed;\n    })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLastCards\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectLightCardsState,\n    state => state.lastCards)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLightCardSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n    selectLightCardsState,\n    state => state.selectedCardId)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLightCardsState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state:AppState) => state.feed\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/authentication.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectAuthenticationState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector('authentication')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectAuthenticationState, (authState)=>authState.code)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectExpirationTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectAuthenticationState, fromAuthentication.getExpirationTime)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectAuthenticationState, (authState)=>authState.message)\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/card.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectCardState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state:AppState) => state.card\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectCardStateSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectCardState, (cardState:CardState)=> cardState.selected)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectCardStateSelectedDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectCardStateSelected, (card:Card)=> {\n    return card==null?null:card.details;\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectCardStateSelectedId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectCardStateSelected, (card:Card)=> {\n    return card==null?null:card.id;\n})\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/config.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state:AppState) => state.config\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConfigData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectConfig, (configState:ConfigState)=> configState.config)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConfigLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectConfig, (configState:ConfigState)=> configState.loaded)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConfigRetry\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectConfig, (configState:ConfigState)=> configState.retry)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectMaxedRetries\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectConfigRetry, (retries:number)=> retries >= CONFIG_LOAD_MAX_RETRIES)\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/timeline.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : LightCardAdapter.getSelectors(selectTimelineState)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLastCardsSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectTimelineState,\n    state => state.lastCards)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLightCardSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectLightCardsState,\n    state => state.selectedCardId)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectTimelineSelection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectTimelineState,\n    state => state.data)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectTimelineState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: AppState) => state.timeline\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/router.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectCurrentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectRouterState,\n    (router) => {\n        if (router)\n            return router.state && router.state.url\n        return null;\n    })\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectRouterState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector('router')\n                        \n                    \n\n\n            \n        \n\n    src/app/store/selectors/menu.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectMenuState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state:AppState) => state.menu\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectMenuStateMenu\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectMenuState, (menuState:MenuState)=> menuState.menu)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectMenuStateSelectedMenuEntryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectMenuState, (menuState:MenuState)=> menuState.selected_menu_entry_id)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectMenuStateSelectedMenuId\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectMenuState, (menuState:MenuState)=> menuState.selected_menu_id)\n                        \n                    \n\n\n            \n        \n\n    src/app/store/states/timeline.state.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            timelineInitialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TimelineState\n\n                        \n                    \n                    \n                        \n                            Default value : LightCardAdapter.getInitialState(\n    {\n        selectedCardId: null,\n        lastCards: [],\n        loading: false,\n        error: '',\n        data: []\n    })\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
